// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components/ContentSidebar/Skills/SidebarSkills should render the cards when there are valid skills 1`] = `
ReactWrapper {
  "length": 1,
  Symbol(enzyme.__unrendered__): <SidebarSkills
    appElement={[MockFunction]}
    getPreviewer={[MockFunction]}
    metadata={
      Object {
        "global": Object {
          "boxSkillsCards": Object {
            "cards": Array [
              Object {
                "entries": Array [
                  Object {
                    "title": "foo",
                  },
                ],
              },
              Object {
                "entries": Array [
                  Object {
                    "title": "bar",
                  },
                ],
              },
            ],
          },
        },
      }
    }
    onInteraction={[MockFunction]}
    rootElement={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "appElement": [MockFunction],
      "getPreviewer": [MockFunction],
      "metadata": Object {
        "global": Object {
          "boxSkillsCards": Object {
            "cards": Array [
              Object {
                "entries": Array [
                  Object {
                    "title": "foo",
                  },
                ],
              },
              Object {
                "entries": Array [
                  Object {
                    "title": "bar",
                  },
                ],
              },
            ],
          },
        },
      },
      "onInteraction": [MockFunction],
      "rootElement": [MockFunction],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": SidebarSection {
          "_reactInternalFiber": FiberNode {
            "_debugID": 5,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": FiberNode {
              "_debugID": 4,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": FiberNode {
                "_debugID": 3,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "alternate": null,
                "child": [Circular],
                "effectTag": 1,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "appElement": [MockFunction],
                    "getPreviewer": [MockFunction],
                    "metadata": Object {
                      "global": Object {
                        "boxSkillsCards": Object {
                          "cards": Array [
                            Object {
                              "entries": Array [
                                Object {
                                  "title": "foo",
                                },
                              ],
                            },
                            Object {
                              "entries": Array [
                                Object {
                                  "title": "bar",
                                },
                              ],
                            },
                          ],
                        },
                      },
                    },
                    "onInteraction": [MockFunction],
                    "rootElement": [MockFunction],
                  },
                },
                "memoizedState": Object {
                  "context": null,
                  "mount": true,
                  "props": Object {
                    "appElement": [MockFunction],
                    "getPreviewer": [MockFunction],
                    "metadata": Object {
                      "global": Object {
                        "boxSkillsCards": Object {
                          "cards": Array [
                            Object {
                              "entries": Array [
                                Object {
                                  "title": "foo",
                                },
                              ],
                            },
                            Object {
                              "entries": Array [
                                Object {
                                  "title": "bar",
                                },
                              ],
                            },
                          ],
                        },
                      },
                    },
                    "onInteraction": [MockFunction],
                    "rootElement": [MockFunction],
                  },
                },
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": FiberNode {
                  "_debugID": 1,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": FiberNode {
                    "_debugID": 1,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": [Circular],
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 1,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": null,
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <div
                          class="bcs-section bcs-section-open"
                        >
                          <button
                            class="btn-plain bcs-section-title"
                            type="button"
                          >
                            <div />
                          </button>
                          <div
                            class="bcs-section-content"
                          />
                        </div>
                        <div
                          class="bcs-section bcs-section-open"
                        >
                          <button
                            class="btn-plain bcs-section-title"
                            type="button"
                          >
                            <div />
                          </button>
                          <div
                            class="bcs-section-content"
                          />
                        </div>
                      </div>,
                      "context": Object {},
                      "current": [Circular],
                      "finishedWork": null,
                      "hydrate": false,
                      "isReadyForCommit": false,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingContext": null,
                      "remainingExpirationTime": 0,
                    },
                    "tag": 3,
                    "type": null,
                    "updateQueue": Object {
                      "baseState": null,
                      "callbackList": null,
                      "expirationTime": 1,
                      "first": Object {
                        "callback": null,
                        "expirationTime": 1,
                        "isForced": false,
                        "isReplace": false,
                        "next": null,
                        "nextCallback": null,
                        "partialState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "appElement": [MockFunction],
                                "getPreviewer": [MockFunction],
                                "metadata": Object {
                                  "global": Object {
                                    "boxSkillsCards": Object {
                                      "cards": Array [
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "foo",
                                            },
                                          ],
                                        },
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "bar",
                                            },
                                          ],
                                        },
                                      ],
                                    },
                                  },
                                },
                                "onInteraction": [MockFunction],
                                "rootElement": [MockFunction],
                              }
                            }
                          />,
                        },
                      },
                      "hasForceUpdate": false,
                      "isInitialized": false,
                      "isProcessing": false,
                      "last": Object {
                        "callback": null,
                        "expirationTime": 1,
                        "isForced": false,
                        "isReplace": false,
                        "next": null,
                        "nextCallback": null,
                        "partialState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "appElement": [MockFunction],
                                "getPreviewer": [MockFunction],
                                "metadata": Object {
                                  "global": Object {
                                    "boxSkillsCards": Object {
                                      "cards": Array [
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "foo",
                                            },
                                          ],
                                        },
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "bar",
                                            },
                                          ],
                                        },
                                      ],
                                    },
                                  },
                                },
                                "onInteraction": [MockFunction],
                                "rootElement": [MockFunction],
                              }
                            }
                          />,
                        },
                      },
                    },
                  },
                  "child": [Circular],
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": null,
                  "memoizedState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "appElement": [MockFunction],
                          "getPreviewer": [MockFunction],
                          "metadata": Object {
                            "global": Object {
                              "boxSkillsCards": Object {
                                "cards": Array [
                                  Object {
                                    "entries": Array [
                                      Object {
                                        "title": "foo",
                                      },
                                    ],
                                  },
                                  Object {
                                    "entries": Array [
                                      Object {
                                        "title": "bar",
                                      },
                                    ],
                                  },
                                ],
                              },
                            },
                          },
                          "onInteraction": [MockFunction],
                          "rootElement": [MockFunction],
                        }
                      }
                    />,
                  },
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div>
                      <div
                        class="bcs-section bcs-section-open"
                      >
                        <button
                          class="btn-plain bcs-section-title"
                          type="button"
                        >
                          <div />
                        </button>
                        <div
                          class="bcs-section-content"
                        />
                      </div>
                      <div
                        class="bcs-section bcs-section-open"
                      >
                        <button
                          class="btn-plain bcs-section-title"
                          type="button"
                        >
                          <div />
                        </button>
                        <div
                          class="bcs-section-content"
                        />
                      </div>
                    </div>,
                    "context": Object {},
                    "current": [Circular],
                    "finishedWork": null,
                    "hydrate": false,
                    "isReadyForCommit": false,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingContext": null,
                    "remainingExpirationTime": 0,
                  },
                  "tag": 3,
                  "type": null,
                  "updateQueue": null,
                },
                "sibling": null,
                "stateNode": WrapperComponent {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "appElement": [MockFunction],
                      "getPreviewer": [MockFunction],
                      "metadata": Object {
                        "global": Object {
                          "boxSkillsCards": Object {
                            "cards": Array [
                              Object {
                                "entries": Array [
                                  Object {
                                    "title": "foo",
                                  },
                                ],
                              },
                              Object {
                                "entries": Array [
                                  Object {
                                    "title": "bar",
                                  },
                                ],
                              },
                            ],
                          },
                        },
                      },
                      "onInteraction": [MockFunction],
                      "rootElement": [MockFunction],
                    },
                  },
                  "refs": Object {},
                  "state": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "appElement": [MockFunction],
                      "getPreviewer": [MockFunction],
                      "metadata": Object {
                        "global": Object {
                          "boxSkillsCards": Object {
                            "cards": Array [
                              Object {
                                "entries": Array [
                                  Object {
                                    "title": "foo",
                                  },
                                ],
                              },
                              Object {
                                "entries": Array [
                                  Object {
                                    "title": "bar",
                                  },
                                ],
                              },
                            ],
                          },
                        },
                      },
                      "onInteraction": [MockFunction],
                      "rootElement": [MockFunction],
                    },
                  },
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 2,
                "type": [Function],
                "updateQueue": null,
              },
              "_debugSource": null,
              "alternate": null,
              "child": [Circular],
              "effectTag": 1,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "internalContextTag": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "appElement": [MockFunction],
                "getPreviewer": [MockFunction],
                "metadata": Object {
                  "global": Object {
                    "boxSkillsCards": Object {
                      "cards": Array [
                        Object {
                          "entries": Array [
                            Object {
                              "title": "foo",
                            },
                          ],
                        },
                        Object {
                          "entries": Array [
                            Object {
                              "title": "bar",
                            },
                          ],
                        },
                      ],
                    },
                  },
                },
                "onInteraction": [MockFunction],
                "rootElement": [MockFunction],
              },
              "memoizedState": null,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": FiberNode {
                "_debugID": 3,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "alternate": null,
                "child": [Circular],
                "effectTag": 1,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "appElement": [MockFunction],
                    "getPreviewer": [MockFunction],
                    "metadata": Object {
                      "global": Object {
                        "boxSkillsCards": Object {
                          "cards": Array [
                            Object {
                              "entries": Array [
                                Object {
                                  "title": "foo",
                                },
                              ],
                            },
                            Object {
                              "entries": Array [
                                Object {
                                  "title": "bar",
                                },
                              ],
                            },
                          ],
                        },
                      },
                    },
                    "onInteraction": [MockFunction],
                    "rootElement": [MockFunction],
                  },
                },
                "memoizedState": Object {
                  "context": null,
                  "mount": true,
                  "props": Object {
                    "appElement": [MockFunction],
                    "getPreviewer": [MockFunction],
                    "metadata": Object {
                      "global": Object {
                        "boxSkillsCards": Object {
                          "cards": Array [
                            Object {
                              "entries": Array [
                                Object {
                                  "title": "foo",
                                },
                              ],
                            },
                            Object {
                              "entries": Array [
                                Object {
                                  "title": "bar",
                                },
                              ],
                            },
                          ],
                        },
                      },
                    },
                    "onInteraction": [MockFunction],
                    "rootElement": [MockFunction],
                  },
                },
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": FiberNode {
                  "_debugID": 1,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": FiberNode {
                    "_debugID": 1,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": [Circular],
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 1,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": null,
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <div
                          class="bcs-section bcs-section-open"
                        >
                          <button
                            class="btn-plain bcs-section-title"
                            type="button"
                          >
                            <div />
                          </button>
                          <div
                            class="bcs-section-content"
                          />
                        </div>
                        <div
                          class="bcs-section bcs-section-open"
                        >
                          <button
                            class="btn-plain bcs-section-title"
                            type="button"
                          >
                            <div />
                          </button>
                          <div
                            class="bcs-section-content"
                          />
                        </div>
                      </div>,
                      "context": Object {},
                      "current": [Circular],
                      "finishedWork": null,
                      "hydrate": false,
                      "isReadyForCommit": false,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingContext": null,
                      "remainingExpirationTime": 0,
                    },
                    "tag": 3,
                    "type": null,
                    "updateQueue": Object {
                      "baseState": null,
                      "callbackList": null,
                      "expirationTime": 1,
                      "first": Object {
                        "callback": null,
                        "expirationTime": 1,
                        "isForced": false,
                        "isReplace": false,
                        "next": null,
                        "nextCallback": null,
                        "partialState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "appElement": [MockFunction],
                                "getPreviewer": [MockFunction],
                                "metadata": Object {
                                  "global": Object {
                                    "boxSkillsCards": Object {
                                      "cards": Array [
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "foo",
                                            },
                                          ],
                                        },
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "bar",
                                            },
                                          ],
                                        },
                                      ],
                                    },
                                  },
                                },
                                "onInteraction": [MockFunction],
                                "rootElement": [MockFunction],
                              }
                            }
                          />,
                        },
                      },
                      "hasForceUpdate": false,
                      "isInitialized": false,
                      "isProcessing": false,
                      "last": Object {
                        "callback": null,
                        "expirationTime": 1,
                        "isForced": false,
                        "isReplace": false,
                        "next": null,
                        "nextCallback": null,
                        "partialState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "appElement": [MockFunction],
                                "getPreviewer": [MockFunction],
                                "metadata": Object {
                                  "global": Object {
                                    "boxSkillsCards": Object {
                                      "cards": Array [
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "foo",
                                            },
                                          ],
                                        },
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "bar",
                                            },
                                          ],
                                        },
                                      ],
                                    },
                                  },
                                },
                                "onInteraction": [MockFunction],
                                "rootElement": [MockFunction],
                              }
                            }
                          />,
                        },
                      },
                    },
                  },
                  "child": [Circular],
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": null,
                  "memoizedState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "appElement": [MockFunction],
                          "getPreviewer": [MockFunction],
                          "metadata": Object {
                            "global": Object {
                              "boxSkillsCards": Object {
                                "cards": Array [
                                  Object {
                                    "entries": Array [
                                      Object {
                                        "title": "foo",
                                      },
                                    ],
                                  },
                                  Object {
                                    "entries": Array [
                                      Object {
                                        "title": "bar",
                                      },
                                    ],
                                  },
                                ],
                              },
                            },
                          },
                          "onInteraction": [MockFunction],
                          "rootElement": [MockFunction],
                        }
                      }
                    />,
                  },
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div>
                      <div
                        class="bcs-section bcs-section-open"
                      >
                        <button
                          class="btn-plain bcs-section-title"
                          type="button"
                        >
                          <div />
                        </button>
                        <div
                          class="bcs-section-content"
                        />
                      </div>
                      <div
                        class="bcs-section bcs-section-open"
                      >
                        <button
                          class="btn-plain bcs-section-title"
                          type="button"
                        >
                          <div />
                        </button>
                        <div
                          class="bcs-section-content"
                        />
                      </div>
                    </div>,
                    "context": Object {},
                    "current": [Circular],
                    "finishedWork": null,
                    "hydrate": false,
                    "isReadyForCommit": false,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingContext": null,
                    "remainingExpirationTime": 0,
                  },
                  "tag": 3,
                  "type": null,
                  "updateQueue": null,
                },
                "sibling": null,
                "stateNode": WrapperComponent {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "appElement": [MockFunction],
                      "getPreviewer": [MockFunction],
                      "metadata": Object {
                        "global": Object {
                          "boxSkillsCards": Object {
                            "cards": Array [
                              Object {
                                "entries": Array [
                                  Object {
                                    "title": "foo",
                                  },
                                ],
                              },
                              Object {
                                "entries": Array [
                                  Object {
                                    "title": "bar",
                                  },
                                ],
                              },
                            ],
                          },
                        },
                      },
                      "onInteraction": [MockFunction],
                      "rootElement": [MockFunction],
                    },
                  },
                  "refs": Object {},
                  "state": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "appElement": [MockFunction],
                      "getPreviewer": [MockFunction],
                      "metadata": Object {
                        "global": Object {
                          "boxSkillsCards": Object {
                            "cards": Array [
                              Object {
                                "entries": Array [
                                  Object {
                                    "title": "foo",
                                  },
                                ],
                              },
                              Object {
                                "entries": Array [
                                  Object {
                                    "title": "bar",
                                  },
                                ],
                              },
                            ],
                          },
                        },
                      },
                      "onInteraction": [MockFunction],
                      "rootElement": [MockFunction],
                    },
                  },
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 2,
                "type": [Function],
                "updateQueue": null,
              },
              "sibling": null,
              "stateNode": null,
              "tag": 1,
              "type": [Function],
              "updateQueue": null,
            },
            "_debugSource": null,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 7,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 8,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 10,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 11,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": FiberNode {
                      "_debugID": 4,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": FiberNode {
                        "_debugID": 3,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "appElement": [MockFunction],
                            "getPreviewer": [MockFunction],
                            "metadata": Object {
                              "global": Object {
                                "boxSkillsCards": Object {
                                  "cards": Array [
                                    Object {
                                      "entries": Array [
                                        Object {
                                          "title": "foo",
                                        },
                                      ],
                                    },
                                    Object {
                                      "entries": Array [
                                        Object {
                                          "title": "bar",
                                        },
                                      ],
                                    },
                                  ],
                                },
                              },
                            },
                            "onInteraction": [MockFunction],
                            "rootElement": [MockFunction],
                          },
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "appElement": [MockFunction],
                            "getPreviewer": [MockFunction],
                            "metadata": Object {
                              "global": Object {
                                "boxSkillsCards": Object {
                                  "cards": Array [
                                    Object {
                                      "entries": Array [
                                        Object {
                                          "title": "foo",
                                        },
                                      ],
                                    },
                                    Object {
                                      "entries": Array [
                                        Object {
                                          "title": "bar",
                                        },
                                      ],
                                    },
                                  ],
                                },
                              },
                            },
                            "onInteraction": [MockFunction],
                            "rootElement": [MockFunction],
                          },
                        },
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                  class="bcs-section bcs-section-open"
                                >
                                  <button
                                    class="btn-plain bcs-section-title"
                                    type="button"
                                  >
                                    <div />
                                  </button>
                                  <div
                                    class="bcs-section-content"
                                  />
                                </div>
                                <div
                                  class="bcs-section bcs-section-open"
                                >
                                  <button
                                    class="btn-plain bcs-section-title"
                                    type="button"
                                  >
                                    <div />
                                  </button>
                                  <div
                                    class="bcs-section-content"
                                  />
                                </div>
                              </div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "hydrate": false,
                              "isReadyForCommit": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "callbackList": null,
                              "expirationTime": 1,
                              "first": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "nextCallback": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "appElement": [MockFunction],
                                        "getPreviewer": [MockFunction],
                                        "metadata": Object {
                                          "global": Object {
                                            "boxSkillsCards": Object {
                                              "cards": Array [
                                                Object {
                                                  "entries": Array [
                                                    Object {
                                                      "title": "foo",
                                                    },
                                                  ],
                                                },
                                                Object {
                                                  "entries": Array [
                                                    Object {
                                                      "title": "bar",
                                                    },
                                                  ],
                                                },
                                              ],
                                            },
                                          },
                                        },
                                        "onInteraction": [MockFunction],
                                        "rootElement": [MockFunction],
                                      }
                                    }
                                  />,
                                },
                              },
                              "hasForceUpdate": false,
                              "isInitialized": false,
                              "isProcessing": false,
                              "last": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "nextCallback": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "appElement": [MockFunction],
                                        "getPreviewer": [MockFunction],
                                        "metadata": Object {
                                          "global": Object {
                                            "boxSkillsCards": Object {
                                              "cards": Array [
                                                Object {
                                                  "entries": Array [
                                                    Object {
                                                      "title": "foo",
                                                    },
                                                  ],
                                                },
                                                Object {
                                                  "entries": Array [
                                                    Object {
                                                      "title": "bar",
                                                    },
                                                  ],
                                                },
                                              ],
                                            },
                                          },
                                        },
                                        "onInteraction": [MockFunction],
                                        "rootElement": [MockFunction],
                                      }
                                    }
                                  />,
                                },
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                Object {
                                  "appElement": [MockFunction],
                                  "getPreviewer": [MockFunction],
                                  "metadata": Object {
                                    "global": Object {
                                      "boxSkillsCards": Object {
                                        "cards": Array [
                                          Object {
                                            "entries": Array [
                                              Object {
                                                "title": "foo",
                                              },
                                            ],
                                          },
                                          Object {
                                            "entries": Array [
                                              Object {
                                                "title": "bar",
                                              },
                                            ],
                                          },
                                        ],
                                      },
                                    },
                                  },
                                  "onInteraction": [MockFunction],
                                  "rootElement": [MockFunction],
                                }
                              }
                            />,
                          },
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div
                                class="bcs-section bcs-section-open"
                              >
                                <button
                                  class="btn-plain bcs-section-title"
                                  type="button"
                                >
                                  <div />
                                </button>
                                <div
                                  class="bcs-section-content"
                                />
                              </div>
                              <div
                                class="bcs-section bcs-section-open"
                              >
                                <button
                                  class="btn-plain bcs-section-title"
                                  type="button"
                                >
                                  <div />
                                </button>
                                <div
                                  class="bcs-section-content"
                                />
                              </div>
                            </div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "hydrate": false,
                            "isReadyForCommit": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "appElement": [MockFunction],
                              "getPreviewer": [MockFunction],
                              "metadata": Object {
                                "global": Object {
                                  "boxSkillsCards": Object {
                                    "cards": Array [
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "foo",
                                          },
                                        ],
                                      },
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "bar",
                                          },
                                        ],
                                      },
                                    ],
                                  },
                                },
                              },
                              "onInteraction": [MockFunction],
                              "rootElement": [MockFunction],
                            },
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "appElement": [MockFunction],
                              "getPreviewer": [MockFunction],
                              "metadata": Object {
                                "global": Object {
                                  "boxSkillsCards": Object {
                                    "cards": Array [
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "foo",
                                          },
                                        ],
                                      },
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "bar",
                                          },
                                        ],
                                      },
                                    ],
                                  },
                                },
                              },
                              "onInteraction": [MockFunction],
                              "rootElement": [MockFunction],
                            },
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "appElement": [MockFunction],
                        "getPreviewer": [MockFunction],
                        "metadata": Object {
                          "global": Object {
                            "boxSkillsCards": Object {
                              "cards": Array [
                                Object {
                                  "entries": Array [
                                    Object {
                                      "title": "foo",
                                    },
                                  ],
                                },
                                Object {
                                  "entries": Array [
                                    Object {
                                      "title": "bar",
                                    },
                                  ],
                                },
                              ],
                            },
                          },
                        },
                        "onInteraction": [MockFunction],
                        "rootElement": [MockFunction],
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 3,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "appElement": [MockFunction],
                            "getPreviewer": [MockFunction],
                            "metadata": Object {
                              "global": Object {
                                "boxSkillsCards": Object {
                                  "cards": Array [
                                    Object {
                                      "entries": Array [
                                        Object {
                                          "title": "foo",
                                        },
                                      ],
                                    },
                                    Object {
                                      "entries": Array [
                                        Object {
                                          "title": "bar",
                                        },
                                      ],
                                    },
                                  ],
                                },
                              },
                            },
                            "onInteraction": [MockFunction],
                            "rootElement": [MockFunction],
                          },
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "appElement": [MockFunction],
                            "getPreviewer": [MockFunction],
                            "metadata": Object {
                              "global": Object {
                                "boxSkillsCards": Object {
                                  "cards": Array [
                                    Object {
                                      "entries": Array [
                                        Object {
                                          "title": "foo",
                                        },
                                      ],
                                    },
                                    Object {
                                      "entries": Array [
                                        Object {
                                          "title": "bar",
                                        },
                                      ],
                                    },
                                  ],
                                },
                              },
                            },
                            "onInteraction": [MockFunction],
                            "rootElement": [MockFunction],
                          },
                        },
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                  class="bcs-section bcs-section-open"
                                >
                                  <button
                                    class="btn-plain bcs-section-title"
                                    type="button"
                                  >
                                    <div />
                                  </button>
                                  <div
                                    class="bcs-section-content"
                                  />
                                </div>
                                <div
                                  class="bcs-section bcs-section-open"
                                >
                                  <button
                                    class="btn-plain bcs-section-title"
                                    type="button"
                                  >
                                    <div />
                                  </button>
                                  <div
                                    class="bcs-section-content"
                                  />
                                </div>
                              </div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "hydrate": false,
                              "isReadyForCommit": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "callbackList": null,
                              "expirationTime": 1,
                              "first": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "nextCallback": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "appElement": [MockFunction],
                                        "getPreviewer": [MockFunction],
                                        "metadata": Object {
                                          "global": Object {
                                            "boxSkillsCards": Object {
                                              "cards": Array [
                                                Object {
                                                  "entries": Array [
                                                    Object {
                                                      "title": "foo",
                                                    },
                                                  ],
                                                },
                                                Object {
                                                  "entries": Array [
                                                    Object {
                                                      "title": "bar",
                                                    },
                                                  ],
                                                },
                                              ],
                                            },
                                          },
                                        },
                                        "onInteraction": [MockFunction],
                                        "rootElement": [MockFunction],
                                      }
                                    }
                                  />,
                                },
                              },
                              "hasForceUpdate": false,
                              "isInitialized": false,
                              "isProcessing": false,
                              "last": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "nextCallback": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "appElement": [MockFunction],
                                        "getPreviewer": [MockFunction],
                                        "metadata": Object {
                                          "global": Object {
                                            "boxSkillsCards": Object {
                                              "cards": Array [
                                                Object {
                                                  "entries": Array [
                                                    Object {
                                                      "title": "foo",
                                                    },
                                                  ],
                                                },
                                                Object {
                                                  "entries": Array [
                                                    Object {
                                                      "title": "bar",
                                                    },
                                                  ],
                                                },
                                              ],
                                            },
                                          },
                                        },
                                        "onInteraction": [MockFunction],
                                        "rootElement": [MockFunction],
                                      }
                                    }
                                  />,
                                },
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                Object {
                                  "appElement": [MockFunction],
                                  "getPreviewer": [MockFunction],
                                  "metadata": Object {
                                    "global": Object {
                                      "boxSkillsCards": Object {
                                        "cards": Array [
                                          Object {
                                            "entries": Array [
                                              Object {
                                                "title": "foo",
                                              },
                                            ],
                                          },
                                          Object {
                                            "entries": Array [
                                              Object {
                                                "title": "bar",
                                              },
                                            ],
                                          },
                                        ],
                                      },
                                    },
                                  },
                                  "onInteraction": [MockFunction],
                                  "rootElement": [MockFunction],
                                }
                              }
                            />,
                          },
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div
                                class="bcs-section bcs-section-open"
                              >
                                <button
                                  class="btn-plain bcs-section-title"
                                  type="button"
                                >
                                  <div />
                                </button>
                                <div
                                  class="bcs-section-content"
                                />
                              </div>
                              <div
                                class="bcs-section bcs-section-open"
                              >
                                <button
                                  class="btn-plain bcs-section-title"
                                  type="button"
                                >
                                  <div />
                                </button>
                                <div
                                  class="bcs-section-content"
                                />
                              </div>
                            </div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "hydrate": false,
                            "isReadyForCommit": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "appElement": [MockFunction],
                              "getPreviewer": [MockFunction],
                              "metadata": Object {
                                "global": Object {
                                  "boxSkillsCards": Object {
                                    "cards": Array [
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "foo",
                                          },
                                        ],
                                      },
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "bar",
                                          },
                                        ],
                                      },
                                    ],
                                  },
                                },
                              },
                              "onInteraction": [MockFunction],
                              "rootElement": [MockFunction],
                            },
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "appElement": [MockFunction],
                              "getPreviewer": [MockFunction],
                              "metadata": Object {
                                "global": Object {
                                  "boxSkillsCards": Object {
                                    "cards": Array [
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "foo",
                                          },
                                        ],
                                      },
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "bar",
                                          },
                                        ],
                                      },
                                    ],
                                  },
                                },
                              },
                              "onInteraction": [MockFunction],
                              "rootElement": [MockFunction],
                            },
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": null,
                      "tag": 1,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": null,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 12,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {},
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": <div />,
                      "tag": 5,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {},
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": null,
                    "tag": 1,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": <FormattedMessage />,
                    "className": "btn-plain bcs-section-title",
                    "onClick": [Function],
                    "type": "button",
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": [Circular],
                  "sibling": null,
                  "stateNode": <button
                    class="btn-plain bcs-section-title"
                    type="button"
                  >
                    <div />
                  </button>,
                  "tag": 5,
                  "type": "button",
                  "updateQueue": null,
                },
                "effectTag": 1,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": <FormattedMessage />,
                  "className": "bcs-section-title",
                  "onClick": [Function],
                  "type": "button",
                },
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": [Circular],
                "sibling": FiberNode {
                  "_debugID": 9,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 13,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": FiberNode {
                      "_debugID": 4,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": FiberNode {
                        "_debugID": 3,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "appElement": [MockFunction],
                            "getPreviewer": [MockFunction],
                            "metadata": Object {
                              "global": Object {
                                "boxSkillsCards": Object {
                                  "cards": Array [
                                    Object {
                                      "entries": Array [
                                        Object {
                                          "title": "foo",
                                        },
                                      ],
                                    },
                                    Object {
                                      "entries": Array [
                                        Object {
                                          "title": "bar",
                                        },
                                      ],
                                    },
                                  ],
                                },
                              },
                            },
                            "onInteraction": [MockFunction],
                            "rootElement": [MockFunction],
                          },
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "appElement": [MockFunction],
                            "getPreviewer": [MockFunction],
                            "metadata": Object {
                              "global": Object {
                                "boxSkillsCards": Object {
                                  "cards": Array [
                                    Object {
                                      "entries": Array [
                                        Object {
                                          "title": "foo",
                                        },
                                      ],
                                    },
                                    Object {
                                      "entries": Array [
                                        Object {
                                          "title": "bar",
                                        },
                                      ],
                                    },
                                  ],
                                },
                              },
                            },
                            "onInteraction": [MockFunction],
                            "rootElement": [MockFunction],
                          },
                        },
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                  class="bcs-section bcs-section-open"
                                >
                                  <button
                                    class="btn-plain bcs-section-title"
                                    type="button"
                                  >
                                    <div />
                                  </button>
                                  <div
                                    class="bcs-section-content"
                                  />
                                </div>
                                <div
                                  class="bcs-section bcs-section-open"
                                >
                                  <button
                                    class="btn-plain bcs-section-title"
                                    type="button"
                                  >
                                    <div />
                                  </button>
                                  <div
                                    class="bcs-section-content"
                                  />
                                </div>
                              </div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "hydrate": false,
                              "isReadyForCommit": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "callbackList": null,
                              "expirationTime": 1,
                              "first": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "nextCallback": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "appElement": [MockFunction],
                                        "getPreviewer": [MockFunction],
                                        "metadata": Object {
                                          "global": Object {
                                            "boxSkillsCards": Object {
                                              "cards": Array [
                                                Object {
                                                  "entries": Array [
                                                    Object {
                                                      "title": "foo",
                                                    },
                                                  ],
                                                },
                                                Object {
                                                  "entries": Array [
                                                    Object {
                                                      "title": "bar",
                                                    },
                                                  ],
                                                },
                                              ],
                                            },
                                          },
                                        },
                                        "onInteraction": [MockFunction],
                                        "rootElement": [MockFunction],
                                      }
                                    }
                                  />,
                                },
                              },
                              "hasForceUpdate": false,
                              "isInitialized": false,
                              "isProcessing": false,
                              "last": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "nextCallback": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "appElement": [MockFunction],
                                        "getPreviewer": [MockFunction],
                                        "metadata": Object {
                                          "global": Object {
                                            "boxSkillsCards": Object {
                                              "cards": Array [
                                                Object {
                                                  "entries": Array [
                                                    Object {
                                                      "title": "foo",
                                                    },
                                                  ],
                                                },
                                                Object {
                                                  "entries": Array [
                                                    Object {
                                                      "title": "bar",
                                                    },
                                                  ],
                                                },
                                              ],
                                            },
                                          },
                                        },
                                        "onInteraction": [MockFunction],
                                        "rootElement": [MockFunction],
                                      }
                                    }
                                  />,
                                },
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                Object {
                                  "appElement": [MockFunction],
                                  "getPreviewer": [MockFunction],
                                  "metadata": Object {
                                    "global": Object {
                                      "boxSkillsCards": Object {
                                        "cards": Array [
                                          Object {
                                            "entries": Array [
                                              Object {
                                                "title": "foo",
                                              },
                                            ],
                                          },
                                          Object {
                                            "entries": Array [
                                              Object {
                                                "title": "bar",
                                              },
                                            ],
                                          },
                                        ],
                                      },
                                    },
                                  },
                                  "onInteraction": [MockFunction],
                                  "rootElement": [MockFunction],
                                }
                              }
                            />,
                          },
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div
                                class="bcs-section bcs-section-open"
                              >
                                <button
                                  class="btn-plain bcs-section-title"
                                  type="button"
                                >
                                  <div />
                                </button>
                                <div
                                  class="bcs-section-content"
                                />
                              </div>
                              <div
                                class="bcs-section bcs-section-open"
                              >
                                <button
                                  class="btn-plain bcs-section-title"
                                  type="button"
                                >
                                  <div />
                                </button>
                                <div
                                  class="bcs-section-content"
                                />
                              </div>
                            </div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "hydrate": false,
                            "isReadyForCommit": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "appElement": [MockFunction],
                              "getPreviewer": [MockFunction],
                              "metadata": Object {
                                "global": Object {
                                  "boxSkillsCards": Object {
                                    "cards": Array [
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "foo",
                                          },
                                        ],
                                      },
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "bar",
                                          },
                                        ],
                                      },
                                    ],
                                  },
                                },
                              },
                              "onInteraction": [MockFunction],
                              "rootElement": [MockFunction],
                            },
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "appElement": [MockFunction],
                              "getPreviewer": [MockFunction],
                              "metadata": Object {
                                "global": Object {
                                  "boxSkillsCards": Object {
                                    "cards": Array [
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "foo",
                                          },
                                        ],
                                      },
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "bar",
                                          },
                                        ],
                                      },
                                    ],
                                  },
                                },
                              },
                              "onInteraction": [MockFunction],
                              "rootElement": [MockFunction],
                            },
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "appElement": [MockFunction],
                        "getPreviewer": [MockFunction],
                        "metadata": Object {
                          "global": Object {
                            "boxSkillsCards": Object {
                              "cards": Array [
                                Object {
                                  "entries": Array [
                                    Object {
                                      "title": "foo",
                                    },
                                  ],
                                },
                                Object {
                                  "entries": Array [
                                    Object {
                                      "title": "bar",
                                    },
                                  ],
                                },
                              ],
                            },
                          },
                        },
                        "onInteraction": [MockFunction],
                        "rootElement": [MockFunction],
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 3,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "appElement": [MockFunction],
                            "getPreviewer": [MockFunction],
                            "metadata": Object {
                              "global": Object {
                                "boxSkillsCards": Object {
                                  "cards": Array [
                                    Object {
                                      "entries": Array [
                                        Object {
                                          "title": "foo",
                                        },
                                      ],
                                    },
                                    Object {
                                      "entries": Array [
                                        Object {
                                          "title": "bar",
                                        },
                                      ],
                                    },
                                  ],
                                },
                              },
                            },
                            "onInteraction": [MockFunction],
                            "rootElement": [MockFunction],
                          },
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "appElement": [MockFunction],
                            "getPreviewer": [MockFunction],
                            "metadata": Object {
                              "global": Object {
                                "boxSkillsCards": Object {
                                  "cards": Array [
                                    Object {
                                      "entries": Array [
                                        Object {
                                          "title": "foo",
                                        },
                                      ],
                                    },
                                    Object {
                                      "entries": Array [
                                        Object {
                                          "title": "bar",
                                        },
                                      ],
                                    },
                                  ],
                                },
                              },
                            },
                            "onInteraction": [MockFunction],
                            "rootElement": [MockFunction],
                          },
                        },
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                  class="bcs-section bcs-section-open"
                                >
                                  <button
                                    class="btn-plain bcs-section-title"
                                    type="button"
                                  >
                                    <div />
                                  </button>
                                  <div
                                    class="bcs-section-content"
                                  />
                                </div>
                                <div
                                  class="bcs-section bcs-section-open"
                                >
                                  <button
                                    class="btn-plain bcs-section-title"
                                    type="button"
                                  >
                                    <div />
                                  </button>
                                  <div
                                    class="bcs-section-content"
                                  />
                                </div>
                              </div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "hydrate": false,
                              "isReadyForCommit": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "callbackList": null,
                              "expirationTime": 1,
                              "first": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "nextCallback": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "appElement": [MockFunction],
                                        "getPreviewer": [MockFunction],
                                        "metadata": Object {
                                          "global": Object {
                                            "boxSkillsCards": Object {
                                              "cards": Array [
                                                Object {
                                                  "entries": Array [
                                                    Object {
                                                      "title": "foo",
                                                    },
                                                  ],
                                                },
                                                Object {
                                                  "entries": Array [
                                                    Object {
                                                      "title": "bar",
                                                    },
                                                  ],
                                                },
                                              ],
                                            },
                                          },
                                        },
                                        "onInteraction": [MockFunction],
                                        "rootElement": [MockFunction],
                                      }
                                    }
                                  />,
                                },
                              },
                              "hasForceUpdate": false,
                              "isInitialized": false,
                              "isProcessing": false,
                              "last": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "nextCallback": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "appElement": [MockFunction],
                                        "getPreviewer": [MockFunction],
                                        "metadata": Object {
                                          "global": Object {
                                            "boxSkillsCards": Object {
                                              "cards": Array [
                                                Object {
                                                  "entries": Array [
                                                    Object {
                                                      "title": "foo",
                                                    },
                                                  ],
                                                },
                                                Object {
                                                  "entries": Array [
                                                    Object {
                                                      "title": "bar",
                                                    },
                                                  ],
                                                },
                                              ],
                                            },
                                          },
                                        },
                                        "onInteraction": [MockFunction],
                                        "rootElement": [MockFunction],
                                      }
                                    }
                                  />,
                                },
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                Object {
                                  "appElement": [MockFunction],
                                  "getPreviewer": [MockFunction],
                                  "metadata": Object {
                                    "global": Object {
                                      "boxSkillsCards": Object {
                                        "cards": Array [
                                          Object {
                                            "entries": Array [
                                              Object {
                                                "title": "foo",
                                              },
                                            ],
                                          },
                                          Object {
                                            "entries": Array [
                                              Object {
                                                "title": "bar",
                                              },
                                            ],
                                          },
                                        ],
                                      },
                                    },
                                  },
                                  "onInteraction": [MockFunction],
                                  "rootElement": [MockFunction],
                                }
                              }
                            />,
                          },
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div
                                class="bcs-section bcs-section-open"
                              >
                                <button
                                  class="btn-plain bcs-section-title"
                                  type="button"
                                >
                                  <div />
                                </button>
                                <div
                                  class="bcs-section-content"
                                />
                              </div>
                              <div
                                class="bcs-section bcs-section-open"
                              >
                                <button
                                  class="btn-plain bcs-section-title"
                                  type="button"
                                >
                                  <div />
                                </button>
                                <div
                                  class="bcs-section-content"
                                />
                              </div>
                            </div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "hydrate": false,
                            "isReadyForCommit": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "appElement": [MockFunction],
                              "getPreviewer": [MockFunction],
                              "metadata": Object {
                                "global": Object {
                                  "boxSkillsCards": Object {
                                    "cards": Array [
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "foo",
                                          },
                                        ],
                                      },
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "bar",
                                          },
                                        ],
                                      },
                                    ],
                                  },
                                },
                              },
                              "onInteraction": [MockFunction],
                              "rootElement": [MockFunction],
                            },
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "appElement": [MockFunction],
                              "getPreviewer": [MockFunction],
                              "metadata": Object {
                                "global": Object {
                                  "boxSkillsCards": Object {
                                    "cards": Array [
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "foo",
                                          },
                                        ],
                                      },
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "bar",
                                          },
                                        ],
                                      },
                                    ],
                                  },
                                },
                              },
                              "onInteraction": [MockFunction],
                              "rootElement": [MockFunction],
                            },
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": null,
                      "tag": 1,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": null,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 14,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "alternate": null,
                      "child": null,
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "appElement": [MockFunction],
                        "getPreviewer": [MockFunction],
                        "onInteraction": [MockFunction],
                        "rootElement": [MockFunction],
                        "skill": Object {
                          "entries": Array [
                            Object {
                              "title": "foo",
                            },
                          ],
                        },
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": null,
                      "tag": 1,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "appElement": [MockFunction],
                      "getPreviewer": [MockFunction],
                      "maskError": undefined,
                      "onInteraction": [MockFunction],
                      "rootElement": [MockFunction],
                      "skill": Object {
                        "entries": Array [
                          Object {
                            "title": "foo",
                          },
                        ],
                      },
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": null,
                    "tag": 1,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 1,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": <Unknown
                      appElement={[MockFunction]}
                      getPreviewer={[MockFunction]}
                      maskError={undefined}
                      onInteraction={[MockFunction]}
                      rootElement={[MockFunction]}
                      skill={
                        Object {
                          "entries": Array [
                            Object {
                              "title": "foo",
                            },
                          ],
                        }
                      }
                    />,
                    "className": "bcs-section-content",
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": [Circular],
                  "sibling": null,
                  "stateNode": <div
                    class="bcs-section-content"
                  />,
                  "tag": 5,
                  "type": "div",
                  "updateQueue": null,
                },
                "stateNode": null,
                "tag": 1,
                "type": [Function],
                "updateQueue": null,
              },
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "internalContextTag": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": Array [
                  <PlainButton
                    className="bcs-section-title"
                    onClick={[Function]}
                    type="button"
                  >
                    <FormattedMessage />
                  </PlainButton>,
                  <div
                    className="bcs-section-content"
                  >
                    <Unknown
                      appElement={[MockFunction]}
                      getPreviewer={[MockFunction]}
                      maskError={undefined}
                      onInteraction={[MockFunction]}
                      rootElement={[MockFunction]}
                      skill={
                        Object {
                          "entries": Array [
                            Object {
                              "title": "foo",
                            },
                          ],
                        }
                      }
                    />
                  </div>,
                ],
                "className": "bcs-section bcs-section-open",
              },
              "memoizedState": null,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": [Circular],
              "sibling": null,
              "stateNode": <div
                class="bcs-section bcs-section-open"
              >
                <button
                  class="btn-plain bcs-section-title"
                  type="button"
                >
                  <div />
                </button>
                <div
                  class="bcs-section-content"
                />
              </div>,
              "tag": 5,
              "type": "div",
              "updateQueue": null,
            },
            "effectTag": 1,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "internalContextTag": 0,
            "key": "0",
            "lastEffect": null,
            "memoizedProps": Object {
              "children": <Unknown
                appElement={[MockFunction]}
                getPreviewer={[MockFunction]}
                maskError={undefined}
                onInteraction={[MockFunction]}
                rootElement={[MockFunction]}
                skill={
                  Object {
                    "entries": Array [
                      Object {
                        "title": "foo",
                      },
                    ],
                  }
                }
              />,
              "className": "",
              "isOpen": true,
              "title": <FormattedMessage />,
            },
            "memoizedState": Object {
              "isOpen": true,
            },
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": FiberNode {
              "_debugID": 4,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": FiberNode {
                "_debugID": 3,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "alternate": null,
                "child": [Circular],
                "effectTag": 1,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "appElement": [MockFunction],
                    "getPreviewer": [MockFunction],
                    "metadata": Object {
                      "global": Object {
                        "boxSkillsCards": Object {
                          "cards": Array [
                            Object {
                              "entries": Array [
                                Object {
                                  "title": "foo",
                                },
                              ],
                            },
                            Object {
                              "entries": Array [
                                Object {
                                  "title": "bar",
                                },
                              ],
                            },
                          ],
                        },
                      },
                    },
                    "onInteraction": [MockFunction],
                    "rootElement": [MockFunction],
                  },
                },
                "memoizedState": Object {
                  "context": null,
                  "mount": true,
                  "props": Object {
                    "appElement": [MockFunction],
                    "getPreviewer": [MockFunction],
                    "metadata": Object {
                      "global": Object {
                        "boxSkillsCards": Object {
                          "cards": Array [
                            Object {
                              "entries": Array [
                                Object {
                                  "title": "foo",
                                },
                              ],
                            },
                            Object {
                              "entries": Array [
                                Object {
                                  "title": "bar",
                                },
                              ],
                            },
                          ],
                        },
                      },
                    },
                    "onInteraction": [MockFunction],
                    "rootElement": [MockFunction],
                  },
                },
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": FiberNode {
                  "_debugID": 1,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": FiberNode {
                    "_debugID": 1,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": [Circular],
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 1,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": null,
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <div
                          class="bcs-section bcs-section-open"
                        >
                          <button
                            class="btn-plain bcs-section-title"
                            type="button"
                          >
                            <div />
                          </button>
                          <div
                            class="bcs-section-content"
                          />
                        </div>
                        <div
                          class="bcs-section bcs-section-open"
                        >
                          <button
                            class="btn-plain bcs-section-title"
                            type="button"
                          >
                            <div />
                          </button>
                          <div
                            class="bcs-section-content"
                          />
                        </div>
                      </div>,
                      "context": Object {},
                      "current": [Circular],
                      "finishedWork": null,
                      "hydrate": false,
                      "isReadyForCommit": false,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingContext": null,
                      "remainingExpirationTime": 0,
                    },
                    "tag": 3,
                    "type": null,
                    "updateQueue": Object {
                      "baseState": null,
                      "callbackList": null,
                      "expirationTime": 1,
                      "first": Object {
                        "callback": null,
                        "expirationTime": 1,
                        "isForced": false,
                        "isReplace": false,
                        "next": null,
                        "nextCallback": null,
                        "partialState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "appElement": [MockFunction],
                                "getPreviewer": [MockFunction],
                                "metadata": Object {
                                  "global": Object {
                                    "boxSkillsCards": Object {
                                      "cards": Array [
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "foo",
                                            },
                                          ],
                                        },
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "bar",
                                            },
                                          ],
                                        },
                                      ],
                                    },
                                  },
                                },
                                "onInteraction": [MockFunction],
                                "rootElement": [MockFunction],
                              }
                            }
                          />,
                        },
                      },
                      "hasForceUpdate": false,
                      "isInitialized": false,
                      "isProcessing": false,
                      "last": Object {
                        "callback": null,
                        "expirationTime": 1,
                        "isForced": false,
                        "isReplace": false,
                        "next": null,
                        "nextCallback": null,
                        "partialState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "appElement": [MockFunction],
                                "getPreviewer": [MockFunction],
                                "metadata": Object {
                                  "global": Object {
                                    "boxSkillsCards": Object {
                                      "cards": Array [
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "foo",
                                            },
                                          ],
                                        },
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "bar",
                                            },
                                          ],
                                        },
                                      ],
                                    },
                                  },
                                },
                                "onInteraction": [MockFunction],
                                "rootElement": [MockFunction],
                              }
                            }
                          />,
                        },
                      },
                    },
                  },
                  "child": [Circular],
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": null,
                  "memoizedState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "appElement": [MockFunction],
                          "getPreviewer": [MockFunction],
                          "metadata": Object {
                            "global": Object {
                              "boxSkillsCards": Object {
                                "cards": Array [
                                  Object {
                                    "entries": Array [
                                      Object {
                                        "title": "foo",
                                      },
                                    ],
                                  },
                                  Object {
                                    "entries": Array [
                                      Object {
                                        "title": "bar",
                                      },
                                    ],
                                  },
                                ],
                              },
                            },
                          },
                          "onInteraction": [MockFunction],
                          "rootElement": [MockFunction],
                        }
                      }
                    />,
                  },
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div>
                      <div
                        class="bcs-section bcs-section-open"
                      >
                        <button
                          class="btn-plain bcs-section-title"
                          type="button"
                        >
                          <div />
                        </button>
                        <div
                          class="bcs-section-content"
                        />
                      </div>
                      <div
                        class="bcs-section bcs-section-open"
                      >
                        <button
                          class="btn-plain bcs-section-title"
                          type="button"
                        >
                          <div />
                        </button>
                        <div
                          class="bcs-section-content"
                        />
                      </div>
                    </div>,
                    "context": Object {},
                    "current": [Circular],
                    "finishedWork": null,
                    "hydrate": false,
                    "isReadyForCommit": false,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingContext": null,
                    "remainingExpirationTime": 0,
                  },
                  "tag": 3,
                  "type": null,
                  "updateQueue": null,
                },
                "sibling": null,
                "stateNode": WrapperComponent {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "appElement": [MockFunction],
                      "getPreviewer": [MockFunction],
                      "metadata": Object {
                        "global": Object {
                          "boxSkillsCards": Object {
                            "cards": Array [
                              Object {
                                "entries": Array [
                                  Object {
                                    "title": "foo",
                                  },
                                ],
                              },
                              Object {
                                "entries": Array [
                                  Object {
                                    "title": "bar",
                                  },
                                ],
                              },
                            ],
                          },
                        },
                      },
                      "onInteraction": [MockFunction],
                      "rootElement": [MockFunction],
                    },
                  },
                  "refs": Object {},
                  "state": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "appElement": [MockFunction],
                      "getPreviewer": [MockFunction],
                      "metadata": Object {
                        "global": Object {
                          "boxSkillsCards": Object {
                            "cards": Array [
                              Object {
                                "entries": Array [
                                  Object {
                                    "title": "foo",
                                  },
                                ],
                              },
                              Object {
                                "entries": Array [
                                  Object {
                                    "title": "bar",
                                  },
                                ],
                              },
                            ],
                          },
                        },
                      },
                      "onInteraction": [MockFunction],
                      "rootElement": [MockFunction],
                    },
                  },
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 2,
                "type": [Function],
                "updateQueue": null,
              },
              "_debugSource": null,
              "alternate": null,
              "child": [Circular],
              "effectTag": 1,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "internalContextTag": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "appElement": [MockFunction],
                "getPreviewer": [MockFunction],
                "metadata": Object {
                  "global": Object {
                    "boxSkillsCards": Object {
                      "cards": Array [
                        Object {
                          "entries": Array [
                            Object {
                              "title": "foo",
                            },
                          ],
                        },
                        Object {
                          "entries": Array [
                            Object {
                              "title": "bar",
                            },
                          ],
                        },
                      ],
                    },
                  },
                },
                "onInteraction": [MockFunction],
                "rootElement": [MockFunction],
              },
              "memoizedState": null,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": FiberNode {
                "_debugID": 3,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "alternate": null,
                "child": [Circular],
                "effectTag": 1,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "appElement": [MockFunction],
                    "getPreviewer": [MockFunction],
                    "metadata": Object {
                      "global": Object {
                        "boxSkillsCards": Object {
                          "cards": Array [
                            Object {
                              "entries": Array [
                                Object {
                                  "title": "foo",
                                },
                              ],
                            },
                            Object {
                              "entries": Array [
                                Object {
                                  "title": "bar",
                                },
                              ],
                            },
                          ],
                        },
                      },
                    },
                    "onInteraction": [MockFunction],
                    "rootElement": [MockFunction],
                  },
                },
                "memoizedState": Object {
                  "context": null,
                  "mount": true,
                  "props": Object {
                    "appElement": [MockFunction],
                    "getPreviewer": [MockFunction],
                    "metadata": Object {
                      "global": Object {
                        "boxSkillsCards": Object {
                          "cards": Array [
                            Object {
                              "entries": Array [
                                Object {
                                  "title": "foo",
                                },
                              ],
                            },
                            Object {
                              "entries": Array [
                                Object {
                                  "title": "bar",
                                },
                              ],
                            },
                          ],
                        },
                      },
                    },
                    "onInteraction": [MockFunction],
                    "rootElement": [MockFunction],
                  },
                },
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": FiberNode {
                  "_debugID": 1,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": FiberNode {
                    "_debugID": 1,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": [Circular],
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 1,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": null,
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <div
                          class="bcs-section bcs-section-open"
                        >
                          <button
                            class="btn-plain bcs-section-title"
                            type="button"
                          >
                            <div />
                          </button>
                          <div
                            class="bcs-section-content"
                          />
                        </div>
                        <div
                          class="bcs-section bcs-section-open"
                        >
                          <button
                            class="btn-plain bcs-section-title"
                            type="button"
                          >
                            <div />
                          </button>
                          <div
                            class="bcs-section-content"
                          />
                        </div>
                      </div>,
                      "context": Object {},
                      "current": [Circular],
                      "finishedWork": null,
                      "hydrate": false,
                      "isReadyForCommit": false,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingContext": null,
                      "remainingExpirationTime": 0,
                    },
                    "tag": 3,
                    "type": null,
                    "updateQueue": Object {
                      "baseState": null,
                      "callbackList": null,
                      "expirationTime": 1,
                      "first": Object {
                        "callback": null,
                        "expirationTime": 1,
                        "isForced": false,
                        "isReplace": false,
                        "next": null,
                        "nextCallback": null,
                        "partialState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "appElement": [MockFunction],
                                "getPreviewer": [MockFunction],
                                "metadata": Object {
                                  "global": Object {
                                    "boxSkillsCards": Object {
                                      "cards": Array [
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "foo",
                                            },
                                          ],
                                        },
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "bar",
                                            },
                                          ],
                                        },
                                      ],
                                    },
                                  },
                                },
                                "onInteraction": [MockFunction],
                                "rootElement": [MockFunction],
                              }
                            }
                          />,
                        },
                      },
                      "hasForceUpdate": false,
                      "isInitialized": false,
                      "isProcessing": false,
                      "last": Object {
                        "callback": null,
                        "expirationTime": 1,
                        "isForced": false,
                        "isReplace": false,
                        "next": null,
                        "nextCallback": null,
                        "partialState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "appElement": [MockFunction],
                                "getPreviewer": [MockFunction],
                                "metadata": Object {
                                  "global": Object {
                                    "boxSkillsCards": Object {
                                      "cards": Array [
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "foo",
                                            },
                                          ],
                                        },
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "bar",
                                            },
                                          ],
                                        },
                                      ],
                                    },
                                  },
                                },
                                "onInteraction": [MockFunction],
                                "rootElement": [MockFunction],
                              }
                            }
                          />,
                        },
                      },
                    },
                  },
                  "child": [Circular],
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": null,
                  "memoizedState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "appElement": [MockFunction],
                          "getPreviewer": [MockFunction],
                          "metadata": Object {
                            "global": Object {
                              "boxSkillsCards": Object {
                                "cards": Array [
                                  Object {
                                    "entries": Array [
                                      Object {
                                        "title": "foo",
                                      },
                                    ],
                                  },
                                  Object {
                                    "entries": Array [
                                      Object {
                                        "title": "bar",
                                      },
                                    ],
                                  },
                                ],
                              },
                            },
                          },
                          "onInteraction": [MockFunction],
                          "rootElement": [MockFunction],
                        }
                      }
                    />,
                  },
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div>
                      <div
                        class="bcs-section bcs-section-open"
                      >
                        <button
                          class="btn-plain bcs-section-title"
                          type="button"
                        >
                          <div />
                        </button>
                        <div
                          class="bcs-section-content"
                        />
                      </div>
                      <div
                        class="bcs-section bcs-section-open"
                      >
                        <button
                          class="btn-plain bcs-section-title"
                          type="button"
                        >
                          <div />
                        </button>
                        <div
                          class="bcs-section-content"
                        />
                      </div>
                    </div>,
                    "context": Object {},
                    "current": [Circular],
                    "finishedWork": null,
                    "hydrate": false,
                    "isReadyForCommit": false,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingContext": null,
                    "remainingExpirationTime": 0,
                  },
                  "tag": 3,
                  "type": null,
                  "updateQueue": null,
                },
                "sibling": null,
                "stateNode": WrapperComponent {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "appElement": [MockFunction],
                      "getPreviewer": [MockFunction],
                      "metadata": Object {
                        "global": Object {
                          "boxSkillsCards": Object {
                            "cards": Array [
                              Object {
                                "entries": Array [
                                  Object {
                                    "title": "foo",
                                  },
                                ],
                              },
                              Object {
                                "entries": Array [
                                  Object {
                                    "title": "bar",
                                  },
                                ],
                              },
                            ],
                          },
                        },
                      },
                      "onInteraction": [MockFunction],
                      "rootElement": [MockFunction],
                    },
                  },
                  "refs": Object {},
                  "state": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "appElement": [MockFunction],
                      "getPreviewer": [MockFunction],
                      "metadata": Object {
                        "global": Object {
                          "boxSkillsCards": Object {
                            "cards": Array [
                              Object {
                                "entries": Array [
                                  Object {
                                    "title": "foo",
                                  },
                                ],
                              },
                              Object {
                                "entries": Array [
                                  Object {
                                    "title": "bar",
                                  },
                                ],
                              },
                            ],
                          },
                        },
                      },
                      "onInteraction": [MockFunction],
                      "rootElement": [MockFunction],
                    },
                  },
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 2,
                "type": [Function],
                "updateQueue": null,
              },
              "sibling": null,
              "stateNode": null,
              "tag": 1,
              "type": [Function],
              "updateQueue": null,
            },
            "sibling": FiberNode {
              "_debugID": 6,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": FiberNode {
                "_debugID": 4,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": FiberNode {
                  "_debugID": 3,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": null,
                  "child": [Circular],
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "appElement": [MockFunction],
                      "getPreviewer": [MockFunction],
                      "metadata": Object {
                        "global": Object {
                          "boxSkillsCards": Object {
                            "cards": Array [
                              Object {
                                "entries": Array [
                                  Object {
                                    "title": "foo",
                                  },
                                ],
                              },
                              Object {
                                "entries": Array [
                                  Object {
                                    "title": "bar",
                                  },
                                ],
                              },
                            ],
                          },
                        },
                      },
                      "onInteraction": [MockFunction],
                      "rootElement": [MockFunction],
                    },
                  },
                  "memoizedState": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "appElement": [MockFunction],
                      "getPreviewer": [MockFunction],
                      "metadata": Object {
                        "global": Object {
                          "boxSkillsCards": Object {
                            "cards": Array [
                              Object {
                                "entries": Array [
                                  Object {
                                    "title": "foo",
                                  },
                                ],
                              },
                              Object {
                                "entries": Array [
                                  Object {
                                    "title": "bar",
                                  },
                                ],
                              },
                            ],
                          },
                        },
                      },
                      "onInteraction": [MockFunction],
                      "rootElement": [MockFunction],
                    },
                  },
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 1,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": FiberNode {
                      "_debugID": 1,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": [Circular],
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 1,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": null,
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div
                            class="bcs-section bcs-section-open"
                          >
                            <button
                              class="btn-plain bcs-section-title"
                              type="button"
                            >
                              <div />
                            </button>
                            <div
                              class="bcs-section-content"
                            />
                          </div>
                          <div
                            class="bcs-section bcs-section-open"
                          >
                            <button
                              class="btn-plain bcs-section-title"
                              type="button"
                            >
                              <div />
                            </button>
                            <div
                              class="bcs-section-content"
                            />
                          </div>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "finishedWork": null,
                        "hydrate": false,
                        "isReadyForCommit": false,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingContext": null,
                        "remainingExpirationTime": 0,
                      },
                      "tag": 3,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": null,
                        "callbackList": null,
                        "expirationTime": 1,
                        "first": Object {
                          "callback": null,
                          "expirationTime": 1,
                          "isForced": false,
                          "isReplace": false,
                          "next": null,
                          "nextCallback": null,
                          "partialState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                Object {
                                  "appElement": [MockFunction],
                                  "getPreviewer": [MockFunction],
                                  "metadata": Object {
                                    "global": Object {
                                      "boxSkillsCards": Object {
                                        "cards": Array [
                                          Object {
                                            "entries": Array [
                                              Object {
                                                "title": "foo",
                                              },
                                            ],
                                          },
                                          Object {
                                            "entries": Array [
                                              Object {
                                                "title": "bar",
                                              },
                                            ],
                                          },
                                        ],
                                      },
                                    },
                                  },
                                  "onInteraction": [MockFunction],
                                  "rootElement": [MockFunction],
                                }
                              }
                            />,
                          },
                        },
                        "hasForceUpdate": false,
                        "isInitialized": false,
                        "isProcessing": false,
                        "last": Object {
                          "callback": null,
                          "expirationTime": 1,
                          "isForced": false,
                          "isReplace": false,
                          "next": null,
                          "nextCallback": null,
                          "partialState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                Object {
                                  "appElement": [MockFunction],
                                  "getPreviewer": [MockFunction],
                                  "metadata": Object {
                                    "global": Object {
                                      "boxSkillsCards": Object {
                                        "cards": Array [
                                          Object {
                                            "entries": Array [
                                              Object {
                                                "title": "foo",
                                              },
                                            ],
                                          },
                                          Object {
                                            "entries": Array [
                                              Object {
                                                "title": "bar",
                                              },
                                            ],
                                          },
                                        ],
                                      },
                                    },
                                  },
                                  "onInteraction": [MockFunction],
                                  "rootElement": [MockFunction],
                                }
                              }
                            />,
                          },
                        },
                      },
                    },
                    "child": [Circular],
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": null,
                    "memoizedState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "appElement": [MockFunction],
                            "getPreviewer": [MockFunction],
                            "metadata": Object {
                              "global": Object {
                                "boxSkillsCards": Object {
                                  "cards": Array [
                                    Object {
                                      "entries": Array [
                                        Object {
                                          "title": "foo",
                                        },
                                      ],
                                    },
                                    Object {
                                      "entries": Array [
                                        Object {
                                          "title": "bar",
                                        },
                                      ],
                                    },
                                  ],
                                },
                              },
                            },
                            "onInteraction": [MockFunction],
                            "rootElement": [MockFunction],
                          }
                        }
                      />,
                    },
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <div
                          class="bcs-section bcs-section-open"
                        >
                          <button
                            class="btn-plain bcs-section-title"
                            type="button"
                          >
                            <div />
                          </button>
                          <div
                            class="bcs-section-content"
                          />
                        </div>
                        <div
                          class="bcs-section bcs-section-open"
                        >
                          <button
                            class="btn-plain bcs-section-title"
                            type="button"
                          >
                            <div />
                          </button>
                          <div
                            class="bcs-section-content"
                          />
                        </div>
                      </div>,
                      "context": Object {},
                      "current": [Circular],
                      "finishedWork": null,
                      "hydrate": false,
                      "isReadyForCommit": false,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingContext": null,
                      "remainingExpirationTime": 0,
                    },
                    "tag": 3,
                    "type": null,
                    "updateQueue": null,
                  },
                  "sibling": null,
                  "stateNode": WrapperComponent {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "props": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "appElement": [MockFunction],
                        "getPreviewer": [MockFunction],
                        "metadata": Object {
                          "global": Object {
                            "boxSkillsCards": Object {
                              "cards": Array [
                                Object {
                                  "entries": Array [
                                    Object {
                                      "title": "foo",
                                    },
                                  ],
                                },
                                Object {
                                  "entries": Array [
                                    Object {
                                      "title": "bar",
                                    },
                                  ],
                                },
                              ],
                            },
                          },
                        },
                        "onInteraction": [MockFunction],
                        "rootElement": [MockFunction],
                      },
                    },
                    "refs": Object {},
                    "state": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "appElement": [MockFunction],
                        "getPreviewer": [MockFunction],
                        "metadata": Object {
                          "global": Object {
                            "boxSkillsCards": Object {
                              "cards": Array [
                                Object {
                                  "entries": Array [
                                    Object {
                                      "title": "foo",
                                    },
                                  ],
                                },
                                Object {
                                  "entries": Array [
                                    Object {
                                      "title": "bar",
                                    },
                                  ],
                                },
                              ],
                            },
                          },
                        },
                        "onInteraction": [MockFunction],
                        "rootElement": [MockFunction],
                      },
                    },
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 2,
                  "type": [Function],
                  "updateQueue": null,
                },
                "_debugSource": null,
                "alternate": null,
                "child": [Circular],
                "effectTag": 1,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "appElement": [MockFunction],
                  "getPreviewer": [MockFunction],
                  "metadata": Object {
                    "global": Object {
                      "boxSkillsCards": Object {
                        "cards": Array [
                          Object {
                            "entries": Array [
                              Object {
                                "title": "foo",
                              },
                            ],
                          },
                          Object {
                            "entries": Array [
                              Object {
                                "title": "bar",
                              },
                            ],
                          },
                        ],
                      },
                    },
                  },
                  "onInteraction": [MockFunction],
                  "rootElement": [MockFunction],
                },
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": FiberNode {
                  "_debugID": 3,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": null,
                  "child": [Circular],
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "appElement": [MockFunction],
                      "getPreviewer": [MockFunction],
                      "metadata": Object {
                        "global": Object {
                          "boxSkillsCards": Object {
                            "cards": Array [
                              Object {
                                "entries": Array [
                                  Object {
                                    "title": "foo",
                                  },
                                ],
                              },
                              Object {
                                "entries": Array [
                                  Object {
                                    "title": "bar",
                                  },
                                ],
                              },
                            ],
                          },
                        },
                      },
                      "onInteraction": [MockFunction],
                      "rootElement": [MockFunction],
                    },
                  },
                  "memoizedState": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "appElement": [MockFunction],
                      "getPreviewer": [MockFunction],
                      "metadata": Object {
                        "global": Object {
                          "boxSkillsCards": Object {
                            "cards": Array [
                              Object {
                                "entries": Array [
                                  Object {
                                    "title": "foo",
                                  },
                                ],
                              },
                              Object {
                                "entries": Array [
                                  Object {
                                    "title": "bar",
                                  },
                                ],
                              },
                            ],
                          },
                        },
                      },
                      "onInteraction": [MockFunction],
                      "rootElement": [MockFunction],
                    },
                  },
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 1,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": FiberNode {
                      "_debugID": 1,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": [Circular],
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 1,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": null,
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div
                            class="bcs-section bcs-section-open"
                          >
                            <button
                              class="btn-plain bcs-section-title"
                              type="button"
                            >
                              <div />
                            </button>
                            <div
                              class="bcs-section-content"
                            />
                          </div>
                          <div
                            class="bcs-section bcs-section-open"
                          >
                            <button
                              class="btn-plain bcs-section-title"
                              type="button"
                            >
                              <div />
                            </button>
                            <div
                              class="bcs-section-content"
                            />
                          </div>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "finishedWork": null,
                        "hydrate": false,
                        "isReadyForCommit": false,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingContext": null,
                        "remainingExpirationTime": 0,
                      },
                      "tag": 3,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": null,
                        "callbackList": null,
                        "expirationTime": 1,
                        "first": Object {
                          "callback": null,
                          "expirationTime": 1,
                          "isForced": false,
                          "isReplace": false,
                          "next": null,
                          "nextCallback": null,
                          "partialState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                Object {
                                  "appElement": [MockFunction],
                                  "getPreviewer": [MockFunction],
                                  "metadata": Object {
                                    "global": Object {
                                      "boxSkillsCards": Object {
                                        "cards": Array [
                                          Object {
                                            "entries": Array [
                                              Object {
                                                "title": "foo",
                                              },
                                            ],
                                          },
                                          Object {
                                            "entries": Array [
                                              Object {
                                                "title": "bar",
                                              },
                                            ],
                                          },
                                        ],
                                      },
                                    },
                                  },
                                  "onInteraction": [MockFunction],
                                  "rootElement": [MockFunction],
                                }
                              }
                            />,
                          },
                        },
                        "hasForceUpdate": false,
                        "isInitialized": false,
                        "isProcessing": false,
                        "last": Object {
                          "callback": null,
                          "expirationTime": 1,
                          "isForced": false,
                          "isReplace": false,
                          "next": null,
                          "nextCallback": null,
                          "partialState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                Object {
                                  "appElement": [MockFunction],
                                  "getPreviewer": [MockFunction],
                                  "metadata": Object {
                                    "global": Object {
                                      "boxSkillsCards": Object {
                                        "cards": Array [
                                          Object {
                                            "entries": Array [
                                              Object {
                                                "title": "foo",
                                              },
                                            ],
                                          },
                                          Object {
                                            "entries": Array [
                                              Object {
                                                "title": "bar",
                                              },
                                            ],
                                          },
                                        ],
                                      },
                                    },
                                  },
                                  "onInteraction": [MockFunction],
                                  "rootElement": [MockFunction],
                                }
                              }
                            />,
                          },
                        },
                      },
                    },
                    "child": [Circular],
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": null,
                    "memoizedState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "appElement": [MockFunction],
                            "getPreviewer": [MockFunction],
                            "metadata": Object {
                              "global": Object {
                                "boxSkillsCards": Object {
                                  "cards": Array [
                                    Object {
                                      "entries": Array [
                                        Object {
                                          "title": "foo",
                                        },
                                      ],
                                    },
                                    Object {
                                      "entries": Array [
                                        Object {
                                          "title": "bar",
                                        },
                                      ],
                                    },
                                  ],
                                },
                              },
                            },
                            "onInteraction": [MockFunction],
                            "rootElement": [MockFunction],
                          }
                        }
                      />,
                    },
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <div
                          class="bcs-section bcs-section-open"
                        >
                          <button
                            class="btn-plain bcs-section-title"
                            type="button"
                          >
                            <div />
                          </button>
                          <div
                            class="bcs-section-content"
                          />
                        </div>
                        <div
                          class="bcs-section bcs-section-open"
                        >
                          <button
                            class="btn-plain bcs-section-title"
                            type="button"
                          >
                            <div />
                          </button>
                          <div
                            class="bcs-section-content"
                          />
                        </div>
                      </div>,
                      "context": Object {},
                      "current": [Circular],
                      "finishedWork": null,
                      "hydrate": false,
                      "isReadyForCommit": false,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingContext": null,
                      "remainingExpirationTime": 0,
                    },
                    "tag": 3,
                    "type": null,
                    "updateQueue": null,
                  },
                  "sibling": null,
                  "stateNode": WrapperComponent {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "props": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "appElement": [MockFunction],
                        "getPreviewer": [MockFunction],
                        "metadata": Object {
                          "global": Object {
                            "boxSkillsCards": Object {
                              "cards": Array [
                                Object {
                                  "entries": Array [
                                    Object {
                                      "title": "foo",
                                    },
                                  ],
                                },
                                Object {
                                  "entries": Array [
                                    Object {
                                      "title": "bar",
                                    },
                                  ],
                                },
                              ],
                            },
                          },
                        },
                        "onInteraction": [MockFunction],
                        "rootElement": [MockFunction],
                      },
                    },
                    "refs": Object {},
                    "state": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "appElement": [MockFunction],
                        "getPreviewer": [MockFunction],
                        "metadata": Object {
                          "global": Object {
                            "boxSkillsCards": Object {
                              "cards": Array [
                                Object {
                                  "entries": Array [
                                    Object {
                                      "title": "foo",
                                    },
                                  ],
                                },
                                Object {
                                  "entries": Array [
                                    Object {
                                      "title": "bar",
                                    },
                                  ],
                                },
                              ],
                            },
                          },
                        },
                        "onInteraction": [MockFunction],
                        "rootElement": [MockFunction],
                      },
                    },
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 2,
                  "type": [Function],
                  "updateQueue": null,
                },
                "sibling": null,
                "stateNode": null,
                "tag": 1,
                "type": [Function],
                "updateQueue": null,
              },
              "_debugSource": null,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 15,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 16,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 18,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 19,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": FiberNode {
                        "_debugID": 4,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": FiberNode {
                          "_debugID": 3,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "appElement": [MockFunction],
                              "getPreviewer": [MockFunction],
                              "metadata": Object {
                                "global": Object {
                                  "boxSkillsCards": Object {
                                    "cards": Array [
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "foo",
                                          },
                                        ],
                                      },
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "bar",
                                          },
                                        ],
                                      },
                                    ],
                                  },
                                },
                              },
                              "onInteraction": [MockFunction],
                              "rootElement": [MockFunction],
                            },
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "appElement": [MockFunction],
                              "getPreviewer": [MockFunction],
                              "metadata": Object {
                                "global": Object {
                                  "boxSkillsCards": Object {
                                    "cards": Array [
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "foo",
                                          },
                                        ],
                                      },
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "bar",
                                          },
                                        ],
                                      },
                                    ],
                                  },
                                },
                              },
                              "onInteraction": [MockFunction],
                              "rootElement": [MockFunction],
                            },
                          },
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": [Circular],
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 1,
                              "firstEffect": null,
                              "index": 0,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div
                                    class="bcs-section bcs-section-open"
                                  >
                                    <button
                                      class="btn-plain bcs-section-title"
                                      type="button"
                                    >
                                      <div />
                                    </button>
                                    <div
                                      class="bcs-section-content"
                                    />
                                  </div>
                                  <div
                                    class="bcs-section bcs-section-open"
                                  >
                                    <button
                                      class="btn-plain bcs-section-title"
                                      type="button"
                                    >
                                      <div />
                                    </button>
                                    <div
                                      class="bcs-section-content"
                                    />
                                  </div>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "hydrate": false,
                                "isReadyForCommit": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": null,
                                "callbackList": null,
                                "expirationTime": 1,
                                "first": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "nextCallback": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "appElement": [MockFunction],
                                          "getPreviewer": [MockFunction],
                                          "metadata": Object {
                                            "global": Object {
                                              "boxSkillsCards": Object {
                                                "cards": Array [
                                                  Object {
                                                    "entries": Array [
                                                      Object {
                                                        "title": "foo",
                                                      },
                                                    ],
                                                  },
                                                  Object {
                                                    "entries": Array [
                                                      Object {
                                                        "title": "bar",
                                                      },
                                                    ],
                                                  },
                                                ],
                                              },
                                            },
                                          },
                                          "onInteraction": [MockFunction],
                                          "rootElement": [MockFunction],
                                        }
                                      }
                                    />,
                                  },
                                },
                                "hasForceUpdate": false,
                                "isInitialized": false,
                                "isProcessing": false,
                                "last": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "nextCallback": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "appElement": [MockFunction],
                                          "getPreviewer": [MockFunction],
                                          "metadata": Object {
                                            "global": Object {
                                              "boxSkillsCards": Object {
                                                "cards": Array [
                                                  Object {
                                                    "entries": Array [
                                                      Object {
                                                        "title": "foo",
                                                      },
                                                    ],
                                                  },
                                                  Object {
                                                    "entries": Array [
                                                      Object {
                                                        "title": "bar",
                                                      },
                                                    ],
                                                  },
                                                ],
                                              },
                                            },
                                          },
                                          "onInteraction": [MockFunction],
                                          "rootElement": [MockFunction],
                                        }
                                      }
                                    />,
                                  },
                                },
                              },
                            },
                            "child": [Circular],
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "appElement": [MockFunction],
                                    "getPreviewer": [MockFunction],
                                    "metadata": Object {
                                      "global": Object {
                                        "boxSkillsCards": Object {
                                          "cards": Array [
                                            Object {
                                              "entries": Array [
                                                Object {
                                                  "title": "foo",
                                                },
                                              ],
                                            },
                                            Object {
                                              "entries": Array [
                                                Object {
                                                  "title": "bar",
                                                },
                                              ],
                                            },
                                          ],
                                        },
                                      },
                                    },
                                    "onInteraction": [MockFunction],
                                    "rootElement": [MockFunction],
                                  }
                                }
                              />,
                            },
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                  class="bcs-section bcs-section-open"
                                >
                                  <button
                                    class="btn-plain bcs-section-title"
                                    type="button"
                                  >
                                    <div />
                                  </button>
                                  <div
                                    class="bcs-section-content"
                                  />
                                </div>
                                <div
                                  class="bcs-section bcs-section-open"
                                >
                                  <button
                                    class="btn-plain bcs-section-title"
                                    type="button"
                                  >
                                    <div />
                                  </button>
                                  <div
                                    class="bcs-section-content"
                                  />
                                </div>
                              </div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "hydrate": false,
                              "isReadyForCommit": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": null,
                          },
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "appElement": [MockFunction],
                                "getPreviewer": [MockFunction],
                                "metadata": Object {
                                  "global": Object {
                                    "boxSkillsCards": Object {
                                      "cards": Array [
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "foo",
                                            },
                                          ],
                                        },
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "bar",
                                            },
                                          ],
                                        },
                                      ],
                                    },
                                  },
                                },
                                "onInteraction": [MockFunction],
                                "rootElement": [MockFunction],
                              },
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "appElement": [MockFunction],
                                "getPreviewer": [MockFunction],
                                "metadata": Object {
                                  "global": Object {
                                    "boxSkillsCards": Object {
                                      "cards": Array [
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "foo",
                                            },
                                          ],
                                        },
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "bar",
                                            },
                                          ],
                                        },
                                      ],
                                    },
                                  },
                                },
                                "onInteraction": [MockFunction],
                                "rootElement": [MockFunction],
                              },
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "appElement": [MockFunction],
                          "getPreviewer": [MockFunction],
                          "metadata": Object {
                            "global": Object {
                              "boxSkillsCards": Object {
                                "cards": Array [
                                  Object {
                                    "entries": Array [
                                      Object {
                                        "title": "foo",
                                      },
                                    ],
                                  },
                                  Object {
                                    "entries": Array [
                                      Object {
                                        "title": "bar",
                                      },
                                    ],
                                  },
                                ],
                              },
                            },
                          },
                          "onInteraction": [MockFunction],
                          "rootElement": [MockFunction],
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 3,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "appElement": [MockFunction],
                              "getPreviewer": [MockFunction],
                              "metadata": Object {
                                "global": Object {
                                  "boxSkillsCards": Object {
                                    "cards": Array [
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "foo",
                                          },
                                        ],
                                      },
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "bar",
                                          },
                                        ],
                                      },
                                    ],
                                  },
                                },
                              },
                              "onInteraction": [MockFunction],
                              "rootElement": [MockFunction],
                            },
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "appElement": [MockFunction],
                              "getPreviewer": [MockFunction],
                              "metadata": Object {
                                "global": Object {
                                  "boxSkillsCards": Object {
                                    "cards": Array [
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "foo",
                                          },
                                        ],
                                      },
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "bar",
                                          },
                                        ],
                                      },
                                    ],
                                  },
                                },
                              },
                              "onInteraction": [MockFunction],
                              "rootElement": [MockFunction],
                            },
                          },
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": [Circular],
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 1,
                              "firstEffect": null,
                              "index": 0,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div
                                    class="bcs-section bcs-section-open"
                                  >
                                    <button
                                      class="btn-plain bcs-section-title"
                                      type="button"
                                    >
                                      <div />
                                    </button>
                                    <div
                                      class="bcs-section-content"
                                    />
                                  </div>
                                  <div
                                    class="bcs-section bcs-section-open"
                                  >
                                    <button
                                      class="btn-plain bcs-section-title"
                                      type="button"
                                    >
                                      <div />
                                    </button>
                                    <div
                                      class="bcs-section-content"
                                    />
                                  </div>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "hydrate": false,
                                "isReadyForCommit": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": null,
                                "callbackList": null,
                                "expirationTime": 1,
                                "first": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "nextCallback": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "appElement": [MockFunction],
                                          "getPreviewer": [MockFunction],
                                          "metadata": Object {
                                            "global": Object {
                                              "boxSkillsCards": Object {
                                                "cards": Array [
                                                  Object {
                                                    "entries": Array [
                                                      Object {
                                                        "title": "foo",
                                                      },
                                                    ],
                                                  },
                                                  Object {
                                                    "entries": Array [
                                                      Object {
                                                        "title": "bar",
                                                      },
                                                    ],
                                                  },
                                                ],
                                              },
                                            },
                                          },
                                          "onInteraction": [MockFunction],
                                          "rootElement": [MockFunction],
                                        }
                                      }
                                    />,
                                  },
                                },
                                "hasForceUpdate": false,
                                "isInitialized": false,
                                "isProcessing": false,
                                "last": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "nextCallback": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "appElement": [MockFunction],
                                          "getPreviewer": [MockFunction],
                                          "metadata": Object {
                                            "global": Object {
                                              "boxSkillsCards": Object {
                                                "cards": Array [
                                                  Object {
                                                    "entries": Array [
                                                      Object {
                                                        "title": "foo",
                                                      },
                                                    ],
                                                  },
                                                  Object {
                                                    "entries": Array [
                                                      Object {
                                                        "title": "bar",
                                                      },
                                                    ],
                                                  },
                                                ],
                                              },
                                            },
                                          },
                                          "onInteraction": [MockFunction],
                                          "rootElement": [MockFunction],
                                        }
                                      }
                                    />,
                                  },
                                },
                              },
                            },
                            "child": [Circular],
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "appElement": [MockFunction],
                                    "getPreviewer": [MockFunction],
                                    "metadata": Object {
                                      "global": Object {
                                        "boxSkillsCards": Object {
                                          "cards": Array [
                                            Object {
                                              "entries": Array [
                                                Object {
                                                  "title": "foo",
                                                },
                                              ],
                                            },
                                            Object {
                                              "entries": Array [
                                                Object {
                                                  "title": "bar",
                                                },
                                              ],
                                            },
                                          ],
                                        },
                                      },
                                    },
                                    "onInteraction": [MockFunction],
                                    "rootElement": [MockFunction],
                                  }
                                }
                              />,
                            },
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                  class="bcs-section bcs-section-open"
                                >
                                  <button
                                    class="btn-plain bcs-section-title"
                                    type="button"
                                  >
                                    <div />
                                  </button>
                                  <div
                                    class="bcs-section-content"
                                  />
                                </div>
                                <div
                                  class="bcs-section bcs-section-open"
                                >
                                  <button
                                    class="btn-plain bcs-section-title"
                                    type="button"
                                  >
                                    <div />
                                  </button>
                                  <div
                                    class="bcs-section-content"
                                  />
                                </div>
                              </div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "hydrate": false,
                              "isReadyForCommit": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": null,
                          },
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "appElement": [MockFunction],
                                "getPreviewer": [MockFunction],
                                "metadata": Object {
                                  "global": Object {
                                    "boxSkillsCards": Object {
                                      "cards": Array [
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "foo",
                                            },
                                          ],
                                        },
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "bar",
                                            },
                                          ],
                                        },
                                      ],
                                    },
                                  },
                                },
                                "onInteraction": [MockFunction],
                                "rootElement": [MockFunction],
                              },
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "appElement": [MockFunction],
                                "getPreviewer": [MockFunction],
                                "metadata": Object {
                                  "global": Object {
                                    "boxSkillsCards": Object {
                                      "cards": Array [
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "foo",
                                            },
                                          ],
                                        },
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "bar",
                                            },
                                          ],
                                        },
                                      ],
                                    },
                                  },
                                },
                                "onInteraction": [MockFunction],
                                "rootElement": [MockFunction],
                              },
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": null,
                        "tag": 1,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": null,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 20,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "alternate": null,
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {},
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": <div />,
                        "tag": 5,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {},
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": null,
                      "tag": 1,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": <FormattedMessage />,
                      "className": "btn-plain bcs-section-title",
                      "onClick": [Function],
                      "type": "button",
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": <button
                      class="btn-plain bcs-section-title"
                      type="button"
                    >
                      <div />
                    </button>,
                    "tag": 5,
                    "type": "button",
                    "updateQueue": null,
                  },
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": <FormattedMessage />,
                    "className": "bcs-section-title",
                    "onClick": [Function],
                    "type": "button",
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": [Circular],
                  "sibling": FiberNode {
                    "_debugID": 17,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 21,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": FiberNode {
                        "_debugID": 4,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": FiberNode {
                          "_debugID": 3,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "appElement": [MockFunction],
                              "getPreviewer": [MockFunction],
                              "metadata": Object {
                                "global": Object {
                                  "boxSkillsCards": Object {
                                    "cards": Array [
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "foo",
                                          },
                                        ],
                                      },
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "bar",
                                          },
                                        ],
                                      },
                                    ],
                                  },
                                },
                              },
                              "onInteraction": [MockFunction],
                              "rootElement": [MockFunction],
                            },
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "appElement": [MockFunction],
                              "getPreviewer": [MockFunction],
                              "metadata": Object {
                                "global": Object {
                                  "boxSkillsCards": Object {
                                    "cards": Array [
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "foo",
                                          },
                                        ],
                                      },
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "bar",
                                          },
                                        ],
                                      },
                                    ],
                                  },
                                },
                              },
                              "onInteraction": [MockFunction],
                              "rootElement": [MockFunction],
                            },
                          },
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": [Circular],
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 1,
                              "firstEffect": null,
                              "index": 0,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div
                                    class="bcs-section bcs-section-open"
                                  >
                                    <button
                                      class="btn-plain bcs-section-title"
                                      type="button"
                                    >
                                      <div />
                                    </button>
                                    <div
                                      class="bcs-section-content"
                                    />
                                  </div>
                                  <div
                                    class="bcs-section bcs-section-open"
                                  >
                                    <button
                                      class="btn-plain bcs-section-title"
                                      type="button"
                                    >
                                      <div />
                                    </button>
                                    <div
                                      class="bcs-section-content"
                                    />
                                  </div>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "hydrate": false,
                                "isReadyForCommit": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": null,
                                "callbackList": null,
                                "expirationTime": 1,
                                "first": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "nextCallback": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "appElement": [MockFunction],
                                          "getPreviewer": [MockFunction],
                                          "metadata": Object {
                                            "global": Object {
                                              "boxSkillsCards": Object {
                                                "cards": Array [
                                                  Object {
                                                    "entries": Array [
                                                      Object {
                                                        "title": "foo",
                                                      },
                                                    ],
                                                  },
                                                  Object {
                                                    "entries": Array [
                                                      Object {
                                                        "title": "bar",
                                                      },
                                                    ],
                                                  },
                                                ],
                                              },
                                            },
                                          },
                                          "onInteraction": [MockFunction],
                                          "rootElement": [MockFunction],
                                        }
                                      }
                                    />,
                                  },
                                },
                                "hasForceUpdate": false,
                                "isInitialized": false,
                                "isProcessing": false,
                                "last": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "nextCallback": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "appElement": [MockFunction],
                                          "getPreviewer": [MockFunction],
                                          "metadata": Object {
                                            "global": Object {
                                              "boxSkillsCards": Object {
                                                "cards": Array [
                                                  Object {
                                                    "entries": Array [
                                                      Object {
                                                        "title": "foo",
                                                      },
                                                    ],
                                                  },
                                                  Object {
                                                    "entries": Array [
                                                      Object {
                                                        "title": "bar",
                                                      },
                                                    ],
                                                  },
                                                ],
                                              },
                                            },
                                          },
                                          "onInteraction": [MockFunction],
                                          "rootElement": [MockFunction],
                                        }
                                      }
                                    />,
                                  },
                                },
                              },
                            },
                            "child": [Circular],
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "appElement": [MockFunction],
                                    "getPreviewer": [MockFunction],
                                    "metadata": Object {
                                      "global": Object {
                                        "boxSkillsCards": Object {
                                          "cards": Array [
                                            Object {
                                              "entries": Array [
                                                Object {
                                                  "title": "foo",
                                                },
                                              ],
                                            },
                                            Object {
                                              "entries": Array [
                                                Object {
                                                  "title": "bar",
                                                },
                                              ],
                                            },
                                          ],
                                        },
                                      },
                                    },
                                    "onInteraction": [MockFunction],
                                    "rootElement": [MockFunction],
                                  }
                                }
                              />,
                            },
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                  class="bcs-section bcs-section-open"
                                >
                                  <button
                                    class="btn-plain bcs-section-title"
                                    type="button"
                                  >
                                    <div />
                                  </button>
                                  <div
                                    class="bcs-section-content"
                                  />
                                </div>
                                <div
                                  class="bcs-section bcs-section-open"
                                >
                                  <button
                                    class="btn-plain bcs-section-title"
                                    type="button"
                                  >
                                    <div />
                                  </button>
                                  <div
                                    class="bcs-section-content"
                                  />
                                </div>
                              </div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "hydrate": false,
                              "isReadyForCommit": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": null,
                          },
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "appElement": [MockFunction],
                                "getPreviewer": [MockFunction],
                                "metadata": Object {
                                  "global": Object {
                                    "boxSkillsCards": Object {
                                      "cards": Array [
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "foo",
                                            },
                                          ],
                                        },
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "bar",
                                            },
                                          ],
                                        },
                                      ],
                                    },
                                  },
                                },
                                "onInteraction": [MockFunction],
                                "rootElement": [MockFunction],
                              },
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "appElement": [MockFunction],
                                "getPreviewer": [MockFunction],
                                "metadata": Object {
                                  "global": Object {
                                    "boxSkillsCards": Object {
                                      "cards": Array [
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "foo",
                                            },
                                          ],
                                        },
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "bar",
                                            },
                                          ],
                                        },
                                      ],
                                    },
                                  },
                                },
                                "onInteraction": [MockFunction],
                                "rootElement": [MockFunction],
                              },
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "appElement": [MockFunction],
                          "getPreviewer": [MockFunction],
                          "metadata": Object {
                            "global": Object {
                              "boxSkillsCards": Object {
                                "cards": Array [
                                  Object {
                                    "entries": Array [
                                      Object {
                                        "title": "foo",
                                      },
                                    ],
                                  },
                                  Object {
                                    "entries": Array [
                                      Object {
                                        "title": "bar",
                                      },
                                    ],
                                  },
                                ],
                              },
                            },
                          },
                          "onInteraction": [MockFunction],
                          "rootElement": [MockFunction],
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 3,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "appElement": [MockFunction],
                              "getPreviewer": [MockFunction],
                              "metadata": Object {
                                "global": Object {
                                  "boxSkillsCards": Object {
                                    "cards": Array [
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "foo",
                                          },
                                        ],
                                      },
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "bar",
                                          },
                                        ],
                                      },
                                    ],
                                  },
                                },
                              },
                              "onInteraction": [MockFunction],
                              "rootElement": [MockFunction],
                            },
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "appElement": [MockFunction],
                              "getPreviewer": [MockFunction],
                              "metadata": Object {
                                "global": Object {
                                  "boxSkillsCards": Object {
                                    "cards": Array [
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "foo",
                                          },
                                        ],
                                      },
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "bar",
                                          },
                                        ],
                                      },
                                    ],
                                  },
                                },
                              },
                              "onInteraction": [MockFunction],
                              "rootElement": [MockFunction],
                            },
                          },
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": [Circular],
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 1,
                              "firstEffect": null,
                              "index": 0,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div
                                    class="bcs-section bcs-section-open"
                                  >
                                    <button
                                      class="btn-plain bcs-section-title"
                                      type="button"
                                    >
                                      <div />
                                    </button>
                                    <div
                                      class="bcs-section-content"
                                    />
                                  </div>
                                  <div
                                    class="bcs-section bcs-section-open"
                                  >
                                    <button
                                      class="btn-plain bcs-section-title"
                                      type="button"
                                    >
                                      <div />
                                    </button>
                                    <div
                                      class="bcs-section-content"
                                    />
                                  </div>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "hydrate": false,
                                "isReadyForCommit": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": null,
                                "callbackList": null,
                                "expirationTime": 1,
                                "first": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "nextCallback": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "appElement": [MockFunction],
                                          "getPreviewer": [MockFunction],
                                          "metadata": Object {
                                            "global": Object {
                                              "boxSkillsCards": Object {
                                                "cards": Array [
                                                  Object {
                                                    "entries": Array [
                                                      Object {
                                                        "title": "foo",
                                                      },
                                                    ],
                                                  },
                                                  Object {
                                                    "entries": Array [
                                                      Object {
                                                        "title": "bar",
                                                      },
                                                    ],
                                                  },
                                                ],
                                              },
                                            },
                                          },
                                          "onInteraction": [MockFunction],
                                          "rootElement": [MockFunction],
                                        }
                                      }
                                    />,
                                  },
                                },
                                "hasForceUpdate": false,
                                "isInitialized": false,
                                "isProcessing": false,
                                "last": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "nextCallback": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "appElement": [MockFunction],
                                          "getPreviewer": [MockFunction],
                                          "metadata": Object {
                                            "global": Object {
                                              "boxSkillsCards": Object {
                                                "cards": Array [
                                                  Object {
                                                    "entries": Array [
                                                      Object {
                                                        "title": "foo",
                                                      },
                                                    ],
                                                  },
                                                  Object {
                                                    "entries": Array [
                                                      Object {
                                                        "title": "bar",
                                                      },
                                                    ],
                                                  },
                                                ],
                                              },
                                            },
                                          },
                                          "onInteraction": [MockFunction],
                                          "rootElement": [MockFunction],
                                        }
                                      }
                                    />,
                                  },
                                },
                              },
                            },
                            "child": [Circular],
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "appElement": [MockFunction],
                                    "getPreviewer": [MockFunction],
                                    "metadata": Object {
                                      "global": Object {
                                        "boxSkillsCards": Object {
                                          "cards": Array [
                                            Object {
                                              "entries": Array [
                                                Object {
                                                  "title": "foo",
                                                },
                                              ],
                                            },
                                            Object {
                                              "entries": Array [
                                                Object {
                                                  "title": "bar",
                                                },
                                              ],
                                            },
                                          ],
                                        },
                                      },
                                    },
                                    "onInteraction": [MockFunction],
                                    "rootElement": [MockFunction],
                                  }
                                }
                              />,
                            },
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                  class="bcs-section bcs-section-open"
                                >
                                  <button
                                    class="btn-plain bcs-section-title"
                                    type="button"
                                  >
                                    <div />
                                  </button>
                                  <div
                                    class="bcs-section-content"
                                  />
                                </div>
                                <div
                                  class="bcs-section bcs-section-open"
                                >
                                  <button
                                    class="btn-plain bcs-section-title"
                                    type="button"
                                  >
                                    <div />
                                  </button>
                                  <div
                                    class="bcs-section-content"
                                  />
                                </div>
                              </div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "hydrate": false,
                              "isReadyForCommit": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": null,
                          },
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "appElement": [MockFunction],
                                "getPreviewer": [MockFunction],
                                "metadata": Object {
                                  "global": Object {
                                    "boxSkillsCards": Object {
                                      "cards": Array [
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "foo",
                                            },
                                          ],
                                        },
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "bar",
                                            },
                                          ],
                                        },
                                      ],
                                    },
                                  },
                                },
                                "onInteraction": [MockFunction],
                                "rootElement": [MockFunction],
                              },
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "appElement": [MockFunction],
                                "getPreviewer": [MockFunction],
                                "metadata": Object {
                                  "global": Object {
                                    "boxSkillsCards": Object {
                                      "cards": Array [
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "foo",
                                            },
                                          ],
                                        },
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "bar",
                                            },
                                          ],
                                        },
                                      ],
                                    },
                                  },
                                },
                                "onInteraction": [MockFunction],
                                "rootElement": [MockFunction],
                              },
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": null,
                        "tag": 1,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": null,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 22,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "alternate": null,
                        "child": null,
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "appElement": [MockFunction],
                          "getPreviewer": [MockFunction],
                          "onInteraction": [MockFunction],
                          "rootElement": [MockFunction],
                          "skill": Object {
                            "entries": Array [
                              Object {
                                "title": "bar",
                              },
                            ],
                          },
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": null,
                        "tag": 1,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "appElement": [MockFunction],
                        "getPreviewer": [MockFunction],
                        "maskError": undefined,
                        "onInteraction": [MockFunction],
                        "rootElement": [MockFunction],
                        "skill": Object {
                          "entries": Array [
                            Object {
                              "title": "bar",
                            },
                          ],
                        },
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": null,
                      "tag": 1,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 1,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": <Unknown
                        appElement={[MockFunction]}
                        getPreviewer={[MockFunction]}
                        maskError={undefined}
                        onInteraction={[MockFunction]}
                        rootElement={[MockFunction]}
                        skill={
                          Object {
                            "entries": Array [
                              Object {
                                "title": "bar",
                              },
                            ],
                          }
                        }
                      />,
                      "className": "bcs-section-content",
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": <div
                      class="bcs-section-content"
                    />,
                    "tag": 5,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "stateNode": null,
                  "tag": 1,
                  "type": [Function],
                  "updateQueue": null,
                },
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <PlainButton
                      className="bcs-section-title"
                      onClick={[Function]}
                      type="button"
                    >
                      <FormattedMessage />
                    </PlainButton>,
                    <div
                      className="bcs-section-content"
                    >
                      <Unknown
                        appElement={[MockFunction]}
                        getPreviewer={[MockFunction]}
                        maskError={undefined}
                        onInteraction={[MockFunction]}
                        rootElement={[MockFunction]}
                        skill={
                          Object {
                            "entries": Array [
                              Object {
                                "title": "bar",
                              },
                            ],
                          }
                        }
                      />
                    </div>,
                  ],
                  "className": "bcs-section bcs-section-open",
                },
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": [Circular],
                "sibling": null,
                "stateNode": <div
                  class="bcs-section bcs-section-open"
                >
                  <button
                    class="btn-plain bcs-section-title"
                    type="button"
                  >
                    <div />
                  </button>
                  <div
                    class="bcs-section-content"
                  />
                </div>,
                "tag": 5,
                "type": "div",
                "updateQueue": null,
              },
              "effectTag": 1,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 1,
              "internalContextTag": 0,
              "key": "1",
              "lastEffect": null,
              "memoizedProps": Object {
                "children": <Unknown
                  appElement={[MockFunction]}
                  getPreviewer={[MockFunction]}
                  maskError={undefined}
                  onInteraction={[MockFunction]}
                  rootElement={[MockFunction]}
                  skill={
                    Object {
                      "entries": Array [
                        Object {
                          "title": "bar",
                        },
                      ],
                    }
                  }
                />,
                "className": "",
                "isOpen": true,
                "title": <FormattedMessage />,
              },
              "memoizedState": Object {
                "isOpen": true,
              },
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": FiberNode {
                "_debugID": 4,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": FiberNode {
                  "_debugID": 3,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": null,
                  "child": [Circular],
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "appElement": [MockFunction],
                      "getPreviewer": [MockFunction],
                      "metadata": Object {
                        "global": Object {
                          "boxSkillsCards": Object {
                            "cards": Array [
                              Object {
                                "entries": Array [
                                  Object {
                                    "title": "foo",
                                  },
                                ],
                              },
                              Object {
                                "entries": Array [
                                  Object {
                                    "title": "bar",
                                  },
                                ],
                              },
                            ],
                          },
                        },
                      },
                      "onInteraction": [MockFunction],
                      "rootElement": [MockFunction],
                    },
                  },
                  "memoizedState": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "appElement": [MockFunction],
                      "getPreviewer": [MockFunction],
                      "metadata": Object {
                        "global": Object {
                          "boxSkillsCards": Object {
                            "cards": Array [
                              Object {
                                "entries": Array [
                                  Object {
                                    "title": "foo",
                                  },
                                ],
                              },
                              Object {
                                "entries": Array [
                                  Object {
                                    "title": "bar",
                                  },
                                ],
                              },
                            ],
                          },
                        },
                      },
                      "onInteraction": [MockFunction],
                      "rootElement": [MockFunction],
                    },
                  },
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 1,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": FiberNode {
                      "_debugID": 1,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": [Circular],
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 1,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": null,
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div
                            class="bcs-section bcs-section-open"
                          >
                            <button
                              class="btn-plain bcs-section-title"
                              type="button"
                            >
                              <div />
                            </button>
                            <div
                              class="bcs-section-content"
                            />
                          </div>
                          <div
                            class="bcs-section bcs-section-open"
                          >
                            <button
                              class="btn-plain bcs-section-title"
                              type="button"
                            >
                              <div />
                            </button>
                            <div
                              class="bcs-section-content"
                            />
                          </div>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "finishedWork": null,
                        "hydrate": false,
                        "isReadyForCommit": false,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingContext": null,
                        "remainingExpirationTime": 0,
                      },
                      "tag": 3,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": null,
                        "callbackList": null,
                        "expirationTime": 1,
                        "first": Object {
                          "callback": null,
                          "expirationTime": 1,
                          "isForced": false,
                          "isReplace": false,
                          "next": null,
                          "nextCallback": null,
                          "partialState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                Object {
                                  "appElement": [MockFunction],
                                  "getPreviewer": [MockFunction],
                                  "metadata": Object {
                                    "global": Object {
                                      "boxSkillsCards": Object {
                                        "cards": Array [
                                          Object {
                                            "entries": Array [
                                              Object {
                                                "title": "foo",
                                              },
                                            ],
                                          },
                                          Object {
                                            "entries": Array [
                                              Object {
                                                "title": "bar",
                                              },
                                            ],
                                          },
                                        ],
                                      },
                                    },
                                  },
                                  "onInteraction": [MockFunction],
                                  "rootElement": [MockFunction],
                                }
                              }
                            />,
                          },
                        },
                        "hasForceUpdate": false,
                        "isInitialized": false,
                        "isProcessing": false,
                        "last": Object {
                          "callback": null,
                          "expirationTime": 1,
                          "isForced": false,
                          "isReplace": false,
                          "next": null,
                          "nextCallback": null,
                          "partialState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                Object {
                                  "appElement": [MockFunction],
                                  "getPreviewer": [MockFunction],
                                  "metadata": Object {
                                    "global": Object {
                                      "boxSkillsCards": Object {
                                        "cards": Array [
                                          Object {
                                            "entries": Array [
                                              Object {
                                                "title": "foo",
                                              },
                                            ],
                                          },
                                          Object {
                                            "entries": Array [
                                              Object {
                                                "title": "bar",
                                              },
                                            ],
                                          },
                                        ],
                                      },
                                    },
                                  },
                                  "onInteraction": [MockFunction],
                                  "rootElement": [MockFunction],
                                }
                              }
                            />,
                          },
                        },
                      },
                    },
                    "child": [Circular],
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": null,
                    "memoizedState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "appElement": [MockFunction],
                            "getPreviewer": [MockFunction],
                            "metadata": Object {
                              "global": Object {
                                "boxSkillsCards": Object {
                                  "cards": Array [
                                    Object {
                                      "entries": Array [
                                        Object {
                                          "title": "foo",
                                        },
                                      ],
                                    },
                                    Object {
                                      "entries": Array [
                                        Object {
                                          "title": "bar",
                                        },
                                      ],
                                    },
                                  ],
                                },
                              },
                            },
                            "onInteraction": [MockFunction],
                            "rootElement": [MockFunction],
                          }
                        }
                      />,
                    },
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <div
                          class="bcs-section bcs-section-open"
                        >
                          <button
                            class="btn-plain bcs-section-title"
                            type="button"
                          >
                            <div />
                          </button>
                          <div
                            class="bcs-section-content"
                          />
                        </div>
                        <div
                          class="bcs-section bcs-section-open"
                        >
                          <button
                            class="btn-plain bcs-section-title"
                            type="button"
                          >
                            <div />
                          </button>
                          <div
                            class="bcs-section-content"
                          />
                        </div>
                      </div>,
                      "context": Object {},
                      "current": [Circular],
                      "finishedWork": null,
                      "hydrate": false,
                      "isReadyForCommit": false,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingContext": null,
                      "remainingExpirationTime": 0,
                    },
                    "tag": 3,
                    "type": null,
                    "updateQueue": null,
                  },
                  "sibling": null,
                  "stateNode": WrapperComponent {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "props": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "appElement": [MockFunction],
                        "getPreviewer": [MockFunction],
                        "metadata": Object {
                          "global": Object {
                            "boxSkillsCards": Object {
                              "cards": Array [
                                Object {
                                  "entries": Array [
                                    Object {
                                      "title": "foo",
                                    },
                                  ],
                                },
                                Object {
                                  "entries": Array [
                                    Object {
                                      "title": "bar",
                                    },
                                  ],
                                },
                              ],
                            },
                          },
                        },
                        "onInteraction": [MockFunction],
                        "rootElement": [MockFunction],
                      },
                    },
                    "refs": Object {},
                    "state": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "appElement": [MockFunction],
                        "getPreviewer": [MockFunction],
                        "metadata": Object {
                          "global": Object {
                            "boxSkillsCards": Object {
                              "cards": Array [
                                Object {
                                  "entries": Array [
                                    Object {
                                      "title": "foo",
                                    },
                                  ],
                                },
                                Object {
                                  "entries": Array [
                                    Object {
                                      "title": "bar",
                                    },
                                  ],
                                },
                              ],
                            },
                          },
                        },
                        "onInteraction": [MockFunction],
                        "rootElement": [MockFunction],
                      },
                    },
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 2,
                  "type": [Function],
                  "updateQueue": null,
                },
                "_debugSource": null,
                "alternate": null,
                "child": [Circular],
                "effectTag": 1,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "appElement": [MockFunction],
                  "getPreviewer": [MockFunction],
                  "metadata": Object {
                    "global": Object {
                      "boxSkillsCards": Object {
                        "cards": Array [
                          Object {
                            "entries": Array [
                              Object {
                                "title": "foo",
                              },
                            ],
                          },
                          Object {
                            "entries": Array [
                              Object {
                                "title": "bar",
                              },
                            ],
                          },
                        ],
                      },
                    },
                  },
                  "onInteraction": [MockFunction],
                  "rootElement": [MockFunction],
                },
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": FiberNode {
                  "_debugID": 3,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": null,
                  "child": [Circular],
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "appElement": [MockFunction],
                      "getPreviewer": [MockFunction],
                      "metadata": Object {
                        "global": Object {
                          "boxSkillsCards": Object {
                            "cards": Array [
                              Object {
                                "entries": Array [
                                  Object {
                                    "title": "foo",
                                  },
                                ],
                              },
                              Object {
                                "entries": Array [
                                  Object {
                                    "title": "bar",
                                  },
                                ],
                              },
                            ],
                          },
                        },
                      },
                      "onInteraction": [MockFunction],
                      "rootElement": [MockFunction],
                    },
                  },
                  "memoizedState": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "appElement": [MockFunction],
                      "getPreviewer": [MockFunction],
                      "metadata": Object {
                        "global": Object {
                          "boxSkillsCards": Object {
                            "cards": Array [
                              Object {
                                "entries": Array [
                                  Object {
                                    "title": "foo",
                                  },
                                ],
                              },
                              Object {
                                "entries": Array [
                                  Object {
                                    "title": "bar",
                                  },
                                ],
                              },
                            ],
                          },
                        },
                      },
                      "onInteraction": [MockFunction],
                      "rootElement": [MockFunction],
                    },
                  },
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 1,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": FiberNode {
                      "_debugID": 1,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": [Circular],
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 1,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": null,
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div
                            class="bcs-section bcs-section-open"
                          >
                            <button
                              class="btn-plain bcs-section-title"
                              type="button"
                            >
                              <div />
                            </button>
                            <div
                              class="bcs-section-content"
                            />
                          </div>
                          <div
                            class="bcs-section bcs-section-open"
                          >
                            <button
                              class="btn-plain bcs-section-title"
                              type="button"
                            >
                              <div />
                            </button>
                            <div
                              class="bcs-section-content"
                            />
                          </div>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "finishedWork": null,
                        "hydrate": false,
                        "isReadyForCommit": false,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingContext": null,
                        "remainingExpirationTime": 0,
                      },
                      "tag": 3,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": null,
                        "callbackList": null,
                        "expirationTime": 1,
                        "first": Object {
                          "callback": null,
                          "expirationTime": 1,
                          "isForced": false,
                          "isReplace": false,
                          "next": null,
                          "nextCallback": null,
                          "partialState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                Object {
                                  "appElement": [MockFunction],
                                  "getPreviewer": [MockFunction],
                                  "metadata": Object {
                                    "global": Object {
                                      "boxSkillsCards": Object {
                                        "cards": Array [
                                          Object {
                                            "entries": Array [
                                              Object {
                                                "title": "foo",
                                              },
                                            ],
                                          },
                                          Object {
                                            "entries": Array [
                                              Object {
                                                "title": "bar",
                                              },
                                            ],
                                          },
                                        ],
                                      },
                                    },
                                  },
                                  "onInteraction": [MockFunction],
                                  "rootElement": [MockFunction],
                                }
                              }
                            />,
                          },
                        },
                        "hasForceUpdate": false,
                        "isInitialized": false,
                        "isProcessing": false,
                        "last": Object {
                          "callback": null,
                          "expirationTime": 1,
                          "isForced": false,
                          "isReplace": false,
                          "next": null,
                          "nextCallback": null,
                          "partialState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                Object {
                                  "appElement": [MockFunction],
                                  "getPreviewer": [MockFunction],
                                  "metadata": Object {
                                    "global": Object {
                                      "boxSkillsCards": Object {
                                        "cards": Array [
                                          Object {
                                            "entries": Array [
                                              Object {
                                                "title": "foo",
                                              },
                                            ],
                                          },
                                          Object {
                                            "entries": Array [
                                              Object {
                                                "title": "bar",
                                              },
                                            ],
                                          },
                                        ],
                                      },
                                    },
                                  },
                                  "onInteraction": [MockFunction],
                                  "rootElement": [MockFunction],
                                }
                              }
                            />,
                          },
                        },
                      },
                    },
                    "child": [Circular],
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": null,
                    "memoizedState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "appElement": [MockFunction],
                            "getPreviewer": [MockFunction],
                            "metadata": Object {
                              "global": Object {
                                "boxSkillsCards": Object {
                                  "cards": Array [
                                    Object {
                                      "entries": Array [
                                        Object {
                                          "title": "foo",
                                        },
                                      ],
                                    },
                                    Object {
                                      "entries": Array [
                                        Object {
                                          "title": "bar",
                                        },
                                      ],
                                    },
                                  ],
                                },
                              },
                            },
                            "onInteraction": [MockFunction],
                            "rootElement": [MockFunction],
                          }
                        }
                      />,
                    },
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <div
                          class="bcs-section bcs-section-open"
                        >
                          <button
                            class="btn-plain bcs-section-title"
                            type="button"
                          >
                            <div />
                          </button>
                          <div
                            class="bcs-section-content"
                          />
                        </div>
                        <div
                          class="bcs-section bcs-section-open"
                        >
                          <button
                            class="btn-plain bcs-section-title"
                            type="button"
                          >
                            <div />
                          </button>
                          <div
                            class="bcs-section-content"
                          />
                        </div>
                      </div>,
                      "context": Object {},
                      "current": [Circular],
                      "finishedWork": null,
                      "hydrate": false,
                      "isReadyForCommit": false,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingContext": null,
                      "remainingExpirationTime": 0,
                    },
                    "tag": 3,
                    "type": null,
                    "updateQueue": null,
                  },
                  "sibling": null,
                  "stateNode": WrapperComponent {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "props": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "appElement": [MockFunction],
                        "getPreviewer": [MockFunction],
                        "metadata": Object {
                          "global": Object {
                            "boxSkillsCards": Object {
                              "cards": Array [
                                Object {
                                  "entries": Array [
                                    Object {
                                      "title": "foo",
                                    },
                                  ],
                                },
                                Object {
                                  "entries": Array [
                                    Object {
                                      "title": "bar",
                                    },
                                  ],
                                },
                              ],
                            },
                          },
                        },
                        "onInteraction": [MockFunction],
                        "rootElement": [MockFunction],
                      },
                    },
                    "refs": Object {},
                    "state": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "appElement": [MockFunction],
                        "getPreviewer": [MockFunction],
                        "metadata": Object {
                          "global": Object {
                            "boxSkillsCards": Object {
                              "cards": Array [
                                Object {
                                  "entries": Array [
                                    Object {
                                      "title": "foo",
                                    },
                                  ],
                                },
                                Object {
                                  "entries": Array [
                                    Object {
                                      "title": "bar",
                                    },
                                  ],
                                },
                              ],
                            },
                          },
                        },
                        "onInteraction": [MockFunction],
                        "rootElement": [MockFunction],
                      },
                    },
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 2,
                  "type": [Function],
                  "updateQueue": null,
                },
                "sibling": null,
                "stateNode": null,
                "tag": 1,
                "type": [Function],
                "updateQueue": null,
              },
              "sibling": null,
              "stateNode": SidebarSection {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "children": <Unknown
                    appElement={[MockFunction]}
                    getPreviewer={[MockFunction]}
                    maskError={undefined}
                    onInteraction={[MockFunction]}
                    rootElement={[MockFunction]}
                    skill={
                      Object {
                        "entries": Array [
                          Object {
                            "title": "bar",
                          },
                        ],
                      }
                    }
                  />,
                  "className": "",
                  "isOpen": true,
                  "title": <FormattedMessage />,
                },
                "refs": Object {},
                "state": Object {
                  "isOpen": true,
                },
                "toggleVisibility": [Function],
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 2,
              "type": [Function],
              "updateQueue": null,
            },
            "stateNode": [Circular],
            "tag": 2,
            "type": [Function],
            "updateQueue": null,
          },
          "_reactInternalInstance": Object {},
          "context": Object {},
          "props": Object {
            "children": <Unknown
              appElement={[MockFunction]}
              getPreviewer={[MockFunction]}
              maskError={undefined}
              onInteraction={[MockFunction]}
              rootElement={[MockFunction]}
              skill={
                Object {
                  "entries": Array [
                    Object {
                      "title": "foo",
                    },
                  ],
                }
              }
            />,
            "className": "",
            "isOpen": true,
            "title": <FormattedMessage />,
          },
          "refs": Object {},
          "state": Object {
            "isOpen": true,
          },
          "toggleVisibility": [Function],
          "updater": Object {
            "enqueueForceUpdate": [Function],
            "enqueueReplaceState": [Function],
            "enqueueSetState": [Function],
            "isMounted": [Function],
          },
        },
        "key": "0",
        "nodeType": "class",
        "props": Object {
          "children": <Unknown
            appElement={[MockFunction]}
            getPreviewer={[MockFunction]}
            maskError={undefined}
            onInteraction={[MockFunction]}
            rootElement={[MockFunction]}
            skill={
              Object {
                "entries": Array [
                  Object {
                    "title": "foo",
                  },
                ],
              }
            }
          />,
          "className": "",
          "isOpen": true,
          "title": <FormattedMessage />,
        },
        "ref": null,
        "rendered": Object {
          "instance": <div
            class="bcs-section bcs-section-open"
          >
            <button
              class="btn-plain bcs-section-title"
              type="button"
            >
              <div />
            </button>
            <div
              class="bcs-section-content"
            />
          </div>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <PlainButton
                className="bcs-section-title"
                onClick={[Function]}
                type="button"
              >
                <FormattedMessage />
              </PlainButton>,
              <div
                className="bcs-section-content"
              >
                <Unknown
                  appElement={[MockFunction]}
                  getPreviewer={[MockFunction]}
                  maskError={undefined}
                  onInteraction={[MockFunction]}
                  rootElement={[MockFunction]}
                  skill={
                    Object {
                      "entries": Array [
                        Object {
                          "title": "foo",
                        },
                      ],
                    }
                  }
                />
              </div>,
            ],
            "className": "bcs-section bcs-section-open",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <FormattedMessage />,
                "className": "bcs-section-title",
                "onClick": [Function],
                "type": "button",
              },
              "ref": null,
              "rendered": Object {
                "instance": <button
                  class="btn-plain bcs-section-title"
                  type="button"
                >
                  <div />
                </button>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <FormattedMessage />,
                  "className": "btn-plain bcs-section-title",
                  "onClick": [Function],
                  "type": "button",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {},
                    "ref": null,
                    "rendered": Object {
                      "instance": <div />,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {},
                      "ref": null,
                      "rendered": Array [
                        undefined,
                      ],
                      "type": "div",
                    },
                    "type": [Function],
                  },
                ],
                "type": "button",
              },
              "type": [Function],
            },
            Object {
              "instance": <div
                class="bcs-section-content"
              />,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Unknown
                  appElement={[MockFunction]}
                  getPreviewer={[MockFunction]}
                  maskError={undefined}
                  onInteraction={[MockFunction]}
                  rootElement={[MockFunction]}
                  skill={
                    Object {
                      "entries": Array [
                        Object {
                          "title": "foo",
                        },
                      ],
                    }
                  }
                />,
                "className": "bcs-section-content",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "appElement": [MockFunction],
                    "getPreviewer": [MockFunction],
                    "maskError": undefined,
                    "onInteraction": [MockFunction],
                    "rootElement": [MockFunction],
                    "skill": Object {
                      "entries": Array [
                        Object {
                          "title": "foo",
                        },
                      ],
                    },
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "appElement": [MockFunction],
                      "getPreviewer": [MockFunction],
                      "onInteraction": [MockFunction],
                      "rootElement": [MockFunction],
                      "skill": Object {
                        "entries": Array [
                          Object {
                            "title": "foo",
                          },
                        ],
                      },
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
        "type": [Function],
      },
      Object {
        "instance": SidebarSection {
          "_reactInternalFiber": FiberNode {
            "_debugID": 6,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": FiberNode {
              "_debugID": 4,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": FiberNode {
                "_debugID": 3,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "alternate": null,
                "child": [Circular],
                "effectTag": 1,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "appElement": [MockFunction],
                    "getPreviewer": [MockFunction],
                    "metadata": Object {
                      "global": Object {
                        "boxSkillsCards": Object {
                          "cards": Array [
                            Object {
                              "entries": Array [
                                Object {
                                  "title": "foo",
                                },
                              ],
                            },
                            Object {
                              "entries": Array [
                                Object {
                                  "title": "bar",
                                },
                              ],
                            },
                          ],
                        },
                      },
                    },
                    "onInteraction": [MockFunction],
                    "rootElement": [MockFunction],
                  },
                },
                "memoizedState": Object {
                  "context": null,
                  "mount": true,
                  "props": Object {
                    "appElement": [MockFunction],
                    "getPreviewer": [MockFunction],
                    "metadata": Object {
                      "global": Object {
                        "boxSkillsCards": Object {
                          "cards": Array [
                            Object {
                              "entries": Array [
                                Object {
                                  "title": "foo",
                                },
                              ],
                            },
                            Object {
                              "entries": Array [
                                Object {
                                  "title": "bar",
                                },
                              ],
                            },
                          ],
                        },
                      },
                    },
                    "onInteraction": [MockFunction],
                    "rootElement": [MockFunction],
                  },
                },
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": FiberNode {
                  "_debugID": 1,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": FiberNode {
                    "_debugID": 1,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": [Circular],
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 1,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": null,
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <div
                          class="bcs-section bcs-section-open"
                        >
                          <button
                            class="btn-plain bcs-section-title"
                            type="button"
                          >
                            <div />
                          </button>
                          <div
                            class="bcs-section-content"
                          />
                        </div>
                        <div
                          class="bcs-section bcs-section-open"
                        >
                          <button
                            class="btn-plain bcs-section-title"
                            type="button"
                          >
                            <div />
                          </button>
                          <div
                            class="bcs-section-content"
                          />
                        </div>
                      </div>,
                      "context": Object {},
                      "current": [Circular],
                      "finishedWork": null,
                      "hydrate": false,
                      "isReadyForCommit": false,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingContext": null,
                      "remainingExpirationTime": 0,
                    },
                    "tag": 3,
                    "type": null,
                    "updateQueue": Object {
                      "baseState": null,
                      "callbackList": null,
                      "expirationTime": 1,
                      "first": Object {
                        "callback": null,
                        "expirationTime": 1,
                        "isForced": false,
                        "isReplace": false,
                        "next": null,
                        "nextCallback": null,
                        "partialState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "appElement": [MockFunction],
                                "getPreviewer": [MockFunction],
                                "metadata": Object {
                                  "global": Object {
                                    "boxSkillsCards": Object {
                                      "cards": Array [
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "foo",
                                            },
                                          ],
                                        },
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "bar",
                                            },
                                          ],
                                        },
                                      ],
                                    },
                                  },
                                },
                                "onInteraction": [MockFunction],
                                "rootElement": [MockFunction],
                              }
                            }
                          />,
                        },
                      },
                      "hasForceUpdate": false,
                      "isInitialized": false,
                      "isProcessing": false,
                      "last": Object {
                        "callback": null,
                        "expirationTime": 1,
                        "isForced": false,
                        "isReplace": false,
                        "next": null,
                        "nextCallback": null,
                        "partialState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "appElement": [MockFunction],
                                "getPreviewer": [MockFunction],
                                "metadata": Object {
                                  "global": Object {
                                    "boxSkillsCards": Object {
                                      "cards": Array [
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "foo",
                                            },
                                          ],
                                        },
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "bar",
                                            },
                                          ],
                                        },
                                      ],
                                    },
                                  },
                                },
                                "onInteraction": [MockFunction],
                                "rootElement": [MockFunction],
                              }
                            }
                          />,
                        },
                      },
                    },
                  },
                  "child": [Circular],
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": null,
                  "memoizedState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "appElement": [MockFunction],
                          "getPreviewer": [MockFunction],
                          "metadata": Object {
                            "global": Object {
                              "boxSkillsCards": Object {
                                "cards": Array [
                                  Object {
                                    "entries": Array [
                                      Object {
                                        "title": "foo",
                                      },
                                    ],
                                  },
                                  Object {
                                    "entries": Array [
                                      Object {
                                        "title": "bar",
                                      },
                                    ],
                                  },
                                ],
                              },
                            },
                          },
                          "onInteraction": [MockFunction],
                          "rootElement": [MockFunction],
                        }
                      }
                    />,
                  },
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div>
                      <div
                        class="bcs-section bcs-section-open"
                      >
                        <button
                          class="btn-plain bcs-section-title"
                          type="button"
                        >
                          <div />
                        </button>
                        <div
                          class="bcs-section-content"
                        />
                      </div>
                      <div
                        class="bcs-section bcs-section-open"
                      >
                        <button
                          class="btn-plain bcs-section-title"
                          type="button"
                        >
                          <div />
                        </button>
                        <div
                          class="bcs-section-content"
                        />
                      </div>
                    </div>,
                    "context": Object {},
                    "current": [Circular],
                    "finishedWork": null,
                    "hydrate": false,
                    "isReadyForCommit": false,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingContext": null,
                    "remainingExpirationTime": 0,
                  },
                  "tag": 3,
                  "type": null,
                  "updateQueue": null,
                },
                "sibling": null,
                "stateNode": WrapperComponent {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "appElement": [MockFunction],
                      "getPreviewer": [MockFunction],
                      "metadata": Object {
                        "global": Object {
                          "boxSkillsCards": Object {
                            "cards": Array [
                              Object {
                                "entries": Array [
                                  Object {
                                    "title": "foo",
                                  },
                                ],
                              },
                              Object {
                                "entries": Array [
                                  Object {
                                    "title": "bar",
                                  },
                                ],
                              },
                            ],
                          },
                        },
                      },
                      "onInteraction": [MockFunction],
                      "rootElement": [MockFunction],
                    },
                  },
                  "refs": Object {},
                  "state": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "appElement": [MockFunction],
                      "getPreviewer": [MockFunction],
                      "metadata": Object {
                        "global": Object {
                          "boxSkillsCards": Object {
                            "cards": Array [
                              Object {
                                "entries": Array [
                                  Object {
                                    "title": "foo",
                                  },
                                ],
                              },
                              Object {
                                "entries": Array [
                                  Object {
                                    "title": "bar",
                                  },
                                ],
                              },
                            ],
                          },
                        },
                      },
                      "onInteraction": [MockFunction],
                      "rootElement": [MockFunction],
                    },
                  },
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 2,
                "type": [Function],
                "updateQueue": null,
              },
              "_debugSource": null,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 5,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 7,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 8,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 10,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 11,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 12,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": null,
                          "alternate": null,
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {},
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": [Circular],
                          "sibling": null,
                          "stateNode": <div />,
                          "tag": 5,
                          "type": "div",
                          "updateQueue": null,
                        },
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {},
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": null,
                        "tag": 1,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": <FormattedMessage />,
                        "className": "btn-plain bcs-section-title",
                        "onClick": [Function],
                        "type": "button",
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": <button
                        class="btn-plain bcs-section-title"
                        type="button"
                      >
                        <div />
                      </button>,
                      "tag": 5,
                      "type": "button",
                      "updateQueue": null,
                    },
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": <FormattedMessage />,
                      "className": "bcs-section-title",
                      "onClick": [Function],
                      "type": "button",
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": [Circular],
                    "sibling": FiberNode {
                      "_debugID": 9,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 13,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 14,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": null,
                          "alternate": null,
                          "child": null,
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "appElement": [MockFunction],
                            "getPreviewer": [MockFunction],
                            "onInteraction": [MockFunction],
                            "rootElement": [MockFunction],
                            "skill": Object {
                              "entries": Array [
                                Object {
                                  "title": "foo",
                                },
                              ],
                            },
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": [Circular],
                          "sibling": null,
                          "stateNode": null,
                          "tag": 1,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "appElement": [MockFunction],
                          "getPreviewer": [MockFunction],
                          "maskError": undefined,
                          "onInteraction": [MockFunction],
                          "rootElement": [MockFunction],
                          "skill": Object {
                            "entries": Array [
                              Object {
                                "title": "foo",
                              },
                            ],
                          },
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": null,
                        "tag": 1,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 1,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": <Unknown
                          appElement={[MockFunction]}
                          getPreviewer={[MockFunction]}
                          maskError={undefined}
                          onInteraction={[MockFunction]}
                          rootElement={[MockFunction]}
                          skill={
                            Object {
                              "entries": Array [
                                Object {
                                  "title": "foo",
                                },
                              ],
                            }
                          }
                        />,
                        "className": "bcs-section-content",
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": <div
                        class="bcs-section-content"
                      />,
                      "tag": 5,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "stateNode": null,
                    "tag": 1,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <PlainButton
                        className="bcs-section-title"
                        onClick={[Function]}
                        type="button"
                      >
                        <FormattedMessage />
                      </PlainButton>,
                      <div
                        className="bcs-section-content"
                      >
                        <Unknown
                          appElement={[MockFunction]}
                          getPreviewer={[MockFunction]}
                          maskError={undefined}
                          onInteraction={[MockFunction]}
                          rootElement={[MockFunction]}
                          skill={
                            Object {
                              "entries": Array [
                                Object {
                                  "title": "foo",
                                },
                              ],
                            }
                          }
                        />
                      </div>,
                    ],
                    "className": "bcs-section bcs-section-open",
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": [Circular],
                  "sibling": null,
                  "stateNode": <div
                    class="bcs-section bcs-section-open"
                  >
                    <button
                      class="btn-plain bcs-section-title"
                      type="button"
                    >
                      <div />
                    </button>
                    <div
                      class="bcs-section-content"
                    />
                  </div>,
                  "tag": 5,
                  "type": "div",
                  "updateQueue": null,
                },
                "effectTag": 1,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "internalContextTag": 0,
                "key": "0",
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": <Unknown
                    appElement={[MockFunction]}
                    getPreviewer={[MockFunction]}
                    maskError={undefined}
                    onInteraction={[MockFunction]}
                    rootElement={[MockFunction]}
                    skill={
                      Object {
                        "entries": Array [
                          Object {
                            "title": "foo",
                          },
                        ],
                      }
                    }
                  />,
                  "className": "",
                  "isOpen": true,
                  "title": <FormattedMessage />,
                },
                "memoizedState": Object {
                  "isOpen": true,
                },
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": [Circular],
                "sibling": [Circular],
                "stateNode": SidebarSection {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "children": <Unknown
                      appElement={[MockFunction]}
                      getPreviewer={[MockFunction]}
                      maskError={undefined}
                      onInteraction={[MockFunction]}
                      rootElement={[MockFunction]}
                      skill={
                        Object {
                          "entries": Array [
                            Object {
                              "title": "foo",
                            },
                          ],
                        }
                      }
                    />,
                    "className": "",
                    "isOpen": true,
                    "title": <FormattedMessage />,
                  },
                  "refs": Object {},
                  "state": Object {
                    "isOpen": true,
                  },
                  "toggleVisibility": [Function],
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 2,
                "type": [Function],
                "updateQueue": null,
              },
              "effectTag": 1,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "internalContextTag": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "appElement": [MockFunction],
                "getPreviewer": [MockFunction],
                "metadata": Object {
                  "global": Object {
                    "boxSkillsCards": Object {
                      "cards": Array [
                        Object {
                          "entries": Array [
                            Object {
                              "title": "foo",
                            },
                          ],
                        },
                        Object {
                          "entries": Array [
                            Object {
                              "title": "bar",
                            },
                          ],
                        },
                      ],
                    },
                  },
                },
                "onInteraction": [MockFunction],
                "rootElement": [MockFunction],
              },
              "memoizedState": null,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": FiberNode {
                "_debugID": 3,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "alternate": null,
                "child": [Circular],
                "effectTag": 1,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "appElement": [MockFunction],
                    "getPreviewer": [MockFunction],
                    "metadata": Object {
                      "global": Object {
                        "boxSkillsCards": Object {
                          "cards": Array [
                            Object {
                              "entries": Array [
                                Object {
                                  "title": "foo",
                                },
                              ],
                            },
                            Object {
                              "entries": Array [
                                Object {
                                  "title": "bar",
                                },
                              ],
                            },
                          ],
                        },
                      },
                    },
                    "onInteraction": [MockFunction],
                    "rootElement": [MockFunction],
                  },
                },
                "memoizedState": Object {
                  "context": null,
                  "mount": true,
                  "props": Object {
                    "appElement": [MockFunction],
                    "getPreviewer": [MockFunction],
                    "metadata": Object {
                      "global": Object {
                        "boxSkillsCards": Object {
                          "cards": Array [
                            Object {
                              "entries": Array [
                                Object {
                                  "title": "foo",
                                },
                              ],
                            },
                            Object {
                              "entries": Array [
                                Object {
                                  "title": "bar",
                                },
                              ],
                            },
                          ],
                        },
                      },
                    },
                    "onInteraction": [MockFunction],
                    "rootElement": [MockFunction],
                  },
                },
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": FiberNode {
                  "_debugID": 1,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": FiberNode {
                    "_debugID": 1,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": [Circular],
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 1,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": null,
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <div
                          class="bcs-section bcs-section-open"
                        >
                          <button
                            class="btn-plain bcs-section-title"
                            type="button"
                          >
                            <div />
                          </button>
                          <div
                            class="bcs-section-content"
                          />
                        </div>
                        <div
                          class="bcs-section bcs-section-open"
                        >
                          <button
                            class="btn-plain bcs-section-title"
                            type="button"
                          >
                            <div />
                          </button>
                          <div
                            class="bcs-section-content"
                          />
                        </div>
                      </div>,
                      "context": Object {},
                      "current": [Circular],
                      "finishedWork": null,
                      "hydrate": false,
                      "isReadyForCommit": false,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingContext": null,
                      "remainingExpirationTime": 0,
                    },
                    "tag": 3,
                    "type": null,
                    "updateQueue": Object {
                      "baseState": null,
                      "callbackList": null,
                      "expirationTime": 1,
                      "first": Object {
                        "callback": null,
                        "expirationTime": 1,
                        "isForced": false,
                        "isReplace": false,
                        "next": null,
                        "nextCallback": null,
                        "partialState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "appElement": [MockFunction],
                                "getPreviewer": [MockFunction],
                                "metadata": Object {
                                  "global": Object {
                                    "boxSkillsCards": Object {
                                      "cards": Array [
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "foo",
                                            },
                                          ],
                                        },
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "bar",
                                            },
                                          ],
                                        },
                                      ],
                                    },
                                  },
                                },
                                "onInteraction": [MockFunction],
                                "rootElement": [MockFunction],
                              }
                            }
                          />,
                        },
                      },
                      "hasForceUpdate": false,
                      "isInitialized": false,
                      "isProcessing": false,
                      "last": Object {
                        "callback": null,
                        "expirationTime": 1,
                        "isForced": false,
                        "isReplace": false,
                        "next": null,
                        "nextCallback": null,
                        "partialState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "appElement": [MockFunction],
                                "getPreviewer": [MockFunction],
                                "metadata": Object {
                                  "global": Object {
                                    "boxSkillsCards": Object {
                                      "cards": Array [
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "foo",
                                            },
                                          ],
                                        },
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "bar",
                                            },
                                          ],
                                        },
                                      ],
                                    },
                                  },
                                },
                                "onInteraction": [MockFunction],
                                "rootElement": [MockFunction],
                              }
                            }
                          />,
                        },
                      },
                    },
                  },
                  "child": [Circular],
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": null,
                  "memoizedState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "appElement": [MockFunction],
                          "getPreviewer": [MockFunction],
                          "metadata": Object {
                            "global": Object {
                              "boxSkillsCards": Object {
                                "cards": Array [
                                  Object {
                                    "entries": Array [
                                      Object {
                                        "title": "foo",
                                      },
                                    ],
                                  },
                                  Object {
                                    "entries": Array [
                                      Object {
                                        "title": "bar",
                                      },
                                    ],
                                  },
                                ],
                              },
                            },
                          },
                          "onInteraction": [MockFunction],
                          "rootElement": [MockFunction],
                        }
                      }
                    />,
                  },
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div>
                      <div
                        class="bcs-section bcs-section-open"
                      >
                        <button
                          class="btn-plain bcs-section-title"
                          type="button"
                        >
                          <div />
                        </button>
                        <div
                          class="bcs-section-content"
                        />
                      </div>
                      <div
                        class="bcs-section bcs-section-open"
                      >
                        <button
                          class="btn-plain bcs-section-title"
                          type="button"
                        >
                          <div />
                        </button>
                        <div
                          class="bcs-section-content"
                        />
                      </div>
                    </div>,
                    "context": Object {},
                    "current": [Circular],
                    "finishedWork": null,
                    "hydrate": false,
                    "isReadyForCommit": false,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingContext": null,
                    "remainingExpirationTime": 0,
                  },
                  "tag": 3,
                  "type": null,
                  "updateQueue": null,
                },
                "sibling": null,
                "stateNode": WrapperComponent {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "appElement": [MockFunction],
                      "getPreviewer": [MockFunction],
                      "metadata": Object {
                        "global": Object {
                          "boxSkillsCards": Object {
                            "cards": Array [
                              Object {
                                "entries": Array [
                                  Object {
                                    "title": "foo",
                                  },
                                ],
                              },
                              Object {
                                "entries": Array [
                                  Object {
                                    "title": "bar",
                                  },
                                ],
                              },
                            ],
                          },
                        },
                      },
                      "onInteraction": [MockFunction],
                      "rootElement": [MockFunction],
                    },
                  },
                  "refs": Object {},
                  "state": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "appElement": [MockFunction],
                      "getPreviewer": [MockFunction],
                      "metadata": Object {
                        "global": Object {
                          "boxSkillsCards": Object {
                            "cards": Array [
                              Object {
                                "entries": Array [
                                  Object {
                                    "title": "foo",
                                  },
                                ],
                              },
                              Object {
                                "entries": Array [
                                  Object {
                                    "title": "bar",
                                  },
                                ],
                              },
                            ],
                          },
                        },
                      },
                      "onInteraction": [MockFunction],
                      "rootElement": [MockFunction],
                    },
                  },
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 2,
                "type": [Function],
                "updateQueue": null,
              },
              "sibling": null,
              "stateNode": null,
              "tag": 1,
              "type": [Function],
              "updateQueue": null,
            },
            "_debugSource": null,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 15,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 16,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 18,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 19,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": FiberNode {
                      "_debugID": 4,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": FiberNode {
                        "_debugID": 3,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "appElement": [MockFunction],
                            "getPreviewer": [MockFunction],
                            "metadata": Object {
                              "global": Object {
                                "boxSkillsCards": Object {
                                  "cards": Array [
                                    Object {
                                      "entries": Array [
                                        Object {
                                          "title": "foo",
                                        },
                                      ],
                                    },
                                    Object {
                                      "entries": Array [
                                        Object {
                                          "title": "bar",
                                        },
                                      ],
                                    },
                                  ],
                                },
                              },
                            },
                            "onInteraction": [MockFunction],
                            "rootElement": [MockFunction],
                          },
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "appElement": [MockFunction],
                            "getPreviewer": [MockFunction],
                            "metadata": Object {
                              "global": Object {
                                "boxSkillsCards": Object {
                                  "cards": Array [
                                    Object {
                                      "entries": Array [
                                        Object {
                                          "title": "foo",
                                        },
                                      ],
                                    },
                                    Object {
                                      "entries": Array [
                                        Object {
                                          "title": "bar",
                                        },
                                      ],
                                    },
                                  ],
                                },
                              },
                            },
                            "onInteraction": [MockFunction],
                            "rootElement": [MockFunction],
                          },
                        },
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                  class="bcs-section bcs-section-open"
                                >
                                  <button
                                    class="btn-plain bcs-section-title"
                                    type="button"
                                  >
                                    <div />
                                  </button>
                                  <div
                                    class="bcs-section-content"
                                  />
                                </div>
                                <div
                                  class="bcs-section bcs-section-open"
                                >
                                  <button
                                    class="btn-plain bcs-section-title"
                                    type="button"
                                  >
                                    <div />
                                  </button>
                                  <div
                                    class="bcs-section-content"
                                  />
                                </div>
                              </div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "hydrate": false,
                              "isReadyForCommit": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "callbackList": null,
                              "expirationTime": 1,
                              "first": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "nextCallback": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "appElement": [MockFunction],
                                        "getPreviewer": [MockFunction],
                                        "metadata": Object {
                                          "global": Object {
                                            "boxSkillsCards": Object {
                                              "cards": Array [
                                                Object {
                                                  "entries": Array [
                                                    Object {
                                                      "title": "foo",
                                                    },
                                                  ],
                                                },
                                                Object {
                                                  "entries": Array [
                                                    Object {
                                                      "title": "bar",
                                                    },
                                                  ],
                                                },
                                              ],
                                            },
                                          },
                                        },
                                        "onInteraction": [MockFunction],
                                        "rootElement": [MockFunction],
                                      }
                                    }
                                  />,
                                },
                              },
                              "hasForceUpdate": false,
                              "isInitialized": false,
                              "isProcessing": false,
                              "last": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "nextCallback": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "appElement": [MockFunction],
                                        "getPreviewer": [MockFunction],
                                        "metadata": Object {
                                          "global": Object {
                                            "boxSkillsCards": Object {
                                              "cards": Array [
                                                Object {
                                                  "entries": Array [
                                                    Object {
                                                      "title": "foo",
                                                    },
                                                  ],
                                                },
                                                Object {
                                                  "entries": Array [
                                                    Object {
                                                      "title": "bar",
                                                    },
                                                  ],
                                                },
                                              ],
                                            },
                                          },
                                        },
                                        "onInteraction": [MockFunction],
                                        "rootElement": [MockFunction],
                                      }
                                    }
                                  />,
                                },
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                Object {
                                  "appElement": [MockFunction],
                                  "getPreviewer": [MockFunction],
                                  "metadata": Object {
                                    "global": Object {
                                      "boxSkillsCards": Object {
                                        "cards": Array [
                                          Object {
                                            "entries": Array [
                                              Object {
                                                "title": "foo",
                                              },
                                            ],
                                          },
                                          Object {
                                            "entries": Array [
                                              Object {
                                                "title": "bar",
                                              },
                                            ],
                                          },
                                        ],
                                      },
                                    },
                                  },
                                  "onInteraction": [MockFunction],
                                  "rootElement": [MockFunction],
                                }
                              }
                            />,
                          },
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div
                                class="bcs-section bcs-section-open"
                              >
                                <button
                                  class="btn-plain bcs-section-title"
                                  type="button"
                                >
                                  <div />
                                </button>
                                <div
                                  class="bcs-section-content"
                                />
                              </div>
                              <div
                                class="bcs-section bcs-section-open"
                              >
                                <button
                                  class="btn-plain bcs-section-title"
                                  type="button"
                                >
                                  <div />
                                </button>
                                <div
                                  class="bcs-section-content"
                                />
                              </div>
                            </div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "hydrate": false,
                            "isReadyForCommit": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "appElement": [MockFunction],
                              "getPreviewer": [MockFunction],
                              "metadata": Object {
                                "global": Object {
                                  "boxSkillsCards": Object {
                                    "cards": Array [
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "foo",
                                          },
                                        ],
                                      },
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "bar",
                                          },
                                        ],
                                      },
                                    ],
                                  },
                                },
                              },
                              "onInteraction": [MockFunction],
                              "rootElement": [MockFunction],
                            },
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "appElement": [MockFunction],
                              "getPreviewer": [MockFunction],
                              "metadata": Object {
                                "global": Object {
                                  "boxSkillsCards": Object {
                                    "cards": Array [
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "foo",
                                          },
                                        ],
                                      },
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "bar",
                                          },
                                        ],
                                      },
                                    ],
                                  },
                                },
                              },
                              "onInteraction": [MockFunction],
                              "rootElement": [MockFunction],
                            },
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": null,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 5,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 7,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": null,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 8,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": null,
                            "alternate": null,
                            "child": FiberNode {
                              "_debugID": 10,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": null,
                              "alternate": null,
                              "child": FiberNode {
                                "_debugID": 11,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": null,
                                "alternate": null,
                                "child": FiberNode {
                                  "_debugID": 12,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": null,
                                  "alternate": null,
                                  "child": null,
                                  "effectTag": 0,
                                  "expirationTime": 0,
                                  "firstEffect": null,
                                  "index": 0,
                                  "internalContextTag": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": Object {},
                                  "memoizedState": null,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": [Circular],
                                  "sibling": null,
                                  "stateNode": <div />,
                                  "tag": 5,
                                  "type": "div",
                                  "updateQueue": null,
                                },
                                "effectTag": 1,
                                "expirationTime": 0,
                                "firstEffect": null,
                                "index": 0,
                                "internalContextTag": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {},
                                "memoizedState": null,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": [Circular],
                                "sibling": null,
                                "stateNode": null,
                                "tag": 1,
                                "type": [Function],
                                "updateQueue": null,
                              },
                              "effectTag": 0,
                              "expirationTime": 0,
                              "firstEffect": null,
                              "index": 0,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": <FormattedMessage />,
                                "className": "btn-plain bcs-section-title",
                                "onClick": [Function],
                                "type": "button",
                              },
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": [Circular],
                              "sibling": null,
                              "stateNode": <button
                                class="btn-plain bcs-section-title"
                                type="button"
                              >
                                <div />
                              </button>,
                              "tag": 5,
                              "type": "button",
                              "updateQueue": null,
                            },
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": <FormattedMessage />,
                              "className": "bcs-section-title",
                              "onClick": [Function],
                              "type": "button",
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": [Circular],
                            "sibling": FiberNode {
                              "_debugID": 9,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": null,
                              "alternate": null,
                              "child": FiberNode {
                                "_debugID": 13,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": null,
                                "alternate": null,
                                "child": FiberNode {
                                  "_debugID": 14,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": null,
                                  "alternate": null,
                                  "child": null,
                                  "effectTag": 1,
                                  "expirationTime": 0,
                                  "firstEffect": null,
                                  "index": 0,
                                  "internalContextTag": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "appElement": [MockFunction],
                                    "getPreviewer": [MockFunction],
                                    "onInteraction": [MockFunction],
                                    "rootElement": [MockFunction],
                                    "skill": Object {
                                      "entries": Array [
                                        Object {
                                          "title": "foo",
                                        },
                                      ],
                                    },
                                  },
                                  "memoizedState": null,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": [Circular],
                                  "sibling": null,
                                  "stateNode": null,
                                  "tag": 1,
                                  "type": [Function],
                                  "updateQueue": null,
                                },
                                "effectTag": 1,
                                "expirationTime": 0,
                                "firstEffect": null,
                                "index": 0,
                                "internalContextTag": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "appElement": [MockFunction],
                                  "getPreviewer": [MockFunction],
                                  "maskError": undefined,
                                  "onInteraction": [MockFunction],
                                  "rootElement": [MockFunction],
                                  "skill": Object {
                                    "entries": Array [
                                      Object {
                                        "title": "foo",
                                      },
                                    ],
                                  },
                                },
                                "memoizedState": null,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": [Circular],
                                "sibling": null,
                                "stateNode": null,
                                "tag": 1,
                                "type": [Function],
                                "updateQueue": null,
                              },
                              "effectTag": 0,
                              "expirationTime": 0,
                              "firstEffect": null,
                              "index": 1,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": <Unknown
                                  appElement={[MockFunction]}
                                  getPreviewer={[MockFunction]}
                                  maskError={undefined}
                                  onInteraction={[MockFunction]}
                                  rootElement={[MockFunction]}
                                  skill={
                                    Object {
                                      "entries": Array [
                                        Object {
                                          "title": "foo",
                                        },
                                      ],
                                    }
                                  }
                                />,
                                "className": "bcs-section-content",
                              },
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": [Circular],
                              "sibling": null,
                              "stateNode": <div
                                class="bcs-section-content"
                              />,
                              "tag": 5,
                              "type": "div",
                              "updateQueue": null,
                            },
                            "stateNode": null,
                            "tag": 1,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [
                              <PlainButton
                                className="bcs-section-title"
                                onClick={[Function]}
                                type="button"
                              >
                                <FormattedMessage />
                              </PlainButton>,
                              <div
                                className="bcs-section-content"
                              >
                                <Unknown
                                  appElement={[MockFunction]}
                                  getPreviewer={[MockFunction]}
                                  maskError={undefined}
                                  onInteraction={[MockFunction]}
                                  rootElement={[MockFunction]}
                                  skill={
                                    Object {
                                      "entries": Array [
                                        Object {
                                          "title": "foo",
                                        },
                                      ],
                                    }
                                  }
                                />
                              </div>,
                            ],
                            "className": "bcs-section bcs-section-open",
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": [Circular],
                          "sibling": null,
                          "stateNode": <div
                            class="bcs-section bcs-section-open"
                          >
                            <button
                              class="btn-plain bcs-section-title"
                              type="button"
                            >
                              <div />
                            </button>
                            <div
                              class="bcs-section-content"
                            />
                          </div>,
                          "tag": 5,
                          "type": "div",
                          "updateQueue": null,
                        },
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": "0",
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": <Unknown
                            appElement={[MockFunction]}
                            getPreviewer={[MockFunction]}
                            maskError={undefined}
                            onInteraction={[MockFunction]}
                            rootElement={[MockFunction]}
                            skill={
                              Object {
                                "entries": Array [
                                  Object {
                                    "title": "foo",
                                  },
                                ],
                              }
                            }
                          />,
                          "className": "",
                          "isOpen": true,
                          "title": <FormattedMessage />,
                        },
                        "memoizedState": Object {
                          "isOpen": true,
                        },
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": [Circular],
                        "sibling": [Circular],
                        "stateNode": SidebarSection {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "children": <Unknown
                              appElement={[MockFunction]}
                              getPreviewer={[MockFunction]}
                              maskError={undefined}
                              onInteraction={[MockFunction]}
                              rootElement={[MockFunction]}
                              skill={
                                Object {
                                  "entries": Array [
                                    Object {
                                      "title": "foo",
                                    },
                                  ],
                                }
                              }
                            />,
                            "className": "",
                            "isOpen": true,
                            "title": <FormattedMessage />,
                          },
                          "refs": Object {},
                          "state": Object {
                            "isOpen": true,
                          },
                          "toggleVisibility": [Function],
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "appElement": [MockFunction],
                        "getPreviewer": [MockFunction],
                        "metadata": Object {
                          "global": Object {
                            "boxSkillsCards": Object {
                              "cards": Array [
                                Object {
                                  "entries": Array [
                                    Object {
                                      "title": "foo",
                                    },
                                  ],
                                },
                                Object {
                                  "entries": Array [
                                    Object {
                                      "title": "bar",
                                    },
                                  ],
                                },
                              ],
                            },
                          },
                        },
                        "onInteraction": [MockFunction],
                        "rootElement": [MockFunction],
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 3,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "appElement": [MockFunction],
                            "getPreviewer": [MockFunction],
                            "metadata": Object {
                              "global": Object {
                                "boxSkillsCards": Object {
                                  "cards": Array [
                                    Object {
                                      "entries": Array [
                                        Object {
                                          "title": "foo",
                                        },
                                      ],
                                    },
                                    Object {
                                      "entries": Array [
                                        Object {
                                          "title": "bar",
                                        },
                                      ],
                                    },
                                  ],
                                },
                              },
                            },
                            "onInteraction": [MockFunction],
                            "rootElement": [MockFunction],
                          },
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "appElement": [MockFunction],
                            "getPreviewer": [MockFunction],
                            "metadata": Object {
                              "global": Object {
                                "boxSkillsCards": Object {
                                  "cards": Array [
                                    Object {
                                      "entries": Array [
                                        Object {
                                          "title": "foo",
                                        },
                                      ],
                                    },
                                    Object {
                                      "entries": Array [
                                        Object {
                                          "title": "bar",
                                        },
                                      ],
                                    },
                                  ],
                                },
                              },
                            },
                            "onInteraction": [MockFunction],
                            "rootElement": [MockFunction],
                          },
                        },
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                  class="bcs-section bcs-section-open"
                                >
                                  <button
                                    class="btn-plain bcs-section-title"
                                    type="button"
                                  >
                                    <div />
                                  </button>
                                  <div
                                    class="bcs-section-content"
                                  />
                                </div>
                                <div
                                  class="bcs-section bcs-section-open"
                                >
                                  <button
                                    class="btn-plain bcs-section-title"
                                    type="button"
                                  >
                                    <div />
                                  </button>
                                  <div
                                    class="bcs-section-content"
                                  />
                                </div>
                              </div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "hydrate": false,
                              "isReadyForCommit": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "callbackList": null,
                              "expirationTime": 1,
                              "first": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "nextCallback": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "appElement": [MockFunction],
                                        "getPreviewer": [MockFunction],
                                        "metadata": Object {
                                          "global": Object {
                                            "boxSkillsCards": Object {
                                              "cards": Array [
                                                Object {
                                                  "entries": Array [
                                                    Object {
                                                      "title": "foo",
                                                    },
                                                  ],
                                                },
                                                Object {
                                                  "entries": Array [
                                                    Object {
                                                      "title": "bar",
                                                    },
                                                  ],
                                                },
                                              ],
                                            },
                                          },
                                        },
                                        "onInteraction": [MockFunction],
                                        "rootElement": [MockFunction],
                                      }
                                    }
                                  />,
                                },
                              },
                              "hasForceUpdate": false,
                              "isInitialized": false,
                              "isProcessing": false,
                              "last": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "nextCallback": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "appElement": [MockFunction],
                                        "getPreviewer": [MockFunction],
                                        "metadata": Object {
                                          "global": Object {
                                            "boxSkillsCards": Object {
                                              "cards": Array [
                                                Object {
                                                  "entries": Array [
                                                    Object {
                                                      "title": "foo",
                                                    },
                                                  ],
                                                },
                                                Object {
                                                  "entries": Array [
                                                    Object {
                                                      "title": "bar",
                                                    },
                                                  ],
                                                },
                                              ],
                                            },
                                          },
                                        },
                                        "onInteraction": [MockFunction],
                                        "rootElement": [MockFunction],
                                      }
                                    }
                                  />,
                                },
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                Object {
                                  "appElement": [MockFunction],
                                  "getPreviewer": [MockFunction],
                                  "metadata": Object {
                                    "global": Object {
                                      "boxSkillsCards": Object {
                                        "cards": Array [
                                          Object {
                                            "entries": Array [
                                              Object {
                                                "title": "foo",
                                              },
                                            ],
                                          },
                                          Object {
                                            "entries": Array [
                                              Object {
                                                "title": "bar",
                                              },
                                            ],
                                          },
                                        ],
                                      },
                                    },
                                  },
                                  "onInteraction": [MockFunction],
                                  "rootElement": [MockFunction],
                                }
                              }
                            />,
                          },
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div
                                class="bcs-section bcs-section-open"
                              >
                                <button
                                  class="btn-plain bcs-section-title"
                                  type="button"
                                >
                                  <div />
                                </button>
                                <div
                                  class="bcs-section-content"
                                />
                              </div>
                              <div
                                class="bcs-section bcs-section-open"
                              >
                                <button
                                  class="btn-plain bcs-section-title"
                                  type="button"
                                >
                                  <div />
                                </button>
                                <div
                                  class="bcs-section-content"
                                />
                              </div>
                            </div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "hydrate": false,
                            "isReadyForCommit": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "appElement": [MockFunction],
                              "getPreviewer": [MockFunction],
                              "metadata": Object {
                                "global": Object {
                                  "boxSkillsCards": Object {
                                    "cards": Array [
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "foo",
                                          },
                                        ],
                                      },
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "bar",
                                          },
                                        ],
                                      },
                                    ],
                                  },
                                },
                              },
                              "onInteraction": [MockFunction],
                              "rootElement": [MockFunction],
                            },
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "appElement": [MockFunction],
                              "getPreviewer": [MockFunction],
                              "metadata": Object {
                                "global": Object {
                                  "boxSkillsCards": Object {
                                    "cards": Array [
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "foo",
                                          },
                                        ],
                                      },
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "bar",
                                          },
                                        ],
                                      },
                                    ],
                                  },
                                },
                              },
                              "onInteraction": [MockFunction],
                              "rootElement": [MockFunction],
                            },
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": null,
                      "tag": 1,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": null,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 20,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {},
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": <div />,
                      "tag": 5,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {},
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": null,
                    "tag": 1,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": <FormattedMessage />,
                    "className": "btn-plain bcs-section-title",
                    "onClick": [Function],
                    "type": "button",
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": [Circular],
                  "sibling": null,
                  "stateNode": <button
                    class="btn-plain bcs-section-title"
                    type="button"
                  >
                    <div />
                  </button>,
                  "tag": 5,
                  "type": "button",
                  "updateQueue": null,
                },
                "effectTag": 1,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": <FormattedMessage />,
                  "className": "bcs-section-title",
                  "onClick": [Function],
                  "type": "button",
                },
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": [Circular],
                "sibling": FiberNode {
                  "_debugID": 17,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 21,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": FiberNode {
                      "_debugID": 4,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": FiberNode {
                        "_debugID": 3,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "appElement": [MockFunction],
                            "getPreviewer": [MockFunction],
                            "metadata": Object {
                              "global": Object {
                                "boxSkillsCards": Object {
                                  "cards": Array [
                                    Object {
                                      "entries": Array [
                                        Object {
                                          "title": "foo",
                                        },
                                      ],
                                    },
                                    Object {
                                      "entries": Array [
                                        Object {
                                          "title": "bar",
                                        },
                                      ],
                                    },
                                  ],
                                },
                              },
                            },
                            "onInteraction": [MockFunction],
                            "rootElement": [MockFunction],
                          },
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "appElement": [MockFunction],
                            "getPreviewer": [MockFunction],
                            "metadata": Object {
                              "global": Object {
                                "boxSkillsCards": Object {
                                  "cards": Array [
                                    Object {
                                      "entries": Array [
                                        Object {
                                          "title": "foo",
                                        },
                                      ],
                                    },
                                    Object {
                                      "entries": Array [
                                        Object {
                                          "title": "bar",
                                        },
                                      ],
                                    },
                                  ],
                                },
                              },
                            },
                            "onInteraction": [MockFunction],
                            "rootElement": [MockFunction],
                          },
                        },
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                  class="bcs-section bcs-section-open"
                                >
                                  <button
                                    class="btn-plain bcs-section-title"
                                    type="button"
                                  >
                                    <div />
                                  </button>
                                  <div
                                    class="bcs-section-content"
                                  />
                                </div>
                                <div
                                  class="bcs-section bcs-section-open"
                                >
                                  <button
                                    class="btn-plain bcs-section-title"
                                    type="button"
                                  >
                                    <div />
                                  </button>
                                  <div
                                    class="bcs-section-content"
                                  />
                                </div>
                              </div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "hydrate": false,
                              "isReadyForCommit": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "callbackList": null,
                              "expirationTime": 1,
                              "first": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "nextCallback": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "appElement": [MockFunction],
                                        "getPreviewer": [MockFunction],
                                        "metadata": Object {
                                          "global": Object {
                                            "boxSkillsCards": Object {
                                              "cards": Array [
                                                Object {
                                                  "entries": Array [
                                                    Object {
                                                      "title": "foo",
                                                    },
                                                  ],
                                                },
                                                Object {
                                                  "entries": Array [
                                                    Object {
                                                      "title": "bar",
                                                    },
                                                  ],
                                                },
                                              ],
                                            },
                                          },
                                        },
                                        "onInteraction": [MockFunction],
                                        "rootElement": [MockFunction],
                                      }
                                    }
                                  />,
                                },
                              },
                              "hasForceUpdate": false,
                              "isInitialized": false,
                              "isProcessing": false,
                              "last": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "nextCallback": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "appElement": [MockFunction],
                                        "getPreviewer": [MockFunction],
                                        "metadata": Object {
                                          "global": Object {
                                            "boxSkillsCards": Object {
                                              "cards": Array [
                                                Object {
                                                  "entries": Array [
                                                    Object {
                                                      "title": "foo",
                                                    },
                                                  ],
                                                },
                                                Object {
                                                  "entries": Array [
                                                    Object {
                                                      "title": "bar",
                                                    },
                                                  ],
                                                },
                                              ],
                                            },
                                          },
                                        },
                                        "onInteraction": [MockFunction],
                                        "rootElement": [MockFunction],
                                      }
                                    }
                                  />,
                                },
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                Object {
                                  "appElement": [MockFunction],
                                  "getPreviewer": [MockFunction],
                                  "metadata": Object {
                                    "global": Object {
                                      "boxSkillsCards": Object {
                                        "cards": Array [
                                          Object {
                                            "entries": Array [
                                              Object {
                                                "title": "foo",
                                              },
                                            ],
                                          },
                                          Object {
                                            "entries": Array [
                                              Object {
                                                "title": "bar",
                                              },
                                            ],
                                          },
                                        ],
                                      },
                                    },
                                  },
                                  "onInteraction": [MockFunction],
                                  "rootElement": [MockFunction],
                                }
                              }
                            />,
                          },
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div
                                class="bcs-section bcs-section-open"
                              >
                                <button
                                  class="btn-plain bcs-section-title"
                                  type="button"
                                >
                                  <div />
                                </button>
                                <div
                                  class="bcs-section-content"
                                />
                              </div>
                              <div
                                class="bcs-section bcs-section-open"
                              >
                                <button
                                  class="btn-plain bcs-section-title"
                                  type="button"
                                >
                                  <div />
                                </button>
                                <div
                                  class="bcs-section-content"
                                />
                              </div>
                            </div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "hydrate": false,
                            "isReadyForCommit": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "appElement": [MockFunction],
                              "getPreviewer": [MockFunction],
                              "metadata": Object {
                                "global": Object {
                                  "boxSkillsCards": Object {
                                    "cards": Array [
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "foo",
                                          },
                                        ],
                                      },
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "bar",
                                          },
                                        ],
                                      },
                                    ],
                                  },
                                },
                              },
                              "onInteraction": [MockFunction],
                              "rootElement": [MockFunction],
                            },
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "appElement": [MockFunction],
                              "getPreviewer": [MockFunction],
                              "metadata": Object {
                                "global": Object {
                                  "boxSkillsCards": Object {
                                    "cards": Array [
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "foo",
                                          },
                                        ],
                                      },
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "bar",
                                          },
                                        ],
                                      },
                                    ],
                                  },
                                },
                              },
                              "onInteraction": [MockFunction],
                              "rootElement": [MockFunction],
                            },
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": null,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 5,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 7,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": null,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 8,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": null,
                            "alternate": null,
                            "child": FiberNode {
                              "_debugID": 10,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": null,
                              "alternate": null,
                              "child": FiberNode {
                                "_debugID": 11,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": null,
                                "alternate": null,
                                "child": FiberNode {
                                  "_debugID": 12,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": null,
                                  "alternate": null,
                                  "child": null,
                                  "effectTag": 0,
                                  "expirationTime": 0,
                                  "firstEffect": null,
                                  "index": 0,
                                  "internalContextTag": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": Object {},
                                  "memoizedState": null,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": [Circular],
                                  "sibling": null,
                                  "stateNode": <div />,
                                  "tag": 5,
                                  "type": "div",
                                  "updateQueue": null,
                                },
                                "effectTag": 1,
                                "expirationTime": 0,
                                "firstEffect": null,
                                "index": 0,
                                "internalContextTag": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {},
                                "memoizedState": null,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": [Circular],
                                "sibling": null,
                                "stateNode": null,
                                "tag": 1,
                                "type": [Function],
                                "updateQueue": null,
                              },
                              "effectTag": 0,
                              "expirationTime": 0,
                              "firstEffect": null,
                              "index": 0,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": <FormattedMessage />,
                                "className": "btn-plain bcs-section-title",
                                "onClick": [Function],
                                "type": "button",
                              },
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": [Circular],
                              "sibling": null,
                              "stateNode": <button
                                class="btn-plain bcs-section-title"
                                type="button"
                              >
                                <div />
                              </button>,
                              "tag": 5,
                              "type": "button",
                              "updateQueue": null,
                            },
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": <FormattedMessage />,
                              "className": "bcs-section-title",
                              "onClick": [Function],
                              "type": "button",
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": [Circular],
                            "sibling": FiberNode {
                              "_debugID": 9,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": null,
                              "alternate": null,
                              "child": FiberNode {
                                "_debugID": 13,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": null,
                                "alternate": null,
                                "child": FiberNode {
                                  "_debugID": 14,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": null,
                                  "alternate": null,
                                  "child": null,
                                  "effectTag": 1,
                                  "expirationTime": 0,
                                  "firstEffect": null,
                                  "index": 0,
                                  "internalContextTag": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "appElement": [MockFunction],
                                    "getPreviewer": [MockFunction],
                                    "onInteraction": [MockFunction],
                                    "rootElement": [MockFunction],
                                    "skill": Object {
                                      "entries": Array [
                                        Object {
                                          "title": "foo",
                                        },
                                      ],
                                    },
                                  },
                                  "memoizedState": null,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": [Circular],
                                  "sibling": null,
                                  "stateNode": null,
                                  "tag": 1,
                                  "type": [Function],
                                  "updateQueue": null,
                                },
                                "effectTag": 1,
                                "expirationTime": 0,
                                "firstEffect": null,
                                "index": 0,
                                "internalContextTag": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "appElement": [MockFunction],
                                  "getPreviewer": [MockFunction],
                                  "maskError": undefined,
                                  "onInteraction": [MockFunction],
                                  "rootElement": [MockFunction],
                                  "skill": Object {
                                    "entries": Array [
                                      Object {
                                        "title": "foo",
                                      },
                                    ],
                                  },
                                },
                                "memoizedState": null,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": [Circular],
                                "sibling": null,
                                "stateNode": null,
                                "tag": 1,
                                "type": [Function],
                                "updateQueue": null,
                              },
                              "effectTag": 0,
                              "expirationTime": 0,
                              "firstEffect": null,
                              "index": 1,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": <Unknown
                                  appElement={[MockFunction]}
                                  getPreviewer={[MockFunction]}
                                  maskError={undefined}
                                  onInteraction={[MockFunction]}
                                  rootElement={[MockFunction]}
                                  skill={
                                    Object {
                                      "entries": Array [
                                        Object {
                                          "title": "foo",
                                        },
                                      ],
                                    }
                                  }
                                />,
                                "className": "bcs-section-content",
                              },
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": [Circular],
                              "sibling": null,
                              "stateNode": <div
                                class="bcs-section-content"
                              />,
                              "tag": 5,
                              "type": "div",
                              "updateQueue": null,
                            },
                            "stateNode": null,
                            "tag": 1,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [
                              <PlainButton
                                className="bcs-section-title"
                                onClick={[Function]}
                                type="button"
                              >
                                <FormattedMessage />
                              </PlainButton>,
                              <div
                                className="bcs-section-content"
                              >
                                <Unknown
                                  appElement={[MockFunction]}
                                  getPreviewer={[MockFunction]}
                                  maskError={undefined}
                                  onInteraction={[MockFunction]}
                                  rootElement={[MockFunction]}
                                  skill={
                                    Object {
                                      "entries": Array [
                                        Object {
                                          "title": "foo",
                                        },
                                      ],
                                    }
                                  }
                                />
                              </div>,
                            ],
                            "className": "bcs-section bcs-section-open",
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": [Circular],
                          "sibling": null,
                          "stateNode": <div
                            class="bcs-section bcs-section-open"
                          >
                            <button
                              class="btn-plain bcs-section-title"
                              type="button"
                            >
                              <div />
                            </button>
                            <div
                              class="bcs-section-content"
                            />
                          </div>,
                          "tag": 5,
                          "type": "div",
                          "updateQueue": null,
                        },
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": "0",
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": <Unknown
                            appElement={[MockFunction]}
                            getPreviewer={[MockFunction]}
                            maskError={undefined}
                            onInteraction={[MockFunction]}
                            rootElement={[MockFunction]}
                            skill={
                              Object {
                                "entries": Array [
                                  Object {
                                    "title": "foo",
                                  },
                                ],
                              }
                            }
                          />,
                          "className": "",
                          "isOpen": true,
                          "title": <FormattedMessage />,
                        },
                        "memoizedState": Object {
                          "isOpen": true,
                        },
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": [Circular],
                        "sibling": [Circular],
                        "stateNode": SidebarSection {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "children": <Unknown
                              appElement={[MockFunction]}
                              getPreviewer={[MockFunction]}
                              maskError={undefined}
                              onInteraction={[MockFunction]}
                              rootElement={[MockFunction]}
                              skill={
                                Object {
                                  "entries": Array [
                                    Object {
                                      "title": "foo",
                                    },
                                  ],
                                }
                              }
                            />,
                            "className": "",
                            "isOpen": true,
                            "title": <FormattedMessage />,
                          },
                          "refs": Object {},
                          "state": Object {
                            "isOpen": true,
                          },
                          "toggleVisibility": [Function],
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "appElement": [MockFunction],
                        "getPreviewer": [MockFunction],
                        "metadata": Object {
                          "global": Object {
                            "boxSkillsCards": Object {
                              "cards": Array [
                                Object {
                                  "entries": Array [
                                    Object {
                                      "title": "foo",
                                    },
                                  ],
                                },
                                Object {
                                  "entries": Array [
                                    Object {
                                      "title": "bar",
                                    },
                                  ],
                                },
                              ],
                            },
                          },
                        },
                        "onInteraction": [MockFunction],
                        "rootElement": [MockFunction],
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 3,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "appElement": [MockFunction],
                            "getPreviewer": [MockFunction],
                            "metadata": Object {
                              "global": Object {
                                "boxSkillsCards": Object {
                                  "cards": Array [
                                    Object {
                                      "entries": Array [
                                        Object {
                                          "title": "foo",
                                        },
                                      ],
                                    },
                                    Object {
                                      "entries": Array [
                                        Object {
                                          "title": "bar",
                                        },
                                      ],
                                    },
                                  ],
                                },
                              },
                            },
                            "onInteraction": [MockFunction],
                            "rootElement": [MockFunction],
                          },
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "appElement": [MockFunction],
                            "getPreviewer": [MockFunction],
                            "metadata": Object {
                              "global": Object {
                                "boxSkillsCards": Object {
                                  "cards": Array [
                                    Object {
                                      "entries": Array [
                                        Object {
                                          "title": "foo",
                                        },
                                      ],
                                    },
                                    Object {
                                      "entries": Array [
                                        Object {
                                          "title": "bar",
                                        },
                                      ],
                                    },
                                  ],
                                },
                              },
                            },
                            "onInteraction": [MockFunction],
                            "rootElement": [MockFunction],
                          },
                        },
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                  class="bcs-section bcs-section-open"
                                >
                                  <button
                                    class="btn-plain bcs-section-title"
                                    type="button"
                                  >
                                    <div />
                                  </button>
                                  <div
                                    class="bcs-section-content"
                                  />
                                </div>
                                <div
                                  class="bcs-section bcs-section-open"
                                >
                                  <button
                                    class="btn-plain bcs-section-title"
                                    type="button"
                                  >
                                    <div />
                                  </button>
                                  <div
                                    class="bcs-section-content"
                                  />
                                </div>
                              </div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "hydrate": false,
                              "isReadyForCommit": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "callbackList": null,
                              "expirationTime": 1,
                              "first": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "nextCallback": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "appElement": [MockFunction],
                                        "getPreviewer": [MockFunction],
                                        "metadata": Object {
                                          "global": Object {
                                            "boxSkillsCards": Object {
                                              "cards": Array [
                                                Object {
                                                  "entries": Array [
                                                    Object {
                                                      "title": "foo",
                                                    },
                                                  ],
                                                },
                                                Object {
                                                  "entries": Array [
                                                    Object {
                                                      "title": "bar",
                                                    },
                                                  ],
                                                },
                                              ],
                                            },
                                          },
                                        },
                                        "onInteraction": [MockFunction],
                                        "rootElement": [MockFunction],
                                      }
                                    }
                                  />,
                                },
                              },
                              "hasForceUpdate": false,
                              "isInitialized": false,
                              "isProcessing": false,
                              "last": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "nextCallback": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "appElement": [MockFunction],
                                        "getPreviewer": [MockFunction],
                                        "metadata": Object {
                                          "global": Object {
                                            "boxSkillsCards": Object {
                                              "cards": Array [
                                                Object {
                                                  "entries": Array [
                                                    Object {
                                                      "title": "foo",
                                                    },
                                                  ],
                                                },
                                                Object {
                                                  "entries": Array [
                                                    Object {
                                                      "title": "bar",
                                                    },
                                                  ],
                                                },
                                              ],
                                            },
                                          },
                                        },
                                        "onInteraction": [MockFunction],
                                        "rootElement": [MockFunction],
                                      }
                                    }
                                  />,
                                },
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                Object {
                                  "appElement": [MockFunction],
                                  "getPreviewer": [MockFunction],
                                  "metadata": Object {
                                    "global": Object {
                                      "boxSkillsCards": Object {
                                        "cards": Array [
                                          Object {
                                            "entries": Array [
                                              Object {
                                                "title": "foo",
                                              },
                                            ],
                                          },
                                          Object {
                                            "entries": Array [
                                              Object {
                                                "title": "bar",
                                              },
                                            ],
                                          },
                                        ],
                                      },
                                    },
                                  },
                                  "onInteraction": [MockFunction],
                                  "rootElement": [MockFunction],
                                }
                              }
                            />,
                          },
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div
                                class="bcs-section bcs-section-open"
                              >
                                <button
                                  class="btn-plain bcs-section-title"
                                  type="button"
                                >
                                  <div />
                                </button>
                                <div
                                  class="bcs-section-content"
                                />
                              </div>
                              <div
                                class="bcs-section bcs-section-open"
                              >
                                <button
                                  class="btn-plain bcs-section-title"
                                  type="button"
                                >
                                  <div />
                                </button>
                                <div
                                  class="bcs-section-content"
                                />
                              </div>
                            </div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "hydrate": false,
                            "isReadyForCommit": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "appElement": [MockFunction],
                              "getPreviewer": [MockFunction],
                              "metadata": Object {
                                "global": Object {
                                  "boxSkillsCards": Object {
                                    "cards": Array [
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "foo",
                                          },
                                        ],
                                      },
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "bar",
                                          },
                                        ],
                                      },
                                    ],
                                  },
                                },
                              },
                              "onInteraction": [MockFunction],
                              "rootElement": [MockFunction],
                            },
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "appElement": [MockFunction],
                              "getPreviewer": [MockFunction],
                              "metadata": Object {
                                "global": Object {
                                  "boxSkillsCards": Object {
                                    "cards": Array [
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "foo",
                                          },
                                        ],
                                      },
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "bar",
                                          },
                                        ],
                                      },
                                    ],
                                  },
                                },
                              },
                              "onInteraction": [MockFunction],
                              "rootElement": [MockFunction],
                            },
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": null,
                      "tag": 1,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": null,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 22,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "alternate": null,
                      "child": null,
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "appElement": [MockFunction],
                        "getPreviewer": [MockFunction],
                        "onInteraction": [MockFunction],
                        "rootElement": [MockFunction],
                        "skill": Object {
                          "entries": Array [
                            Object {
                              "title": "bar",
                            },
                          ],
                        },
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": null,
                      "tag": 1,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "appElement": [MockFunction],
                      "getPreviewer": [MockFunction],
                      "maskError": undefined,
                      "onInteraction": [MockFunction],
                      "rootElement": [MockFunction],
                      "skill": Object {
                        "entries": Array [
                          Object {
                            "title": "bar",
                          },
                        ],
                      },
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": null,
                    "tag": 1,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 1,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": <Unknown
                      appElement={[MockFunction]}
                      getPreviewer={[MockFunction]}
                      maskError={undefined}
                      onInteraction={[MockFunction]}
                      rootElement={[MockFunction]}
                      skill={
                        Object {
                          "entries": Array [
                            Object {
                              "title": "bar",
                            },
                          ],
                        }
                      }
                    />,
                    "className": "bcs-section-content",
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": [Circular],
                  "sibling": null,
                  "stateNode": <div
                    class="bcs-section-content"
                  />,
                  "tag": 5,
                  "type": "div",
                  "updateQueue": null,
                },
                "stateNode": null,
                "tag": 1,
                "type": [Function],
                "updateQueue": null,
              },
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "internalContextTag": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": Array [
                  <PlainButton
                    className="bcs-section-title"
                    onClick={[Function]}
                    type="button"
                  >
                    <FormattedMessage />
                  </PlainButton>,
                  <div
                    className="bcs-section-content"
                  >
                    <Unknown
                      appElement={[MockFunction]}
                      getPreviewer={[MockFunction]}
                      maskError={undefined}
                      onInteraction={[MockFunction]}
                      rootElement={[MockFunction]}
                      skill={
                        Object {
                          "entries": Array [
                            Object {
                              "title": "bar",
                            },
                          ],
                        }
                      }
                    />
                  </div>,
                ],
                "className": "bcs-section bcs-section-open",
              },
              "memoizedState": null,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": [Circular],
              "sibling": null,
              "stateNode": <div
                class="bcs-section bcs-section-open"
              >
                <button
                  class="btn-plain bcs-section-title"
                  type="button"
                >
                  <div />
                </button>
                <div
                  class="bcs-section-content"
                />
              </div>,
              "tag": 5,
              "type": "div",
              "updateQueue": null,
            },
            "effectTag": 1,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 1,
            "internalContextTag": 0,
            "key": "1",
            "lastEffect": null,
            "memoizedProps": Object {
              "children": <Unknown
                appElement={[MockFunction]}
                getPreviewer={[MockFunction]}
                maskError={undefined}
                onInteraction={[MockFunction]}
                rootElement={[MockFunction]}
                skill={
                  Object {
                    "entries": Array [
                      Object {
                        "title": "bar",
                      },
                    ],
                  }
                }
              />,
              "className": "",
              "isOpen": true,
              "title": <FormattedMessage />,
            },
            "memoizedState": Object {
              "isOpen": true,
            },
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": FiberNode {
              "_debugID": 4,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": FiberNode {
                "_debugID": 3,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "alternate": null,
                "child": [Circular],
                "effectTag": 1,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "appElement": [MockFunction],
                    "getPreviewer": [MockFunction],
                    "metadata": Object {
                      "global": Object {
                        "boxSkillsCards": Object {
                          "cards": Array [
                            Object {
                              "entries": Array [
                                Object {
                                  "title": "foo",
                                },
                              ],
                            },
                            Object {
                              "entries": Array [
                                Object {
                                  "title": "bar",
                                },
                              ],
                            },
                          ],
                        },
                      },
                    },
                    "onInteraction": [MockFunction],
                    "rootElement": [MockFunction],
                  },
                },
                "memoizedState": Object {
                  "context": null,
                  "mount": true,
                  "props": Object {
                    "appElement": [MockFunction],
                    "getPreviewer": [MockFunction],
                    "metadata": Object {
                      "global": Object {
                        "boxSkillsCards": Object {
                          "cards": Array [
                            Object {
                              "entries": Array [
                                Object {
                                  "title": "foo",
                                },
                              ],
                            },
                            Object {
                              "entries": Array [
                                Object {
                                  "title": "bar",
                                },
                              ],
                            },
                          ],
                        },
                      },
                    },
                    "onInteraction": [MockFunction],
                    "rootElement": [MockFunction],
                  },
                },
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": FiberNode {
                  "_debugID": 1,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": FiberNode {
                    "_debugID": 1,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": [Circular],
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 1,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": null,
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <div
                          class="bcs-section bcs-section-open"
                        >
                          <button
                            class="btn-plain bcs-section-title"
                            type="button"
                          >
                            <div />
                          </button>
                          <div
                            class="bcs-section-content"
                          />
                        </div>
                        <div
                          class="bcs-section bcs-section-open"
                        >
                          <button
                            class="btn-plain bcs-section-title"
                            type="button"
                          >
                            <div />
                          </button>
                          <div
                            class="bcs-section-content"
                          />
                        </div>
                      </div>,
                      "context": Object {},
                      "current": [Circular],
                      "finishedWork": null,
                      "hydrate": false,
                      "isReadyForCommit": false,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingContext": null,
                      "remainingExpirationTime": 0,
                    },
                    "tag": 3,
                    "type": null,
                    "updateQueue": Object {
                      "baseState": null,
                      "callbackList": null,
                      "expirationTime": 1,
                      "first": Object {
                        "callback": null,
                        "expirationTime": 1,
                        "isForced": false,
                        "isReplace": false,
                        "next": null,
                        "nextCallback": null,
                        "partialState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "appElement": [MockFunction],
                                "getPreviewer": [MockFunction],
                                "metadata": Object {
                                  "global": Object {
                                    "boxSkillsCards": Object {
                                      "cards": Array [
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "foo",
                                            },
                                          ],
                                        },
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "bar",
                                            },
                                          ],
                                        },
                                      ],
                                    },
                                  },
                                },
                                "onInteraction": [MockFunction],
                                "rootElement": [MockFunction],
                              }
                            }
                          />,
                        },
                      },
                      "hasForceUpdate": false,
                      "isInitialized": false,
                      "isProcessing": false,
                      "last": Object {
                        "callback": null,
                        "expirationTime": 1,
                        "isForced": false,
                        "isReplace": false,
                        "next": null,
                        "nextCallback": null,
                        "partialState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "appElement": [MockFunction],
                                "getPreviewer": [MockFunction],
                                "metadata": Object {
                                  "global": Object {
                                    "boxSkillsCards": Object {
                                      "cards": Array [
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "foo",
                                            },
                                          ],
                                        },
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "bar",
                                            },
                                          ],
                                        },
                                      ],
                                    },
                                  },
                                },
                                "onInteraction": [MockFunction],
                                "rootElement": [MockFunction],
                              }
                            }
                          />,
                        },
                      },
                    },
                  },
                  "child": [Circular],
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": null,
                  "memoizedState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "appElement": [MockFunction],
                          "getPreviewer": [MockFunction],
                          "metadata": Object {
                            "global": Object {
                              "boxSkillsCards": Object {
                                "cards": Array [
                                  Object {
                                    "entries": Array [
                                      Object {
                                        "title": "foo",
                                      },
                                    ],
                                  },
                                  Object {
                                    "entries": Array [
                                      Object {
                                        "title": "bar",
                                      },
                                    ],
                                  },
                                ],
                              },
                            },
                          },
                          "onInteraction": [MockFunction],
                          "rootElement": [MockFunction],
                        }
                      }
                    />,
                  },
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div>
                      <div
                        class="bcs-section bcs-section-open"
                      >
                        <button
                          class="btn-plain bcs-section-title"
                          type="button"
                        >
                          <div />
                        </button>
                        <div
                          class="bcs-section-content"
                        />
                      </div>
                      <div
                        class="bcs-section bcs-section-open"
                      >
                        <button
                          class="btn-plain bcs-section-title"
                          type="button"
                        >
                          <div />
                        </button>
                        <div
                          class="bcs-section-content"
                        />
                      </div>
                    </div>,
                    "context": Object {},
                    "current": [Circular],
                    "finishedWork": null,
                    "hydrate": false,
                    "isReadyForCommit": false,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingContext": null,
                    "remainingExpirationTime": 0,
                  },
                  "tag": 3,
                  "type": null,
                  "updateQueue": null,
                },
                "sibling": null,
                "stateNode": WrapperComponent {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "appElement": [MockFunction],
                      "getPreviewer": [MockFunction],
                      "metadata": Object {
                        "global": Object {
                          "boxSkillsCards": Object {
                            "cards": Array [
                              Object {
                                "entries": Array [
                                  Object {
                                    "title": "foo",
                                  },
                                ],
                              },
                              Object {
                                "entries": Array [
                                  Object {
                                    "title": "bar",
                                  },
                                ],
                              },
                            ],
                          },
                        },
                      },
                      "onInteraction": [MockFunction],
                      "rootElement": [MockFunction],
                    },
                  },
                  "refs": Object {},
                  "state": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "appElement": [MockFunction],
                      "getPreviewer": [MockFunction],
                      "metadata": Object {
                        "global": Object {
                          "boxSkillsCards": Object {
                            "cards": Array [
                              Object {
                                "entries": Array [
                                  Object {
                                    "title": "foo",
                                  },
                                ],
                              },
                              Object {
                                "entries": Array [
                                  Object {
                                    "title": "bar",
                                  },
                                ],
                              },
                            ],
                          },
                        },
                      },
                      "onInteraction": [MockFunction],
                      "rootElement": [MockFunction],
                    },
                  },
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 2,
                "type": [Function],
                "updateQueue": null,
              },
              "_debugSource": null,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 5,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 7,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 8,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 10,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 11,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 12,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": null,
                          "alternate": null,
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {},
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": [Circular],
                          "sibling": null,
                          "stateNode": <div />,
                          "tag": 5,
                          "type": "div",
                          "updateQueue": null,
                        },
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {},
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": null,
                        "tag": 1,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": <FormattedMessage />,
                        "className": "btn-plain bcs-section-title",
                        "onClick": [Function],
                        "type": "button",
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": <button
                        class="btn-plain bcs-section-title"
                        type="button"
                      >
                        <div />
                      </button>,
                      "tag": 5,
                      "type": "button",
                      "updateQueue": null,
                    },
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": <FormattedMessage />,
                      "className": "bcs-section-title",
                      "onClick": [Function],
                      "type": "button",
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": [Circular],
                    "sibling": FiberNode {
                      "_debugID": 9,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 13,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 14,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": null,
                          "alternate": null,
                          "child": null,
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "appElement": [MockFunction],
                            "getPreviewer": [MockFunction],
                            "onInteraction": [MockFunction],
                            "rootElement": [MockFunction],
                            "skill": Object {
                              "entries": Array [
                                Object {
                                  "title": "foo",
                                },
                              ],
                            },
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": [Circular],
                          "sibling": null,
                          "stateNode": null,
                          "tag": 1,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "appElement": [MockFunction],
                          "getPreviewer": [MockFunction],
                          "maskError": undefined,
                          "onInteraction": [MockFunction],
                          "rootElement": [MockFunction],
                          "skill": Object {
                            "entries": Array [
                              Object {
                                "title": "foo",
                              },
                            ],
                          },
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": null,
                        "tag": 1,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 1,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": <Unknown
                          appElement={[MockFunction]}
                          getPreviewer={[MockFunction]}
                          maskError={undefined}
                          onInteraction={[MockFunction]}
                          rootElement={[MockFunction]}
                          skill={
                            Object {
                              "entries": Array [
                                Object {
                                  "title": "foo",
                                },
                              ],
                            }
                          }
                        />,
                        "className": "bcs-section-content",
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": <div
                        class="bcs-section-content"
                      />,
                      "tag": 5,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "stateNode": null,
                    "tag": 1,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <PlainButton
                        className="bcs-section-title"
                        onClick={[Function]}
                        type="button"
                      >
                        <FormattedMessage />
                      </PlainButton>,
                      <div
                        className="bcs-section-content"
                      >
                        <Unknown
                          appElement={[MockFunction]}
                          getPreviewer={[MockFunction]}
                          maskError={undefined}
                          onInteraction={[MockFunction]}
                          rootElement={[MockFunction]}
                          skill={
                            Object {
                              "entries": Array [
                                Object {
                                  "title": "foo",
                                },
                              ],
                            }
                          }
                        />
                      </div>,
                    ],
                    "className": "bcs-section bcs-section-open",
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": [Circular],
                  "sibling": null,
                  "stateNode": <div
                    class="bcs-section bcs-section-open"
                  >
                    <button
                      class="btn-plain bcs-section-title"
                      type="button"
                    >
                      <div />
                    </button>
                    <div
                      class="bcs-section-content"
                    />
                  </div>,
                  "tag": 5,
                  "type": "div",
                  "updateQueue": null,
                },
                "effectTag": 1,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "internalContextTag": 0,
                "key": "0",
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": <Unknown
                    appElement={[MockFunction]}
                    getPreviewer={[MockFunction]}
                    maskError={undefined}
                    onInteraction={[MockFunction]}
                    rootElement={[MockFunction]}
                    skill={
                      Object {
                        "entries": Array [
                          Object {
                            "title": "foo",
                          },
                        ],
                      }
                    }
                  />,
                  "className": "",
                  "isOpen": true,
                  "title": <FormattedMessage />,
                },
                "memoizedState": Object {
                  "isOpen": true,
                },
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": [Circular],
                "sibling": [Circular],
                "stateNode": SidebarSection {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "children": <Unknown
                      appElement={[MockFunction]}
                      getPreviewer={[MockFunction]}
                      maskError={undefined}
                      onInteraction={[MockFunction]}
                      rootElement={[MockFunction]}
                      skill={
                        Object {
                          "entries": Array [
                            Object {
                              "title": "foo",
                            },
                          ],
                        }
                      }
                    />,
                    "className": "",
                    "isOpen": true,
                    "title": <FormattedMessage />,
                  },
                  "refs": Object {},
                  "state": Object {
                    "isOpen": true,
                  },
                  "toggleVisibility": [Function],
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 2,
                "type": [Function],
                "updateQueue": null,
              },
              "effectTag": 1,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "internalContextTag": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "appElement": [MockFunction],
                "getPreviewer": [MockFunction],
                "metadata": Object {
                  "global": Object {
                    "boxSkillsCards": Object {
                      "cards": Array [
                        Object {
                          "entries": Array [
                            Object {
                              "title": "foo",
                            },
                          ],
                        },
                        Object {
                          "entries": Array [
                            Object {
                              "title": "bar",
                            },
                          ],
                        },
                      ],
                    },
                  },
                },
                "onInteraction": [MockFunction],
                "rootElement": [MockFunction],
              },
              "memoizedState": null,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": FiberNode {
                "_debugID": 3,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "alternate": null,
                "child": [Circular],
                "effectTag": 1,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "appElement": [MockFunction],
                    "getPreviewer": [MockFunction],
                    "metadata": Object {
                      "global": Object {
                        "boxSkillsCards": Object {
                          "cards": Array [
                            Object {
                              "entries": Array [
                                Object {
                                  "title": "foo",
                                },
                              ],
                            },
                            Object {
                              "entries": Array [
                                Object {
                                  "title": "bar",
                                },
                              ],
                            },
                          ],
                        },
                      },
                    },
                    "onInteraction": [MockFunction],
                    "rootElement": [MockFunction],
                  },
                },
                "memoizedState": Object {
                  "context": null,
                  "mount": true,
                  "props": Object {
                    "appElement": [MockFunction],
                    "getPreviewer": [MockFunction],
                    "metadata": Object {
                      "global": Object {
                        "boxSkillsCards": Object {
                          "cards": Array [
                            Object {
                              "entries": Array [
                                Object {
                                  "title": "foo",
                                },
                              ],
                            },
                            Object {
                              "entries": Array [
                                Object {
                                  "title": "bar",
                                },
                              ],
                            },
                          ],
                        },
                      },
                    },
                    "onInteraction": [MockFunction],
                    "rootElement": [MockFunction],
                  },
                },
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": FiberNode {
                  "_debugID": 1,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": FiberNode {
                    "_debugID": 1,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": [Circular],
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 1,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": null,
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <div
                          class="bcs-section bcs-section-open"
                        >
                          <button
                            class="btn-plain bcs-section-title"
                            type="button"
                          >
                            <div />
                          </button>
                          <div
                            class="bcs-section-content"
                          />
                        </div>
                        <div
                          class="bcs-section bcs-section-open"
                        >
                          <button
                            class="btn-plain bcs-section-title"
                            type="button"
                          >
                            <div />
                          </button>
                          <div
                            class="bcs-section-content"
                          />
                        </div>
                      </div>,
                      "context": Object {},
                      "current": [Circular],
                      "finishedWork": null,
                      "hydrate": false,
                      "isReadyForCommit": false,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingContext": null,
                      "remainingExpirationTime": 0,
                    },
                    "tag": 3,
                    "type": null,
                    "updateQueue": Object {
                      "baseState": null,
                      "callbackList": null,
                      "expirationTime": 1,
                      "first": Object {
                        "callback": null,
                        "expirationTime": 1,
                        "isForced": false,
                        "isReplace": false,
                        "next": null,
                        "nextCallback": null,
                        "partialState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "appElement": [MockFunction],
                                "getPreviewer": [MockFunction],
                                "metadata": Object {
                                  "global": Object {
                                    "boxSkillsCards": Object {
                                      "cards": Array [
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "foo",
                                            },
                                          ],
                                        },
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "bar",
                                            },
                                          ],
                                        },
                                      ],
                                    },
                                  },
                                },
                                "onInteraction": [MockFunction],
                                "rootElement": [MockFunction],
                              }
                            }
                          />,
                        },
                      },
                      "hasForceUpdate": false,
                      "isInitialized": false,
                      "isProcessing": false,
                      "last": Object {
                        "callback": null,
                        "expirationTime": 1,
                        "isForced": false,
                        "isReplace": false,
                        "next": null,
                        "nextCallback": null,
                        "partialState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "appElement": [MockFunction],
                                "getPreviewer": [MockFunction],
                                "metadata": Object {
                                  "global": Object {
                                    "boxSkillsCards": Object {
                                      "cards": Array [
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "foo",
                                            },
                                          ],
                                        },
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "bar",
                                            },
                                          ],
                                        },
                                      ],
                                    },
                                  },
                                },
                                "onInteraction": [MockFunction],
                                "rootElement": [MockFunction],
                              }
                            }
                          />,
                        },
                      },
                    },
                  },
                  "child": [Circular],
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": null,
                  "memoizedState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "appElement": [MockFunction],
                          "getPreviewer": [MockFunction],
                          "metadata": Object {
                            "global": Object {
                              "boxSkillsCards": Object {
                                "cards": Array [
                                  Object {
                                    "entries": Array [
                                      Object {
                                        "title": "foo",
                                      },
                                    ],
                                  },
                                  Object {
                                    "entries": Array [
                                      Object {
                                        "title": "bar",
                                      },
                                    ],
                                  },
                                ],
                              },
                            },
                          },
                          "onInteraction": [MockFunction],
                          "rootElement": [MockFunction],
                        }
                      }
                    />,
                  },
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div>
                      <div
                        class="bcs-section bcs-section-open"
                      >
                        <button
                          class="btn-plain bcs-section-title"
                          type="button"
                        >
                          <div />
                        </button>
                        <div
                          class="bcs-section-content"
                        />
                      </div>
                      <div
                        class="bcs-section bcs-section-open"
                      >
                        <button
                          class="btn-plain bcs-section-title"
                          type="button"
                        >
                          <div />
                        </button>
                        <div
                          class="bcs-section-content"
                        />
                      </div>
                    </div>,
                    "context": Object {},
                    "current": [Circular],
                    "finishedWork": null,
                    "hydrate": false,
                    "isReadyForCommit": false,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingContext": null,
                    "remainingExpirationTime": 0,
                  },
                  "tag": 3,
                  "type": null,
                  "updateQueue": null,
                },
                "sibling": null,
                "stateNode": WrapperComponent {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "appElement": [MockFunction],
                      "getPreviewer": [MockFunction],
                      "metadata": Object {
                        "global": Object {
                          "boxSkillsCards": Object {
                            "cards": Array [
                              Object {
                                "entries": Array [
                                  Object {
                                    "title": "foo",
                                  },
                                ],
                              },
                              Object {
                                "entries": Array [
                                  Object {
                                    "title": "bar",
                                  },
                                ],
                              },
                            ],
                          },
                        },
                      },
                      "onInteraction": [MockFunction],
                      "rootElement": [MockFunction],
                    },
                  },
                  "refs": Object {},
                  "state": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "appElement": [MockFunction],
                      "getPreviewer": [MockFunction],
                      "metadata": Object {
                        "global": Object {
                          "boxSkillsCards": Object {
                            "cards": Array [
                              Object {
                                "entries": Array [
                                  Object {
                                    "title": "foo",
                                  },
                                ],
                              },
                              Object {
                                "entries": Array [
                                  Object {
                                    "title": "bar",
                                  },
                                ],
                              },
                            ],
                          },
                        },
                      },
                      "onInteraction": [MockFunction],
                      "rootElement": [MockFunction],
                    },
                  },
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 2,
                "type": [Function],
                "updateQueue": null,
              },
              "sibling": null,
              "stateNode": null,
              "tag": 1,
              "type": [Function],
              "updateQueue": null,
            },
            "sibling": null,
            "stateNode": [Circular],
            "tag": 2,
            "type": [Function],
            "updateQueue": null,
          },
          "_reactInternalInstance": Object {},
          "context": Object {},
          "props": Object {
            "children": <Unknown
              appElement={[MockFunction]}
              getPreviewer={[MockFunction]}
              maskError={undefined}
              onInteraction={[MockFunction]}
              rootElement={[MockFunction]}
              skill={
                Object {
                  "entries": Array [
                    Object {
                      "title": "bar",
                    },
                  ],
                }
              }
            />,
            "className": "",
            "isOpen": true,
            "title": <FormattedMessage />,
          },
          "refs": Object {},
          "state": Object {
            "isOpen": true,
          },
          "toggleVisibility": [Function],
          "updater": Object {
            "enqueueForceUpdate": [Function],
            "enqueueReplaceState": [Function],
            "enqueueSetState": [Function],
            "isMounted": [Function],
          },
        },
        "key": "1",
        "nodeType": "class",
        "props": Object {
          "children": <Unknown
            appElement={[MockFunction]}
            getPreviewer={[MockFunction]}
            maskError={undefined}
            onInteraction={[MockFunction]}
            rootElement={[MockFunction]}
            skill={
              Object {
                "entries": Array [
                  Object {
                    "title": "bar",
                  },
                ],
              }
            }
          />,
          "className": "",
          "isOpen": true,
          "title": <FormattedMessage />,
        },
        "ref": null,
        "rendered": Object {
          "instance": <div
            class="bcs-section bcs-section-open"
          >
            <button
              class="btn-plain bcs-section-title"
              type="button"
            >
              <div />
            </button>
            <div
              class="bcs-section-content"
            />
          </div>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <PlainButton
                className="bcs-section-title"
                onClick={[Function]}
                type="button"
              >
                <FormattedMessage />
              </PlainButton>,
              <div
                className="bcs-section-content"
              >
                <Unknown
                  appElement={[MockFunction]}
                  getPreviewer={[MockFunction]}
                  maskError={undefined}
                  onInteraction={[MockFunction]}
                  rootElement={[MockFunction]}
                  skill={
                    Object {
                      "entries": Array [
                        Object {
                          "title": "bar",
                        },
                      ],
                    }
                  }
                />
              </div>,
            ],
            "className": "bcs-section bcs-section-open",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <FormattedMessage />,
                "className": "bcs-section-title",
                "onClick": [Function],
                "type": "button",
              },
              "ref": null,
              "rendered": Object {
                "instance": <button
                  class="btn-plain bcs-section-title"
                  type="button"
                >
                  <div />
                </button>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <FormattedMessage />,
                  "className": "btn-plain bcs-section-title",
                  "onClick": [Function],
                  "type": "button",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {},
                    "ref": null,
                    "rendered": Object {
                      "instance": <div />,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {},
                      "ref": null,
                      "rendered": Array [
                        undefined,
                      ],
                      "type": "div",
                    },
                    "type": [Function],
                  },
                ],
                "type": "button",
              },
              "type": [Function],
            },
            Object {
              "instance": <div
                class="bcs-section-content"
              />,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Unknown
                  appElement={[MockFunction]}
                  getPreviewer={[MockFunction]}
                  maskError={undefined}
                  onInteraction={[MockFunction]}
                  rootElement={[MockFunction]}
                  skill={
                    Object {
                      "entries": Array [
                        Object {
                          "title": "bar",
                        },
                      ],
                    }
                  }
                />,
                "className": "bcs-section-content",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "appElement": [MockFunction],
                    "getPreviewer": [MockFunction],
                    "maskError": undefined,
                    "onInteraction": [MockFunction],
                    "rootElement": [MockFunction],
                    "skill": Object {
                      "entries": Array [
                        Object {
                          "title": "bar",
                        },
                      ],
                    },
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "appElement": [MockFunction],
                      "getPreviewer": [MockFunction],
                      "onInteraction": [MockFunction],
                      "rootElement": [MockFunction],
                      "skill": Object {
                        "entries": Array [
                          Object {
                            "title": "bar",
                          },
                        ],
                      },
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "appElement": [MockFunction],
        "getPreviewer": [MockFunction],
        "metadata": Object {
          "global": Object {
            "boxSkillsCards": Object {
              "cards": Array [
                Object {
                  "entries": Array [
                    Object {
                      "title": "foo",
                    },
                  ],
                },
                Object {
                  "entries": Array [
                    Object {
                      "title": "bar",
                    },
                  ],
                },
              ],
            },
          },
        },
        "onInteraction": [MockFunction],
        "rootElement": [MockFunction],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": SidebarSection {
            "_reactInternalFiber": FiberNode {
              "_debugID": 5,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": FiberNode {
                "_debugID": 4,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": FiberNode {
                  "_debugID": 3,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": null,
                  "child": [Circular],
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "appElement": [MockFunction],
                      "getPreviewer": [MockFunction],
                      "metadata": Object {
                        "global": Object {
                          "boxSkillsCards": Object {
                            "cards": Array [
                              Object {
                                "entries": Array [
                                  Object {
                                    "title": "foo",
                                  },
                                ],
                              },
                              Object {
                                "entries": Array [
                                  Object {
                                    "title": "bar",
                                  },
                                ],
                              },
                            ],
                          },
                        },
                      },
                      "onInteraction": [MockFunction],
                      "rootElement": [MockFunction],
                    },
                  },
                  "memoizedState": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "appElement": [MockFunction],
                      "getPreviewer": [MockFunction],
                      "metadata": Object {
                        "global": Object {
                          "boxSkillsCards": Object {
                            "cards": Array [
                              Object {
                                "entries": Array [
                                  Object {
                                    "title": "foo",
                                  },
                                ],
                              },
                              Object {
                                "entries": Array [
                                  Object {
                                    "title": "bar",
                                  },
                                ],
                              },
                            ],
                          },
                        },
                      },
                      "onInteraction": [MockFunction],
                      "rootElement": [MockFunction],
                    },
                  },
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 1,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": FiberNode {
                      "_debugID": 1,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": [Circular],
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 1,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": null,
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div
                            class="bcs-section bcs-section-open"
                          >
                            <button
                              class="btn-plain bcs-section-title"
                              type="button"
                            >
                              <div />
                            </button>
                            <div
                              class="bcs-section-content"
                            />
                          </div>
                          <div
                            class="bcs-section bcs-section-open"
                          >
                            <button
                              class="btn-plain bcs-section-title"
                              type="button"
                            >
                              <div />
                            </button>
                            <div
                              class="bcs-section-content"
                            />
                          </div>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "finishedWork": null,
                        "hydrate": false,
                        "isReadyForCommit": false,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingContext": null,
                        "remainingExpirationTime": 0,
                      },
                      "tag": 3,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": null,
                        "callbackList": null,
                        "expirationTime": 1,
                        "first": Object {
                          "callback": null,
                          "expirationTime": 1,
                          "isForced": false,
                          "isReplace": false,
                          "next": null,
                          "nextCallback": null,
                          "partialState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                Object {
                                  "appElement": [MockFunction],
                                  "getPreviewer": [MockFunction],
                                  "metadata": Object {
                                    "global": Object {
                                      "boxSkillsCards": Object {
                                        "cards": Array [
                                          Object {
                                            "entries": Array [
                                              Object {
                                                "title": "foo",
                                              },
                                            ],
                                          },
                                          Object {
                                            "entries": Array [
                                              Object {
                                                "title": "bar",
                                              },
                                            ],
                                          },
                                        ],
                                      },
                                    },
                                  },
                                  "onInteraction": [MockFunction],
                                  "rootElement": [MockFunction],
                                }
                              }
                            />,
                          },
                        },
                        "hasForceUpdate": false,
                        "isInitialized": false,
                        "isProcessing": false,
                        "last": Object {
                          "callback": null,
                          "expirationTime": 1,
                          "isForced": false,
                          "isReplace": false,
                          "next": null,
                          "nextCallback": null,
                          "partialState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                Object {
                                  "appElement": [MockFunction],
                                  "getPreviewer": [MockFunction],
                                  "metadata": Object {
                                    "global": Object {
                                      "boxSkillsCards": Object {
                                        "cards": Array [
                                          Object {
                                            "entries": Array [
                                              Object {
                                                "title": "foo",
                                              },
                                            ],
                                          },
                                          Object {
                                            "entries": Array [
                                              Object {
                                                "title": "bar",
                                              },
                                            ],
                                          },
                                        ],
                                      },
                                    },
                                  },
                                  "onInteraction": [MockFunction],
                                  "rootElement": [MockFunction],
                                }
                              }
                            />,
                          },
                        },
                      },
                    },
                    "child": [Circular],
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": null,
                    "memoizedState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "appElement": [MockFunction],
                            "getPreviewer": [MockFunction],
                            "metadata": Object {
                              "global": Object {
                                "boxSkillsCards": Object {
                                  "cards": Array [
                                    Object {
                                      "entries": Array [
                                        Object {
                                          "title": "foo",
                                        },
                                      ],
                                    },
                                    Object {
                                      "entries": Array [
                                        Object {
                                          "title": "bar",
                                        },
                                      ],
                                    },
                                  ],
                                },
                              },
                            },
                            "onInteraction": [MockFunction],
                            "rootElement": [MockFunction],
                          }
                        }
                      />,
                    },
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <div
                          class="bcs-section bcs-section-open"
                        >
                          <button
                            class="btn-plain bcs-section-title"
                            type="button"
                          >
                            <div />
                          </button>
                          <div
                            class="bcs-section-content"
                          />
                        </div>
                        <div
                          class="bcs-section bcs-section-open"
                        >
                          <button
                            class="btn-plain bcs-section-title"
                            type="button"
                          >
                            <div />
                          </button>
                          <div
                            class="bcs-section-content"
                          />
                        </div>
                      </div>,
                      "context": Object {},
                      "current": [Circular],
                      "finishedWork": null,
                      "hydrate": false,
                      "isReadyForCommit": false,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingContext": null,
                      "remainingExpirationTime": 0,
                    },
                    "tag": 3,
                    "type": null,
                    "updateQueue": null,
                  },
                  "sibling": null,
                  "stateNode": WrapperComponent {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "props": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "appElement": [MockFunction],
                        "getPreviewer": [MockFunction],
                        "metadata": Object {
                          "global": Object {
                            "boxSkillsCards": Object {
                              "cards": Array [
                                Object {
                                  "entries": Array [
                                    Object {
                                      "title": "foo",
                                    },
                                  ],
                                },
                                Object {
                                  "entries": Array [
                                    Object {
                                      "title": "bar",
                                    },
                                  ],
                                },
                              ],
                            },
                          },
                        },
                        "onInteraction": [MockFunction],
                        "rootElement": [MockFunction],
                      },
                    },
                    "refs": Object {},
                    "state": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "appElement": [MockFunction],
                        "getPreviewer": [MockFunction],
                        "metadata": Object {
                          "global": Object {
                            "boxSkillsCards": Object {
                              "cards": Array [
                                Object {
                                  "entries": Array [
                                    Object {
                                      "title": "foo",
                                    },
                                  ],
                                },
                                Object {
                                  "entries": Array [
                                    Object {
                                      "title": "bar",
                                    },
                                  ],
                                },
                              ],
                            },
                          },
                        },
                        "onInteraction": [MockFunction],
                        "rootElement": [MockFunction],
                      },
                    },
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 2,
                  "type": [Function],
                  "updateQueue": null,
                },
                "_debugSource": null,
                "alternate": null,
                "child": [Circular],
                "effectTag": 1,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "appElement": [MockFunction],
                  "getPreviewer": [MockFunction],
                  "metadata": Object {
                    "global": Object {
                      "boxSkillsCards": Object {
                        "cards": Array [
                          Object {
                            "entries": Array [
                              Object {
                                "title": "foo",
                              },
                            ],
                          },
                          Object {
                            "entries": Array [
                              Object {
                                "title": "bar",
                              },
                            ],
                          },
                        ],
                      },
                    },
                  },
                  "onInteraction": [MockFunction],
                  "rootElement": [MockFunction],
                },
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": FiberNode {
                  "_debugID": 3,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": null,
                  "child": [Circular],
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "appElement": [MockFunction],
                      "getPreviewer": [MockFunction],
                      "metadata": Object {
                        "global": Object {
                          "boxSkillsCards": Object {
                            "cards": Array [
                              Object {
                                "entries": Array [
                                  Object {
                                    "title": "foo",
                                  },
                                ],
                              },
                              Object {
                                "entries": Array [
                                  Object {
                                    "title": "bar",
                                  },
                                ],
                              },
                            ],
                          },
                        },
                      },
                      "onInteraction": [MockFunction],
                      "rootElement": [MockFunction],
                    },
                  },
                  "memoizedState": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "appElement": [MockFunction],
                      "getPreviewer": [MockFunction],
                      "metadata": Object {
                        "global": Object {
                          "boxSkillsCards": Object {
                            "cards": Array [
                              Object {
                                "entries": Array [
                                  Object {
                                    "title": "foo",
                                  },
                                ],
                              },
                              Object {
                                "entries": Array [
                                  Object {
                                    "title": "bar",
                                  },
                                ],
                              },
                            ],
                          },
                        },
                      },
                      "onInteraction": [MockFunction],
                      "rootElement": [MockFunction],
                    },
                  },
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 1,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": FiberNode {
                      "_debugID": 1,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": [Circular],
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 1,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": null,
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div
                            class="bcs-section bcs-section-open"
                          >
                            <button
                              class="btn-plain bcs-section-title"
                              type="button"
                            >
                              <div />
                            </button>
                            <div
                              class="bcs-section-content"
                            />
                          </div>
                          <div
                            class="bcs-section bcs-section-open"
                          >
                            <button
                              class="btn-plain bcs-section-title"
                              type="button"
                            >
                              <div />
                            </button>
                            <div
                              class="bcs-section-content"
                            />
                          </div>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "finishedWork": null,
                        "hydrate": false,
                        "isReadyForCommit": false,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingContext": null,
                        "remainingExpirationTime": 0,
                      },
                      "tag": 3,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": null,
                        "callbackList": null,
                        "expirationTime": 1,
                        "first": Object {
                          "callback": null,
                          "expirationTime": 1,
                          "isForced": false,
                          "isReplace": false,
                          "next": null,
                          "nextCallback": null,
                          "partialState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                Object {
                                  "appElement": [MockFunction],
                                  "getPreviewer": [MockFunction],
                                  "metadata": Object {
                                    "global": Object {
                                      "boxSkillsCards": Object {
                                        "cards": Array [
                                          Object {
                                            "entries": Array [
                                              Object {
                                                "title": "foo",
                                              },
                                            ],
                                          },
                                          Object {
                                            "entries": Array [
                                              Object {
                                                "title": "bar",
                                              },
                                            ],
                                          },
                                        ],
                                      },
                                    },
                                  },
                                  "onInteraction": [MockFunction],
                                  "rootElement": [MockFunction],
                                }
                              }
                            />,
                          },
                        },
                        "hasForceUpdate": false,
                        "isInitialized": false,
                        "isProcessing": false,
                        "last": Object {
                          "callback": null,
                          "expirationTime": 1,
                          "isForced": false,
                          "isReplace": false,
                          "next": null,
                          "nextCallback": null,
                          "partialState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                Object {
                                  "appElement": [MockFunction],
                                  "getPreviewer": [MockFunction],
                                  "metadata": Object {
                                    "global": Object {
                                      "boxSkillsCards": Object {
                                        "cards": Array [
                                          Object {
                                            "entries": Array [
                                              Object {
                                                "title": "foo",
                                              },
                                            ],
                                          },
                                          Object {
                                            "entries": Array [
                                              Object {
                                                "title": "bar",
                                              },
                                            ],
                                          },
                                        ],
                                      },
                                    },
                                  },
                                  "onInteraction": [MockFunction],
                                  "rootElement": [MockFunction],
                                }
                              }
                            />,
                          },
                        },
                      },
                    },
                    "child": [Circular],
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": null,
                    "memoizedState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "appElement": [MockFunction],
                            "getPreviewer": [MockFunction],
                            "metadata": Object {
                              "global": Object {
                                "boxSkillsCards": Object {
                                  "cards": Array [
                                    Object {
                                      "entries": Array [
                                        Object {
                                          "title": "foo",
                                        },
                                      ],
                                    },
                                    Object {
                                      "entries": Array [
                                        Object {
                                          "title": "bar",
                                        },
                                      ],
                                    },
                                  ],
                                },
                              },
                            },
                            "onInteraction": [MockFunction],
                            "rootElement": [MockFunction],
                          }
                        }
                      />,
                    },
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <div
                          class="bcs-section bcs-section-open"
                        >
                          <button
                            class="btn-plain bcs-section-title"
                            type="button"
                          >
                            <div />
                          </button>
                          <div
                            class="bcs-section-content"
                          />
                        </div>
                        <div
                          class="bcs-section bcs-section-open"
                        >
                          <button
                            class="btn-plain bcs-section-title"
                            type="button"
                          >
                            <div />
                          </button>
                          <div
                            class="bcs-section-content"
                          />
                        </div>
                      </div>,
                      "context": Object {},
                      "current": [Circular],
                      "finishedWork": null,
                      "hydrate": false,
                      "isReadyForCommit": false,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingContext": null,
                      "remainingExpirationTime": 0,
                    },
                    "tag": 3,
                    "type": null,
                    "updateQueue": null,
                  },
                  "sibling": null,
                  "stateNode": WrapperComponent {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "props": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "appElement": [MockFunction],
                        "getPreviewer": [MockFunction],
                        "metadata": Object {
                          "global": Object {
                            "boxSkillsCards": Object {
                              "cards": Array [
                                Object {
                                  "entries": Array [
                                    Object {
                                      "title": "foo",
                                    },
                                  ],
                                },
                                Object {
                                  "entries": Array [
                                    Object {
                                      "title": "bar",
                                    },
                                  ],
                                },
                              ],
                            },
                          },
                        },
                        "onInteraction": [MockFunction],
                        "rootElement": [MockFunction],
                      },
                    },
                    "refs": Object {},
                    "state": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "appElement": [MockFunction],
                        "getPreviewer": [MockFunction],
                        "metadata": Object {
                          "global": Object {
                            "boxSkillsCards": Object {
                              "cards": Array [
                                Object {
                                  "entries": Array [
                                    Object {
                                      "title": "foo",
                                    },
                                  ],
                                },
                                Object {
                                  "entries": Array [
                                    Object {
                                      "title": "bar",
                                    },
                                  ],
                                },
                              ],
                            },
                          },
                        },
                        "onInteraction": [MockFunction],
                        "rootElement": [MockFunction],
                      },
                    },
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 2,
                  "type": [Function],
                  "updateQueue": null,
                },
                "sibling": null,
                "stateNode": null,
                "tag": 1,
                "type": [Function],
                "updateQueue": null,
              },
              "_debugSource": null,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 7,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 8,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 10,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 11,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": FiberNode {
                        "_debugID": 4,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": FiberNode {
                          "_debugID": 3,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "appElement": [MockFunction],
                              "getPreviewer": [MockFunction],
                              "metadata": Object {
                                "global": Object {
                                  "boxSkillsCards": Object {
                                    "cards": Array [
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "foo",
                                          },
                                        ],
                                      },
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "bar",
                                          },
                                        ],
                                      },
                                    ],
                                  },
                                },
                              },
                              "onInteraction": [MockFunction],
                              "rootElement": [MockFunction],
                            },
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "appElement": [MockFunction],
                              "getPreviewer": [MockFunction],
                              "metadata": Object {
                                "global": Object {
                                  "boxSkillsCards": Object {
                                    "cards": Array [
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "foo",
                                          },
                                        ],
                                      },
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "bar",
                                          },
                                        ],
                                      },
                                    ],
                                  },
                                },
                              },
                              "onInteraction": [MockFunction],
                              "rootElement": [MockFunction],
                            },
                          },
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": [Circular],
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 1,
                              "firstEffect": null,
                              "index": 0,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div
                                    class="bcs-section bcs-section-open"
                                  >
                                    <button
                                      class="btn-plain bcs-section-title"
                                      type="button"
                                    >
                                      <div />
                                    </button>
                                    <div
                                      class="bcs-section-content"
                                    />
                                  </div>
                                  <div
                                    class="bcs-section bcs-section-open"
                                  >
                                    <button
                                      class="btn-plain bcs-section-title"
                                      type="button"
                                    >
                                      <div />
                                    </button>
                                    <div
                                      class="bcs-section-content"
                                    />
                                  </div>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "hydrate": false,
                                "isReadyForCommit": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": null,
                                "callbackList": null,
                                "expirationTime": 1,
                                "first": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "nextCallback": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "appElement": [MockFunction],
                                          "getPreviewer": [MockFunction],
                                          "metadata": Object {
                                            "global": Object {
                                              "boxSkillsCards": Object {
                                                "cards": Array [
                                                  Object {
                                                    "entries": Array [
                                                      Object {
                                                        "title": "foo",
                                                      },
                                                    ],
                                                  },
                                                  Object {
                                                    "entries": Array [
                                                      Object {
                                                        "title": "bar",
                                                      },
                                                    ],
                                                  },
                                                ],
                                              },
                                            },
                                          },
                                          "onInteraction": [MockFunction],
                                          "rootElement": [MockFunction],
                                        }
                                      }
                                    />,
                                  },
                                },
                                "hasForceUpdate": false,
                                "isInitialized": false,
                                "isProcessing": false,
                                "last": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "nextCallback": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "appElement": [MockFunction],
                                          "getPreviewer": [MockFunction],
                                          "metadata": Object {
                                            "global": Object {
                                              "boxSkillsCards": Object {
                                                "cards": Array [
                                                  Object {
                                                    "entries": Array [
                                                      Object {
                                                        "title": "foo",
                                                      },
                                                    ],
                                                  },
                                                  Object {
                                                    "entries": Array [
                                                      Object {
                                                        "title": "bar",
                                                      },
                                                    ],
                                                  },
                                                ],
                                              },
                                            },
                                          },
                                          "onInteraction": [MockFunction],
                                          "rootElement": [MockFunction],
                                        }
                                      }
                                    />,
                                  },
                                },
                              },
                            },
                            "child": [Circular],
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "appElement": [MockFunction],
                                    "getPreviewer": [MockFunction],
                                    "metadata": Object {
                                      "global": Object {
                                        "boxSkillsCards": Object {
                                          "cards": Array [
                                            Object {
                                              "entries": Array [
                                                Object {
                                                  "title": "foo",
                                                },
                                              ],
                                            },
                                            Object {
                                              "entries": Array [
                                                Object {
                                                  "title": "bar",
                                                },
                                              ],
                                            },
                                          ],
                                        },
                                      },
                                    },
                                    "onInteraction": [MockFunction],
                                    "rootElement": [MockFunction],
                                  }
                                }
                              />,
                            },
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                  class="bcs-section bcs-section-open"
                                >
                                  <button
                                    class="btn-plain bcs-section-title"
                                    type="button"
                                  >
                                    <div />
                                  </button>
                                  <div
                                    class="bcs-section-content"
                                  />
                                </div>
                                <div
                                  class="bcs-section bcs-section-open"
                                >
                                  <button
                                    class="btn-plain bcs-section-title"
                                    type="button"
                                  >
                                    <div />
                                  </button>
                                  <div
                                    class="bcs-section-content"
                                  />
                                </div>
                              </div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "hydrate": false,
                              "isReadyForCommit": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": null,
                          },
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "appElement": [MockFunction],
                                "getPreviewer": [MockFunction],
                                "metadata": Object {
                                  "global": Object {
                                    "boxSkillsCards": Object {
                                      "cards": Array [
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "foo",
                                            },
                                          ],
                                        },
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "bar",
                                            },
                                          ],
                                        },
                                      ],
                                    },
                                  },
                                },
                                "onInteraction": [MockFunction],
                                "rootElement": [MockFunction],
                              },
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "appElement": [MockFunction],
                                "getPreviewer": [MockFunction],
                                "metadata": Object {
                                  "global": Object {
                                    "boxSkillsCards": Object {
                                      "cards": Array [
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "foo",
                                            },
                                          ],
                                        },
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "bar",
                                            },
                                          ],
                                        },
                                      ],
                                    },
                                  },
                                },
                                "onInteraction": [MockFunction],
                                "rootElement": [MockFunction],
                              },
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "appElement": [MockFunction],
                          "getPreviewer": [MockFunction],
                          "metadata": Object {
                            "global": Object {
                              "boxSkillsCards": Object {
                                "cards": Array [
                                  Object {
                                    "entries": Array [
                                      Object {
                                        "title": "foo",
                                      },
                                    ],
                                  },
                                  Object {
                                    "entries": Array [
                                      Object {
                                        "title": "bar",
                                      },
                                    ],
                                  },
                                ],
                              },
                            },
                          },
                          "onInteraction": [MockFunction],
                          "rootElement": [MockFunction],
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 3,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "appElement": [MockFunction],
                              "getPreviewer": [MockFunction],
                              "metadata": Object {
                                "global": Object {
                                  "boxSkillsCards": Object {
                                    "cards": Array [
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "foo",
                                          },
                                        ],
                                      },
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "bar",
                                          },
                                        ],
                                      },
                                    ],
                                  },
                                },
                              },
                              "onInteraction": [MockFunction],
                              "rootElement": [MockFunction],
                            },
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "appElement": [MockFunction],
                              "getPreviewer": [MockFunction],
                              "metadata": Object {
                                "global": Object {
                                  "boxSkillsCards": Object {
                                    "cards": Array [
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "foo",
                                          },
                                        ],
                                      },
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "bar",
                                          },
                                        ],
                                      },
                                    ],
                                  },
                                },
                              },
                              "onInteraction": [MockFunction],
                              "rootElement": [MockFunction],
                            },
                          },
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": [Circular],
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 1,
                              "firstEffect": null,
                              "index": 0,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div
                                    class="bcs-section bcs-section-open"
                                  >
                                    <button
                                      class="btn-plain bcs-section-title"
                                      type="button"
                                    >
                                      <div />
                                    </button>
                                    <div
                                      class="bcs-section-content"
                                    />
                                  </div>
                                  <div
                                    class="bcs-section bcs-section-open"
                                  >
                                    <button
                                      class="btn-plain bcs-section-title"
                                      type="button"
                                    >
                                      <div />
                                    </button>
                                    <div
                                      class="bcs-section-content"
                                    />
                                  </div>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "hydrate": false,
                                "isReadyForCommit": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": null,
                                "callbackList": null,
                                "expirationTime": 1,
                                "first": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "nextCallback": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "appElement": [MockFunction],
                                          "getPreviewer": [MockFunction],
                                          "metadata": Object {
                                            "global": Object {
                                              "boxSkillsCards": Object {
                                                "cards": Array [
                                                  Object {
                                                    "entries": Array [
                                                      Object {
                                                        "title": "foo",
                                                      },
                                                    ],
                                                  },
                                                  Object {
                                                    "entries": Array [
                                                      Object {
                                                        "title": "bar",
                                                      },
                                                    ],
                                                  },
                                                ],
                                              },
                                            },
                                          },
                                          "onInteraction": [MockFunction],
                                          "rootElement": [MockFunction],
                                        }
                                      }
                                    />,
                                  },
                                },
                                "hasForceUpdate": false,
                                "isInitialized": false,
                                "isProcessing": false,
                                "last": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "nextCallback": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "appElement": [MockFunction],
                                          "getPreviewer": [MockFunction],
                                          "metadata": Object {
                                            "global": Object {
                                              "boxSkillsCards": Object {
                                                "cards": Array [
                                                  Object {
                                                    "entries": Array [
                                                      Object {
                                                        "title": "foo",
                                                      },
                                                    ],
                                                  },
                                                  Object {
                                                    "entries": Array [
                                                      Object {
                                                        "title": "bar",
                                                      },
                                                    ],
                                                  },
                                                ],
                                              },
                                            },
                                          },
                                          "onInteraction": [MockFunction],
                                          "rootElement": [MockFunction],
                                        }
                                      }
                                    />,
                                  },
                                },
                              },
                            },
                            "child": [Circular],
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "appElement": [MockFunction],
                                    "getPreviewer": [MockFunction],
                                    "metadata": Object {
                                      "global": Object {
                                        "boxSkillsCards": Object {
                                          "cards": Array [
                                            Object {
                                              "entries": Array [
                                                Object {
                                                  "title": "foo",
                                                },
                                              ],
                                            },
                                            Object {
                                              "entries": Array [
                                                Object {
                                                  "title": "bar",
                                                },
                                              ],
                                            },
                                          ],
                                        },
                                      },
                                    },
                                    "onInteraction": [MockFunction],
                                    "rootElement": [MockFunction],
                                  }
                                }
                              />,
                            },
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                  class="bcs-section bcs-section-open"
                                >
                                  <button
                                    class="btn-plain bcs-section-title"
                                    type="button"
                                  >
                                    <div />
                                  </button>
                                  <div
                                    class="bcs-section-content"
                                  />
                                </div>
                                <div
                                  class="bcs-section bcs-section-open"
                                >
                                  <button
                                    class="btn-plain bcs-section-title"
                                    type="button"
                                  >
                                    <div />
                                  </button>
                                  <div
                                    class="bcs-section-content"
                                  />
                                </div>
                              </div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "hydrate": false,
                              "isReadyForCommit": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": null,
                          },
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "appElement": [MockFunction],
                                "getPreviewer": [MockFunction],
                                "metadata": Object {
                                  "global": Object {
                                    "boxSkillsCards": Object {
                                      "cards": Array [
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "foo",
                                            },
                                          ],
                                        },
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "bar",
                                            },
                                          ],
                                        },
                                      ],
                                    },
                                  },
                                },
                                "onInteraction": [MockFunction],
                                "rootElement": [MockFunction],
                              },
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "appElement": [MockFunction],
                                "getPreviewer": [MockFunction],
                                "metadata": Object {
                                  "global": Object {
                                    "boxSkillsCards": Object {
                                      "cards": Array [
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "foo",
                                            },
                                          ],
                                        },
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "bar",
                                            },
                                          ],
                                        },
                                      ],
                                    },
                                  },
                                },
                                "onInteraction": [MockFunction],
                                "rootElement": [MockFunction],
                              },
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": null,
                        "tag": 1,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": null,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 12,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "alternate": null,
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {},
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": <div />,
                        "tag": 5,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {},
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": null,
                      "tag": 1,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": <FormattedMessage />,
                      "className": "btn-plain bcs-section-title",
                      "onClick": [Function],
                      "type": "button",
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": <button
                      class="btn-plain bcs-section-title"
                      type="button"
                    >
                      <div />
                    </button>,
                    "tag": 5,
                    "type": "button",
                    "updateQueue": null,
                  },
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": <FormattedMessage />,
                    "className": "bcs-section-title",
                    "onClick": [Function],
                    "type": "button",
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": [Circular],
                  "sibling": FiberNode {
                    "_debugID": 9,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 13,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": FiberNode {
                        "_debugID": 4,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": FiberNode {
                          "_debugID": 3,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "appElement": [MockFunction],
                              "getPreviewer": [MockFunction],
                              "metadata": Object {
                                "global": Object {
                                  "boxSkillsCards": Object {
                                    "cards": Array [
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "foo",
                                          },
                                        ],
                                      },
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "bar",
                                          },
                                        ],
                                      },
                                    ],
                                  },
                                },
                              },
                              "onInteraction": [MockFunction],
                              "rootElement": [MockFunction],
                            },
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "appElement": [MockFunction],
                              "getPreviewer": [MockFunction],
                              "metadata": Object {
                                "global": Object {
                                  "boxSkillsCards": Object {
                                    "cards": Array [
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "foo",
                                          },
                                        ],
                                      },
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "bar",
                                          },
                                        ],
                                      },
                                    ],
                                  },
                                },
                              },
                              "onInteraction": [MockFunction],
                              "rootElement": [MockFunction],
                            },
                          },
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": [Circular],
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 1,
                              "firstEffect": null,
                              "index": 0,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div
                                    class="bcs-section bcs-section-open"
                                  >
                                    <button
                                      class="btn-plain bcs-section-title"
                                      type="button"
                                    >
                                      <div />
                                    </button>
                                    <div
                                      class="bcs-section-content"
                                    />
                                  </div>
                                  <div
                                    class="bcs-section bcs-section-open"
                                  >
                                    <button
                                      class="btn-plain bcs-section-title"
                                      type="button"
                                    >
                                      <div />
                                    </button>
                                    <div
                                      class="bcs-section-content"
                                    />
                                  </div>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "hydrate": false,
                                "isReadyForCommit": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": null,
                                "callbackList": null,
                                "expirationTime": 1,
                                "first": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "nextCallback": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "appElement": [MockFunction],
                                          "getPreviewer": [MockFunction],
                                          "metadata": Object {
                                            "global": Object {
                                              "boxSkillsCards": Object {
                                                "cards": Array [
                                                  Object {
                                                    "entries": Array [
                                                      Object {
                                                        "title": "foo",
                                                      },
                                                    ],
                                                  },
                                                  Object {
                                                    "entries": Array [
                                                      Object {
                                                        "title": "bar",
                                                      },
                                                    ],
                                                  },
                                                ],
                                              },
                                            },
                                          },
                                          "onInteraction": [MockFunction],
                                          "rootElement": [MockFunction],
                                        }
                                      }
                                    />,
                                  },
                                },
                                "hasForceUpdate": false,
                                "isInitialized": false,
                                "isProcessing": false,
                                "last": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "nextCallback": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "appElement": [MockFunction],
                                          "getPreviewer": [MockFunction],
                                          "metadata": Object {
                                            "global": Object {
                                              "boxSkillsCards": Object {
                                                "cards": Array [
                                                  Object {
                                                    "entries": Array [
                                                      Object {
                                                        "title": "foo",
                                                      },
                                                    ],
                                                  },
                                                  Object {
                                                    "entries": Array [
                                                      Object {
                                                        "title": "bar",
                                                      },
                                                    ],
                                                  },
                                                ],
                                              },
                                            },
                                          },
                                          "onInteraction": [MockFunction],
                                          "rootElement": [MockFunction],
                                        }
                                      }
                                    />,
                                  },
                                },
                              },
                            },
                            "child": [Circular],
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "appElement": [MockFunction],
                                    "getPreviewer": [MockFunction],
                                    "metadata": Object {
                                      "global": Object {
                                        "boxSkillsCards": Object {
                                          "cards": Array [
                                            Object {
                                              "entries": Array [
                                                Object {
                                                  "title": "foo",
                                                },
                                              ],
                                            },
                                            Object {
                                              "entries": Array [
                                                Object {
                                                  "title": "bar",
                                                },
                                              ],
                                            },
                                          ],
                                        },
                                      },
                                    },
                                    "onInteraction": [MockFunction],
                                    "rootElement": [MockFunction],
                                  }
                                }
                              />,
                            },
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                  class="bcs-section bcs-section-open"
                                >
                                  <button
                                    class="btn-plain bcs-section-title"
                                    type="button"
                                  >
                                    <div />
                                  </button>
                                  <div
                                    class="bcs-section-content"
                                  />
                                </div>
                                <div
                                  class="bcs-section bcs-section-open"
                                >
                                  <button
                                    class="btn-plain bcs-section-title"
                                    type="button"
                                  >
                                    <div />
                                  </button>
                                  <div
                                    class="bcs-section-content"
                                  />
                                </div>
                              </div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "hydrate": false,
                              "isReadyForCommit": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": null,
                          },
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "appElement": [MockFunction],
                                "getPreviewer": [MockFunction],
                                "metadata": Object {
                                  "global": Object {
                                    "boxSkillsCards": Object {
                                      "cards": Array [
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "foo",
                                            },
                                          ],
                                        },
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "bar",
                                            },
                                          ],
                                        },
                                      ],
                                    },
                                  },
                                },
                                "onInteraction": [MockFunction],
                                "rootElement": [MockFunction],
                              },
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "appElement": [MockFunction],
                                "getPreviewer": [MockFunction],
                                "metadata": Object {
                                  "global": Object {
                                    "boxSkillsCards": Object {
                                      "cards": Array [
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "foo",
                                            },
                                          ],
                                        },
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "bar",
                                            },
                                          ],
                                        },
                                      ],
                                    },
                                  },
                                },
                                "onInteraction": [MockFunction],
                                "rootElement": [MockFunction],
                              },
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "appElement": [MockFunction],
                          "getPreviewer": [MockFunction],
                          "metadata": Object {
                            "global": Object {
                              "boxSkillsCards": Object {
                                "cards": Array [
                                  Object {
                                    "entries": Array [
                                      Object {
                                        "title": "foo",
                                      },
                                    ],
                                  },
                                  Object {
                                    "entries": Array [
                                      Object {
                                        "title": "bar",
                                      },
                                    ],
                                  },
                                ],
                              },
                            },
                          },
                          "onInteraction": [MockFunction],
                          "rootElement": [MockFunction],
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 3,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "appElement": [MockFunction],
                              "getPreviewer": [MockFunction],
                              "metadata": Object {
                                "global": Object {
                                  "boxSkillsCards": Object {
                                    "cards": Array [
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "foo",
                                          },
                                        ],
                                      },
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "bar",
                                          },
                                        ],
                                      },
                                    ],
                                  },
                                },
                              },
                              "onInteraction": [MockFunction],
                              "rootElement": [MockFunction],
                            },
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "appElement": [MockFunction],
                              "getPreviewer": [MockFunction],
                              "metadata": Object {
                                "global": Object {
                                  "boxSkillsCards": Object {
                                    "cards": Array [
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "foo",
                                          },
                                        ],
                                      },
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "bar",
                                          },
                                        ],
                                      },
                                    ],
                                  },
                                },
                              },
                              "onInteraction": [MockFunction],
                              "rootElement": [MockFunction],
                            },
                          },
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": [Circular],
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 1,
                              "firstEffect": null,
                              "index": 0,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div
                                    class="bcs-section bcs-section-open"
                                  >
                                    <button
                                      class="btn-plain bcs-section-title"
                                      type="button"
                                    >
                                      <div />
                                    </button>
                                    <div
                                      class="bcs-section-content"
                                    />
                                  </div>
                                  <div
                                    class="bcs-section bcs-section-open"
                                  >
                                    <button
                                      class="btn-plain bcs-section-title"
                                      type="button"
                                    >
                                      <div />
                                    </button>
                                    <div
                                      class="bcs-section-content"
                                    />
                                  </div>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "hydrate": false,
                                "isReadyForCommit": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": null,
                                "callbackList": null,
                                "expirationTime": 1,
                                "first": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "nextCallback": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "appElement": [MockFunction],
                                          "getPreviewer": [MockFunction],
                                          "metadata": Object {
                                            "global": Object {
                                              "boxSkillsCards": Object {
                                                "cards": Array [
                                                  Object {
                                                    "entries": Array [
                                                      Object {
                                                        "title": "foo",
                                                      },
                                                    ],
                                                  },
                                                  Object {
                                                    "entries": Array [
                                                      Object {
                                                        "title": "bar",
                                                      },
                                                    ],
                                                  },
                                                ],
                                              },
                                            },
                                          },
                                          "onInteraction": [MockFunction],
                                          "rootElement": [MockFunction],
                                        }
                                      }
                                    />,
                                  },
                                },
                                "hasForceUpdate": false,
                                "isInitialized": false,
                                "isProcessing": false,
                                "last": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "nextCallback": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "appElement": [MockFunction],
                                          "getPreviewer": [MockFunction],
                                          "metadata": Object {
                                            "global": Object {
                                              "boxSkillsCards": Object {
                                                "cards": Array [
                                                  Object {
                                                    "entries": Array [
                                                      Object {
                                                        "title": "foo",
                                                      },
                                                    ],
                                                  },
                                                  Object {
                                                    "entries": Array [
                                                      Object {
                                                        "title": "bar",
                                                      },
                                                    ],
                                                  },
                                                ],
                                              },
                                            },
                                          },
                                          "onInteraction": [MockFunction],
                                          "rootElement": [MockFunction],
                                        }
                                      }
                                    />,
                                  },
                                },
                              },
                            },
                            "child": [Circular],
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "appElement": [MockFunction],
                                    "getPreviewer": [MockFunction],
                                    "metadata": Object {
                                      "global": Object {
                                        "boxSkillsCards": Object {
                                          "cards": Array [
                                            Object {
                                              "entries": Array [
                                                Object {
                                                  "title": "foo",
                                                },
                                              ],
                                            },
                                            Object {
                                              "entries": Array [
                                                Object {
                                                  "title": "bar",
                                                },
                                              ],
                                            },
                                          ],
                                        },
                                      },
                                    },
                                    "onInteraction": [MockFunction],
                                    "rootElement": [MockFunction],
                                  }
                                }
                              />,
                            },
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                  class="bcs-section bcs-section-open"
                                >
                                  <button
                                    class="btn-plain bcs-section-title"
                                    type="button"
                                  >
                                    <div />
                                  </button>
                                  <div
                                    class="bcs-section-content"
                                  />
                                </div>
                                <div
                                  class="bcs-section bcs-section-open"
                                >
                                  <button
                                    class="btn-plain bcs-section-title"
                                    type="button"
                                  >
                                    <div />
                                  </button>
                                  <div
                                    class="bcs-section-content"
                                  />
                                </div>
                              </div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "hydrate": false,
                              "isReadyForCommit": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": null,
                          },
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "appElement": [MockFunction],
                                "getPreviewer": [MockFunction],
                                "metadata": Object {
                                  "global": Object {
                                    "boxSkillsCards": Object {
                                      "cards": Array [
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "foo",
                                            },
                                          ],
                                        },
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "bar",
                                            },
                                          ],
                                        },
                                      ],
                                    },
                                  },
                                },
                                "onInteraction": [MockFunction],
                                "rootElement": [MockFunction],
                              },
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "appElement": [MockFunction],
                                "getPreviewer": [MockFunction],
                                "metadata": Object {
                                  "global": Object {
                                    "boxSkillsCards": Object {
                                      "cards": Array [
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "foo",
                                            },
                                          ],
                                        },
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "bar",
                                            },
                                          ],
                                        },
                                      ],
                                    },
                                  },
                                },
                                "onInteraction": [MockFunction],
                                "rootElement": [MockFunction],
                              },
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": null,
                        "tag": 1,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": null,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 14,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "alternate": null,
                        "child": null,
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "appElement": [MockFunction],
                          "getPreviewer": [MockFunction],
                          "onInteraction": [MockFunction],
                          "rootElement": [MockFunction],
                          "skill": Object {
                            "entries": Array [
                              Object {
                                "title": "foo",
                              },
                            ],
                          },
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": null,
                        "tag": 1,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "appElement": [MockFunction],
                        "getPreviewer": [MockFunction],
                        "maskError": undefined,
                        "onInteraction": [MockFunction],
                        "rootElement": [MockFunction],
                        "skill": Object {
                          "entries": Array [
                            Object {
                              "title": "foo",
                            },
                          ],
                        },
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": null,
                      "tag": 1,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 1,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": <Unknown
                        appElement={[MockFunction]}
                        getPreviewer={[MockFunction]}
                        maskError={undefined}
                        onInteraction={[MockFunction]}
                        rootElement={[MockFunction]}
                        skill={
                          Object {
                            "entries": Array [
                              Object {
                                "title": "foo",
                              },
                            ],
                          }
                        }
                      />,
                      "className": "bcs-section-content",
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": <div
                      class="bcs-section-content"
                    />,
                    "tag": 5,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "stateNode": null,
                  "tag": 1,
                  "type": [Function],
                  "updateQueue": null,
                },
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <PlainButton
                      className="bcs-section-title"
                      onClick={[Function]}
                      type="button"
                    >
                      <FormattedMessage />
                    </PlainButton>,
                    <div
                      className="bcs-section-content"
                    >
                      <Unknown
                        appElement={[MockFunction]}
                        getPreviewer={[MockFunction]}
                        maskError={undefined}
                        onInteraction={[MockFunction]}
                        rootElement={[MockFunction]}
                        skill={
                          Object {
                            "entries": Array [
                              Object {
                                "title": "foo",
                              },
                            ],
                          }
                        }
                      />
                    </div>,
                  ],
                  "className": "bcs-section bcs-section-open",
                },
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": [Circular],
                "sibling": null,
                "stateNode": <div
                  class="bcs-section bcs-section-open"
                >
                  <button
                    class="btn-plain bcs-section-title"
                    type="button"
                  >
                    <div />
                  </button>
                  <div
                    class="bcs-section-content"
                  />
                </div>,
                "tag": 5,
                "type": "div",
                "updateQueue": null,
              },
              "effectTag": 1,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "internalContextTag": 0,
              "key": "0",
              "lastEffect": null,
              "memoizedProps": Object {
                "children": <Unknown
                  appElement={[MockFunction]}
                  getPreviewer={[MockFunction]}
                  maskError={undefined}
                  onInteraction={[MockFunction]}
                  rootElement={[MockFunction]}
                  skill={
                    Object {
                      "entries": Array [
                        Object {
                          "title": "foo",
                        },
                      ],
                    }
                  }
                />,
                "className": "",
                "isOpen": true,
                "title": <FormattedMessage />,
              },
              "memoizedState": Object {
                "isOpen": true,
              },
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": FiberNode {
                "_debugID": 4,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": FiberNode {
                  "_debugID": 3,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": null,
                  "child": [Circular],
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "appElement": [MockFunction],
                      "getPreviewer": [MockFunction],
                      "metadata": Object {
                        "global": Object {
                          "boxSkillsCards": Object {
                            "cards": Array [
                              Object {
                                "entries": Array [
                                  Object {
                                    "title": "foo",
                                  },
                                ],
                              },
                              Object {
                                "entries": Array [
                                  Object {
                                    "title": "bar",
                                  },
                                ],
                              },
                            ],
                          },
                        },
                      },
                      "onInteraction": [MockFunction],
                      "rootElement": [MockFunction],
                    },
                  },
                  "memoizedState": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "appElement": [MockFunction],
                      "getPreviewer": [MockFunction],
                      "metadata": Object {
                        "global": Object {
                          "boxSkillsCards": Object {
                            "cards": Array [
                              Object {
                                "entries": Array [
                                  Object {
                                    "title": "foo",
                                  },
                                ],
                              },
                              Object {
                                "entries": Array [
                                  Object {
                                    "title": "bar",
                                  },
                                ],
                              },
                            ],
                          },
                        },
                      },
                      "onInteraction": [MockFunction],
                      "rootElement": [MockFunction],
                    },
                  },
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 1,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": FiberNode {
                      "_debugID": 1,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": [Circular],
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 1,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": null,
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div
                            class="bcs-section bcs-section-open"
                          >
                            <button
                              class="btn-plain bcs-section-title"
                              type="button"
                            >
                              <div />
                            </button>
                            <div
                              class="bcs-section-content"
                            />
                          </div>
                          <div
                            class="bcs-section bcs-section-open"
                          >
                            <button
                              class="btn-plain bcs-section-title"
                              type="button"
                            >
                              <div />
                            </button>
                            <div
                              class="bcs-section-content"
                            />
                          </div>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "finishedWork": null,
                        "hydrate": false,
                        "isReadyForCommit": false,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingContext": null,
                        "remainingExpirationTime": 0,
                      },
                      "tag": 3,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": null,
                        "callbackList": null,
                        "expirationTime": 1,
                        "first": Object {
                          "callback": null,
                          "expirationTime": 1,
                          "isForced": false,
                          "isReplace": false,
                          "next": null,
                          "nextCallback": null,
                          "partialState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                Object {
                                  "appElement": [MockFunction],
                                  "getPreviewer": [MockFunction],
                                  "metadata": Object {
                                    "global": Object {
                                      "boxSkillsCards": Object {
                                        "cards": Array [
                                          Object {
                                            "entries": Array [
                                              Object {
                                                "title": "foo",
                                              },
                                            ],
                                          },
                                          Object {
                                            "entries": Array [
                                              Object {
                                                "title": "bar",
                                              },
                                            ],
                                          },
                                        ],
                                      },
                                    },
                                  },
                                  "onInteraction": [MockFunction],
                                  "rootElement": [MockFunction],
                                }
                              }
                            />,
                          },
                        },
                        "hasForceUpdate": false,
                        "isInitialized": false,
                        "isProcessing": false,
                        "last": Object {
                          "callback": null,
                          "expirationTime": 1,
                          "isForced": false,
                          "isReplace": false,
                          "next": null,
                          "nextCallback": null,
                          "partialState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                Object {
                                  "appElement": [MockFunction],
                                  "getPreviewer": [MockFunction],
                                  "metadata": Object {
                                    "global": Object {
                                      "boxSkillsCards": Object {
                                        "cards": Array [
                                          Object {
                                            "entries": Array [
                                              Object {
                                                "title": "foo",
                                              },
                                            ],
                                          },
                                          Object {
                                            "entries": Array [
                                              Object {
                                                "title": "bar",
                                              },
                                            ],
                                          },
                                        ],
                                      },
                                    },
                                  },
                                  "onInteraction": [MockFunction],
                                  "rootElement": [MockFunction],
                                }
                              }
                            />,
                          },
                        },
                      },
                    },
                    "child": [Circular],
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": null,
                    "memoizedState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "appElement": [MockFunction],
                            "getPreviewer": [MockFunction],
                            "metadata": Object {
                              "global": Object {
                                "boxSkillsCards": Object {
                                  "cards": Array [
                                    Object {
                                      "entries": Array [
                                        Object {
                                          "title": "foo",
                                        },
                                      ],
                                    },
                                    Object {
                                      "entries": Array [
                                        Object {
                                          "title": "bar",
                                        },
                                      ],
                                    },
                                  ],
                                },
                              },
                            },
                            "onInteraction": [MockFunction],
                            "rootElement": [MockFunction],
                          }
                        }
                      />,
                    },
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <div
                          class="bcs-section bcs-section-open"
                        >
                          <button
                            class="btn-plain bcs-section-title"
                            type="button"
                          >
                            <div />
                          </button>
                          <div
                            class="bcs-section-content"
                          />
                        </div>
                        <div
                          class="bcs-section bcs-section-open"
                        >
                          <button
                            class="btn-plain bcs-section-title"
                            type="button"
                          >
                            <div />
                          </button>
                          <div
                            class="bcs-section-content"
                          />
                        </div>
                      </div>,
                      "context": Object {},
                      "current": [Circular],
                      "finishedWork": null,
                      "hydrate": false,
                      "isReadyForCommit": false,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingContext": null,
                      "remainingExpirationTime": 0,
                    },
                    "tag": 3,
                    "type": null,
                    "updateQueue": null,
                  },
                  "sibling": null,
                  "stateNode": WrapperComponent {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "props": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "appElement": [MockFunction],
                        "getPreviewer": [MockFunction],
                        "metadata": Object {
                          "global": Object {
                            "boxSkillsCards": Object {
                              "cards": Array [
                                Object {
                                  "entries": Array [
                                    Object {
                                      "title": "foo",
                                    },
                                  ],
                                },
                                Object {
                                  "entries": Array [
                                    Object {
                                      "title": "bar",
                                    },
                                  ],
                                },
                              ],
                            },
                          },
                        },
                        "onInteraction": [MockFunction],
                        "rootElement": [MockFunction],
                      },
                    },
                    "refs": Object {},
                    "state": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "appElement": [MockFunction],
                        "getPreviewer": [MockFunction],
                        "metadata": Object {
                          "global": Object {
                            "boxSkillsCards": Object {
                              "cards": Array [
                                Object {
                                  "entries": Array [
                                    Object {
                                      "title": "foo",
                                    },
                                  ],
                                },
                                Object {
                                  "entries": Array [
                                    Object {
                                      "title": "bar",
                                    },
                                  ],
                                },
                              ],
                            },
                          },
                        },
                        "onInteraction": [MockFunction],
                        "rootElement": [MockFunction],
                      },
                    },
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 2,
                  "type": [Function],
                  "updateQueue": null,
                },
                "_debugSource": null,
                "alternate": null,
                "child": [Circular],
                "effectTag": 1,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "appElement": [MockFunction],
                  "getPreviewer": [MockFunction],
                  "metadata": Object {
                    "global": Object {
                      "boxSkillsCards": Object {
                        "cards": Array [
                          Object {
                            "entries": Array [
                              Object {
                                "title": "foo",
                              },
                            ],
                          },
                          Object {
                            "entries": Array [
                              Object {
                                "title": "bar",
                              },
                            ],
                          },
                        ],
                      },
                    },
                  },
                  "onInteraction": [MockFunction],
                  "rootElement": [MockFunction],
                },
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": FiberNode {
                  "_debugID": 3,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": null,
                  "child": [Circular],
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "appElement": [MockFunction],
                      "getPreviewer": [MockFunction],
                      "metadata": Object {
                        "global": Object {
                          "boxSkillsCards": Object {
                            "cards": Array [
                              Object {
                                "entries": Array [
                                  Object {
                                    "title": "foo",
                                  },
                                ],
                              },
                              Object {
                                "entries": Array [
                                  Object {
                                    "title": "bar",
                                  },
                                ],
                              },
                            ],
                          },
                        },
                      },
                      "onInteraction": [MockFunction],
                      "rootElement": [MockFunction],
                    },
                  },
                  "memoizedState": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "appElement": [MockFunction],
                      "getPreviewer": [MockFunction],
                      "metadata": Object {
                        "global": Object {
                          "boxSkillsCards": Object {
                            "cards": Array [
                              Object {
                                "entries": Array [
                                  Object {
                                    "title": "foo",
                                  },
                                ],
                              },
                              Object {
                                "entries": Array [
                                  Object {
                                    "title": "bar",
                                  },
                                ],
                              },
                            ],
                          },
                        },
                      },
                      "onInteraction": [MockFunction],
                      "rootElement": [MockFunction],
                    },
                  },
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 1,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": FiberNode {
                      "_debugID": 1,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": [Circular],
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 1,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": null,
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div
                            class="bcs-section bcs-section-open"
                          >
                            <button
                              class="btn-plain bcs-section-title"
                              type="button"
                            >
                              <div />
                            </button>
                            <div
                              class="bcs-section-content"
                            />
                          </div>
                          <div
                            class="bcs-section bcs-section-open"
                          >
                            <button
                              class="btn-plain bcs-section-title"
                              type="button"
                            >
                              <div />
                            </button>
                            <div
                              class="bcs-section-content"
                            />
                          </div>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "finishedWork": null,
                        "hydrate": false,
                        "isReadyForCommit": false,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingContext": null,
                        "remainingExpirationTime": 0,
                      },
                      "tag": 3,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": null,
                        "callbackList": null,
                        "expirationTime": 1,
                        "first": Object {
                          "callback": null,
                          "expirationTime": 1,
                          "isForced": false,
                          "isReplace": false,
                          "next": null,
                          "nextCallback": null,
                          "partialState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                Object {
                                  "appElement": [MockFunction],
                                  "getPreviewer": [MockFunction],
                                  "metadata": Object {
                                    "global": Object {
                                      "boxSkillsCards": Object {
                                        "cards": Array [
                                          Object {
                                            "entries": Array [
                                              Object {
                                                "title": "foo",
                                              },
                                            ],
                                          },
                                          Object {
                                            "entries": Array [
                                              Object {
                                                "title": "bar",
                                              },
                                            ],
                                          },
                                        ],
                                      },
                                    },
                                  },
                                  "onInteraction": [MockFunction],
                                  "rootElement": [MockFunction],
                                }
                              }
                            />,
                          },
                        },
                        "hasForceUpdate": false,
                        "isInitialized": false,
                        "isProcessing": false,
                        "last": Object {
                          "callback": null,
                          "expirationTime": 1,
                          "isForced": false,
                          "isReplace": false,
                          "next": null,
                          "nextCallback": null,
                          "partialState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                Object {
                                  "appElement": [MockFunction],
                                  "getPreviewer": [MockFunction],
                                  "metadata": Object {
                                    "global": Object {
                                      "boxSkillsCards": Object {
                                        "cards": Array [
                                          Object {
                                            "entries": Array [
                                              Object {
                                                "title": "foo",
                                              },
                                            ],
                                          },
                                          Object {
                                            "entries": Array [
                                              Object {
                                                "title": "bar",
                                              },
                                            ],
                                          },
                                        ],
                                      },
                                    },
                                  },
                                  "onInteraction": [MockFunction],
                                  "rootElement": [MockFunction],
                                }
                              }
                            />,
                          },
                        },
                      },
                    },
                    "child": [Circular],
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": null,
                    "memoizedState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "appElement": [MockFunction],
                            "getPreviewer": [MockFunction],
                            "metadata": Object {
                              "global": Object {
                                "boxSkillsCards": Object {
                                  "cards": Array [
                                    Object {
                                      "entries": Array [
                                        Object {
                                          "title": "foo",
                                        },
                                      ],
                                    },
                                    Object {
                                      "entries": Array [
                                        Object {
                                          "title": "bar",
                                        },
                                      ],
                                    },
                                  ],
                                },
                              },
                            },
                            "onInteraction": [MockFunction],
                            "rootElement": [MockFunction],
                          }
                        }
                      />,
                    },
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <div
                          class="bcs-section bcs-section-open"
                        >
                          <button
                            class="btn-plain bcs-section-title"
                            type="button"
                          >
                            <div />
                          </button>
                          <div
                            class="bcs-section-content"
                          />
                        </div>
                        <div
                          class="bcs-section bcs-section-open"
                        >
                          <button
                            class="btn-plain bcs-section-title"
                            type="button"
                          >
                            <div />
                          </button>
                          <div
                            class="bcs-section-content"
                          />
                        </div>
                      </div>,
                      "context": Object {},
                      "current": [Circular],
                      "finishedWork": null,
                      "hydrate": false,
                      "isReadyForCommit": false,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingContext": null,
                      "remainingExpirationTime": 0,
                    },
                    "tag": 3,
                    "type": null,
                    "updateQueue": null,
                  },
                  "sibling": null,
                  "stateNode": WrapperComponent {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "props": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "appElement": [MockFunction],
                        "getPreviewer": [MockFunction],
                        "metadata": Object {
                          "global": Object {
                            "boxSkillsCards": Object {
                              "cards": Array [
                                Object {
                                  "entries": Array [
                                    Object {
                                      "title": "foo",
                                    },
                                  ],
                                },
                                Object {
                                  "entries": Array [
                                    Object {
                                      "title": "bar",
                                    },
                                  ],
                                },
                              ],
                            },
                          },
                        },
                        "onInteraction": [MockFunction],
                        "rootElement": [MockFunction],
                      },
                    },
                    "refs": Object {},
                    "state": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "appElement": [MockFunction],
                        "getPreviewer": [MockFunction],
                        "metadata": Object {
                          "global": Object {
                            "boxSkillsCards": Object {
                              "cards": Array [
                                Object {
                                  "entries": Array [
                                    Object {
                                      "title": "foo",
                                    },
                                  ],
                                },
                                Object {
                                  "entries": Array [
                                    Object {
                                      "title": "bar",
                                    },
                                  ],
                                },
                              ],
                            },
                          },
                        },
                        "onInteraction": [MockFunction],
                        "rootElement": [MockFunction],
                      },
                    },
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 2,
                  "type": [Function],
                  "updateQueue": null,
                },
                "sibling": null,
                "stateNode": null,
                "tag": 1,
                "type": [Function],
                "updateQueue": null,
              },
              "sibling": FiberNode {
                "_debugID": 6,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": FiberNode {
                  "_debugID": 4,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": FiberNode {
                    "_debugID": 3,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "appElement": [MockFunction],
                        "getPreviewer": [MockFunction],
                        "metadata": Object {
                          "global": Object {
                            "boxSkillsCards": Object {
                              "cards": Array [
                                Object {
                                  "entries": Array [
                                    Object {
                                      "title": "foo",
                                    },
                                  ],
                                },
                                Object {
                                  "entries": Array [
                                    Object {
                                      "title": "bar",
                                    },
                                  ],
                                },
                              ],
                            },
                          },
                        },
                        "onInteraction": [MockFunction],
                        "rootElement": [MockFunction],
                      },
                    },
                    "memoizedState": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "appElement": [MockFunction],
                        "getPreviewer": [MockFunction],
                        "metadata": Object {
                          "global": Object {
                            "boxSkillsCards": Object {
                              "cards": Array [
                                Object {
                                  "entries": Array [
                                    Object {
                                      "title": "foo",
                                    },
                                  ],
                                },
                                Object {
                                  "entries": Array [
                                    Object {
                                      "title": "bar",
                                    },
                                  ],
                                },
                              ],
                            },
                          },
                        },
                        "onInteraction": [MockFunction],
                        "rootElement": [MockFunction],
                      },
                    },
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 1,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": [Circular],
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 1,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div
                              class="bcs-section bcs-section-open"
                            >
                              <button
                                class="btn-plain bcs-section-title"
                                type="button"
                              >
                                <div />
                              </button>
                              <div
                                class="bcs-section-content"
                              />
                            </div>
                            <div
                              class="bcs-section bcs-section-open"
                            >
                              <button
                                class="btn-plain bcs-section-title"
                                type="button"
                              >
                                <div />
                              </button>
                              <div
                                class="bcs-section-content"
                              />
                            </div>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedWork": null,
                          "hydrate": false,
                          "isReadyForCommit": false,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": null,
                          "callbackList": null,
                          "expirationTime": 1,
                          "first": Object {
                            "callback": null,
                            "expirationTime": 1,
                            "isForced": false,
                            "isReplace": false,
                            "next": null,
                            "nextCallback": null,
                            "partialState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "appElement": [MockFunction],
                                    "getPreviewer": [MockFunction],
                                    "metadata": Object {
                                      "global": Object {
                                        "boxSkillsCards": Object {
                                          "cards": Array [
                                            Object {
                                              "entries": Array [
                                                Object {
                                                  "title": "foo",
                                                },
                                              ],
                                            },
                                            Object {
                                              "entries": Array [
                                                Object {
                                                  "title": "bar",
                                                },
                                              ],
                                            },
                                          ],
                                        },
                                      },
                                    },
                                    "onInteraction": [MockFunction],
                                    "rootElement": [MockFunction],
                                  }
                                }
                              />,
                            },
                          },
                          "hasForceUpdate": false,
                          "isInitialized": false,
                          "isProcessing": false,
                          "last": Object {
                            "callback": null,
                            "expirationTime": 1,
                            "isForced": false,
                            "isReplace": false,
                            "next": null,
                            "nextCallback": null,
                            "partialState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "appElement": [MockFunction],
                                    "getPreviewer": [MockFunction],
                                    "metadata": Object {
                                      "global": Object {
                                        "boxSkillsCards": Object {
                                          "cards": Array [
                                            Object {
                                              "entries": Array [
                                                Object {
                                                  "title": "foo",
                                                },
                                              ],
                                            },
                                            Object {
                                              "entries": Array [
                                                Object {
                                                  "title": "bar",
                                                },
                                              ],
                                            },
                                          ],
                                        },
                                      },
                                    },
                                    "onInteraction": [MockFunction],
                                    "rootElement": [MockFunction],
                                  }
                                }
                              />,
                            },
                          },
                        },
                      },
                      "child": [Circular],
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "appElement": [MockFunction],
                              "getPreviewer": [MockFunction],
                              "metadata": Object {
                                "global": Object {
                                  "boxSkillsCards": Object {
                                    "cards": Array [
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "foo",
                                          },
                                        ],
                                      },
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "bar",
                                          },
                                        ],
                                      },
                                    ],
                                  },
                                },
                              },
                              "onInteraction": [MockFunction],
                              "rootElement": [MockFunction],
                            }
                          }
                        />,
                      },
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div
                            class="bcs-section bcs-section-open"
                          >
                            <button
                              class="btn-plain bcs-section-title"
                              type="button"
                            >
                              <div />
                            </button>
                            <div
                              class="bcs-section-content"
                            />
                          </div>
                          <div
                            class="bcs-section bcs-section-open"
                          >
                            <button
                              class="btn-plain bcs-section-title"
                              type="button"
                            >
                              <div />
                            </button>
                            <div
                              class="bcs-section-content"
                            />
                          </div>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "finishedWork": null,
                        "hydrate": false,
                        "isReadyForCommit": false,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingContext": null,
                        "remainingExpirationTime": 0,
                      },
                      "tag": 3,
                      "type": null,
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": WrapperComponent {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "appElement": [MockFunction],
                          "getPreviewer": [MockFunction],
                          "metadata": Object {
                            "global": Object {
                              "boxSkillsCards": Object {
                                "cards": Array [
                                  Object {
                                    "entries": Array [
                                      Object {
                                        "title": "foo",
                                      },
                                    ],
                                  },
                                  Object {
                                    "entries": Array [
                                      Object {
                                        "title": "bar",
                                      },
                                    ],
                                  },
                                ],
                              },
                            },
                          },
                          "onInteraction": [MockFunction],
                          "rootElement": [MockFunction],
                        },
                      },
                      "refs": Object {},
                      "state": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "appElement": [MockFunction],
                          "getPreviewer": [MockFunction],
                          "metadata": Object {
                            "global": Object {
                              "boxSkillsCards": Object {
                                "cards": Array [
                                  Object {
                                    "entries": Array [
                                      Object {
                                        "title": "foo",
                                      },
                                    ],
                                  },
                                  Object {
                                    "entries": Array [
                                      Object {
                                        "title": "bar",
                                      },
                                    ],
                                  },
                                ],
                              },
                            },
                          },
                          "onInteraction": [MockFunction],
                          "rootElement": [MockFunction],
                        },
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "_debugSource": null,
                  "alternate": null,
                  "child": [Circular],
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "appElement": [MockFunction],
                    "getPreviewer": [MockFunction],
                    "metadata": Object {
                      "global": Object {
                        "boxSkillsCards": Object {
                          "cards": Array [
                            Object {
                              "entries": Array [
                                Object {
                                  "title": "foo",
                                },
                              ],
                            },
                            Object {
                              "entries": Array [
                                Object {
                                  "title": "bar",
                                },
                              ],
                            },
                          ],
                        },
                      },
                    },
                    "onInteraction": [MockFunction],
                    "rootElement": [MockFunction],
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 3,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "appElement": [MockFunction],
                        "getPreviewer": [MockFunction],
                        "metadata": Object {
                          "global": Object {
                            "boxSkillsCards": Object {
                              "cards": Array [
                                Object {
                                  "entries": Array [
                                    Object {
                                      "title": "foo",
                                    },
                                  ],
                                },
                                Object {
                                  "entries": Array [
                                    Object {
                                      "title": "bar",
                                    },
                                  ],
                                },
                              ],
                            },
                          },
                        },
                        "onInteraction": [MockFunction],
                        "rootElement": [MockFunction],
                      },
                    },
                    "memoizedState": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "appElement": [MockFunction],
                        "getPreviewer": [MockFunction],
                        "metadata": Object {
                          "global": Object {
                            "boxSkillsCards": Object {
                              "cards": Array [
                                Object {
                                  "entries": Array [
                                    Object {
                                      "title": "foo",
                                    },
                                  ],
                                },
                                Object {
                                  "entries": Array [
                                    Object {
                                      "title": "bar",
                                    },
                                  ],
                                },
                              ],
                            },
                          },
                        },
                        "onInteraction": [MockFunction],
                        "rootElement": [MockFunction],
                      },
                    },
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 1,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": [Circular],
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 1,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div
                              class="bcs-section bcs-section-open"
                            >
                              <button
                                class="btn-plain bcs-section-title"
                                type="button"
                              >
                                <div />
                              </button>
                              <div
                                class="bcs-section-content"
                              />
                            </div>
                            <div
                              class="bcs-section bcs-section-open"
                            >
                              <button
                                class="btn-plain bcs-section-title"
                                type="button"
                              >
                                <div />
                              </button>
                              <div
                                class="bcs-section-content"
                              />
                            </div>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedWork": null,
                          "hydrate": false,
                          "isReadyForCommit": false,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": null,
                          "callbackList": null,
                          "expirationTime": 1,
                          "first": Object {
                            "callback": null,
                            "expirationTime": 1,
                            "isForced": false,
                            "isReplace": false,
                            "next": null,
                            "nextCallback": null,
                            "partialState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "appElement": [MockFunction],
                                    "getPreviewer": [MockFunction],
                                    "metadata": Object {
                                      "global": Object {
                                        "boxSkillsCards": Object {
                                          "cards": Array [
                                            Object {
                                              "entries": Array [
                                                Object {
                                                  "title": "foo",
                                                },
                                              ],
                                            },
                                            Object {
                                              "entries": Array [
                                                Object {
                                                  "title": "bar",
                                                },
                                              ],
                                            },
                                          ],
                                        },
                                      },
                                    },
                                    "onInteraction": [MockFunction],
                                    "rootElement": [MockFunction],
                                  }
                                }
                              />,
                            },
                          },
                          "hasForceUpdate": false,
                          "isInitialized": false,
                          "isProcessing": false,
                          "last": Object {
                            "callback": null,
                            "expirationTime": 1,
                            "isForced": false,
                            "isReplace": false,
                            "next": null,
                            "nextCallback": null,
                            "partialState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "appElement": [MockFunction],
                                    "getPreviewer": [MockFunction],
                                    "metadata": Object {
                                      "global": Object {
                                        "boxSkillsCards": Object {
                                          "cards": Array [
                                            Object {
                                              "entries": Array [
                                                Object {
                                                  "title": "foo",
                                                },
                                              ],
                                            },
                                            Object {
                                              "entries": Array [
                                                Object {
                                                  "title": "bar",
                                                },
                                              ],
                                            },
                                          ],
                                        },
                                      },
                                    },
                                    "onInteraction": [MockFunction],
                                    "rootElement": [MockFunction],
                                  }
                                }
                              />,
                            },
                          },
                        },
                      },
                      "child": [Circular],
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "appElement": [MockFunction],
                              "getPreviewer": [MockFunction],
                              "metadata": Object {
                                "global": Object {
                                  "boxSkillsCards": Object {
                                    "cards": Array [
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "foo",
                                          },
                                        ],
                                      },
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "bar",
                                          },
                                        ],
                                      },
                                    ],
                                  },
                                },
                              },
                              "onInteraction": [MockFunction],
                              "rootElement": [MockFunction],
                            }
                          }
                        />,
                      },
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div
                            class="bcs-section bcs-section-open"
                          >
                            <button
                              class="btn-plain bcs-section-title"
                              type="button"
                            >
                              <div />
                            </button>
                            <div
                              class="bcs-section-content"
                            />
                          </div>
                          <div
                            class="bcs-section bcs-section-open"
                          >
                            <button
                              class="btn-plain bcs-section-title"
                              type="button"
                            >
                              <div />
                            </button>
                            <div
                              class="bcs-section-content"
                            />
                          </div>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "finishedWork": null,
                        "hydrate": false,
                        "isReadyForCommit": false,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingContext": null,
                        "remainingExpirationTime": 0,
                      },
                      "tag": 3,
                      "type": null,
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": WrapperComponent {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "appElement": [MockFunction],
                          "getPreviewer": [MockFunction],
                          "metadata": Object {
                            "global": Object {
                              "boxSkillsCards": Object {
                                "cards": Array [
                                  Object {
                                    "entries": Array [
                                      Object {
                                        "title": "foo",
                                      },
                                    ],
                                  },
                                  Object {
                                    "entries": Array [
                                      Object {
                                        "title": "bar",
                                      },
                                    ],
                                  },
                                ],
                              },
                            },
                          },
                          "onInteraction": [MockFunction],
                          "rootElement": [MockFunction],
                        },
                      },
                      "refs": Object {},
                      "state": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "appElement": [MockFunction],
                          "getPreviewer": [MockFunction],
                          "metadata": Object {
                            "global": Object {
                              "boxSkillsCards": Object {
                                "cards": Array [
                                  Object {
                                    "entries": Array [
                                      Object {
                                        "title": "foo",
                                      },
                                    ],
                                  },
                                  Object {
                                    "entries": Array [
                                      Object {
                                        "title": "bar",
                                      },
                                    ],
                                  },
                                ],
                              },
                            },
                          },
                          "onInteraction": [MockFunction],
                          "rootElement": [MockFunction],
                        },
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "sibling": null,
                  "stateNode": null,
                  "tag": 1,
                  "type": [Function],
                  "updateQueue": null,
                },
                "_debugSource": null,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 15,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 16,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 18,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 19,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": FiberNode {
                          "_debugID": 4,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": FiberNode {
                            "_debugID": 3,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": null,
                            "child": [Circular],
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "appElement": [MockFunction],
                                "getPreviewer": [MockFunction],
                                "metadata": Object {
                                  "global": Object {
                                    "boxSkillsCards": Object {
                                      "cards": Array [
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "foo",
                                            },
                                          ],
                                        },
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "bar",
                                            },
                                          ],
                                        },
                                      ],
                                    },
                                  },
                                },
                                "onInteraction": [MockFunction],
                                "rootElement": [MockFunction],
                              },
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "appElement": [MockFunction],
                                "getPreviewer": [MockFunction],
                                "metadata": Object {
                                  "global": Object {
                                    "boxSkillsCards": Object {
                                      "cards": Array [
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "foo",
                                            },
                                          ],
                                        },
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "bar",
                                            },
                                          ],
                                        },
                                      ],
                                    },
                                  },
                                },
                                "onInteraction": [MockFunction],
                                "rootElement": [MockFunction],
                              },
                            },
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": FiberNode {
                                "_debugID": 1,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "alternate": [Circular],
                                "child": null,
                                "effectTag": 0,
                                "expirationTime": 1,
                                "firstEffect": null,
                                "index": 0,
                                "internalContextTag": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <div
                                      class="bcs-section bcs-section-open"
                                    >
                                      <button
                                        class="btn-plain bcs-section-title"
                                        type="button"
                                      >
                                        <div />
                                      </button>
                                      <div
                                        class="bcs-section-content"
                                      />
                                    </div>
                                    <div
                                      class="bcs-section bcs-section-open"
                                    >
                                      <button
                                        class="btn-plain bcs-section-title"
                                        type="button"
                                      >
                                        <div />
                                      </button>
                                      <div
                                        class="bcs-section-content"
                                      />
                                    </div>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedWork": null,
                                  "hydrate": false,
                                  "isReadyForCommit": false,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "remainingExpirationTime": 0,
                                },
                                "tag": 3,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "callbackList": null,
                                  "expirationTime": 1,
                                  "first": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "isForced": false,
                                    "isReplace": false,
                                    "next": null,
                                    "nextCallback": null,
                                    "partialState": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "appElement": [MockFunction],
                                            "getPreviewer": [MockFunction],
                                            "metadata": Object {
                                              "global": Object {
                                                "boxSkillsCards": Object {
                                                  "cards": Array [
                                                    Object {
                                                      "entries": Array [
                                                        Object {
                                                          "title": "foo",
                                                        },
                                                      ],
                                                    },
                                                    Object {
                                                      "entries": Array [
                                                        Object {
                                                          "title": "bar",
                                                        },
                                                      ],
                                                    },
                                                  ],
                                                },
                                              },
                                            },
                                            "onInteraction": [MockFunction],
                                            "rootElement": [MockFunction],
                                          }
                                        }
                                      />,
                                    },
                                  },
                                  "hasForceUpdate": false,
                                  "isInitialized": false,
                                  "isProcessing": false,
                                  "last": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "isForced": false,
                                    "isReplace": false,
                                    "next": null,
                                    "nextCallback": null,
                                    "partialState": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "appElement": [MockFunction],
                                            "getPreviewer": [MockFunction],
                                            "metadata": Object {
                                              "global": Object {
                                                "boxSkillsCards": Object {
                                                  "cards": Array [
                                                    Object {
                                                      "entries": Array [
                                                        Object {
                                                          "title": "foo",
                                                        },
                                                      ],
                                                    },
                                                    Object {
                                                      "entries": Array [
                                                        Object {
                                                          "title": "bar",
                                                        },
                                                      ],
                                                    },
                                                  ],
                                                },
                                              },
                                            },
                                            "onInteraction": [MockFunction],
                                            "rootElement": [MockFunction],
                                          }
                                        }
                                      />,
                                    },
                                  },
                                },
                              },
                              "child": [Circular],
                              "effectTag": 0,
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "appElement": [MockFunction],
                                      "getPreviewer": [MockFunction],
                                      "metadata": Object {
                                        "global": Object {
                                          "boxSkillsCards": Object {
                                            "cards": Array [
                                              Object {
                                                "entries": Array [
                                                  Object {
                                                    "title": "foo",
                                                  },
                                                ],
                                              },
                                              Object {
                                                "entries": Array [
                                                  Object {
                                                    "title": "bar",
                                                  },
                                                ],
                                              },
                                            ],
                                          },
                                        },
                                      },
                                      "onInteraction": [MockFunction],
                                      "rootElement": [MockFunction],
                                    }
                                  }
                                />,
                              },
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div
                                    class="bcs-section bcs-section-open"
                                  >
                                    <button
                                      class="btn-plain bcs-section-title"
                                      type="button"
                                    >
                                      <div />
                                    </button>
                                    <div
                                      class="bcs-section-content"
                                    />
                                  </div>
                                  <div
                                    class="bcs-section bcs-section-open"
                                  >
                                    <button
                                      class="btn-plain bcs-section-title"
                                      type="button"
                                    >
                                      <div />
                                    </button>
                                    <div
                                      class="bcs-section-content"
                                    />
                                  </div>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "hydrate": false,
                                "isReadyForCommit": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": null,
                            },
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "appElement": [MockFunction],
                                  "getPreviewer": [MockFunction],
                                  "metadata": Object {
                                    "global": Object {
                                      "boxSkillsCards": Object {
                                        "cards": Array [
                                          Object {
                                            "entries": Array [
                                              Object {
                                                "title": "foo",
                                              },
                                            ],
                                          },
                                          Object {
                                            "entries": Array [
                                              Object {
                                                "title": "bar",
                                              },
                                            ],
                                          },
                                        ],
                                      },
                                    },
                                  },
                                  "onInteraction": [MockFunction],
                                  "rootElement": [MockFunction],
                                },
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "appElement": [MockFunction],
                                  "getPreviewer": [MockFunction],
                                  "metadata": Object {
                                    "global": Object {
                                      "boxSkillsCards": Object {
                                        "cards": Array [
                                          Object {
                                            "entries": Array [
                                              Object {
                                                "title": "foo",
                                              },
                                            ],
                                          },
                                          Object {
                                            "entries": Array [
                                              Object {
                                                "title": "bar",
                                              },
                                            ],
                                          },
                                        ],
                                      },
                                    },
                                  },
                                  "onInteraction": [MockFunction],
                                  "rootElement": [MockFunction],
                                },
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 2,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "appElement": [MockFunction],
                            "getPreviewer": [MockFunction],
                            "metadata": Object {
                              "global": Object {
                                "boxSkillsCards": Object {
                                  "cards": Array [
                                    Object {
                                      "entries": Array [
                                        Object {
                                          "title": "foo",
                                        },
                                      ],
                                    },
                                    Object {
                                      "entries": Array [
                                        Object {
                                          "title": "bar",
                                        },
                                      ],
                                    },
                                  ],
                                },
                              },
                            },
                            "onInteraction": [MockFunction],
                            "rootElement": [MockFunction],
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 3,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": null,
                            "child": [Circular],
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "appElement": [MockFunction],
                                "getPreviewer": [MockFunction],
                                "metadata": Object {
                                  "global": Object {
                                    "boxSkillsCards": Object {
                                      "cards": Array [
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "foo",
                                            },
                                          ],
                                        },
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "bar",
                                            },
                                          ],
                                        },
                                      ],
                                    },
                                  },
                                },
                                "onInteraction": [MockFunction],
                                "rootElement": [MockFunction],
                              },
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "appElement": [MockFunction],
                                "getPreviewer": [MockFunction],
                                "metadata": Object {
                                  "global": Object {
                                    "boxSkillsCards": Object {
                                      "cards": Array [
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "foo",
                                            },
                                          ],
                                        },
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "bar",
                                            },
                                          ],
                                        },
                                      ],
                                    },
                                  },
                                },
                                "onInteraction": [MockFunction],
                                "rootElement": [MockFunction],
                              },
                            },
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": FiberNode {
                                "_debugID": 1,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "alternate": [Circular],
                                "child": null,
                                "effectTag": 0,
                                "expirationTime": 1,
                                "firstEffect": null,
                                "index": 0,
                                "internalContextTag": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <div
                                      class="bcs-section bcs-section-open"
                                    >
                                      <button
                                        class="btn-plain bcs-section-title"
                                        type="button"
                                      >
                                        <div />
                                      </button>
                                      <div
                                        class="bcs-section-content"
                                      />
                                    </div>
                                    <div
                                      class="bcs-section bcs-section-open"
                                    >
                                      <button
                                        class="btn-plain bcs-section-title"
                                        type="button"
                                      >
                                        <div />
                                      </button>
                                      <div
                                        class="bcs-section-content"
                                      />
                                    </div>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedWork": null,
                                  "hydrate": false,
                                  "isReadyForCommit": false,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "remainingExpirationTime": 0,
                                },
                                "tag": 3,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "callbackList": null,
                                  "expirationTime": 1,
                                  "first": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "isForced": false,
                                    "isReplace": false,
                                    "next": null,
                                    "nextCallback": null,
                                    "partialState": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "appElement": [MockFunction],
                                            "getPreviewer": [MockFunction],
                                            "metadata": Object {
                                              "global": Object {
                                                "boxSkillsCards": Object {
                                                  "cards": Array [
                                                    Object {
                                                      "entries": Array [
                                                        Object {
                                                          "title": "foo",
                                                        },
                                                      ],
                                                    },
                                                    Object {
                                                      "entries": Array [
                                                        Object {
                                                          "title": "bar",
                                                        },
                                                      ],
                                                    },
                                                  ],
                                                },
                                              },
                                            },
                                            "onInteraction": [MockFunction],
                                            "rootElement": [MockFunction],
                                          }
                                        }
                                      />,
                                    },
                                  },
                                  "hasForceUpdate": false,
                                  "isInitialized": false,
                                  "isProcessing": false,
                                  "last": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "isForced": false,
                                    "isReplace": false,
                                    "next": null,
                                    "nextCallback": null,
                                    "partialState": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "appElement": [MockFunction],
                                            "getPreviewer": [MockFunction],
                                            "metadata": Object {
                                              "global": Object {
                                                "boxSkillsCards": Object {
                                                  "cards": Array [
                                                    Object {
                                                      "entries": Array [
                                                        Object {
                                                          "title": "foo",
                                                        },
                                                      ],
                                                    },
                                                    Object {
                                                      "entries": Array [
                                                        Object {
                                                          "title": "bar",
                                                        },
                                                      ],
                                                    },
                                                  ],
                                                },
                                              },
                                            },
                                            "onInteraction": [MockFunction],
                                            "rootElement": [MockFunction],
                                          }
                                        }
                                      />,
                                    },
                                  },
                                },
                              },
                              "child": [Circular],
                              "effectTag": 0,
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "appElement": [MockFunction],
                                      "getPreviewer": [MockFunction],
                                      "metadata": Object {
                                        "global": Object {
                                          "boxSkillsCards": Object {
                                            "cards": Array [
                                              Object {
                                                "entries": Array [
                                                  Object {
                                                    "title": "foo",
                                                  },
                                                ],
                                              },
                                              Object {
                                                "entries": Array [
                                                  Object {
                                                    "title": "bar",
                                                  },
                                                ],
                                              },
                                            ],
                                          },
                                        },
                                      },
                                      "onInteraction": [MockFunction],
                                      "rootElement": [MockFunction],
                                    }
                                  }
                                />,
                              },
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div
                                    class="bcs-section bcs-section-open"
                                  >
                                    <button
                                      class="btn-plain bcs-section-title"
                                      type="button"
                                    >
                                      <div />
                                    </button>
                                    <div
                                      class="bcs-section-content"
                                    />
                                  </div>
                                  <div
                                    class="bcs-section bcs-section-open"
                                  >
                                    <button
                                      class="btn-plain bcs-section-title"
                                      type="button"
                                    >
                                      <div />
                                    </button>
                                    <div
                                      class="bcs-section-content"
                                    />
                                  </div>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "hydrate": false,
                                "isReadyForCommit": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": null,
                            },
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "appElement": [MockFunction],
                                  "getPreviewer": [MockFunction],
                                  "metadata": Object {
                                    "global": Object {
                                      "boxSkillsCards": Object {
                                        "cards": Array [
                                          Object {
                                            "entries": Array [
                                              Object {
                                                "title": "foo",
                                              },
                                            ],
                                          },
                                          Object {
                                            "entries": Array [
                                              Object {
                                                "title": "bar",
                                              },
                                            ],
                                          },
                                        ],
                                      },
                                    },
                                  },
                                  "onInteraction": [MockFunction],
                                  "rootElement": [MockFunction],
                                },
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "appElement": [MockFunction],
                                  "getPreviewer": [MockFunction],
                                  "metadata": Object {
                                    "global": Object {
                                      "boxSkillsCards": Object {
                                        "cards": Array [
                                          Object {
                                            "entries": Array [
                                              Object {
                                                "title": "foo",
                                              },
                                            ],
                                          },
                                          Object {
                                            "entries": Array [
                                              Object {
                                                "title": "bar",
                                              },
                                            ],
                                          },
                                        ],
                                      },
                                    },
                                  },
                                  "onInteraction": [MockFunction],
                                  "rootElement": [MockFunction],
                                },
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 2,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "sibling": null,
                          "stateNode": null,
                          "tag": 1,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "_debugSource": null,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 20,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": null,
                          "alternate": null,
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {},
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": [Circular],
                          "sibling": null,
                          "stateNode": <div />,
                          "tag": 5,
                          "type": "div",
                          "updateQueue": null,
                        },
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {},
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": null,
                        "tag": 1,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": <FormattedMessage />,
                        "className": "btn-plain bcs-section-title",
                        "onClick": [Function],
                        "type": "button",
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": <button
                        class="btn-plain bcs-section-title"
                        type="button"
                      >
                        <div />
                      </button>,
                      "tag": 5,
                      "type": "button",
                      "updateQueue": null,
                    },
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": <FormattedMessage />,
                      "className": "bcs-section-title",
                      "onClick": [Function],
                      "type": "button",
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": [Circular],
                    "sibling": FiberNode {
                      "_debugID": 17,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 21,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": FiberNode {
                          "_debugID": 4,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": FiberNode {
                            "_debugID": 3,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": null,
                            "child": [Circular],
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "appElement": [MockFunction],
                                "getPreviewer": [MockFunction],
                                "metadata": Object {
                                  "global": Object {
                                    "boxSkillsCards": Object {
                                      "cards": Array [
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "foo",
                                            },
                                          ],
                                        },
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "bar",
                                            },
                                          ],
                                        },
                                      ],
                                    },
                                  },
                                },
                                "onInteraction": [MockFunction],
                                "rootElement": [MockFunction],
                              },
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "appElement": [MockFunction],
                                "getPreviewer": [MockFunction],
                                "metadata": Object {
                                  "global": Object {
                                    "boxSkillsCards": Object {
                                      "cards": Array [
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "foo",
                                            },
                                          ],
                                        },
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "bar",
                                            },
                                          ],
                                        },
                                      ],
                                    },
                                  },
                                },
                                "onInteraction": [MockFunction],
                                "rootElement": [MockFunction],
                              },
                            },
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": FiberNode {
                                "_debugID": 1,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "alternate": [Circular],
                                "child": null,
                                "effectTag": 0,
                                "expirationTime": 1,
                                "firstEffect": null,
                                "index": 0,
                                "internalContextTag": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <div
                                      class="bcs-section bcs-section-open"
                                    >
                                      <button
                                        class="btn-plain bcs-section-title"
                                        type="button"
                                      >
                                        <div />
                                      </button>
                                      <div
                                        class="bcs-section-content"
                                      />
                                    </div>
                                    <div
                                      class="bcs-section bcs-section-open"
                                    >
                                      <button
                                        class="btn-plain bcs-section-title"
                                        type="button"
                                      >
                                        <div />
                                      </button>
                                      <div
                                        class="bcs-section-content"
                                      />
                                    </div>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedWork": null,
                                  "hydrate": false,
                                  "isReadyForCommit": false,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "remainingExpirationTime": 0,
                                },
                                "tag": 3,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "callbackList": null,
                                  "expirationTime": 1,
                                  "first": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "isForced": false,
                                    "isReplace": false,
                                    "next": null,
                                    "nextCallback": null,
                                    "partialState": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "appElement": [MockFunction],
                                            "getPreviewer": [MockFunction],
                                            "metadata": Object {
                                              "global": Object {
                                                "boxSkillsCards": Object {
                                                  "cards": Array [
                                                    Object {
                                                      "entries": Array [
                                                        Object {
                                                          "title": "foo",
                                                        },
                                                      ],
                                                    },
                                                    Object {
                                                      "entries": Array [
                                                        Object {
                                                          "title": "bar",
                                                        },
                                                      ],
                                                    },
                                                  ],
                                                },
                                              },
                                            },
                                            "onInteraction": [MockFunction],
                                            "rootElement": [MockFunction],
                                          }
                                        }
                                      />,
                                    },
                                  },
                                  "hasForceUpdate": false,
                                  "isInitialized": false,
                                  "isProcessing": false,
                                  "last": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "isForced": false,
                                    "isReplace": false,
                                    "next": null,
                                    "nextCallback": null,
                                    "partialState": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "appElement": [MockFunction],
                                            "getPreviewer": [MockFunction],
                                            "metadata": Object {
                                              "global": Object {
                                                "boxSkillsCards": Object {
                                                  "cards": Array [
                                                    Object {
                                                      "entries": Array [
                                                        Object {
                                                          "title": "foo",
                                                        },
                                                      ],
                                                    },
                                                    Object {
                                                      "entries": Array [
                                                        Object {
                                                          "title": "bar",
                                                        },
                                                      ],
                                                    },
                                                  ],
                                                },
                                              },
                                            },
                                            "onInteraction": [MockFunction],
                                            "rootElement": [MockFunction],
                                          }
                                        }
                                      />,
                                    },
                                  },
                                },
                              },
                              "child": [Circular],
                              "effectTag": 0,
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "appElement": [MockFunction],
                                      "getPreviewer": [MockFunction],
                                      "metadata": Object {
                                        "global": Object {
                                          "boxSkillsCards": Object {
                                            "cards": Array [
                                              Object {
                                                "entries": Array [
                                                  Object {
                                                    "title": "foo",
                                                  },
                                                ],
                                              },
                                              Object {
                                                "entries": Array [
                                                  Object {
                                                    "title": "bar",
                                                  },
                                                ],
                                              },
                                            ],
                                          },
                                        },
                                      },
                                      "onInteraction": [MockFunction],
                                      "rootElement": [MockFunction],
                                    }
                                  }
                                />,
                              },
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div
                                    class="bcs-section bcs-section-open"
                                  >
                                    <button
                                      class="btn-plain bcs-section-title"
                                      type="button"
                                    >
                                      <div />
                                    </button>
                                    <div
                                      class="bcs-section-content"
                                    />
                                  </div>
                                  <div
                                    class="bcs-section bcs-section-open"
                                  >
                                    <button
                                      class="btn-plain bcs-section-title"
                                      type="button"
                                    >
                                      <div />
                                    </button>
                                    <div
                                      class="bcs-section-content"
                                    />
                                  </div>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "hydrate": false,
                                "isReadyForCommit": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": null,
                            },
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "appElement": [MockFunction],
                                  "getPreviewer": [MockFunction],
                                  "metadata": Object {
                                    "global": Object {
                                      "boxSkillsCards": Object {
                                        "cards": Array [
                                          Object {
                                            "entries": Array [
                                              Object {
                                                "title": "foo",
                                              },
                                            ],
                                          },
                                          Object {
                                            "entries": Array [
                                              Object {
                                                "title": "bar",
                                              },
                                            ],
                                          },
                                        ],
                                      },
                                    },
                                  },
                                  "onInteraction": [MockFunction],
                                  "rootElement": [MockFunction],
                                },
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "appElement": [MockFunction],
                                  "getPreviewer": [MockFunction],
                                  "metadata": Object {
                                    "global": Object {
                                      "boxSkillsCards": Object {
                                        "cards": Array [
                                          Object {
                                            "entries": Array [
                                              Object {
                                                "title": "foo",
                                              },
                                            ],
                                          },
                                          Object {
                                            "entries": Array [
                                              Object {
                                                "title": "bar",
                                              },
                                            ],
                                          },
                                        ],
                                      },
                                    },
                                  },
                                  "onInteraction": [MockFunction],
                                  "rootElement": [MockFunction],
                                },
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 2,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "appElement": [MockFunction],
                            "getPreviewer": [MockFunction],
                            "metadata": Object {
                              "global": Object {
                                "boxSkillsCards": Object {
                                  "cards": Array [
                                    Object {
                                      "entries": Array [
                                        Object {
                                          "title": "foo",
                                        },
                                      ],
                                    },
                                    Object {
                                      "entries": Array [
                                        Object {
                                          "title": "bar",
                                        },
                                      ],
                                    },
                                  ],
                                },
                              },
                            },
                            "onInteraction": [MockFunction],
                            "rootElement": [MockFunction],
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 3,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": null,
                            "child": [Circular],
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "appElement": [MockFunction],
                                "getPreviewer": [MockFunction],
                                "metadata": Object {
                                  "global": Object {
                                    "boxSkillsCards": Object {
                                      "cards": Array [
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "foo",
                                            },
                                          ],
                                        },
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "bar",
                                            },
                                          ],
                                        },
                                      ],
                                    },
                                  },
                                },
                                "onInteraction": [MockFunction],
                                "rootElement": [MockFunction],
                              },
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "appElement": [MockFunction],
                                "getPreviewer": [MockFunction],
                                "metadata": Object {
                                  "global": Object {
                                    "boxSkillsCards": Object {
                                      "cards": Array [
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "foo",
                                            },
                                          ],
                                        },
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "bar",
                                            },
                                          ],
                                        },
                                      ],
                                    },
                                  },
                                },
                                "onInteraction": [MockFunction],
                                "rootElement": [MockFunction],
                              },
                            },
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": FiberNode {
                                "_debugID": 1,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "alternate": [Circular],
                                "child": null,
                                "effectTag": 0,
                                "expirationTime": 1,
                                "firstEffect": null,
                                "index": 0,
                                "internalContextTag": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <div
                                      class="bcs-section bcs-section-open"
                                    >
                                      <button
                                        class="btn-plain bcs-section-title"
                                        type="button"
                                      >
                                        <div />
                                      </button>
                                      <div
                                        class="bcs-section-content"
                                      />
                                    </div>
                                    <div
                                      class="bcs-section bcs-section-open"
                                    >
                                      <button
                                        class="btn-plain bcs-section-title"
                                        type="button"
                                      >
                                        <div />
                                      </button>
                                      <div
                                        class="bcs-section-content"
                                      />
                                    </div>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedWork": null,
                                  "hydrate": false,
                                  "isReadyForCommit": false,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "remainingExpirationTime": 0,
                                },
                                "tag": 3,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "callbackList": null,
                                  "expirationTime": 1,
                                  "first": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "isForced": false,
                                    "isReplace": false,
                                    "next": null,
                                    "nextCallback": null,
                                    "partialState": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "appElement": [MockFunction],
                                            "getPreviewer": [MockFunction],
                                            "metadata": Object {
                                              "global": Object {
                                                "boxSkillsCards": Object {
                                                  "cards": Array [
                                                    Object {
                                                      "entries": Array [
                                                        Object {
                                                          "title": "foo",
                                                        },
                                                      ],
                                                    },
                                                    Object {
                                                      "entries": Array [
                                                        Object {
                                                          "title": "bar",
                                                        },
                                                      ],
                                                    },
                                                  ],
                                                },
                                              },
                                            },
                                            "onInteraction": [MockFunction],
                                            "rootElement": [MockFunction],
                                          }
                                        }
                                      />,
                                    },
                                  },
                                  "hasForceUpdate": false,
                                  "isInitialized": false,
                                  "isProcessing": false,
                                  "last": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "isForced": false,
                                    "isReplace": false,
                                    "next": null,
                                    "nextCallback": null,
                                    "partialState": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "appElement": [MockFunction],
                                            "getPreviewer": [MockFunction],
                                            "metadata": Object {
                                              "global": Object {
                                                "boxSkillsCards": Object {
                                                  "cards": Array [
                                                    Object {
                                                      "entries": Array [
                                                        Object {
                                                          "title": "foo",
                                                        },
                                                      ],
                                                    },
                                                    Object {
                                                      "entries": Array [
                                                        Object {
                                                          "title": "bar",
                                                        },
                                                      ],
                                                    },
                                                  ],
                                                },
                                              },
                                            },
                                            "onInteraction": [MockFunction],
                                            "rootElement": [MockFunction],
                                          }
                                        }
                                      />,
                                    },
                                  },
                                },
                              },
                              "child": [Circular],
                              "effectTag": 0,
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "appElement": [MockFunction],
                                      "getPreviewer": [MockFunction],
                                      "metadata": Object {
                                        "global": Object {
                                          "boxSkillsCards": Object {
                                            "cards": Array [
                                              Object {
                                                "entries": Array [
                                                  Object {
                                                    "title": "foo",
                                                  },
                                                ],
                                              },
                                              Object {
                                                "entries": Array [
                                                  Object {
                                                    "title": "bar",
                                                  },
                                                ],
                                              },
                                            ],
                                          },
                                        },
                                      },
                                      "onInteraction": [MockFunction],
                                      "rootElement": [MockFunction],
                                    }
                                  }
                                />,
                              },
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div
                                    class="bcs-section bcs-section-open"
                                  >
                                    <button
                                      class="btn-plain bcs-section-title"
                                      type="button"
                                    >
                                      <div />
                                    </button>
                                    <div
                                      class="bcs-section-content"
                                    />
                                  </div>
                                  <div
                                    class="bcs-section bcs-section-open"
                                  >
                                    <button
                                      class="btn-plain bcs-section-title"
                                      type="button"
                                    >
                                      <div />
                                    </button>
                                    <div
                                      class="bcs-section-content"
                                    />
                                  </div>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "hydrate": false,
                                "isReadyForCommit": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": null,
                            },
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "appElement": [MockFunction],
                                  "getPreviewer": [MockFunction],
                                  "metadata": Object {
                                    "global": Object {
                                      "boxSkillsCards": Object {
                                        "cards": Array [
                                          Object {
                                            "entries": Array [
                                              Object {
                                                "title": "foo",
                                              },
                                            ],
                                          },
                                          Object {
                                            "entries": Array [
                                              Object {
                                                "title": "bar",
                                              },
                                            ],
                                          },
                                        ],
                                      },
                                    },
                                  },
                                  "onInteraction": [MockFunction],
                                  "rootElement": [MockFunction],
                                },
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "appElement": [MockFunction],
                                  "getPreviewer": [MockFunction],
                                  "metadata": Object {
                                    "global": Object {
                                      "boxSkillsCards": Object {
                                        "cards": Array [
                                          Object {
                                            "entries": Array [
                                              Object {
                                                "title": "foo",
                                              },
                                            ],
                                          },
                                          Object {
                                            "entries": Array [
                                              Object {
                                                "title": "bar",
                                              },
                                            ],
                                          },
                                        ],
                                      },
                                    },
                                  },
                                  "onInteraction": [MockFunction],
                                  "rootElement": [MockFunction],
                                },
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 2,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "sibling": null,
                          "stateNode": null,
                          "tag": 1,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "_debugSource": null,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 22,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": null,
                          "alternate": null,
                          "child": null,
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "appElement": [MockFunction],
                            "getPreviewer": [MockFunction],
                            "onInteraction": [MockFunction],
                            "rootElement": [MockFunction],
                            "skill": Object {
                              "entries": Array [
                                Object {
                                  "title": "bar",
                                },
                              ],
                            },
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": [Circular],
                          "sibling": null,
                          "stateNode": null,
                          "tag": 1,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "appElement": [MockFunction],
                          "getPreviewer": [MockFunction],
                          "maskError": undefined,
                          "onInteraction": [MockFunction],
                          "rootElement": [MockFunction],
                          "skill": Object {
                            "entries": Array [
                              Object {
                                "title": "bar",
                              },
                            ],
                          },
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": null,
                        "tag": 1,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 1,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": <Unknown
                          appElement={[MockFunction]}
                          getPreviewer={[MockFunction]}
                          maskError={undefined}
                          onInteraction={[MockFunction]}
                          rootElement={[MockFunction]}
                          skill={
                            Object {
                              "entries": Array [
                                Object {
                                  "title": "bar",
                                },
                              ],
                            }
                          }
                        />,
                        "className": "bcs-section-content",
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": <div
                        class="bcs-section-content"
                      />,
                      "tag": 5,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "stateNode": null,
                    "tag": 1,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <PlainButton
                        className="bcs-section-title"
                        onClick={[Function]}
                        type="button"
                      >
                        <FormattedMessage />
                      </PlainButton>,
                      <div
                        className="bcs-section-content"
                      >
                        <Unknown
                          appElement={[MockFunction]}
                          getPreviewer={[MockFunction]}
                          maskError={undefined}
                          onInteraction={[MockFunction]}
                          rootElement={[MockFunction]}
                          skill={
                            Object {
                              "entries": Array [
                                Object {
                                  "title": "bar",
                                },
                              ],
                            }
                          }
                        />
                      </div>,
                    ],
                    "className": "bcs-section bcs-section-open",
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": [Circular],
                  "sibling": null,
                  "stateNode": <div
                    class="bcs-section bcs-section-open"
                  >
                    <button
                      class="btn-plain bcs-section-title"
                      type="button"
                    >
                      <div />
                    </button>
                    <div
                      class="bcs-section-content"
                    />
                  </div>,
                  "tag": 5,
                  "type": "div",
                  "updateQueue": null,
                },
                "effectTag": 1,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 1,
                "internalContextTag": 0,
                "key": "1",
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": <Unknown
                    appElement={[MockFunction]}
                    getPreviewer={[MockFunction]}
                    maskError={undefined}
                    onInteraction={[MockFunction]}
                    rootElement={[MockFunction]}
                    skill={
                      Object {
                        "entries": Array [
                          Object {
                            "title": "bar",
                          },
                        ],
                      }
                    }
                  />,
                  "className": "",
                  "isOpen": true,
                  "title": <FormattedMessage />,
                },
                "memoizedState": Object {
                  "isOpen": true,
                },
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": FiberNode {
                  "_debugID": 4,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": FiberNode {
                    "_debugID": 3,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "appElement": [MockFunction],
                        "getPreviewer": [MockFunction],
                        "metadata": Object {
                          "global": Object {
                            "boxSkillsCards": Object {
                              "cards": Array [
                                Object {
                                  "entries": Array [
                                    Object {
                                      "title": "foo",
                                    },
                                  ],
                                },
                                Object {
                                  "entries": Array [
                                    Object {
                                      "title": "bar",
                                    },
                                  ],
                                },
                              ],
                            },
                          },
                        },
                        "onInteraction": [MockFunction],
                        "rootElement": [MockFunction],
                      },
                    },
                    "memoizedState": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "appElement": [MockFunction],
                        "getPreviewer": [MockFunction],
                        "metadata": Object {
                          "global": Object {
                            "boxSkillsCards": Object {
                              "cards": Array [
                                Object {
                                  "entries": Array [
                                    Object {
                                      "title": "foo",
                                    },
                                  ],
                                },
                                Object {
                                  "entries": Array [
                                    Object {
                                      "title": "bar",
                                    },
                                  ],
                                },
                              ],
                            },
                          },
                        },
                        "onInteraction": [MockFunction],
                        "rootElement": [MockFunction],
                      },
                    },
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 1,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": [Circular],
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 1,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div
                              class="bcs-section bcs-section-open"
                            >
                              <button
                                class="btn-plain bcs-section-title"
                                type="button"
                              >
                                <div />
                              </button>
                              <div
                                class="bcs-section-content"
                              />
                            </div>
                            <div
                              class="bcs-section bcs-section-open"
                            >
                              <button
                                class="btn-plain bcs-section-title"
                                type="button"
                              >
                                <div />
                              </button>
                              <div
                                class="bcs-section-content"
                              />
                            </div>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedWork": null,
                          "hydrate": false,
                          "isReadyForCommit": false,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": null,
                          "callbackList": null,
                          "expirationTime": 1,
                          "first": Object {
                            "callback": null,
                            "expirationTime": 1,
                            "isForced": false,
                            "isReplace": false,
                            "next": null,
                            "nextCallback": null,
                            "partialState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "appElement": [MockFunction],
                                    "getPreviewer": [MockFunction],
                                    "metadata": Object {
                                      "global": Object {
                                        "boxSkillsCards": Object {
                                          "cards": Array [
                                            Object {
                                              "entries": Array [
                                                Object {
                                                  "title": "foo",
                                                },
                                              ],
                                            },
                                            Object {
                                              "entries": Array [
                                                Object {
                                                  "title": "bar",
                                                },
                                              ],
                                            },
                                          ],
                                        },
                                      },
                                    },
                                    "onInteraction": [MockFunction],
                                    "rootElement": [MockFunction],
                                  }
                                }
                              />,
                            },
                          },
                          "hasForceUpdate": false,
                          "isInitialized": false,
                          "isProcessing": false,
                          "last": Object {
                            "callback": null,
                            "expirationTime": 1,
                            "isForced": false,
                            "isReplace": false,
                            "next": null,
                            "nextCallback": null,
                            "partialState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "appElement": [MockFunction],
                                    "getPreviewer": [MockFunction],
                                    "metadata": Object {
                                      "global": Object {
                                        "boxSkillsCards": Object {
                                          "cards": Array [
                                            Object {
                                              "entries": Array [
                                                Object {
                                                  "title": "foo",
                                                },
                                              ],
                                            },
                                            Object {
                                              "entries": Array [
                                                Object {
                                                  "title": "bar",
                                                },
                                              ],
                                            },
                                          ],
                                        },
                                      },
                                    },
                                    "onInteraction": [MockFunction],
                                    "rootElement": [MockFunction],
                                  }
                                }
                              />,
                            },
                          },
                        },
                      },
                      "child": [Circular],
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "appElement": [MockFunction],
                              "getPreviewer": [MockFunction],
                              "metadata": Object {
                                "global": Object {
                                  "boxSkillsCards": Object {
                                    "cards": Array [
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "foo",
                                          },
                                        ],
                                      },
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "bar",
                                          },
                                        ],
                                      },
                                    ],
                                  },
                                },
                              },
                              "onInteraction": [MockFunction],
                              "rootElement": [MockFunction],
                            }
                          }
                        />,
                      },
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div
                            class="bcs-section bcs-section-open"
                          >
                            <button
                              class="btn-plain bcs-section-title"
                              type="button"
                            >
                              <div />
                            </button>
                            <div
                              class="bcs-section-content"
                            />
                          </div>
                          <div
                            class="bcs-section bcs-section-open"
                          >
                            <button
                              class="btn-plain bcs-section-title"
                              type="button"
                            >
                              <div />
                            </button>
                            <div
                              class="bcs-section-content"
                            />
                          </div>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "finishedWork": null,
                        "hydrate": false,
                        "isReadyForCommit": false,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingContext": null,
                        "remainingExpirationTime": 0,
                      },
                      "tag": 3,
                      "type": null,
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": WrapperComponent {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "appElement": [MockFunction],
                          "getPreviewer": [MockFunction],
                          "metadata": Object {
                            "global": Object {
                              "boxSkillsCards": Object {
                                "cards": Array [
                                  Object {
                                    "entries": Array [
                                      Object {
                                        "title": "foo",
                                      },
                                    ],
                                  },
                                  Object {
                                    "entries": Array [
                                      Object {
                                        "title": "bar",
                                      },
                                    ],
                                  },
                                ],
                              },
                            },
                          },
                          "onInteraction": [MockFunction],
                          "rootElement": [MockFunction],
                        },
                      },
                      "refs": Object {},
                      "state": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "appElement": [MockFunction],
                          "getPreviewer": [MockFunction],
                          "metadata": Object {
                            "global": Object {
                              "boxSkillsCards": Object {
                                "cards": Array [
                                  Object {
                                    "entries": Array [
                                      Object {
                                        "title": "foo",
                                      },
                                    ],
                                  },
                                  Object {
                                    "entries": Array [
                                      Object {
                                        "title": "bar",
                                      },
                                    ],
                                  },
                                ],
                              },
                            },
                          },
                          "onInteraction": [MockFunction],
                          "rootElement": [MockFunction],
                        },
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "_debugSource": null,
                  "alternate": null,
                  "child": [Circular],
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "appElement": [MockFunction],
                    "getPreviewer": [MockFunction],
                    "metadata": Object {
                      "global": Object {
                        "boxSkillsCards": Object {
                          "cards": Array [
                            Object {
                              "entries": Array [
                                Object {
                                  "title": "foo",
                                },
                              ],
                            },
                            Object {
                              "entries": Array [
                                Object {
                                  "title": "bar",
                                },
                              ],
                            },
                          ],
                        },
                      },
                    },
                    "onInteraction": [MockFunction],
                    "rootElement": [MockFunction],
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 3,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "appElement": [MockFunction],
                        "getPreviewer": [MockFunction],
                        "metadata": Object {
                          "global": Object {
                            "boxSkillsCards": Object {
                              "cards": Array [
                                Object {
                                  "entries": Array [
                                    Object {
                                      "title": "foo",
                                    },
                                  ],
                                },
                                Object {
                                  "entries": Array [
                                    Object {
                                      "title": "bar",
                                    },
                                  ],
                                },
                              ],
                            },
                          },
                        },
                        "onInteraction": [MockFunction],
                        "rootElement": [MockFunction],
                      },
                    },
                    "memoizedState": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "appElement": [MockFunction],
                        "getPreviewer": [MockFunction],
                        "metadata": Object {
                          "global": Object {
                            "boxSkillsCards": Object {
                              "cards": Array [
                                Object {
                                  "entries": Array [
                                    Object {
                                      "title": "foo",
                                    },
                                  ],
                                },
                                Object {
                                  "entries": Array [
                                    Object {
                                      "title": "bar",
                                    },
                                  ],
                                },
                              ],
                            },
                          },
                        },
                        "onInteraction": [MockFunction],
                        "rootElement": [MockFunction],
                      },
                    },
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 1,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": [Circular],
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 1,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div
                              class="bcs-section bcs-section-open"
                            >
                              <button
                                class="btn-plain bcs-section-title"
                                type="button"
                              >
                                <div />
                              </button>
                              <div
                                class="bcs-section-content"
                              />
                            </div>
                            <div
                              class="bcs-section bcs-section-open"
                            >
                              <button
                                class="btn-plain bcs-section-title"
                                type="button"
                              >
                                <div />
                              </button>
                              <div
                                class="bcs-section-content"
                              />
                            </div>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedWork": null,
                          "hydrate": false,
                          "isReadyForCommit": false,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": null,
                          "callbackList": null,
                          "expirationTime": 1,
                          "first": Object {
                            "callback": null,
                            "expirationTime": 1,
                            "isForced": false,
                            "isReplace": false,
                            "next": null,
                            "nextCallback": null,
                            "partialState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "appElement": [MockFunction],
                                    "getPreviewer": [MockFunction],
                                    "metadata": Object {
                                      "global": Object {
                                        "boxSkillsCards": Object {
                                          "cards": Array [
                                            Object {
                                              "entries": Array [
                                                Object {
                                                  "title": "foo",
                                                },
                                              ],
                                            },
                                            Object {
                                              "entries": Array [
                                                Object {
                                                  "title": "bar",
                                                },
                                              ],
                                            },
                                          ],
                                        },
                                      },
                                    },
                                    "onInteraction": [MockFunction],
                                    "rootElement": [MockFunction],
                                  }
                                }
                              />,
                            },
                          },
                          "hasForceUpdate": false,
                          "isInitialized": false,
                          "isProcessing": false,
                          "last": Object {
                            "callback": null,
                            "expirationTime": 1,
                            "isForced": false,
                            "isReplace": false,
                            "next": null,
                            "nextCallback": null,
                            "partialState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "appElement": [MockFunction],
                                    "getPreviewer": [MockFunction],
                                    "metadata": Object {
                                      "global": Object {
                                        "boxSkillsCards": Object {
                                          "cards": Array [
                                            Object {
                                              "entries": Array [
                                                Object {
                                                  "title": "foo",
                                                },
                                              ],
                                            },
                                            Object {
                                              "entries": Array [
                                                Object {
                                                  "title": "bar",
                                                },
                                              ],
                                            },
                                          ],
                                        },
                                      },
                                    },
                                    "onInteraction": [MockFunction],
                                    "rootElement": [MockFunction],
                                  }
                                }
                              />,
                            },
                          },
                        },
                      },
                      "child": [Circular],
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "appElement": [MockFunction],
                              "getPreviewer": [MockFunction],
                              "metadata": Object {
                                "global": Object {
                                  "boxSkillsCards": Object {
                                    "cards": Array [
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "foo",
                                          },
                                        ],
                                      },
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "bar",
                                          },
                                        ],
                                      },
                                    ],
                                  },
                                },
                              },
                              "onInteraction": [MockFunction],
                              "rootElement": [MockFunction],
                            }
                          }
                        />,
                      },
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div
                            class="bcs-section bcs-section-open"
                          >
                            <button
                              class="btn-plain bcs-section-title"
                              type="button"
                            >
                              <div />
                            </button>
                            <div
                              class="bcs-section-content"
                            />
                          </div>
                          <div
                            class="bcs-section bcs-section-open"
                          >
                            <button
                              class="btn-plain bcs-section-title"
                              type="button"
                            >
                              <div />
                            </button>
                            <div
                              class="bcs-section-content"
                            />
                          </div>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "finishedWork": null,
                        "hydrate": false,
                        "isReadyForCommit": false,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingContext": null,
                        "remainingExpirationTime": 0,
                      },
                      "tag": 3,
                      "type": null,
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": WrapperComponent {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "appElement": [MockFunction],
                          "getPreviewer": [MockFunction],
                          "metadata": Object {
                            "global": Object {
                              "boxSkillsCards": Object {
                                "cards": Array [
                                  Object {
                                    "entries": Array [
                                      Object {
                                        "title": "foo",
                                      },
                                    ],
                                  },
                                  Object {
                                    "entries": Array [
                                      Object {
                                        "title": "bar",
                                      },
                                    ],
                                  },
                                ],
                              },
                            },
                          },
                          "onInteraction": [MockFunction],
                          "rootElement": [MockFunction],
                        },
                      },
                      "refs": Object {},
                      "state": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "appElement": [MockFunction],
                          "getPreviewer": [MockFunction],
                          "metadata": Object {
                            "global": Object {
                              "boxSkillsCards": Object {
                                "cards": Array [
                                  Object {
                                    "entries": Array [
                                      Object {
                                        "title": "foo",
                                      },
                                    ],
                                  },
                                  Object {
                                    "entries": Array [
                                      Object {
                                        "title": "bar",
                                      },
                                    ],
                                  },
                                ],
                              },
                            },
                          },
                          "onInteraction": [MockFunction],
                          "rootElement": [MockFunction],
                        },
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "sibling": null,
                  "stateNode": null,
                  "tag": 1,
                  "type": [Function],
                  "updateQueue": null,
                },
                "sibling": null,
                "stateNode": SidebarSection {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "children": <Unknown
                      appElement={[MockFunction]}
                      getPreviewer={[MockFunction]}
                      maskError={undefined}
                      onInteraction={[MockFunction]}
                      rootElement={[MockFunction]}
                      skill={
                        Object {
                          "entries": Array [
                            Object {
                              "title": "bar",
                            },
                          ],
                        }
                      }
                    />,
                    "className": "",
                    "isOpen": true,
                    "title": <FormattedMessage />,
                  },
                  "refs": Object {},
                  "state": Object {
                    "isOpen": true,
                  },
                  "toggleVisibility": [Function],
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 2,
                "type": [Function],
                "updateQueue": null,
              },
              "stateNode": [Circular],
              "tag": 2,
              "type": [Function],
              "updateQueue": null,
            },
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "children": <Unknown
                appElement={[MockFunction]}
                getPreviewer={[MockFunction]}
                maskError={undefined}
                onInteraction={[MockFunction]}
                rootElement={[MockFunction]}
                skill={
                  Object {
                    "entries": Array [
                      Object {
                        "title": "foo",
                      },
                    ],
                  }
                }
              />,
              "className": "",
              "isOpen": true,
              "title": <FormattedMessage />,
            },
            "refs": Object {},
            "state": Object {
              "isOpen": true,
            },
            "toggleVisibility": [Function],
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "key": "0",
          "nodeType": "class",
          "props": Object {
            "children": <Unknown
              appElement={[MockFunction]}
              getPreviewer={[MockFunction]}
              maskError={undefined}
              onInteraction={[MockFunction]}
              rootElement={[MockFunction]}
              skill={
                Object {
                  "entries": Array [
                    Object {
                      "title": "foo",
                    },
                  ],
                }
              }
            />,
            "className": "",
            "isOpen": true,
            "title": <FormattedMessage />,
          },
          "ref": null,
          "rendered": Object {
            "instance": <div
              class="bcs-section bcs-section-open"
            >
              <button
                class="btn-plain bcs-section-title"
                type="button"
              >
                <div />
              </button>
              <div
                class="bcs-section-content"
              />
            </div>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <PlainButton
                  className="bcs-section-title"
                  onClick={[Function]}
                  type="button"
                >
                  <FormattedMessage />
                </PlainButton>,
                <div
                  className="bcs-section-content"
                >
                  <Unknown
                    appElement={[MockFunction]}
                    getPreviewer={[MockFunction]}
                    maskError={undefined}
                    onInteraction={[MockFunction]}
                    rootElement={[MockFunction]}
                    skill={
                      Object {
                        "entries": Array [
                          Object {
                            "title": "foo",
                          },
                        ],
                      }
                    }
                  />
                </div>,
              ],
              "className": "bcs-section bcs-section-open",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": <FormattedMessage />,
                  "className": "bcs-section-title",
                  "onClick": [Function],
                  "type": "button",
                },
                "ref": null,
                "rendered": Object {
                  "instance": <button
                    class="btn-plain bcs-section-title"
                    type="button"
                  >
                    <div />
                  </button>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <FormattedMessage />,
                    "className": "btn-plain bcs-section-title",
                    "onClick": [Function],
                    "type": "button",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {},
                      "ref": null,
                      "rendered": Object {
                        "instance": <div />,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {},
                        "ref": null,
                        "rendered": Array [
                          undefined,
                        ],
                        "type": "div",
                      },
                      "type": [Function],
                    },
                  ],
                  "type": "button",
                },
                "type": [Function],
              },
              Object {
                "instance": <div
                  class="bcs-section-content"
                />,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Unknown
                    appElement={[MockFunction]}
                    getPreviewer={[MockFunction]}
                    maskError={undefined}
                    onInteraction={[MockFunction]}
                    rootElement={[MockFunction]}
                    skill={
                      Object {
                        "entries": Array [
                          Object {
                            "title": "foo",
                          },
                        ],
                      }
                    }
                  />,
                  "className": "bcs-section-content",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "appElement": [MockFunction],
                      "getPreviewer": [MockFunction],
                      "maskError": undefined,
                      "onInteraction": [MockFunction],
                      "rootElement": [MockFunction],
                      "skill": Object {
                        "entries": Array [
                          Object {
                            "title": "foo",
                          },
                        ],
                      },
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "appElement": [MockFunction],
                        "getPreviewer": [MockFunction],
                        "onInteraction": [MockFunction],
                        "rootElement": [MockFunction],
                        "skill": Object {
                          "entries": Array [
                            Object {
                              "title": "foo",
                            },
                          ],
                        },
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
            ],
            "type": "div",
          },
          "type": [Function],
        },
        Object {
          "instance": SidebarSection {
            "_reactInternalFiber": FiberNode {
              "_debugID": 6,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": FiberNode {
                "_debugID": 4,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": FiberNode {
                  "_debugID": 3,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": null,
                  "child": [Circular],
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "appElement": [MockFunction],
                      "getPreviewer": [MockFunction],
                      "metadata": Object {
                        "global": Object {
                          "boxSkillsCards": Object {
                            "cards": Array [
                              Object {
                                "entries": Array [
                                  Object {
                                    "title": "foo",
                                  },
                                ],
                              },
                              Object {
                                "entries": Array [
                                  Object {
                                    "title": "bar",
                                  },
                                ],
                              },
                            ],
                          },
                        },
                      },
                      "onInteraction": [MockFunction],
                      "rootElement": [MockFunction],
                    },
                  },
                  "memoizedState": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "appElement": [MockFunction],
                      "getPreviewer": [MockFunction],
                      "metadata": Object {
                        "global": Object {
                          "boxSkillsCards": Object {
                            "cards": Array [
                              Object {
                                "entries": Array [
                                  Object {
                                    "title": "foo",
                                  },
                                ],
                              },
                              Object {
                                "entries": Array [
                                  Object {
                                    "title": "bar",
                                  },
                                ],
                              },
                            ],
                          },
                        },
                      },
                      "onInteraction": [MockFunction],
                      "rootElement": [MockFunction],
                    },
                  },
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 1,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": FiberNode {
                      "_debugID": 1,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": [Circular],
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 1,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": null,
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div
                            class="bcs-section bcs-section-open"
                          >
                            <button
                              class="btn-plain bcs-section-title"
                              type="button"
                            >
                              <div />
                            </button>
                            <div
                              class="bcs-section-content"
                            />
                          </div>
                          <div
                            class="bcs-section bcs-section-open"
                          >
                            <button
                              class="btn-plain bcs-section-title"
                              type="button"
                            >
                              <div />
                            </button>
                            <div
                              class="bcs-section-content"
                            />
                          </div>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "finishedWork": null,
                        "hydrate": false,
                        "isReadyForCommit": false,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingContext": null,
                        "remainingExpirationTime": 0,
                      },
                      "tag": 3,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": null,
                        "callbackList": null,
                        "expirationTime": 1,
                        "first": Object {
                          "callback": null,
                          "expirationTime": 1,
                          "isForced": false,
                          "isReplace": false,
                          "next": null,
                          "nextCallback": null,
                          "partialState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                Object {
                                  "appElement": [MockFunction],
                                  "getPreviewer": [MockFunction],
                                  "metadata": Object {
                                    "global": Object {
                                      "boxSkillsCards": Object {
                                        "cards": Array [
                                          Object {
                                            "entries": Array [
                                              Object {
                                                "title": "foo",
                                              },
                                            ],
                                          },
                                          Object {
                                            "entries": Array [
                                              Object {
                                                "title": "bar",
                                              },
                                            ],
                                          },
                                        ],
                                      },
                                    },
                                  },
                                  "onInteraction": [MockFunction],
                                  "rootElement": [MockFunction],
                                }
                              }
                            />,
                          },
                        },
                        "hasForceUpdate": false,
                        "isInitialized": false,
                        "isProcessing": false,
                        "last": Object {
                          "callback": null,
                          "expirationTime": 1,
                          "isForced": false,
                          "isReplace": false,
                          "next": null,
                          "nextCallback": null,
                          "partialState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                Object {
                                  "appElement": [MockFunction],
                                  "getPreviewer": [MockFunction],
                                  "metadata": Object {
                                    "global": Object {
                                      "boxSkillsCards": Object {
                                        "cards": Array [
                                          Object {
                                            "entries": Array [
                                              Object {
                                                "title": "foo",
                                              },
                                            ],
                                          },
                                          Object {
                                            "entries": Array [
                                              Object {
                                                "title": "bar",
                                              },
                                            ],
                                          },
                                        ],
                                      },
                                    },
                                  },
                                  "onInteraction": [MockFunction],
                                  "rootElement": [MockFunction],
                                }
                              }
                            />,
                          },
                        },
                      },
                    },
                    "child": [Circular],
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": null,
                    "memoizedState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "appElement": [MockFunction],
                            "getPreviewer": [MockFunction],
                            "metadata": Object {
                              "global": Object {
                                "boxSkillsCards": Object {
                                  "cards": Array [
                                    Object {
                                      "entries": Array [
                                        Object {
                                          "title": "foo",
                                        },
                                      ],
                                    },
                                    Object {
                                      "entries": Array [
                                        Object {
                                          "title": "bar",
                                        },
                                      ],
                                    },
                                  ],
                                },
                              },
                            },
                            "onInteraction": [MockFunction],
                            "rootElement": [MockFunction],
                          }
                        }
                      />,
                    },
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <div
                          class="bcs-section bcs-section-open"
                        >
                          <button
                            class="btn-plain bcs-section-title"
                            type="button"
                          >
                            <div />
                          </button>
                          <div
                            class="bcs-section-content"
                          />
                        </div>
                        <div
                          class="bcs-section bcs-section-open"
                        >
                          <button
                            class="btn-plain bcs-section-title"
                            type="button"
                          >
                            <div />
                          </button>
                          <div
                            class="bcs-section-content"
                          />
                        </div>
                      </div>,
                      "context": Object {},
                      "current": [Circular],
                      "finishedWork": null,
                      "hydrate": false,
                      "isReadyForCommit": false,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingContext": null,
                      "remainingExpirationTime": 0,
                    },
                    "tag": 3,
                    "type": null,
                    "updateQueue": null,
                  },
                  "sibling": null,
                  "stateNode": WrapperComponent {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "props": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "appElement": [MockFunction],
                        "getPreviewer": [MockFunction],
                        "metadata": Object {
                          "global": Object {
                            "boxSkillsCards": Object {
                              "cards": Array [
                                Object {
                                  "entries": Array [
                                    Object {
                                      "title": "foo",
                                    },
                                  ],
                                },
                                Object {
                                  "entries": Array [
                                    Object {
                                      "title": "bar",
                                    },
                                  ],
                                },
                              ],
                            },
                          },
                        },
                        "onInteraction": [MockFunction],
                        "rootElement": [MockFunction],
                      },
                    },
                    "refs": Object {},
                    "state": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "appElement": [MockFunction],
                        "getPreviewer": [MockFunction],
                        "metadata": Object {
                          "global": Object {
                            "boxSkillsCards": Object {
                              "cards": Array [
                                Object {
                                  "entries": Array [
                                    Object {
                                      "title": "foo",
                                    },
                                  ],
                                },
                                Object {
                                  "entries": Array [
                                    Object {
                                      "title": "bar",
                                    },
                                  ],
                                },
                              ],
                            },
                          },
                        },
                        "onInteraction": [MockFunction],
                        "rootElement": [MockFunction],
                      },
                    },
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 2,
                  "type": [Function],
                  "updateQueue": null,
                },
                "_debugSource": null,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 5,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 7,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 8,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 10,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 11,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": null,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 12,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": null,
                            "alternate": null,
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {},
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": [Circular],
                            "sibling": null,
                            "stateNode": <div />,
                            "tag": 5,
                            "type": "div",
                            "updateQueue": null,
                          },
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {},
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": [Circular],
                          "sibling": null,
                          "stateNode": null,
                          "tag": 1,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": <FormattedMessage />,
                          "className": "btn-plain bcs-section-title",
                          "onClick": [Function],
                          "type": "button",
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": <button
                          class="btn-plain bcs-section-title"
                          type="button"
                        >
                          <div />
                        </button>,
                        "tag": 5,
                        "type": "button",
                        "updateQueue": null,
                      },
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": <FormattedMessage />,
                        "className": "bcs-section-title",
                        "onClick": [Function],
                        "type": "button",
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": [Circular],
                      "sibling": FiberNode {
                        "_debugID": 9,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 13,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": null,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 14,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": null,
                            "alternate": null,
                            "child": null,
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "appElement": [MockFunction],
                              "getPreviewer": [MockFunction],
                              "onInteraction": [MockFunction],
                              "rootElement": [MockFunction],
                              "skill": Object {
                                "entries": Array [
                                  Object {
                                    "title": "foo",
                                  },
                                ],
                              },
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": [Circular],
                            "sibling": null,
                            "stateNode": null,
                            "tag": 1,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "appElement": [MockFunction],
                            "getPreviewer": [MockFunction],
                            "maskError": undefined,
                            "onInteraction": [MockFunction],
                            "rootElement": [MockFunction],
                            "skill": Object {
                              "entries": Array [
                                Object {
                                  "title": "foo",
                                },
                              ],
                            },
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": [Circular],
                          "sibling": null,
                          "stateNode": null,
                          "tag": 1,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 1,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": <Unknown
                            appElement={[MockFunction]}
                            getPreviewer={[MockFunction]}
                            maskError={undefined}
                            onInteraction={[MockFunction]}
                            rootElement={[MockFunction]}
                            skill={
                              Object {
                                "entries": Array [
                                  Object {
                                    "title": "foo",
                                  },
                                ],
                              }
                            }
                          />,
                          "className": "bcs-section-content",
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": <div
                          class="bcs-section-content"
                        />,
                        "tag": 5,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "stateNode": null,
                      "tag": 1,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <PlainButton
                          className="bcs-section-title"
                          onClick={[Function]}
                          type="button"
                        >
                          <FormattedMessage />
                        </PlainButton>,
                        <div
                          className="bcs-section-content"
                        >
                          <Unknown
                            appElement={[MockFunction]}
                            getPreviewer={[MockFunction]}
                            maskError={undefined}
                            onInteraction={[MockFunction]}
                            rootElement={[MockFunction]}
                            skill={
                              Object {
                                "entries": Array [
                                  Object {
                                    "title": "foo",
                                  },
                                ],
                              }
                            }
                          />
                        </div>,
                      ],
                      "className": "bcs-section bcs-section-open",
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": <div
                      class="bcs-section bcs-section-open"
                    >
                      <button
                        class="btn-plain bcs-section-title"
                        type="button"
                      >
                        <div />
                      </button>
                      <div
                        class="bcs-section-content"
                      />
                    </div>,
                    "tag": 5,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": "0",
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": <Unknown
                      appElement={[MockFunction]}
                      getPreviewer={[MockFunction]}
                      maskError={undefined}
                      onInteraction={[MockFunction]}
                      rootElement={[MockFunction]}
                      skill={
                        Object {
                          "entries": Array [
                            Object {
                              "title": "foo",
                            },
                          ],
                        }
                      }
                    />,
                    "className": "",
                    "isOpen": true,
                    "title": <FormattedMessage />,
                  },
                  "memoizedState": Object {
                    "isOpen": true,
                  },
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": [Circular],
                  "sibling": [Circular],
                  "stateNode": SidebarSection {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "props": Object {
                      "children": <Unknown
                        appElement={[MockFunction]}
                        getPreviewer={[MockFunction]}
                        maskError={undefined}
                        onInteraction={[MockFunction]}
                        rootElement={[MockFunction]}
                        skill={
                          Object {
                            "entries": Array [
                              Object {
                                "title": "foo",
                              },
                            ],
                          }
                        }
                      />,
                      "className": "",
                      "isOpen": true,
                      "title": <FormattedMessage />,
                    },
                    "refs": Object {},
                    "state": Object {
                      "isOpen": true,
                    },
                    "toggleVisibility": [Function],
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 2,
                  "type": [Function],
                  "updateQueue": null,
                },
                "effectTag": 1,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "appElement": [MockFunction],
                  "getPreviewer": [MockFunction],
                  "metadata": Object {
                    "global": Object {
                      "boxSkillsCards": Object {
                        "cards": Array [
                          Object {
                            "entries": Array [
                              Object {
                                "title": "foo",
                              },
                            ],
                          },
                          Object {
                            "entries": Array [
                              Object {
                                "title": "bar",
                              },
                            ],
                          },
                        ],
                      },
                    },
                  },
                  "onInteraction": [MockFunction],
                  "rootElement": [MockFunction],
                },
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": FiberNode {
                  "_debugID": 3,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": null,
                  "child": [Circular],
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "appElement": [MockFunction],
                      "getPreviewer": [MockFunction],
                      "metadata": Object {
                        "global": Object {
                          "boxSkillsCards": Object {
                            "cards": Array [
                              Object {
                                "entries": Array [
                                  Object {
                                    "title": "foo",
                                  },
                                ],
                              },
                              Object {
                                "entries": Array [
                                  Object {
                                    "title": "bar",
                                  },
                                ],
                              },
                            ],
                          },
                        },
                      },
                      "onInteraction": [MockFunction],
                      "rootElement": [MockFunction],
                    },
                  },
                  "memoizedState": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "appElement": [MockFunction],
                      "getPreviewer": [MockFunction],
                      "metadata": Object {
                        "global": Object {
                          "boxSkillsCards": Object {
                            "cards": Array [
                              Object {
                                "entries": Array [
                                  Object {
                                    "title": "foo",
                                  },
                                ],
                              },
                              Object {
                                "entries": Array [
                                  Object {
                                    "title": "bar",
                                  },
                                ],
                              },
                            ],
                          },
                        },
                      },
                      "onInteraction": [MockFunction],
                      "rootElement": [MockFunction],
                    },
                  },
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 1,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": FiberNode {
                      "_debugID": 1,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": [Circular],
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 1,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": null,
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div
                            class="bcs-section bcs-section-open"
                          >
                            <button
                              class="btn-plain bcs-section-title"
                              type="button"
                            >
                              <div />
                            </button>
                            <div
                              class="bcs-section-content"
                            />
                          </div>
                          <div
                            class="bcs-section bcs-section-open"
                          >
                            <button
                              class="btn-plain bcs-section-title"
                              type="button"
                            >
                              <div />
                            </button>
                            <div
                              class="bcs-section-content"
                            />
                          </div>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "finishedWork": null,
                        "hydrate": false,
                        "isReadyForCommit": false,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingContext": null,
                        "remainingExpirationTime": 0,
                      },
                      "tag": 3,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": null,
                        "callbackList": null,
                        "expirationTime": 1,
                        "first": Object {
                          "callback": null,
                          "expirationTime": 1,
                          "isForced": false,
                          "isReplace": false,
                          "next": null,
                          "nextCallback": null,
                          "partialState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                Object {
                                  "appElement": [MockFunction],
                                  "getPreviewer": [MockFunction],
                                  "metadata": Object {
                                    "global": Object {
                                      "boxSkillsCards": Object {
                                        "cards": Array [
                                          Object {
                                            "entries": Array [
                                              Object {
                                                "title": "foo",
                                              },
                                            ],
                                          },
                                          Object {
                                            "entries": Array [
                                              Object {
                                                "title": "bar",
                                              },
                                            ],
                                          },
                                        ],
                                      },
                                    },
                                  },
                                  "onInteraction": [MockFunction],
                                  "rootElement": [MockFunction],
                                }
                              }
                            />,
                          },
                        },
                        "hasForceUpdate": false,
                        "isInitialized": false,
                        "isProcessing": false,
                        "last": Object {
                          "callback": null,
                          "expirationTime": 1,
                          "isForced": false,
                          "isReplace": false,
                          "next": null,
                          "nextCallback": null,
                          "partialState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                Object {
                                  "appElement": [MockFunction],
                                  "getPreviewer": [MockFunction],
                                  "metadata": Object {
                                    "global": Object {
                                      "boxSkillsCards": Object {
                                        "cards": Array [
                                          Object {
                                            "entries": Array [
                                              Object {
                                                "title": "foo",
                                              },
                                            ],
                                          },
                                          Object {
                                            "entries": Array [
                                              Object {
                                                "title": "bar",
                                              },
                                            ],
                                          },
                                        ],
                                      },
                                    },
                                  },
                                  "onInteraction": [MockFunction],
                                  "rootElement": [MockFunction],
                                }
                              }
                            />,
                          },
                        },
                      },
                    },
                    "child": [Circular],
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": null,
                    "memoizedState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "appElement": [MockFunction],
                            "getPreviewer": [MockFunction],
                            "metadata": Object {
                              "global": Object {
                                "boxSkillsCards": Object {
                                  "cards": Array [
                                    Object {
                                      "entries": Array [
                                        Object {
                                          "title": "foo",
                                        },
                                      ],
                                    },
                                    Object {
                                      "entries": Array [
                                        Object {
                                          "title": "bar",
                                        },
                                      ],
                                    },
                                  ],
                                },
                              },
                            },
                            "onInteraction": [MockFunction],
                            "rootElement": [MockFunction],
                          }
                        }
                      />,
                    },
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <div
                          class="bcs-section bcs-section-open"
                        >
                          <button
                            class="btn-plain bcs-section-title"
                            type="button"
                          >
                            <div />
                          </button>
                          <div
                            class="bcs-section-content"
                          />
                        </div>
                        <div
                          class="bcs-section bcs-section-open"
                        >
                          <button
                            class="btn-plain bcs-section-title"
                            type="button"
                          >
                            <div />
                          </button>
                          <div
                            class="bcs-section-content"
                          />
                        </div>
                      </div>,
                      "context": Object {},
                      "current": [Circular],
                      "finishedWork": null,
                      "hydrate": false,
                      "isReadyForCommit": false,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingContext": null,
                      "remainingExpirationTime": 0,
                    },
                    "tag": 3,
                    "type": null,
                    "updateQueue": null,
                  },
                  "sibling": null,
                  "stateNode": WrapperComponent {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "props": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "appElement": [MockFunction],
                        "getPreviewer": [MockFunction],
                        "metadata": Object {
                          "global": Object {
                            "boxSkillsCards": Object {
                              "cards": Array [
                                Object {
                                  "entries": Array [
                                    Object {
                                      "title": "foo",
                                    },
                                  ],
                                },
                                Object {
                                  "entries": Array [
                                    Object {
                                      "title": "bar",
                                    },
                                  ],
                                },
                              ],
                            },
                          },
                        },
                        "onInteraction": [MockFunction],
                        "rootElement": [MockFunction],
                      },
                    },
                    "refs": Object {},
                    "state": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "appElement": [MockFunction],
                        "getPreviewer": [MockFunction],
                        "metadata": Object {
                          "global": Object {
                            "boxSkillsCards": Object {
                              "cards": Array [
                                Object {
                                  "entries": Array [
                                    Object {
                                      "title": "foo",
                                    },
                                  ],
                                },
                                Object {
                                  "entries": Array [
                                    Object {
                                      "title": "bar",
                                    },
                                  ],
                                },
                              ],
                            },
                          },
                        },
                        "onInteraction": [MockFunction],
                        "rootElement": [MockFunction],
                      },
                    },
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 2,
                  "type": [Function],
                  "updateQueue": null,
                },
                "sibling": null,
                "stateNode": null,
                "tag": 1,
                "type": [Function],
                "updateQueue": null,
              },
              "_debugSource": null,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 15,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 16,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 18,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 19,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": FiberNode {
                        "_debugID": 4,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": FiberNode {
                          "_debugID": 3,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "appElement": [MockFunction],
                              "getPreviewer": [MockFunction],
                              "metadata": Object {
                                "global": Object {
                                  "boxSkillsCards": Object {
                                    "cards": Array [
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "foo",
                                          },
                                        ],
                                      },
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "bar",
                                          },
                                        ],
                                      },
                                    ],
                                  },
                                },
                              },
                              "onInteraction": [MockFunction],
                              "rootElement": [MockFunction],
                            },
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "appElement": [MockFunction],
                              "getPreviewer": [MockFunction],
                              "metadata": Object {
                                "global": Object {
                                  "boxSkillsCards": Object {
                                    "cards": Array [
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "foo",
                                          },
                                        ],
                                      },
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "bar",
                                          },
                                        ],
                                      },
                                    ],
                                  },
                                },
                              },
                              "onInteraction": [MockFunction],
                              "rootElement": [MockFunction],
                            },
                          },
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": [Circular],
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 1,
                              "firstEffect": null,
                              "index": 0,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div
                                    class="bcs-section bcs-section-open"
                                  >
                                    <button
                                      class="btn-plain bcs-section-title"
                                      type="button"
                                    >
                                      <div />
                                    </button>
                                    <div
                                      class="bcs-section-content"
                                    />
                                  </div>
                                  <div
                                    class="bcs-section bcs-section-open"
                                  >
                                    <button
                                      class="btn-plain bcs-section-title"
                                      type="button"
                                    >
                                      <div />
                                    </button>
                                    <div
                                      class="bcs-section-content"
                                    />
                                  </div>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "hydrate": false,
                                "isReadyForCommit": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": null,
                                "callbackList": null,
                                "expirationTime": 1,
                                "first": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "nextCallback": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "appElement": [MockFunction],
                                          "getPreviewer": [MockFunction],
                                          "metadata": Object {
                                            "global": Object {
                                              "boxSkillsCards": Object {
                                                "cards": Array [
                                                  Object {
                                                    "entries": Array [
                                                      Object {
                                                        "title": "foo",
                                                      },
                                                    ],
                                                  },
                                                  Object {
                                                    "entries": Array [
                                                      Object {
                                                        "title": "bar",
                                                      },
                                                    ],
                                                  },
                                                ],
                                              },
                                            },
                                          },
                                          "onInteraction": [MockFunction],
                                          "rootElement": [MockFunction],
                                        }
                                      }
                                    />,
                                  },
                                },
                                "hasForceUpdate": false,
                                "isInitialized": false,
                                "isProcessing": false,
                                "last": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "nextCallback": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "appElement": [MockFunction],
                                          "getPreviewer": [MockFunction],
                                          "metadata": Object {
                                            "global": Object {
                                              "boxSkillsCards": Object {
                                                "cards": Array [
                                                  Object {
                                                    "entries": Array [
                                                      Object {
                                                        "title": "foo",
                                                      },
                                                    ],
                                                  },
                                                  Object {
                                                    "entries": Array [
                                                      Object {
                                                        "title": "bar",
                                                      },
                                                    ],
                                                  },
                                                ],
                                              },
                                            },
                                          },
                                          "onInteraction": [MockFunction],
                                          "rootElement": [MockFunction],
                                        }
                                      }
                                    />,
                                  },
                                },
                              },
                            },
                            "child": [Circular],
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "appElement": [MockFunction],
                                    "getPreviewer": [MockFunction],
                                    "metadata": Object {
                                      "global": Object {
                                        "boxSkillsCards": Object {
                                          "cards": Array [
                                            Object {
                                              "entries": Array [
                                                Object {
                                                  "title": "foo",
                                                },
                                              ],
                                            },
                                            Object {
                                              "entries": Array [
                                                Object {
                                                  "title": "bar",
                                                },
                                              ],
                                            },
                                          ],
                                        },
                                      },
                                    },
                                    "onInteraction": [MockFunction],
                                    "rootElement": [MockFunction],
                                  }
                                }
                              />,
                            },
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                  class="bcs-section bcs-section-open"
                                >
                                  <button
                                    class="btn-plain bcs-section-title"
                                    type="button"
                                  >
                                    <div />
                                  </button>
                                  <div
                                    class="bcs-section-content"
                                  />
                                </div>
                                <div
                                  class="bcs-section bcs-section-open"
                                >
                                  <button
                                    class="btn-plain bcs-section-title"
                                    type="button"
                                  >
                                    <div />
                                  </button>
                                  <div
                                    class="bcs-section-content"
                                  />
                                </div>
                              </div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "hydrate": false,
                              "isReadyForCommit": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": null,
                          },
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "appElement": [MockFunction],
                                "getPreviewer": [MockFunction],
                                "metadata": Object {
                                  "global": Object {
                                    "boxSkillsCards": Object {
                                      "cards": Array [
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "foo",
                                            },
                                          ],
                                        },
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "bar",
                                            },
                                          ],
                                        },
                                      ],
                                    },
                                  },
                                },
                                "onInteraction": [MockFunction],
                                "rootElement": [MockFunction],
                              },
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "appElement": [MockFunction],
                                "getPreviewer": [MockFunction],
                                "metadata": Object {
                                  "global": Object {
                                    "boxSkillsCards": Object {
                                      "cards": Array [
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "foo",
                                            },
                                          ],
                                        },
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "bar",
                                            },
                                          ],
                                        },
                                      ],
                                    },
                                  },
                                },
                                "onInteraction": [MockFunction],
                                "rootElement": [MockFunction],
                              },
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "_debugSource": null,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 5,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": null,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 7,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": null,
                            "alternate": null,
                            "child": FiberNode {
                              "_debugID": 8,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": null,
                              "alternate": null,
                              "child": FiberNode {
                                "_debugID": 10,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": null,
                                "alternate": null,
                                "child": FiberNode {
                                  "_debugID": 11,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": null,
                                  "alternate": null,
                                  "child": FiberNode {
                                    "_debugID": 12,
                                    "_debugIsCurrentlyTiming": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": null,
                                    "alternate": null,
                                    "child": null,
                                    "effectTag": 0,
                                    "expirationTime": 0,
                                    "firstEffect": null,
                                    "index": 0,
                                    "internalContextTag": 0,
                                    "key": null,
                                    "lastEffect": null,
                                    "memoizedProps": Object {},
                                    "memoizedState": null,
                                    "nextEffect": null,
                                    "pendingProps": null,
                                    "ref": null,
                                    "return": [Circular],
                                    "sibling": null,
                                    "stateNode": <div />,
                                    "tag": 5,
                                    "type": "div",
                                    "updateQueue": null,
                                  },
                                  "effectTag": 1,
                                  "expirationTime": 0,
                                  "firstEffect": null,
                                  "index": 0,
                                  "internalContextTag": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": Object {},
                                  "memoizedState": null,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": [Circular],
                                  "sibling": null,
                                  "stateNode": null,
                                  "tag": 1,
                                  "type": [Function],
                                  "updateQueue": null,
                                },
                                "effectTag": 0,
                                "expirationTime": 0,
                                "firstEffect": null,
                                "index": 0,
                                "internalContextTag": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": <FormattedMessage />,
                                  "className": "btn-plain bcs-section-title",
                                  "onClick": [Function],
                                  "type": "button",
                                },
                                "memoizedState": null,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": [Circular],
                                "sibling": null,
                                "stateNode": <button
                                  class="btn-plain bcs-section-title"
                                  type="button"
                                >
                                  <div />
                                </button>,
                                "tag": 5,
                                "type": "button",
                                "updateQueue": null,
                              },
                              "effectTag": 1,
                              "expirationTime": 0,
                              "firstEffect": null,
                              "index": 0,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": <FormattedMessage />,
                                "className": "bcs-section-title",
                                "onClick": [Function],
                                "type": "button",
                              },
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": [Circular],
                              "sibling": FiberNode {
                                "_debugID": 9,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": null,
                                "alternate": null,
                                "child": FiberNode {
                                  "_debugID": 13,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": null,
                                  "alternate": null,
                                  "child": FiberNode {
                                    "_debugID": 14,
                                    "_debugIsCurrentlyTiming": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": null,
                                    "alternate": null,
                                    "child": null,
                                    "effectTag": 1,
                                    "expirationTime": 0,
                                    "firstEffect": null,
                                    "index": 0,
                                    "internalContextTag": 0,
                                    "key": null,
                                    "lastEffect": null,
                                    "memoizedProps": Object {
                                      "appElement": [MockFunction],
                                      "getPreviewer": [MockFunction],
                                      "onInteraction": [MockFunction],
                                      "rootElement": [MockFunction],
                                      "skill": Object {
                                        "entries": Array [
                                          Object {
                                            "title": "foo",
                                          },
                                        ],
                                      },
                                    },
                                    "memoizedState": null,
                                    "nextEffect": null,
                                    "pendingProps": null,
                                    "ref": null,
                                    "return": [Circular],
                                    "sibling": null,
                                    "stateNode": null,
                                    "tag": 1,
                                    "type": [Function],
                                    "updateQueue": null,
                                  },
                                  "effectTag": 1,
                                  "expirationTime": 0,
                                  "firstEffect": null,
                                  "index": 0,
                                  "internalContextTag": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "appElement": [MockFunction],
                                    "getPreviewer": [MockFunction],
                                    "maskError": undefined,
                                    "onInteraction": [MockFunction],
                                    "rootElement": [MockFunction],
                                    "skill": Object {
                                      "entries": Array [
                                        Object {
                                          "title": "foo",
                                        },
                                      ],
                                    },
                                  },
                                  "memoizedState": null,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": [Circular],
                                  "sibling": null,
                                  "stateNode": null,
                                  "tag": 1,
                                  "type": [Function],
                                  "updateQueue": null,
                                },
                                "effectTag": 0,
                                "expirationTime": 0,
                                "firstEffect": null,
                                "index": 1,
                                "internalContextTag": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": <Unknown
                                    appElement={[MockFunction]}
                                    getPreviewer={[MockFunction]}
                                    maskError={undefined}
                                    onInteraction={[MockFunction]}
                                    rootElement={[MockFunction]}
                                    skill={
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "foo",
                                          },
                                        ],
                                      }
                                    }
                                  />,
                                  "className": "bcs-section-content",
                                },
                                "memoizedState": null,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": [Circular],
                                "sibling": null,
                                "stateNode": <div
                                  class="bcs-section-content"
                                />,
                                "tag": 5,
                                "type": "div",
                                "updateQueue": null,
                              },
                              "stateNode": null,
                              "tag": 1,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": Array [
                                <PlainButton
                                  className="bcs-section-title"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  <FormattedMessage />
                                </PlainButton>,
                                <div
                                  className="bcs-section-content"
                                >
                                  <Unknown
                                    appElement={[MockFunction]}
                                    getPreviewer={[MockFunction]}
                                    maskError={undefined}
                                    onInteraction={[MockFunction]}
                                    rootElement={[MockFunction]}
                                    skill={
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "foo",
                                          },
                                        ],
                                      }
                                    }
                                  />
                                </div>,
                              ],
                              "className": "bcs-section bcs-section-open",
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": [Circular],
                            "sibling": null,
                            "stateNode": <div
                              class="bcs-section bcs-section-open"
                            >
                              <button
                                class="btn-plain bcs-section-title"
                                type="button"
                              >
                                <div />
                              </button>
                              <div
                                class="bcs-section-content"
                              />
                            </div>,
                            "tag": 5,
                            "type": "div",
                            "updateQueue": null,
                          },
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": "0",
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": <Unknown
                              appElement={[MockFunction]}
                              getPreviewer={[MockFunction]}
                              maskError={undefined}
                              onInteraction={[MockFunction]}
                              rootElement={[MockFunction]}
                              skill={
                                Object {
                                  "entries": Array [
                                    Object {
                                      "title": "foo",
                                    },
                                  ],
                                }
                              }
                            />,
                            "className": "",
                            "isOpen": true,
                            "title": <FormattedMessage />,
                          },
                          "memoizedState": Object {
                            "isOpen": true,
                          },
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": [Circular],
                          "sibling": [Circular],
                          "stateNode": SidebarSection {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "children": <Unknown
                                appElement={[MockFunction]}
                                getPreviewer={[MockFunction]}
                                maskError={undefined}
                                onInteraction={[MockFunction]}
                                rootElement={[MockFunction]}
                                skill={
                                  Object {
                                    "entries": Array [
                                      Object {
                                        "title": "foo",
                                      },
                                    ],
                                  }
                                }
                              />,
                              "className": "",
                              "isOpen": true,
                              "title": <FormattedMessage />,
                            },
                            "refs": Object {},
                            "state": Object {
                              "isOpen": true,
                            },
                            "toggleVisibility": [Function],
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "appElement": [MockFunction],
                          "getPreviewer": [MockFunction],
                          "metadata": Object {
                            "global": Object {
                              "boxSkillsCards": Object {
                                "cards": Array [
                                  Object {
                                    "entries": Array [
                                      Object {
                                        "title": "foo",
                                      },
                                    ],
                                  },
                                  Object {
                                    "entries": Array [
                                      Object {
                                        "title": "bar",
                                      },
                                    ],
                                  },
                                ],
                              },
                            },
                          },
                          "onInteraction": [MockFunction],
                          "rootElement": [MockFunction],
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 3,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "appElement": [MockFunction],
                              "getPreviewer": [MockFunction],
                              "metadata": Object {
                                "global": Object {
                                  "boxSkillsCards": Object {
                                    "cards": Array [
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "foo",
                                          },
                                        ],
                                      },
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "bar",
                                          },
                                        ],
                                      },
                                    ],
                                  },
                                },
                              },
                              "onInteraction": [MockFunction],
                              "rootElement": [MockFunction],
                            },
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "appElement": [MockFunction],
                              "getPreviewer": [MockFunction],
                              "metadata": Object {
                                "global": Object {
                                  "boxSkillsCards": Object {
                                    "cards": Array [
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "foo",
                                          },
                                        ],
                                      },
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "bar",
                                          },
                                        ],
                                      },
                                    ],
                                  },
                                },
                              },
                              "onInteraction": [MockFunction],
                              "rootElement": [MockFunction],
                            },
                          },
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": [Circular],
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 1,
                              "firstEffect": null,
                              "index": 0,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div
                                    class="bcs-section bcs-section-open"
                                  >
                                    <button
                                      class="btn-plain bcs-section-title"
                                      type="button"
                                    >
                                      <div />
                                    </button>
                                    <div
                                      class="bcs-section-content"
                                    />
                                  </div>
                                  <div
                                    class="bcs-section bcs-section-open"
                                  >
                                    <button
                                      class="btn-plain bcs-section-title"
                                      type="button"
                                    >
                                      <div />
                                    </button>
                                    <div
                                      class="bcs-section-content"
                                    />
                                  </div>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "hydrate": false,
                                "isReadyForCommit": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": null,
                                "callbackList": null,
                                "expirationTime": 1,
                                "first": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "nextCallback": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "appElement": [MockFunction],
                                          "getPreviewer": [MockFunction],
                                          "metadata": Object {
                                            "global": Object {
                                              "boxSkillsCards": Object {
                                                "cards": Array [
                                                  Object {
                                                    "entries": Array [
                                                      Object {
                                                        "title": "foo",
                                                      },
                                                    ],
                                                  },
                                                  Object {
                                                    "entries": Array [
                                                      Object {
                                                        "title": "bar",
                                                      },
                                                    ],
                                                  },
                                                ],
                                              },
                                            },
                                          },
                                          "onInteraction": [MockFunction],
                                          "rootElement": [MockFunction],
                                        }
                                      }
                                    />,
                                  },
                                },
                                "hasForceUpdate": false,
                                "isInitialized": false,
                                "isProcessing": false,
                                "last": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "nextCallback": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "appElement": [MockFunction],
                                          "getPreviewer": [MockFunction],
                                          "metadata": Object {
                                            "global": Object {
                                              "boxSkillsCards": Object {
                                                "cards": Array [
                                                  Object {
                                                    "entries": Array [
                                                      Object {
                                                        "title": "foo",
                                                      },
                                                    ],
                                                  },
                                                  Object {
                                                    "entries": Array [
                                                      Object {
                                                        "title": "bar",
                                                      },
                                                    ],
                                                  },
                                                ],
                                              },
                                            },
                                          },
                                          "onInteraction": [MockFunction],
                                          "rootElement": [MockFunction],
                                        }
                                      }
                                    />,
                                  },
                                },
                              },
                            },
                            "child": [Circular],
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "appElement": [MockFunction],
                                    "getPreviewer": [MockFunction],
                                    "metadata": Object {
                                      "global": Object {
                                        "boxSkillsCards": Object {
                                          "cards": Array [
                                            Object {
                                              "entries": Array [
                                                Object {
                                                  "title": "foo",
                                                },
                                              ],
                                            },
                                            Object {
                                              "entries": Array [
                                                Object {
                                                  "title": "bar",
                                                },
                                              ],
                                            },
                                          ],
                                        },
                                      },
                                    },
                                    "onInteraction": [MockFunction],
                                    "rootElement": [MockFunction],
                                  }
                                }
                              />,
                            },
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                  class="bcs-section bcs-section-open"
                                >
                                  <button
                                    class="btn-plain bcs-section-title"
                                    type="button"
                                  >
                                    <div />
                                  </button>
                                  <div
                                    class="bcs-section-content"
                                  />
                                </div>
                                <div
                                  class="bcs-section bcs-section-open"
                                >
                                  <button
                                    class="btn-plain bcs-section-title"
                                    type="button"
                                  >
                                    <div />
                                  </button>
                                  <div
                                    class="bcs-section-content"
                                  />
                                </div>
                              </div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "hydrate": false,
                              "isReadyForCommit": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": null,
                          },
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "appElement": [MockFunction],
                                "getPreviewer": [MockFunction],
                                "metadata": Object {
                                  "global": Object {
                                    "boxSkillsCards": Object {
                                      "cards": Array [
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "foo",
                                            },
                                          ],
                                        },
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "bar",
                                            },
                                          ],
                                        },
                                      ],
                                    },
                                  },
                                },
                                "onInteraction": [MockFunction],
                                "rootElement": [MockFunction],
                              },
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "appElement": [MockFunction],
                                "getPreviewer": [MockFunction],
                                "metadata": Object {
                                  "global": Object {
                                    "boxSkillsCards": Object {
                                      "cards": Array [
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "foo",
                                            },
                                          ],
                                        },
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "bar",
                                            },
                                          ],
                                        },
                                      ],
                                    },
                                  },
                                },
                                "onInteraction": [MockFunction],
                                "rootElement": [MockFunction],
                              },
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": null,
                        "tag": 1,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": null,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 20,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "alternate": null,
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {},
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": <div />,
                        "tag": 5,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {},
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": null,
                      "tag": 1,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": <FormattedMessage />,
                      "className": "btn-plain bcs-section-title",
                      "onClick": [Function],
                      "type": "button",
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": <button
                      class="btn-plain bcs-section-title"
                      type="button"
                    >
                      <div />
                    </button>,
                    "tag": 5,
                    "type": "button",
                    "updateQueue": null,
                  },
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": <FormattedMessage />,
                    "className": "bcs-section-title",
                    "onClick": [Function],
                    "type": "button",
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": [Circular],
                  "sibling": FiberNode {
                    "_debugID": 17,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 21,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": FiberNode {
                        "_debugID": 4,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": FiberNode {
                          "_debugID": 3,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "appElement": [MockFunction],
                              "getPreviewer": [MockFunction],
                              "metadata": Object {
                                "global": Object {
                                  "boxSkillsCards": Object {
                                    "cards": Array [
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "foo",
                                          },
                                        ],
                                      },
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "bar",
                                          },
                                        ],
                                      },
                                    ],
                                  },
                                },
                              },
                              "onInteraction": [MockFunction],
                              "rootElement": [MockFunction],
                            },
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "appElement": [MockFunction],
                              "getPreviewer": [MockFunction],
                              "metadata": Object {
                                "global": Object {
                                  "boxSkillsCards": Object {
                                    "cards": Array [
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "foo",
                                          },
                                        ],
                                      },
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "bar",
                                          },
                                        ],
                                      },
                                    ],
                                  },
                                },
                              },
                              "onInteraction": [MockFunction],
                              "rootElement": [MockFunction],
                            },
                          },
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": [Circular],
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 1,
                              "firstEffect": null,
                              "index": 0,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div
                                    class="bcs-section bcs-section-open"
                                  >
                                    <button
                                      class="btn-plain bcs-section-title"
                                      type="button"
                                    >
                                      <div />
                                    </button>
                                    <div
                                      class="bcs-section-content"
                                    />
                                  </div>
                                  <div
                                    class="bcs-section bcs-section-open"
                                  >
                                    <button
                                      class="btn-plain bcs-section-title"
                                      type="button"
                                    >
                                      <div />
                                    </button>
                                    <div
                                      class="bcs-section-content"
                                    />
                                  </div>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "hydrate": false,
                                "isReadyForCommit": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": null,
                                "callbackList": null,
                                "expirationTime": 1,
                                "first": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "nextCallback": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "appElement": [MockFunction],
                                          "getPreviewer": [MockFunction],
                                          "metadata": Object {
                                            "global": Object {
                                              "boxSkillsCards": Object {
                                                "cards": Array [
                                                  Object {
                                                    "entries": Array [
                                                      Object {
                                                        "title": "foo",
                                                      },
                                                    ],
                                                  },
                                                  Object {
                                                    "entries": Array [
                                                      Object {
                                                        "title": "bar",
                                                      },
                                                    ],
                                                  },
                                                ],
                                              },
                                            },
                                          },
                                          "onInteraction": [MockFunction],
                                          "rootElement": [MockFunction],
                                        }
                                      }
                                    />,
                                  },
                                },
                                "hasForceUpdate": false,
                                "isInitialized": false,
                                "isProcessing": false,
                                "last": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "nextCallback": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "appElement": [MockFunction],
                                          "getPreviewer": [MockFunction],
                                          "metadata": Object {
                                            "global": Object {
                                              "boxSkillsCards": Object {
                                                "cards": Array [
                                                  Object {
                                                    "entries": Array [
                                                      Object {
                                                        "title": "foo",
                                                      },
                                                    ],
                                                  },
                                                  Object {
                                                    "entries": Array [
                                                      Object {
                                                        "title": "bar",
                                                      },
                                                    ],
                                                  },
                                                ],
                                              },
                                            },
                                          },
                                          "onInteraction": [MockFunction],
                                          "rootElement": [MockFunction],
                                        }
                                      }
                                    />,
                                  },
                                },
                              },
                            },
                            "child": [Circular],
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "appElement": [MockFunction],
                                    "getPreviewer": [MockFunction],
                                    "metadata": Object {
                                      "global": Object {
                                        "boxSkillsCards": Object {
                                          "cards": Array [
                                            Object {
                                              "entries": Array [
                                                Object {
                                                  "title": "foo",
                                                },
                                              ],
                                            },
                                            Object {
                                              "entries": Array [
                                                Object {
                                                  "title": "bar",
                                                },
                                              ],
                                            },
                                          ],
                                        },
                                      },
                                    },
                                    "onInteraction": [MockFunction],
                                    "rootElement": [MockFunction],
                                  }
                                }
                              />,
                            },
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                  class="bcs-section bcs-section-open"
                                >
                                  <button
                                    class="btn-plain bcs-section-title"
                                    type="button"
                                  >
                                    <div />
                                  </button>
                                  <div
                                    class="bcs-section-content"
                                  />
                                </div>
                                <div
                                  class="bcs-section bcs-section-open"
                                >
                                  <button
                                    class="btn-plain bcs-section-title"
                                    type="button"
                                  >
                                    <div />
                                  </button>
                                  <div
                                    class="bcs-section-content"
                                  />
                                </div>
                              </div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "hydrate": false,
                              "isReadyForCommit": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": null,
                          },
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "appElement": [MockFunction],
                                "getPreviewer": [MockFunction],
                                "metadata": Object {
                                  "global": Object {
                                    "boxSkillsCards": Object {
                                      "cards": Array [
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "foo",
                                            },
                                          ],
                                        },
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "bar",
                                            },
                                          ],
                                        },
                                      ],
                                    },
                                  },
                                },
                                "onInteraction": [MockFunction],
                                "rootElement": [MockFunction],
                              },
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "appElement": [MockFunction],
                                "getPreviewer": [MockFunction],
                                "metadata": Object {
                                  "global": Object {
                                    "boxSkillsCards": Object {
                                      "cards": Array [
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "foo",
                                            },
                                          ],
                                        },
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "bar",
                                            },
                                          ],
                                        },
                                      ],
                                    },
                                  },
                                },
                                "onInteraction": [MockFunction],
                                "rootElement": [MockFunction],
                              },
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "_debugSource": null,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 5,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": null,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 7,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": null,
                            "alternate": null,
                            "child": FiberNode {
                              "_debugID": 8,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": null,
                              "alternate": null,
                              "child": FiberNode {
                                "_debugID": 10,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": null,
                                "alternate": null,
                                "child": FiberNode {
                                  "_debugID": 11,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": null,
                                  "alternate": null,
                                  "child": FiberNode {
                                    "_debugID": 12,
                                    "_debugIsCurrentlyTiming": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": null,
                                    "alternate": null,
                                    "child": null,
                                    "effectTag": 0,
                                    "expirationTime": 0,
                                    "firstEffect": null,
                                    "index": 0,
                                    "internalContextTag": 0,
                                    "key": null,
                                    "lastEffect": null,
                                    "memoizedProps": Object {},
                                    "memoizedState": null,
                                    "nextEffect": null,
                                    "pendingProps": null,
                                    "ref": null,
                                    "return": [Circular],
                                    "sibling": null,
                                    "stateNode": <div />,
                                    "tag": 5,
                                    "type": "div",
                                    "updateQueue": null,
                                  },
                                  "effectTag": 1,
                                  "expirationTime": 0,
                                  "firstEffect": null,
                                  "index": 0,
                                  "internalContextTag": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": Object {},
                                  "memoizedState": null,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": [Circular],
                                  "sibling": null,
                                  "stateNode": null,
                                  "tag": 1,
                                  "type": [Function],
                                  "updateQueue": null,
                                },
                                "effectTag": 0,
                                "expirationTime": 0,
                                "firstEffect": null,
                                "index": 0,
                                "internalContextTag": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": <FormattedMessage />,
                                  "className": "btn-plain bcs-section-title",
                                  "onClick": [Function],
                                  "type": "button",
                                },
                                "memoizedState": null,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": [Circular],
                                "sibling": null,
                                "stateNode": <button
                                  class="btn-plain bcs-section-title"
                                  type="button"
                                >
                                  <div />
                                </button>,
                                "tag": 5,
                                "type": "button",
                                "updateQueue": null,
                              },
                              "effectTag": 1,
                              "expirationTime": 0,
                              "firstEffect": null,
                              "index": 0,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": <FormattedMessage />,
                                "className": "bcs-section-title",
                                "onClick": [Function],
                                "type": "button",
                              },
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": [Circular],
                              "sibling": FiberNode {
                                "_debugID": 9,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": null,
                                "alternate": null,
                                "child": FiberNode {
                                  "_debugID": 13,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": null,
                                  "alternate": null,
                                  "child": FiberNode {
                                    "_debugID": 14,
                                    "_debugIsCurrentlyTiming": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": null,
                                    "alternate": null,
                                    "child": null,
                                    "effectTag": 1,
                                    "expirationTime": 0,
                                    "firstEffect": null,
                                    "index": 0,
                                    "internalContextTag": 0,
                                    "key": null,
                                    "lastEffect": null,
                                    "memoizedProps": Object {
                                      "appElement": [MockFunction],
                                      "getPreviewer": [MockFunction],
                                      "onInteraction": [MockFunction],
                                      "rootElement": [MockFunction],
                                      "skill": Object {
                                        "entries": Array [
                                          Object {
                                            "title": "foo",
                                          },
                                        ],
                                      },
                                    },
                                    "memoizedState": null,
                                    "nextEffect": null,
                                    "pendingProps": null,
                                    "ref": null,
                                    "return": [Circular],
                                    "sibling": null,
                                    "stateNode": null,
                                    "tag": 1,
                                    "type": [Function],
                                    "updateQueue": null,
                                  },
                                  "effectTag": 1,
                                  "expirationTime": 0,
                                  "firstEffect": null,
                                  "index": 0,
                                  "internalContextTag": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "appElement": [MockFunction],
                                    "getPreviewer": [MockFunction],
                                    "maskError": undefined,
                                    "onInteraction": [MockFunction],
                                    "rootElement": [MockFunction],
                                    "skill": Object {
                                      "entries": Array [
                                        Object {
                                          "title": "foo",
                                        },
                                      ],
                                    },
                                  },
                                  "memoizedState": null,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": [Circular],
                                  "sibling": null,
                                  "stateNode": null,
                                  "tag": 1,
                                  "type": [Function],
                                  "updateQueue": null,
                                },
                                "effectTag": 0,
                                "expirationTime": 0,
                                "firstEffect": null,
                                "index": 1,
                                "internalContextTag": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": <Unknown
                                    appElement={[MockFunction]}
                                    getPreviewer={[MockFunction]}
                                    maskError={undefined}
                                    onInteraction={[MockFunction]}
                                    rootElement={[MockFunction]}
                                    skill={
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "foo",
                                          },
                                        ],
                                      }
                                    }
                                  />,
                                  "className": "bcs-section-content",
                                },
                                "memoizedState": null,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": [Circular],
                                "sibling": null,
                                "stateNode": <div
                                  class="bcs-section-content"
                                />,
                                "tag": 5,
                                "type": "div",
                                "updateQueue": null,
                              },
                              "stateNode": null,
                              "tag": 1,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": Array [
                                <PlainButton
                                  className="bcs-section-title"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  <FormattedMessage />
                                </PlainButton>,
                                <div
                                  className="bcs-section-content"
                                >
                                  <Unknown
                                    appElement={[MockFunction]}
                                    getPreviewer={[MockFunction]}
                                    maskError={undefined}
                                    onInteraction={[MockFunction]}
                                    rootElement={[MockFunction]}
                                    skill={
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "foo",
                                          },
                                        ],
                                      }
                                    }
                                  />
                                </div>,
                              ],
                              "className": "bcs-section bcs-section-open",
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": [Circular],
                            "sibling": null,
                            "stateNode": <div
                              class="bcs-section bcs-section-open"
                            >
                              <button
                                class="btn-plain bcs-section-title"
                                type="button"
                              >
                                <div />
                              </button>
                              <div
                                class="bcs-section-content"
                              />
                            </div>,
                            "tag": 5,
                            "type": "div",
                            "updateQueue": null,
                          },
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": "0",
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": <Unknown
                              appElement={[MockFunction]}
                              getPreviewer={[MockFunction]}
                              maskError={undefined}
                              onInteraction={[MockFunction]}
                              rootElement={[MockFunction]}
                              skill={
                                Object {
                                  "entries": Array [
                                    Object {
                                      "title": "foo",
                                    },
                                  ],
                                }
                              }
                            />,
                            "className": "",
                            "isOpen": true,
                            "title": <FormattedMessage />,
                          },
                          "memoizedState": Object {
                            "isOpen": true,
                          },
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": [Circular],
                          "sibling": [Circular],
                          "stateNode": SidebarSection {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "children": <Unknown
                                appElement={[MockFunction]}
                                getPreviewer={[MockFunction]}
                                maskError={undefined}
                                onInteraction={[MockFunction]}
                                rootElement={[MockFunction]}
                                skill={
                                  Object {
                                    "entries": Array [
                                      Object {
                                        "title": "foo",
                                      },
                                    ],
                                  }
                                }
                              />,
                              "className": "",
                              "isOpen": true,
                              "title": <FormattedMessage />,
                            },
                            "refs": Object {},
                            "state": Object {
                              "isOpen": true,
                            },
                            "toggleVisibility": [Function],
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "appElement": [MockFunction],
                          "getPreviewer": [MockFunction],
                          "metadata": Object {
                            "global": Object {
                              "boxSkillsCards": Object {
                                "cards": Array [
                                  Object {
                                    "entries": Array [
                                      Object {
                                        "title": "foo",
                                      },
                                    ],
                                  },
                                  Object {
                                    "entries": Array [
                                      Object {
                                        "title": "bar",
                                      },
                                    ],
                                  },
                                ],
                              },
                            },
                          },
                          "onInteraction": [MockFunction],
                          "rootElement": [MockFunction],
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 3,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "appElement": [MockFunction],
                              "getPreviewer": [MockFunction],
                              "metadata": Object {
                                "global": Object {
                                  "boxSkillsCards": Object {
                                    "cards": Array [
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "foo",
                                          },
                                        ],
                                      },
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "bar",
                                          },
                                        ],
                                      },
                                    ],
                                  },
                                },
                              },
                              "onInteraction": [MockFunction],
                              "rootElement": [MockFunction],
                            },
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "appElement": [MockFunction],
                              "getPreviewer": [MockFunction],
                              "metadata": Object {
                                "global": Object {
                                  "boxSkillsCards": Object {
                                    "cards": Array [
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "foo",
                                          },
                                        ],
                                      },
                                      Object {
                                        "entries": Array [
                                          Object {
                                            "title": "bar",
                                          },
                                        ],
                                      },
                                    ],
                                  },
                                },
                              },
                              "onInteraction": [MockFunction],
                              "rootElement": [MockFunction],
                            },
                          },
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": [Circular],
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 1,
                              "firstEffect": null,
                              "index": 0,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div
                                    class="bcs-section bcs-section-open"
                                  >
                                    <button
                                      class="btn-plain bcs-section-title"
                                      type="button"
                                    >
                                      <div />
                                    </button>
                                    <div
                                      class="bcs-section-content"
                                    />
                                  </div>
                                  <div
                                    class="bcs-section bcs-section-open"
                                  >
                                    <button
                                      class="btn-plain bcs-section-title"
                                      type="button"
                                    >
                                      <div />
                                    </button>
                                    <div
                                      class="bcs-section-content"
                                    />
                                  </div>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "hydrate": false,
                                "isReadyForCommit": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": null,
                                "callbackList": null,
                                "expirationTime": 1,
                                "first": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "nextCallback": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "appElement": [MockFunction],
                                          "getPreviewer": [MockFunction],
                                          "metadata": Object {
                                            "global": Object {
                                              "boxSkillsCards": Object {
                                                "cards": Array [
                                                  Object {
                                                    "entries": Array [
                                                      Object {
                                                        "title": "foo",
                                                      },
                                                    ],
                                                  },
                                                  Object {
                                                    "entries": Array [
                                                      Object {
                                                        "title": "bar",
                                                      },
                                                    ],
                                                  },
                                                ],
                                              },
                                            },
                                          },
                                          "onInteraction": [MockFunction],
                                          "rootElement": [MockFunction],
                                        }
                                      }
                                    />,
                                  },
                                },
                                "hasForceUpdate": false,
                                "isInitialized": false,
                                "isProcessing": false,
                                "last": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "nextCallback": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "appElement": [MockFunction],
                                          "getPreviewer": [MockFunction],
                                          "metadata": Object {
                                            "global": Object {
                                              "boxSkillsCards": Object {
                                                "cards": Array [
                                                  Object {
                                                    "entries": Array [
                                                      Object {
                                                        "title": "foo",
                                                      },
                                                    ],
                                                  },
                                                  Object {
                                                    "entries": Array [
                                                      Object {
                                                        "title": "bar",
                                                      },
                                                    ],
                                                  },
                                                ],
                                              },
                                            },
                                          },
                                          "onInteraction": [MockFunction],
                                          "rootElement": [MockFunction],
                                        }
                                      }
                                    />,
                                  },
                                },
                              },
                            },
                            "child": [Circular],
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "appElement": [MockFunction],
                                    "getPreviewer": [MockFunction],
                                    "metadata": Object {
                                      "global": Object {
                                        "boxSkillsCards": Object {
                                          "cards": Array [
                                            Object {
                                              "entries": Array [
                                                Object {
                                                  "title": "foo",
                                                },
                                              ],
                                            },
                                            Object {
                                              "entries": Array [
                                                Object {
                                                  "title": "bar",
                                                },
                                              ],
                                            },
                                          ],
                                        },
                                      },
                                    },
                                    "onInteraction": [MockFunction],
                                    "rootElement": [MockFunction],
                                  }
                                }
                              />,
                            },
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                  class="bcs-section bcs-section-open"
                                >
                                  <button
                                    class="btn-plain bcs-section-title"
                                    type="button"
                                  >
                                    <div />
                                  </button>
                                  <div
                                    class="bcs-section-content"
                                  />
                                </div>
                                <div
                                  class="bcs-section bcs-section-open"
                                >
                                  <button
                                    class="btn-plain bcs-section-title"
                                    type="button"
                                  >
                                    <div />
                                  </button>
                                  <div
                                    class="bcs-section-content"
                                  />
                                </div>
                              </div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "hydrate": false,
                              "isReadyForCommit": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": null,
                          },
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "appElement": [MockFunction],
                                "getPreviewer": [MockFunction],
                                "metadata": Object {
                                  "global": Object {
                                    "boxSkillsCards": Object {
                                      "cards": Array [
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "foo",
                                            },
                                          ],
                                        },
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "bar",
                                            },
                                          ],
                                        },
                                      ],
                                    },
                                  },
                                },
                                "onInteraction": [MockFunction],
                                "rootElement": [MockFunction],
                              },
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "appElement": [MockFunction],
                                "getPreviewer": [MockFunction],
                                "metadata": Object {
                                  "global": Object {
                                    "boxSkillsCards": Object {
                                      "cards": Array [
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "foo",
                                            },
                                          ],
                                        },
                                        Object {
                                          "entries": Array [
                                            Object {
                                              "title": "bar",
                                            },
                                          ],
                                        },
                                      ],
                                    },
                                  },
                                },
                                "onInteraction": [MockFunction],
                                "rootElement": [MockFunction],
                              },
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": null,
                        "tag": 1,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": null,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 22,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "alternate": null,
                        "child": null,
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "appElement": [MockFunction],
                          "getPreviewer": [MockFunction],
                          "onInteraction": [MockFunction],
                          "rootElement": [MockFunction],
                          "skill": Object {
                            "entries": Array [
                              Object {
                                "title": "bar",
                              },
                            ],
                          },
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": null,
                        "tag": 1,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "appElement": [MockFunction],
                        "getPreviewer": [MockFunction],
                        "maskError": undefined,
                        "onInteraction": [MockFunction],
                        "rootElement": [MockFunction],
                        "skill": Object {
                          "entries": Array [
                            Object {
                              "title": "bar",
                            },
                          ],
                        },
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": null,
                      "tag": 1,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 1,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": <Unknown
                        appElement={[MockFunction]}
                        getPreviewer={[MockFunction]}
                        maskError={undefined}
                        onInteraction={[MockFunction]}
                        rootElement={[MockFunction]}
                        skill={
                          Object {
                            "entries": Array [
                              Object {
                                "title": "bar",
                              },
                            ],
                          }
                        }
                      />,
                      "className": "bcs-section-content",
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": <div
                      class="bcs-section-content"
                    />,
                    "tag": 5,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "stateNode": null,
                  "tag": 1,
                  "type": [Function],
                  "updateQueue": null,
                },
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <PlainButton
                      className="bcs-section-title"
                      onClick={[Function]}
                      type="button"
                    >
                      <FormattedMessage />
                    </PlainButton>,
                    <div
                      className="bcs-section-content"
                    >
                      <Unknown
                        appElement={[MockFunction]}
                        getPreviewer={[MockFunction]}
                        maskError={undefined}
                        onInteraction={[MockFunction]}
                        rootElement={[MockFunction]}
                        skill={
                          Object {
                            "entries": Array [
                              Object {
                                "title": "bar",
                              },
                            ],
                          }
                        }
                      />
                    </div>,
                  ],
                  "className": "bcs-section bcs-section-open",
                },
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": [Circular],
                "sibling": null,
                "stateNode": <div
                  class="bcs-section bcs-section-open"
                >
                  <button
                    class="btn-plain bcs-section-title"
                    type="button"
                  >
                    <div />
                  </button>
                  <div
                    class="bcs-section-content"
                  />
                </div>,
                "tag": 5,
                "type": "div",
                "updateQueue": null,
              },
              "effectTag": 1,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 1,
              "internalContextTag": 0,
              "key": "1",
              "lastEffect": null,
              "memoizedProps": Object {
                "children": <Unknown
                  appElement={[MockFunction]}
                  getPreviewer={[MockFunction]}
                  maskError={undefined}
                  onInteraction={[MockFunction]}
                  rootElement={[MockFunction]}
                  skill={
                    Object {
                      "entries": Array [
                        Object {
                          "title": "bar",
                        },
                      ],
                    }
                  }
                />,
                "className": "",
                "isOpen": true,
                "title": <FormattedMessage />,
              },
              "memoizedState": Object {
                "isOpen": true,
              },
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": FiberNode {
                "_debugID": 4,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": FiberNode {
                  "_debugID": 3,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": null,
                  "child": [Circular],
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "appElement": [MockFunction],
                      "getPreviewer": [MockFunction],
                      "metadata": Object {
                        "global": Object {
                          "boxSkillsCards": Object {
                            "cards": Array [
                              Object {
                                "entries": Array [
                                  Object {
                                    "title": "foo",
                                  },
                                ],
                              },
                              Object {
                                "entries": Array [
                                  Object {
                                    "title": "bar",
                                  },
                                ],
                              },
                            ],
                          },
                        },
                      },
                      "onInteraction": [MockFunction],
                      "rootElement": [MockFunction],
                    },
                  },
                  "memoizedState": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "appElement": [MockFunction],
                      "getPreviewer": [MockFunction],
                      "metadata": Object {
                        "global": Object {
                          "boxSkillsCards": Object {
                            "cards": Array [
                              Object {
                                "entries": Array [
                                  Object {
                                    "title": "foo",
                                  },
                                ],
                              },
                              Object {
                                "entries": Array [
                                  Object {
                                    "title": "bar",
                                  },
                                ],
                              },
                            ],
                          },
                        },
                      },
                      "onInteraction": [MockFunction],
                      "rootElement": [MockFunction],
                    },
                  },
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 1,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": FiberNode {
                      "_debugID": 1,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": [Circular],
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 1,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": null,
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div
                            class="bcs-section bcs-section-open"
                          >
                            <button
                              class="btn-plain bcs-section-title"
                              type="button"
                            >
                              <div />
                            </button>
                            <div
                              class="bcs-section-content"
                            />
                          </div>
                          <div
                            class="bcs-section bcs-section-open"
                          >
                            <button
                              class="btn-plain bcs-section-title"
                              type="button"
                            >
                              <div />
                            </button>
                            <div
                              class="bcs-section-content"
                            />
                          </div>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "finishedWork": null,
                        "hydrate": false,
                        "isReadyForCommit": false,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingContext": null,
                        "remainingExpirationTime": 0,
                      },
                      "tag": 3,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": null,
                        "callbackList": null,
                        "expirationTime": 1,
                        "first": Object {
                          "callback": null,
                          "expirationTime": 1,
                          "isForced": false,
                          "isReplace": false,
                          "next": null,
                          "nextCallback": null,
                          "partialState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                Object {
                                  "appElement": [MockFunction],
                                  "getPreviewer": [MockFunction],
                                  "metadata": Object {
                                    "global": Object {
                                      "boxSkillsCards": Object {
                                        "cards": Array [
                                          Object {
                                            "entries": Array [
                                              Object {
                                                "title": "foo",
                                              },
                                            ],
                                          },
                                          Object {
                                            "entries": Array [
                                              Object {
                                                "title": "bar",
                                              },
                                            ],
                                          },
                                        ],
                                      },
                                    },
                                  },
                                  "onInteraction": [MockFunction],
                                  "rootElement": [MockFunction],
                                }
                              }
                            />,
                          },
                        },
                        "hasForceUpdate": false,
                        "isInitialized": false,
                        "isProcessing": false,
                        "last": Object {
                          "callback": null,
                          "expirationTime": 1,
                          "isForced": false,
                          "isReplace": false,
                          "next": null,
                          "nextCallback": null,
                          "partialState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                Object {
                                  "appElement": [MockFunction],
                                  "getPreviewer": [MockFunction],
                                  "metadata": Object {
                                    "global": Object {
                                      "boxSkillsCards": Object {
                                        "cards": Array [
                                          Object {
                                            "entries": Array [
                                              Object {
                                                "title": "foo",
                                              },
                                            ],
                                          },
                                          Object {
                                            "entries": Array [
                                              Object {
                                                "title": "bar",
                                              },
                                            ],
                                          },
                                        ],
                                      },
                                    },
                                  },
                                  "onInteraction": [MockFunction],
                                  "rootElement": [MockFunction],
                                }
                              }
                            />,
                          },
                        },
                      },
                    },
                    "child": [Circular],
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": null,
                    "memoizedState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "appElement": [MockFunction],
                            "getPreviewer": [MockFunction],
                            "metadata": Object {
                              "global": Object {
                                "boxSkillsCards": Object {
                                  "cards": Array [
                                    Object {
                                      "entries": Array [
                                        Object {
                                          "title": "foo",
                                        },
                                      ],
                                    },
                                    Object {
                                      "entries": Array [
                                        Object {
                                          "title": "bar",
                                        },
                                      ],
                                    },
                                  ],
                                },
                              },
                            },
                            "onInteraction": [MockFunction],
                            "rootElement": [MockFunction],
                          }
                        }
                      />,
                    },
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <div
                          class="bcs-section bcs-section-open"
                        >
                          <button
                            class="btn-plain bcs-section-title"
                            type="button"
                          >
                            <div />
                          </button>
                          <div
                            class="bcs-section-content"
                          />
                        </div>
                        <div
                          class="bcs-section bcs-section-open"
                        >
                          <button
                            class="btn-plain bcs-section-title"
                            type="button"
                          >
                            <div />
                          </button>
                          <div
                            class="bcs-section-content"
                          />
                        </div>
                      </div>,
                      "context": Object {},
                      "current": [Circular],
                      "finishedWork": null,
                      "hydrate": false,
                      "isReadyForCommit": false,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingContext": null,
                      "remainingExpirationTime": 0,
                    },
                    "tag": 3,
                    "type": null,
                    "updateQueue": null,
                  },
                  "sibling": null,
                  "stateNode": WrapperComponent {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "props": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "appElement": [MockFunction],
                        "getPreviewer": [MockFunction],
                        "metadata": Object {
                          "global": Object {
                            "boxSkillsCards": Object {
                              "cards": Array [
                                Object {
                                  "entries": Array [
                                    Object {
                                      "title": "foo",
                                    },
                                  ],
                                },
                                Object {
                                  "entries": Array [
                                    Object {
                                      "title": "bar",
                                    },
                                  ],
                                },
                              ],
                            },
                          },
                        },
                        "onInteraction": [MockFunction],
                        "rootElement": [MockFunction],
                      },
                    },
                    "refs": Object {},
                    "state": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "appElement": [MockFunction],
                        "getPreviewer": [MockFunction],
                        "metadata": Object {
                          "global": Object {
                            "boxSkillsCards": Object {
                              "cards": Array [
                                Object {
                                  "entries": Array [
                                    Object {
                                      "title": "foo",
                                    },
                                  ],
                                },
                                Object {
                                  "entries": Array [
                                    Object {
                                      "title": "bar",
                                    },
                                  ],
                                },
                              ],
                            },
                          },
                        },
                        "onInteraction": [MockFunction],
                        "rootElement": [MockFunction],
                      },
                    },
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 2,
                  "type": [Function],
                  "updateQueue": null,
                },
                "_debugSource": null,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 5,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 7,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 8,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 10,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 11,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": null,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 12,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": null,
                            "alternate": null,
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {},
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": [Circular],
                            "sibling": null,
                            "stateNode": <div />,
                            "tag": 5,
                            "type": "div",
                            "updateQueue": null,
                          },
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {},
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": [Circular],
                          "sibling": null,
                          "stateNode": null,
                          "tag": 1,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": <FormattedMessage />,
                          "className": "btn-plain bcs-section-title",
                          "onClick": [Function],
                          "type": "button",
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": <button
                          class="btn-plain bcs-section-title"
                          type="button"
                        >
                          <div />
                        </button>,
                        "tag": 5,
                        "type": "button",
                        "updateQueue": null,
                      },
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": <FormattedMessage />,
                        "className": "bcs-section-title",
                        "onClick": [Function],
                        "type": "button",
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": [Circular],
                      "sibling": FiberNode {
                        "_debugID": 9,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 13,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": null,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 14,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": null,
                            "alternate": null,
                            "child": null,
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "appElement": [MockFunction],
                              "getPreviewer": [MockFunction],
                              "onInteraction": [MockFunction],
                              "rootElement": [MockFunction],
                              "skill": Object {
                                "entries": Array [
                                  Object {
                                    "title": "foo",
                                  },
                                ],
                              },
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": [Circular],
                            "sibling": null,
                            "stateNode": null,
                            "tag": 1,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "appElement": [MockFunction],
                            "getPreviewer": [MockFunction],
                            "maskError": undefined,
                            "onInteraction": [MockFunction],
                            "rootElement": [MockFunction],
                            "skill": Object {
                              "entries": Array [
                                Object {
                                  "title": "foo",
                                },
                              ],
                            },
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": [Circular],
                          "sibling": null,
                          "stateNode": null,
                          "tag": 1,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 1,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": <Unknown
                            appElement={[MockFunction]}
                            getPreviewer={[MockFunction]}
                            maskError={undefined}
                            onInteraction={[MockFunction]}
                            rootElement={[MockFunction]}
                            skill={
                              Object {
                                "entries": Array [
                                  Object {
                                    "title": "foo",
                                  },
                                ],
                              }
                            }
                          />,
                          "className": "bcs-section-content",
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": <div
                          class="bcs-section-content"
                        />,
                        "tag": 5,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "stateNode": null,
                      "tag": 1,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <PlainButton
                          className="bcs-section-title"
                          onClick={[Function]}
                          type="button"
                        >
                          <FormattedMessage />
                        </PlainButton>,
                        <div
                          className="bcs-section-content"
                        >
                          <Unknown
                            appElement={[MockFunction]}
                            getPreviewer={[MockFunction]}
                            maskError={undefined}
                            onInteraction={[MockFunction]}
                            rootElement={[MockFunction]}
                            skill={
                              Object {
                                "entries": Array [
                                  Object {
                                    "title": "foo",
                                  },
                                ],
                              }
                            }
                          />
                        </div>,
                      ],
                      "className": "bcs-section bcs-section-open",
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": <div
                      class="bcs-section bcs-section-open"
                    >
                      <button
                        class="btn-plain bcs-section-title"
                        type="button"
                      >
                        <div />
                      </button>
                      <div
                        class="bcs-section-content"
                      />
                    </div>,
                    "tag": 5,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": "0",
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": <Unknown
                      appElement={[MockFunction]}
                      getPreviewer={[MockFunction]}
                      maskError={undefined}
                      onInteraction={[MockFunction]}
                      rootElement={[MockFunction]}
                      skill={
                        Object {
                          "entries": Array [
                            Object {
                              "title": "foo",
                            },
                          ],
                        }
                      }
                    />,
                    "className": "",
                    "isOpen": true,
                    "title": <FormattedMessage />,
                  },
                  "memoizedState": Object {
                    "isOpen": true,
                  },
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": [Circular],
                  "sibling": [Circular],
                  "stateNode": SidebarSection {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "props": Object {
                      "children": <Unknown
                        appElement={[MockFunction]}
                        getPreviewer={[MockFunction]}
                        maskError={undefined}
                        onInteraction={[MockFunction]}
                        rootElement={[MockFunction]}
                        skill={
                          Object {
                            "entries": Array [
                              Object {
                                "title": "foo",
                              },
                            ],
                          }
                        }
                      />,
                      "className": "",
                      "isOpen": true,
                      "title": <FormattedMessage />,
                    },
                    "refs": Object {},
                    "state": Object {
                      "isOpen": true,
                    },
                    "toggleVisibility": [Function],
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 2,
                  "type": [Function],
                  "updateQueue": null,
                },
                "effectTag": 1,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "appElement": [MockFunction],
                  "getPreviewer": [MockFunction],
                  "metadata": Object {
                    "global": Object {
                      "boxSkillsCards": Object {
                        "cards": Array [
                          Object {
                            "entries": Array [
                              Object {
                                "title": "foo",
                              },
                            ],
                          },
                          Object {
                            "entries": Array [
                              Object {
                                "title": "bar",
                              },
                            ],
                          },
                        ],
                      },
                    },
                  },
                  "onInteraction": [MockFunction],
                  "rootElement": [MockFunction],
                },
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": FiberNode {
                  "_debugID": 3,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": null,
                  "child": [Circular],
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "appElement": [MockFunction],
                      "getPreviewer": [MockFunction],
                      "metadata": Object {
                        "global": Object {
                          "boxSkillsCards": Object {
                            "cards": Array [
                              Object {
                                "entries": Array [
                                  Object {
                                    "title": "foo",
                                  },
                                ],
                              },
                              Object {
                                "entries": Array [
                                  Object {
                                    "title": "bar",
                                  },
                                ],
                              },
                            ],
                          },
                        },
                      },
                      "onInteraction": [MockFunction],
                      "rootElement": [MockFunction],
                    },
                  },
                  "memoizedState": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "appElement": [MockFunction],
                      "getPreviewer": [MockFunction],
                      "metadata": Object {
                        "global": Object {
                          "boxSkillsCards": Object {
                            "cards": Array [
                              Object {
                                "entries": Array [
                                  Object {
                                    "title": "foo",
                                  },
                                ],
                              },
                              Object {
                                "entries": Array [
                                  Object {
                                    "title": "bar",
                                  },
                                ],
                              },
                            ],
                          },
                        },
                      },
                      "onInteraction": [MockFunction],
                      "rootElement": [MockFunction],
                    },
                  },
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 1,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": FiberNode {
                      "_debugID": 1,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": [Circular],
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 1,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": null,
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div
                            class="bcs-section bcs-section-open"
                          >
                            <button
                              class="btn-plain bcs-section-title"
                              type="button"
                            >
                              <div />
                            </button>
                            <div
                              class="bcs-section-content"
                            />
                          </div>
                          <div
                            class="bcs-section bcs-section-open"
                          >
                            <button
                              class="btn-plain bcs-section-title"
                              type="button"
                            >
                              <div />
                            </button>
                            <div
                              class="bcs-section-content"
                            />
                          </div>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "finishedWork": null,
                        "hydrate": false,
                        "isReadyForCommit": false,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingContext": null,
                        "remainingExpirationTime": 0,
                      },
                      "tag": 3,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": null,
                        "callbackList": null,
                        "expirationTime": 1,
                        "first": Object {
                          "callback": null,
                          "expirationTime": 1,
                          "isForced": false,
                          "isReplace": false,
                          "next": null,
                          "nextCallback": null,
                          "partialState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                Object {
                                  "appElement": [MockFunction],
                                  "getPreviewer": [MockFunction],
                                  "metadata": Object {
                                    "global": Object {
                                      "boxSkillsCards": Object {
                                        "cards": Array [
                                          Object {
                                            "entries": Array [
                                              Object {
                                                "title": "foo",
                                              },
                                            ],
                                          },
                                          Object {
                                            "entries": Array [
                                              Object {
                                                "title": "bar",
                                              },
                                            ],
                                          },
                                        ],
                                      },
                                    },
                                  },
                                  "onInteraction": [MockFunction],
                                  "rootElement": [MockFunction],
                                }
                              }
                            />,
                          },
                        },
                        "hasForceUpdate": false,
                        "isInitialized": false,
                        "isProcessing": false,
                        "last": Object {
                          "callback": null,
                          "expirationTime": 1,
                          "isForced": false,
                          "isReplace": false,
                          "next": null,
                          "nextCallback": null,
                          "partialState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                Object {
                                  "appElement": [MockFunction],
                                  "getPreviewer": [MockFunction],
                                  "metadata": Object {
                                    "global": Object {
                                      "boxSkillsCards": Object {
                                        "cards": Array [
                                          Object {
                                            "entries": Array [
                                              Object {
                                                "title": "foo",
                                              },
                                            ],
                                          },
                                          Object {
                                            "entries": Array [
                                              Object {
                                                "title": "bar",
                                              },
                                            ],
                                          },
                                        ],
                                      },
                                    },
                                  },
                                  "onInteraction": [MockFunction],
                                  "rootElement": [MockFunction],
                                }
                              }
                            />,
                          },
                        },
                      },
                    },
                    "child": [Circular],
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": null,
                    "memoizedState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "appElement": [MockFunction],
                            "getPreviewer": [MockFunction],
                            "metadata": Object {
                              "global": Object {
                                "boxSkillsCards": Object {
                                  "cards": Array [
                                    Object {
                                      "entries": Array [
                                        Object {
                                          "title": "foo",
                                        },
                                      ],
                                    },
                                    Object {
                                      "entries": Array [
                                        Object {
                                          "title": "bar",
                                        },
                                      ],
                                    },
                                  ],
                                },
                              },
                            },
                            "onInteraction": [MockFunction],
                            "rootElement": [MockFunction],
                          }
                        }
                      />,
                    },
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <div
                          class="bcs-section bcs-section-open"
                        >
                          <button
                            class="btn-plain bcs-section-title"
                            type="button"
                          >
                            <div />
                          </button>
                          <div
                            class="bcs-section-content"
                          />
                        </div>
                        <div
                          class="bcs-section bcs-section-open"
                        >
                          <button
                            class="btn-plain bcs-section-title"
                            type="button"
                          >
                            <div />
                          </button>
                          <div
                            class="bcs-section-content"
                          />
                        </div>
                      </div>,
                      "context": Object {},
                      "current": [Circular],
                      "finishedWork": null,
                      "hydrate": false,
                      "isReadyForCommit": false,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingContext": null,
                      "remainingExpirationTime": 0,
                    },
                    "tag": 3,
                    "type": null,
                    "updateQueue": null,
                  },
                  "sibling": null,
                  "stateNode": WrapperComponent {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "props": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "appElement": [MockFunction],
                        "getPreviewer": [MockFunction],
                        "metadata": Object {
                          "global": Object {
                            "boxSkillsCards": Object {
                              "cards": Array [
                                Object {
                                  "entries": Array [
                                    Object {
                                      "title": "foo",
                                    },
                                  ],
                                },
                                Object {
                                  "entries": Array [
                                    Object {
                                      "title": "bar",
                                    },
                                  ],
                                },
                              ],
                            },
                          },
                        },
                        "onInteraction": [MockFunction],
                        "rootElement": [MockFunction],
                      },
                    },
                    "refs": Object {},
                    "state": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "appElement": [MockFunction],
                        "getPreviewer": [MockFunction],
                        "metadata": Object {
                          "global": Object {
                            "boxSkillsCards": Object {
                              "cards": Array [
                                Object {
                                  "entries": Array [
                                    Object {
                                      "title": "foo",
                                    },
                                  ],
                                },
                                Object {
                                  "entries": Array [
                                    Object {
                                      "title": "bar",
                                    },
                                  ],
                                },
                              ],
                            },
                          },
                        },
                        "onInteraction": [MockFunction],
                        "rootElement": [MockFunction],
                      },
                    },
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 2,
                  "type": [Function],
                  "updateQueue": null,
                },
                "sibling": null,
                "stateNode": null,
                "tag": 1,
                "type": [Function],
                "updateQueue": null,
              },
              "sibling": null,
              "stateNode": [Circular],
              "tag": 2,
              "type": [Function],
              "updateQueue": null,
            },
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "children": <Unknown
                appElement={[MockFunction]}
                getPreviewer={[MockFunction]}
                maskError={undefined}
                onInteraction={[MockFunction]}
                rootElement={[MockFunction]}
                skill={
                  Object {
                    "entries": Array [
                      Object {
                        "title": "bar",
                      },
                    ],
                  }
                }
              />,
              "className": "",
              "isOpen": true,
              "title": <FormattedMessage />,
            },
            "refs": Object {},
            "state": Object {
              "isOpen": true,
            },
            "toggleVisibility": [Function],
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "key": "1",
          "nodeType": "class",
          "props": Object {
            "children": <Unknown
              appElement={[MockFunction]}
              getPreviewer={[MockFunction]}
              maskError={undefined}
              onInteraction={[MockFunction]}
              rootElement={[MockFunction]}
              skill={
                Object {
                  "entries": Array [
                    Object {
                      "title": "bar",
                    },
                  ],
                }
              }
            />,
            "className": "",
            "isOpen": true,
            "title": <FormattedMessage />,
          },
          "ref": null,
          "rendered": Object {
            "instance": <div
              class="bcs-section bcs-section-open"
            >
              <button
                class="btn-plain bcs-section-title"
                type="button"
              >
                <div />
              </button>
              <div
                class="bcs-section-content"
              />
            </div>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <PlainButton
                  className="bcs-section-title"
                  onClick={[Function]}
                  type="button"
                >
                  <FormattedMessage />
                </PlainButton>,
                <div
                  className="bcs-section-content"
                >
                  <Unknown
                    appElement={[MockFunction]}
                    getPreviewer={[MockFunction]}
                    maskError={undefined}
                    onInteraction={[MockFunction]}
                    rootElement={[MockFunction]}
                    skill={
                      Object {
                        "entries": Array [
                          Object {
                            "title": "bar",
                          },
                        ],
                      }
                    }
                  />
                </div>,
              ],
              "className": "bcs-section bcs-section-open",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": <FormattedMessage />,
                  "className": "bcs-section-title",
                  "onClick": [Function],
                  "type": "button",
                },
                "ref": null,
                "rendered": Object {
                  "instance": <button
                    class="btn-plain bcs-section-title"
                    type="button"
                  >
                    <div />
                  </button>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <FormattedMessage />,
                    "className": "btn-plain bcs-section-title",
                    "onClick": [Function],
                    "type": "button",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {},
                      "ref": null,
                      "rendered": Object {
                        "instance": <div />,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {},
                        "ref": null,
                        "rendered": Array [
                          undefined,
                        ],
                        "type": "div",
                      },
                      "type": [Function],
                    },
                  ],
                  "type": "button",
                },
                "type": [Function],
              },
              Object {
                "instance": <div
                  class="bcs-section-content"
                />,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Unknown
                    appElement={[MockFunction]}
                    getPreviewer={[MockFunction]}
                    maskError={undefined}
                    onInteraction={[MockFunction]}
                    rootElement={[MockFunction]}
                    skill={
                      Object {
                        "entries": Array [
                          Object {
                            "title": "bar",
                          },
                        ],
                      }
                    }
                  />,
                  "className": "bcs-section-content",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "appElement": [MockFunction],
                      "getPreviewer": [MockFunction],
                      "maskError": undefined,
                      "onInteraction": [MockFunction],
                      "rootElement": [MockFunction],
                      "skill": Object {
                        "entries": Array [
                          Object {
                            "title": "bar",
                          },
                        ],
                      },
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "appElement": [MockFunction],
                        "getPreviewer": [MockFunction],
                        "onInteraction": [MockFunction],
                        "rootElement": [MockFunction],
                        "skill": Object {
                          "entries": Array [
                            Object {
                              "title": "bar",
                            },
                          ],
                        },
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
            ],
            "type": "div",
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
