// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components/ContentSidebar/SidebarVersions should not render the versions when total_count is falsy 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SidebarVersions
    versions={
      Object {
        "total_count": 0,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): null,
  Symbol(enzyme.__nodes__): Array [
    null,
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`components/ContentSidebar/SidebarVersions should render an error 1`] = `
ReactWrapper {
  "length": 1,
  Symbol(enzyme.__unrendered__): <Unknown
    maskError={
      Object {
        "errorHeader": Object {
          "defaultMessage": "foo",
        },
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "maskError": Object {
        "errorHeader": Object {
          "defaultMessage": "foo",
        },
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": <error-mask-mock
        errorheader="[object Object]"
      />,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "errorHeader": Object {
          "defaultMessage": "foo",
        },
      },
      "ref": null,
      "rendered": Array [
        undefined,
      ],
      "type": "error-mask-mock",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "maskError": Object {
          "errorHeader": Object {
            "defaultMessage": "foo",
          },
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": <error-mask-mock
          errorheader="[object Object]"
        />,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "errorHeader": Object {
            "defaultMessage": "foo",
          },
        },
        "ref": null,
        "rendered": Array [
          undefined,
        ],
        "type": "error-mask-mock",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`components/ContentSidebar/SidebarVersions should render the versions when total_count > 0 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SidebarVersions
    versions={
      Object {
        "total_count": 1,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "className": "",
      "onClick": undefined,
      "versionCount": 2,
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "className": "",
        "onClick": undefined,
        "versionCount": 2,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
