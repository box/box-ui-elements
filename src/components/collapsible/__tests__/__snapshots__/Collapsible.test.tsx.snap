// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components/collapsible/Collapsible should apply buttonProps correctly 1`] = `
<div
  className="collapsible-card is-open"
>
  <div
    className="collapsible-card-header"
  >
    <PlainButton
      a={1}
      aria-expanded={true}
      b={2}
      className="collapsible-card-title"
      onClick={[Function]}
      type="button"
    >
      foo
      <IconCaretDown
        className="collapsible-card-header-caret"
        color="#909090"
        width={8}
      />
    </PlainButton>
  </div>
  <AnimateHeight
    animateOpacity={false}
    animationStateClasses={
      Object {
        "animating": "rah-animating",
        "animatingDown": "rah-animating--down",
        "animatingToHeightAuto": "rah-animating--to-height-auto",
        "animatingToHeightSpecific": "rah-animating--to-height-specific",
        "animatingToHeightZero": "rah-animating--to-height-zero",
        "animatingUp": "rah-animating--up",
        "static": "rah-static",
        "staticHeightAuto": "rah-static--height-auto",
        "staticHeightSpecific": "rah-static--height-specific",
        "staticHeightZero": "rah-static--height-zero",
      }
    }
    applyInlineTransitions={true}
    delay={0}
    duration={100}
    easing="ease"
    height="auto"
    style={Object {}}
  >
    <div
      className="collapsible-card-content"
    >
      <span>
        foobar
      </span>
    </div>
  </AnimateHeight>
</div>
`;

exports[`components/collapsible/Collapsible should apply correct border class 1`] = `
<div
  className="collapsible-card is-open is-bordered"
>
  <div
    className="collapsible-card-header"
  >
    <PlainButton
      aria-expanded={true}
      className="collapsible-card-title"
      onClick={[Function]}
      type="button"
    >
      foo
      <IconCaretDown
        className="collapsible-card-header-caret"
        color="#909090"
        width={8}
      />
    </PlainButton>
  </div>
  <AnimateHeight
    animateOpacity={false}
    animationStateClasses={
      Object {
        "animating": "rah-animating",
        "animatingDown": "rah-animating--down",
        "animatingToHeightAuto": "rah-animating--to-height-auto",
        "animatingToHeightSpecific": "rah-animating--to-height-specific",
        "animatingToHeightZero": "rah-animating--to-height-zero",
        "animatingUp": "rah-animating--up",
        "static": "rah-static",
        "staticHeightAuto": "rah-static--height-auto",
        "staticHeightSpecific": "rah-static--height-specific",
        "staticHeightZero": "rah-static--height-zero",
      }
    }
    applyInlineTransitions={true}
    delay={0}
    duration={100}
    easing="ease"
    height="auto"
    style={Object {}}
  >
    <div
      className="collapsible-card-content"
    >
      <span>
        foobar
      </span>
    </div>
  </AnimateHeight>
</div>
`;

exports[`components/collapsible/Collapsible should apply correct isOpen state 1`] = `
<div
  className="collapsible-card"
>
  <div
    className="collapsible-card-header"
  >
    <PlainButton
      aria-expanded={false}
      className="collapsible-card-title"
      onClick={[Function]}
      type="button"
    >
      foo
      <IconCaretDown
        className="collapsible-card-header-caret"
        color="#909090"
        width={8}
      />
    </PlainButton>
  </div>
  <AnimateHeight
    animateOpacity={false}
    animationStateClasses={
      Object {
        "animating": "rah-animating",
        "animatingDown": "rah-animating--down",
        "animatingToHeightAuto": "rah-animating--to-height-auto",
        "animatingToHeightSpecific": "rah-animating--to-height-specific",
        "animatingToHeightZero": "rah-animating--to-height-zero",
        "animatingUp": "rah-animating--up",
        "static": "rah-static",
        "staticHeightAuto": "rah-static--height-auto",
        "staticHeightSpecific": "rah-static--height-specific",
        "staticHeightZero": "rah-static--height-zero",
      }
    }
    applyInlineTransitions={true}
    delay={0}
    duration={100}
    easing="ease"
    height={0}
    style={Object {}}
  >
    <div
      className="collapsible-card-content"
    >
      <span>
        foobar
      </span>
    </div>
  </AnimateHeight>
</div>
`;

exports[`components/collapsible/Collapsible should not render a PlainButton if a button is not passed in 1`] = `
<div
  className="collapsible-card is-open"
>
  <div
    className="collapsible-card-header"
  >
    <PlainButton
      aria-expanded={true}
      className="collapsible-card-title"
      onClick={[Function]}
      type="button"
    >
      foo
      <IconCaretDown
        className="collapsible-card-header-caret"
        color="#909090"
        width={8}
      />
    </PlainButton>
  </div>
  <AnimateHeight
    animateOpacity={false}
    animationStateClasses={
      Object {
        "animating": "rah-animating",
        "animatingDown": "rah-animating--down",
        "animatingToHeightAuto": "rah-animating--to-height-auto",
        "animatingToHeightSpecific": "rah-animating--to-height-specific",
        "animatingToHeightZero": "rah-animating--to-height-zero",
        "animatingUp": "rah-animating--up",
        "static": "rah-static",
        "staticHeightAuto": "rah-static--height-auto",
        "staticHeightSpecific": "rah-static--height-specific",
        "staticHeightZero": "rah-static--height-zero",
      }
    }
    applyInlineTransitions={true}
    delay={0}
    duration={100}
    easing="ease"
    height="auto"
    style={Object {}}
  >
    <div
      className="collapsible-card-content"
    >
      <span>
        foobar
      </span>
    </div>
  </AnimateHeight>
</div>
`;

exports[`components/collapsible/Collapsible should render a PlainButton if a button is passed in 1`] = `
<div
  className="collapsible-card is-open"
>
  <div
    className="collapsible-card-header"
  >
    <PlainButton
      aria-expanded={true}
      className="collapsible-card-title"
      onClick={[Function]}
      type="button"
    >
      foo
      <IconCaretDown
        className="collapsible-card-header-caret"
        color="#909090"
        width={8}
      />
    </PlainButton>
  </div>
  <AnimateHeight
    animateOpacity={false}
    animationStateClasses={
      Object {
        "animating": "rah-animating",
        "animatingDown": "rah-animating--down",
        "animatingToHeightAuto": "rah-animating--to-height-auto",
        "animatingToHeightSpecific": "rah-animating--to-height-specific",
        "animatingToHeightZero": "rah-animating--to-height-zero",
        "animatingUp": "rah-animating--up",
        "static": "rah-static",
        "staticHeightAuto": "rah-static--height-auto",
        "staticHeightSpecific": "rah-static--height-specific",
        "staticHeightZero": "rah-static--height-zero",
      }
    }
    applyInlineTransitions={true}
    delay={0}
    duration={100}
    easing="ease"
    height="auto"
    style={Object {}}
  >
    <div
      className="collapsible-card-content"
    >
      <span>
        foobar
      </span>
    </div>
  </AnimateHeight>
</div>
`;

exports[`components/collapsible/Collapsible should render component correctly 1`] = `
<div
  className="collapsible-card is-open"
>
  <div
    className="collapsible-card-header"
  >
    <PlainButton
      aria-expanded={true}
      className="collapsible-card-title"
      onClick={[Function]}
      type="button"
    >
      foo
      <IconCaretDown
        className="collapsible-card-header-caret"
        color="#909090"
        width={8}
      />
    </PlainButton>
  </div>
  <AnimateHeight
    animateOpacity={false}
    animationStateClasses={
      Object {
        "animating": "rah-animating",
        "animatingDown": "rah-animating--down",
        "animatingToHeightAuto": "rah-animating--to-height-auto",
        "animatingToHeightSpecific": "rah-animating--to-height-specific",
        "animatingToHeightZero": "rah-animating--to-height-zero",
        "animatingUp": "rah-animating--up",
        "static": "rah-static",
        "staticHeightAuto": "rah-static--height-auto",
        "staticHeightSpecific": "rah-static--height-specific",
        "staticHeightZero": "rah-static--height-zero",
      }
    }
    applyInlineTransitions={true}
    delay={0}
    duration={100}
    easing="ease"
    height="auto"
    style={Object {}}
  >
    <div
      className="collapsible-card-content"
    >
      <span
        className="test-content"
      >
        foobar
      </span>
    </div>
  </AnimateHeight>
</div>
`;

exports[`components/collapsible/Collapsible should render with headerActionItems 1`] = `
<div
  className="collapsible-card"
>
  <div
    className="collapsible-card-header"
  >
    <PlainButton
      aria-expanded={false}
      className="collapsible-card-title"
      onClick={[Function]}
      type="button"
    >
      foo
      <IconCaretDown
        className="collapsible-card-header-caret"
        color="#909090"
        width={8}
      />
    </PlainButton>
    <span
      className="bdl-Collapsible-actionItems"
    >
      <Button
        className=""
        isLoading={false}
        showRadar={false}
        type="submit"
      >
        Click Here
      </Button>
    </span>
  </div>
  <AnimateHeight
    animateOpacity={false}
    animationStateClasses={
      Object {
        "animating": "rah-animating",
        "animatingDown": "rah-animating--down",
        "animatingToHeightAuto": "rah-animating--to-height-auto",
        "animatingToHeightSpecific": "rah-animating--to-height-specific",
        "animatingToHeightZero": "rah-animating--to-height-zero",
        "animatingUp": "rah-animating--up",
        "static": "rah-static",
        "staticHeightAuto": "rah-static--height-auto",
        "staticHeightSpecific": "rah-static--height-specific",
        "staticHeightZero": "rah-static--height-zero",
      }
    }
    applyInlineTransitions={true}
    delay={0}
    duration={100}
    easing="ease"
    height={0}
    style={Object {}}
  >
    <div
      className="collapsible-card-content"
    >
      <span
        className="test-content"
      >
        foobar
      </span>
    </div>
  </AnimateHeight>
</div>
`;
