// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components/time/ReadableTime should render two days ago with format "mm dd at hh:mm" when we show the time 1`] = `
<FormattedMessage
  defaultMessage="{date} at {time, time, short}"
  id="boxui.readableTime.eventTimeDateShort"
  values={
    Object {
      "date": <FormattedDate
        day="numeric"
        month="short"
        value={1506378656000}
      />,
      "time": 1506378656000,
      "weekday": null,
    }
  }
/>
`;

exports[`components/time/ReadableTime should render two days ago with format "mm dd" 1`] = `
<FormattedDate
  day="numeric"
  month="short"
  value={1506378656000}
/>
`;

exports[`components/time/ReadableTime should render with distant past format "mm dd yy at hh:mm" 1`] = `
<FormattedMessage
  defaultMessage="{time, date, medium}"
  id="boxui.readableTime.eventTime"
  values={
    Object {
      "date": null,
      "time": 946627200000,
      "weekday": null,
    }
  }
/>
`;

exports[`components/time/ReadableTime should render with format "30 minutes ago" when timestamp is within relative threshold (behind) 1`] = `
<FormattedRelative
  value={1506549656000}
/>
`;

exports[`components/time/ReadableTime should render with format "Today at hh:mm" when \`allowFutureTimestamps\` is false 1`] = `
<FormattedRelative
  value={1506547856000}
/>
`;

exports[`components/time/ReadableTime should render with format "Today at hh:mm" when there is a future time stamp 1`] = `
<FormattedMessage
  defaultMessage="Today at {time, time, short}"
  id="boxui.readableTime.eventTimeToday"
  values={
    Object {
      "date": null,
      "time": 1506558656000,
      "weekday": null,
    }
  }
/>
`;

exports[`components/time/ReadableTime should render with format "Yesterday at hh:mm" 1`] = `
<FormattedMessage
  defaultMessage="Yesterday at {time, time, short}"
  id="boxui.readableTime.eventTimeYesterday"
  values={
    Object {
      "date": null,
      "time": 1506465056000,
      "weekday": null,
    }
  }
/>
`;

exports[`components/time/ReadableTime should render with format "in 30 minutes" when timestamp is within relative threshold (ahead) 1`] = `
<FormattedRelative
  value={1506553256000}
/>
`;

exports[`components/time/ReadableTime should render with weekday when we show weekday 1`] = `
<FormattedMessage
  defaultMessage="{weekday}, {time, date, medium}"
  id="boxui.readableTime.eventTimeWeekdayLong"
  values={
    Object {
      "date": null,
      "time": 1506378656000,
      "weekday": <FormattedDate
        value={1506378656000}
        weekday="long"
      />,
    }
  }
/>
`;
