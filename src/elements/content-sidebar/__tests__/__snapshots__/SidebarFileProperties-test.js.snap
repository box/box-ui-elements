// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`elements/content-sidebar/SidebarFileProperties render() should not render a tooltip if no banner policy body is provided 1`] = `
<SidebarFileProperties
  classification={
    Object {
      "Box__Security__Classification__Key": "Public",
    }
  }
  file={
    Object {
      "metadata": null,
      "permissions": Object {
        "can_upload": true,
      },
      "size": "1",
    }
  }
  hasClassification={true}
  intl={
    Object {
      "locale": "en",
    }
  }
  onClassificationClick={[MockFunction]}
>
  <LoadingIndicatorWrapper>
    <div
      className="loading-indicator-wrapper "
    >
      <ItemProperties
        classificationProps={
          Object {
            "data-resin-target": "editclassification",
            "openModal": [MockFunction],
            "tooltip": undefined,
            "value": "Public",
          }
        }
        descriptionTextareaProps={
          Object {
            "data-resin-target": "description",
          }
        }
        retentionPolicyProps={Object {}}
        size="1 B"
      >
        <dl
          className="item-properties"
        >
          <FormattedMessage
            defaultMessage="Size"
            id="boxui.itemDetails.size"
            tagName="dt"
          >
            <div />
          </FormattedMessage>
          <dd>
            1 B
          </dd>
          <RetentionPolicy />
          <ClassificationProperty
            data-resin-target="editclassification"
            openModal={[MockFunction]}
            value="Public"
          >
            <FormattedMessage
              defaultMessage="Classification"
              id="boxui.classification.classification"
              tagName="dt"
            >
              <div />
            </FormattedMessage>
            <dd>
              <div
                className="mbs"
              >
                <ClassificationBadge
                  tooltipPosition="middle-left"
                  value="Public"
                >
                  <Badge
                    className="classification-badge"
                    type="warning"
                  >
                    <span
                      className="badge badge-warning classification-badge"
                    >
                      Public
                    </span>
                  </Badge>
                </ClassificationBadge>
              </div>
              <PlainButton
                className="lnk"
                onClick={[MockFunction]}
              >
                <button
                  className="btn-plain lnk"
                  onClick={[MockFunction]}
                  type="submit"
                >
                  <FormattedMessage
                    defaultMessage="Edit"
                    id="boxui.classification.edit"
                  >
                    <div />
                  </FormattedMessage>
                </button>
              </PlainButton>
            </dd>
          </ClassificationProperty>
        </dl>
      </ItemProperties>
    </div>
  </LoadingIndicatorWrapper>
</SidebarFileProperties>
`;

exports[`elements/content-sidebar/SidebarFileProperties render() should not render classification information if hasClassification is false 1`] = `
<SidebarFileProperties
  file={
    Object {
      "content_created_at": "2018-04-18T16:56:05.352Z",
      "content_modified_at": "2018-04-18T16:56:05.352Z",
      "created_by": Object {
        "name": "foo",
      },
      "description": "foo",
      "owned_by": Object {
        "name": "foo",
      },
      "permissions": Object {
        "can_rename": true,
      },
      "size": "1",
    }
  }
  hasClassification={false}
  intl={
    Object {
      "locale": "en",
    }
  }
  onDescriptionChange={[MockFunction]}
>
  <LoadingIndicatorWrapper>
    <div
      className="loading-indicator-wrapper "
    >
      <ItemProperties
        classificationProps={Object {}}
        createdAt="2018-04-18T16:56:05.352Z"
        description="foo"
        descriptionTextareaProps={
          Object {
            "data-resin-target": "description",
          }
        }
        modifiedAt="2018-04-18T16:56:05.352Z"
        onDescriptionChange={[MockFunction]}
        owner="foo"
        retentionPolicyProps={Object {}}
        size="1 B"
        uploader="foo"
      >
        <dl
          className="item-properties"
        >
          <FormattedMessage
            defaultMessage="Description"
            id="boxui.itemDetails.description"
            tagName="dt"
          >
            <div />
          </FormattedMessage>
          <dd>
            <EditableDescription
              onDescriptionChange={[MockFunction]}
              textAreaProps={
                Object {
                  "data-resin-target": "description",
                }
              }
              value="foo"
            >
              <EditableDescription
                intl={
                  Object {
                    "formatDate": [Function],
                    "formatMessage": [Function],
                  }
                }
                onDescriptionChange={[MockFunction]}
                textAreaProps={
                  Object {
                    "data-resin-target": "description",
                  }
                }
                value="foo"
              >
                <TextareaAutosize
                  className="description-textarea"
                  data-resin-target="description"
                  inputRef={[Function]}
                  maxLength="255"
                  maxRows={6}
                  onBlur={[Function]}
                  onChange={[Function]}
                  onHeightChange={[Function]}
                  placeholder="Enter a description"
                  useCacheForDOMMeasurements={false}
                  value="foo"
                >
                  <textarea
                    className="description-textarea"
                    data-resin-target="description"
                    maxLength="255"
                    onBlur={[Function]}
                    onChange={[Function]}
                    placeholder="Enter a description"
                    style={
                      Object {
                        "height": 0,
                      }
                    }
                    value="foo"
                  />
                </TextareaAutosize>
              </EditableDescription>
            </EditableDescription>
          </dd>
          <FormattedMessage
            defaultMessage="Owner"
            id="boxui.itemDetails.owner"
            tagName="dt"
          >
            <div />
          </FormattedMessage>
          <dd>
            foo
          </dd>
          <FormattedMessage
            defaultMessage="Uploader"
            id="boxui.itemDetails.uploader"
            tagName="dt"
          >
            <div />
          </FormattedMessage>
          <dd>
            foo
          </dd>
          <FormattedMessage
            defaultMessage="Created"
            id="boxui.itemDetails.created"
            tagName="dt"
          >
            <div />
          </FormattedMessage>
          <dd>
            <FormattedDate
              day="numeric"
              hour="numeric"
              minute="numeric"
              month="short"
              value={2018-04-18T16:56:05.352Z}
              year="numeric"
            >
              <div />
            </FormattedDate>
          </dd>
          <FormattedMessage
            defaultMessage="Modified"
            id="boxui.itemDetails.modified"
            tagName="dt"
          >
            <div />
          </FormattedMessage>
          <dd>
            <FormattedDate
              day="numeric"
              hour="numeric"
              minute="numeric"
              month="short"
              value={2018-04-18T16:56:05.352Z}
              year="numeric"
            >
              <div />
            </FormattedDate>
          </dd>
          <FormattedMessage
            defaultMessage="Size"
            id="boxui.itemDetails.size"
            tagName="dt"
          >
            <div />
          </FormattedMessage>
          <dd>
            1 B
          </dd>
          <RetentionPolicy />
          <ClassificationProperty />
        </dl>
      </ItemProperties>
    </div>
  </LoadingIndicatorWrapper>
</SidebarFileProperties>
`;

exports[`elements/content-sidebar/SidebarFileProperties render() should render ItemProperties 1`] = `
<LoadingIndicatorWrapper>
  <ItemProperties
    classificationProps={Object {}}
    createdAt="2018-04-18T16:56:05.352Z"
    description="foo"
    descriptionTextareaProps={
      Object {
        "data-resin-target": "description",
      }
    }
    modifiedAt="2018-04-18T16:56:05.352Z"
    onDescriptionChange={[MockFunction]}
    owner="foo"
    retentionPolicyProps={Object {}}
    size="1 B"
    uploader="foo"
  />
</LoadingIndicatorWrapper>
`;

exports[`elements/content-sidebar/SidebarFileProperties render() should render an error 1`] = `
<Fragment>
  <InlineError
    title={
      <FormattedMessage
        defaultMessage="baz"
        description="bar"
        id="foo"
      />
    }
  >
    <FormattedMessage
      defaultMessage="baz"
      description="bar"
      id="foo"
    />
  </InlineError>
  <SidebarFileProperties
    intl={
      Object {
        "formatDate": [Function],
        "formatMessage": [Function],
      }
    }
  />
</Fragment>
`;

exports[`elements/content-sidebar/SidebarFileProperties render() should render classification information and not link when given proper metadata 1`] = `
<SidebarFileProperties
  bannerPolicy={
    Object {
      "body": "tooltip value",
    }
  }
  classification={
    Object {
      "Box__Security__Classification__Key": "Public",
    }
  }
  file={
    Object {
      "permissions": Object {
        "can_upload": false,
      },
      "size": "1",
    }
  }
  hasClassification={true}
  intl={
    Object {
      "locale": "en",
    }
  }
  onClassificationClick={[MockFunction]}
>
  <LoadingIndicatorWrapper>
    <div
      className="loading-indicator-wrapper "
    >
      <ItemProperties
        classificationProps={
          Object {
            "data-resin-target": "editclassification",
            "openModal": undefined,
            "tooltip": "tooltip value",
            "value": "Public",
          }
        }
        descriptionTextareaProps={
          Object {
            "data-resin-target": "description",
          }
        }
        retentionPolicyProps={Object {}}
        size="1 B"
      >
        <dl
          className="item-properties"
        >
          <FormattedMessage
            defaultMessage="Size"
            id="boxui.itemDetails.size"
            tagName="dt"
          >
            <div />
          </FormattedMessage>
          <dd>
            1 B
          </dd>
          <RetentionPolicy />
          <ClassificationProperty
            data-resin-target="editclassification"
            tooltip="tooltip value"
            value="Public"
          >
            <FormattedMessage
              defaultMessage="Classification"
              id="boxui.classification.classification"
              tagName="dt"
            >
              <div />
            </FormattedMessage>
            <dd>
              <div
                className="mbs"
              >
                <ClassificationBadge
                  tooltip="tooltip value"
                  tooltipPosition="middle-left"
                  value="Public"
                >
                  <Tooltip
                    constrainToScrollParent={false}
                    constrainToWindow={true}
                    isDisabled={false}
                    position="middle-left"
                    text="tooltip value"
                    theme="default"
                  >
                    <TetherComponent
                      attachment="middle right"
                      bodyElement={
                        <body>
                          <textarea
                            style="min-height: 0 !important; max-height: none !important; height: 0px !important; visibility: hidden !important; overflow: hidden !important; position: absolute !important; z-index: -1000 !important; top: 0px !important; right: 0px;"
                          />
                        </body>
                      }
                      classPrefix="tooltip"
                      constraints={
                        Array [
                          Object {
                            "attachment": "together",
                            "to": "window",
                          },
                        ]
                      }
                      enabled={false}
                      renderElementTag="div"
                      renderElementTo={null}
                      targetAttachment="middle left"
                    >
                      <Badge
                        className="classification-badge"
                        key=".0"
                        onBlur={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        tabIndex="0"
                        type="warning"
                      >
                        <span
                          className="badge badge-warning classification-badge"
                          onBlur={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          tabIndex="0"
                        >
                          Public
                        </span>
                      </Badge>
                    </TetherComponent>
                  </Tooltip>
                </ClassificationBadge>
              </div>
            </dd>
          </ClassificationProperty>
        </dl>
      </ItemProperties>
    </div>
  </LoadingIndicatorWrapper>
</SidebarFileProperties>
`;

exports[`elements/content-sidebar/SidebarFileProperties render() should render classification link only when given callback and has_upload permission is true 1`] = `
<SidebarFileProperties
  bannerPolicy={
    Object {
      "body": "tooltip value",
    }
  }
  classification={
    Object {
      "Box__Security__Classification__Key": "Public",
    }
  }
  file={
    Object {
      "metadata": null,
      "permissions": Object {
        "can_upload": true,
      },
      "size": "1",
    }
  }
  hasClassification={true}
  intl={
    Object {
      "locale": "en",
    }
  }
  onClassificationClick={[MockFunction]}
>
  <LoadingIndicatorWrapper>
    <div
      className="loading-indicator-wrapper "
    >
      <ItemProperties
        classificationProps={
          Object {
            "data-resin-target": "editclassification",
            "openModal": [MockFunction],
            "tooltip": "tooltip value",
            "value": "Public",
          }
        }
        descriptionTextareaProps={
          Object {
            "data-resin-target": "description",
          }
        }
        retentionPolicyProps={Object {}}
        size="1 B"
      >
        <dl
          className="item-properties"
        >
          <FormattedMessage
            defaultMessage="Size"
            id="boxui.itemDetails.size"
            tagName="dt"
          >
            <div />
          </FormattedMessage>
          <dd>
            1 B
          </dd>
          <RetentionPolicy />
          <ClassificationProperty
            data-resin-target="editclassification"
            openModal={[MockFunction]}
            tooltip="tooltip value"
            value="Public"
          >
            <FormattedMessage
              defaultMessage="Classification"
              id="boxui.classification.classification"
              tagName="dt"
            >
              <div />
            </FormattedMessage>
            <dd>
              <div
                className="mbs"
              >
                <ClassificationBadge
                  tooltip="tooltip value"
                  tooltipPosition="middle-left"
                  value="Public"
                >
                  <Tooltip
                    constrainToScrollParent={false}
                    constrainToWindow={true}
                    isDisabled={false}
                    position="middle-left"
                    text="tooltip value"
                    theme="default"
                  >
                    <TetherComponent
                      attachment="middle right"
                      bodyElement={
                        <body>
                          <textarea
                            style="min-height: 0 !important; max-height: none !important; height: 0px !important; visibility: hidden !important; overflow: hidden !important; position: absolute !important; z-index: -1000 !important; top: 0px !important; right: 0px;"
                          />
                        </body>
                      }
                      classPrefix="tooltip"
                      constraints={
                        Array [
                          Object {
                            "attachment": "together",
                            "to": "window",
                          },
                        ]
                      }
                      enabled={false}
                      renderElementTag="div"
                      renderElementTo={null}
                      targetAttachment="middle left"
                    >
                      <Badge
                        className="classification-badge"
                        key=".0"
                        onBlur={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        tabIndex="0"
                        type="warning"
                      >
                        <span
                          className="badge badge-warning classification-badge"
                          onBlur={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          tabIndex="0"
                        >
                          Public
                        </span>
                      </Badge>
                    </TetherComponent>
                  </Tooltip>
                </ClassificationBadge>
              </div>
              <PlainButton
                className="lnk"
                onClick={[MockFunction]}
              >
                <button
                  className="btn-plain lnk"
                  onClick={[MockFunction]}
                  type="submit"
                >
                  <FormattedMessage
                    defaultMessage="Edit"
                    id="boxui.classification.edit"
                  >
                    <div />
                  </FormattedMessage>
                </button>
              </PlainButton>
            </dd>
          </ClassificationProperty>
        </dl>
      </ItemProperties>
    </div>
  </LoadingIndicatorWrapper>
</SidebarFileProperties>
`;

exports[`elements/content-sidebar/SidebarFileProperties render() should render retention policy information when given proper props and callback 1`] = `
<SidebarFileProperties
  file={
    Object {
      "size": "1",
    }
  }
  hasRetentionPolicy={true}
  intl={
    Object {
      "locale": "en",
    }
  }
  onRetentionPolicyExtendClick={[MockFunction]}
  retentionPolicy={
    Object {
      "dispositionTime": 1556317461,
      "policyName": "test policy",
      "policyType": "finite",
      "retentionPolicyDescription": "test policy (1 year retention & auto-deletion",
    }
  }
>
  <LoadingIndicatorWrapper>
    <div
      className="loading-indicator-wrapper "
    >
      <ItemProperties
        classificationProps={Object {}}
        descriptionTextareaProps={
          Object {
            "data-resin-target": "description",
          }
        }
        retentionPolicyProps={
          Object {
            "dispositionTime": 1556317461,
            "openModal": [MockFunction],
            "policyName": "test policy",
            "policyType": "finite",
            "retentionPolicyDescription": "test policy (1 year retention & auto-deletion",
          }
        }
        size="1 B"
      >
        <dl
          className="item-properties"
        >
          <FormattedMessage
            defaultMessage="Size"
            id="boxui.itemDetails.size"
            tagName="dt"
          >
            <div />
          </FormattedMessage>
          <dd>
            1 B
          </dd>
          <RetentionPolicy
            dispositionTime={1556317461}
            openModal={[MockFunction]}
            policyName="test policy"
            policyType="finite"
            retentionPolicyDescription="test policy (1 year retention & auto-deletion"
          >
            <FormattedMessage
              defaultMessage="Policy"
              id="boxui.itemDetails.retentionPolicyDescription"
              tagName="dt"
            >
              <div />
            </FormattedMessage>
            <dd>
              test policy (1 year retention & auto-deletion
            </dd>
            <FormattedMessage
              defaultMessage="Policy Expiration"
              id="boxui.itemDetails.retentionPolicyExpiration"
              tagName="dt"
            >
              <div />
            </FormattedMessage>
            <dd>
              <FormattedDate
                day="numeric"
                month="short"
                value={1970-01-19T00:18:37.461Z}
                year="numeric"
              >
                <div />
              </FormattedDate>
              <PlainButton
                className="lnk"
                onClick={[MockFunction]}
              >
                <button
                  className="btn-plain lnk"
                  onClick={[MockFunction]}
                  type="submit"
                >
                  <FormattedMessage
                    defaultMessage="Extend"
                    id="boxui.itemDetails.retentionPolicyExtend"
                  >
                    <div />
                  </FormattedMessage>
                </button>
              </PlainButton>
            </dd>
          </RetentionPolicy>
          <ClassificationProperty />
        </dl>
      </ItemProperties>
    </div>
  </LoadingIndicatorWrapper>
</SidebarFileProperties>
`;
