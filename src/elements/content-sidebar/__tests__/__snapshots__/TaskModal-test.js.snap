// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`elements/content-sidebar/TaskModal render should render a default component with default props 1`] = `
<Modal
  className="be-modal task-modal"
  data-testid="create-task-modal"
  focusElementSelector=".task-modal textarea, .task-modal input"
  isOpen={true}
  onRequestClose={[MockFunction]}
  style={
    Object {
      "backdrop": Object {},
      "dialog": Object {},
    }
  }
  title={
    <FormattedMessage
      defaultMessage="Create Approval Task"
      id="be.contentSidebar.addTask.approval.title"
    />
  }
>
  <div
    className="be"
  >
    <TaskForm
      approverSelectorContacts={null}
      createTask={[MockFunction]}
      editMode="CREATE"
      getAvatarUrl={[MockFunction]}
      onCancel={[MockFunction]}
      onSubmitError={[MockFunction]}
      onSubmitSuccess={[MockFunction]}
    />
  </div>
</Modal>
`;

exports[`elements/content-sidebar/TaskModal render using type APPROVAL and mode CREATE yields the proper modal title 1`] = `
<Modal
  className="be-modal task-modal"
  data-testid="create-task-modal"
  focusElementSelector=".task-modal textarea, .task-modal input"
  isOpen={true}
  onRequestClose={[MockFunction]}
  style={
    Object {
      "backdrop": Object {},
      "dialog": Object {},
    }
  }
  title={
    <FormattedMessage
      defaultMessage="Create Approval Task"
      id="be.contentSidebar.addTask.approval.title"
    />
  }
>
  <div
    className="be"
  >
    <TaskForm
      approverSelectorContacts={null}
      createTask={[MockFunction]}
      editMode="CREATE"
      getAvatarUrl={[MockFunction]}
      onCancel={[MockFunction]}
      onSubmitError={[MockFunction]}
      onSubmitSuccess={[MockFunction]}
      taskType="APPROVAL"
    />
  </div>
</Modal>
`;

exports[`elements/content-sidebar/TaskModal render using type APPROVAL and mode EDIT yields the proper modal title 1`] = `
<Modal
  className="be-modal task-modal"
  data-testid="create-task-modal"
  focusElementSelector=".task-modal textarea, .task-modal input"
  isOpen={true}
  onRequestClose={[MockFunction]}
  style={
    Object {
      "backdrop": Object {},
      "dialog": Object {},
    }
  }
  title={
    <FormattedMessage
      defaultMessage="Modify Approval Task"
      id="be.contentSidebar.editTask.approval.title"
    />
  }
>
  <div
    className="be"
  >
    <TaskForm
      approverSelectorContacts={null}
      createTask={[MockFunction]}
      editMode="EDIT"
      getAvatarUrl={[MockFunction]}
      onCancel={[MockFunction]}
      onSubmitError={[MockFunction]}
      onSubmitSuccess={[MockFunction]}
      taskType="APPROVAL"
    />
  </div>
</Modal>
`;

exports[`elements/content-sidebar/TaskModal render using type GENERAL and mode CREATE yields the proper modal title 1`] = `
<Modal
  className="be-modal task-modal"
  data-testid="create-task-modal"
  focusElementSelector=".task-modal textarea, .task-modal input"
  isOpen={true}
  onRequestClose={[MockFunction]}
  style={
    Object {
      "backdrop": Object {},
      "dialog": Object {},
    }
  }
  title={
    <FormattedMessage
      defaultMessage="Create General Task"
      id="be.contentSidebar.addTask.general.title"
    />
  }
>
  <div
    className="be"
  >
    <TaskForm
      approverSelectorContacts={null}
      createTask={[MockFunction]}
      editMode="CREATE"
      getAvatarUrl={[MockFunction]}
      onCancel={[MockFunction]}
      onSubmitError={[MockFunction]}
      onSubmitSuccess={[MockFunction]}
      taskType="GENERAL"
    />
  </div>
</Modal>
`;

exports[`elements/content-sidebar/TaskModal render using type GENERAL and mode EDIT yields the proper modal title 1`] = `
<Modal
  className="be-modal task-modal"
  data-testid="create-task-modal"
  focusElementSelector=".task-modal textarea, .task-modal input"
  isOpen={true}
  onRequestClose={[MockFunction]}
  style={
    Object {
      "backdrop": Object {},
      "dialog": Object {},
    }
  }
  title={
    <FormattedMessage
      defaultMessage="Modify General Task"
      id="be.contentSidebar.editTask.general.title"
    />
  }
>
  <div
    className="be"
  >
    <TaskForm
      approverSelectorContacts={null}
      createTask={[MockFunction]}
      editMode="EDIT"
      getAvatarUrl={[MockFunction]}
      onCancel={[MockFunction]}
      onSubmitError={[MockFunction]}
      onSubmitSuccess={[MockFunction]}
      taskType="GENERAL"
    />
  </div>
</Modal>
`;
