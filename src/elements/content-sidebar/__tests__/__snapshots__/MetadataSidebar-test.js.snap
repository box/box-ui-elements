// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`elements/content-sidebar/Metadata/MetadataSidebar should render Metadata sidebar component when instances and templates are available 1`] = `
<SidebarContent
  actions={null}
  className="bcs-metadata"
  elementId=""
  sidebarView="metadata"
  title={
    <FormattedMessage
      defaultMessage="Metadata"
      id="be.sidebarMetadataTitle"
    />
  }
>
  <LoadingIndicatorWrapper
    className="metadata-instance-editor"
    isLoading={false}
  >
    <Instances
      editors={
        Array [
          Object {},
        ]
      }
      onModification={[Function]}
      onRemove={[Function]}
      onSave={[Function]}
    />
  </LoadingIndicatorWrapper>
</SidebarContent>
`;

exports[`elements/content-sidebar/Metadata/MetadataSidebar should render Metadata sidebar component with empty content when instances are empty 1`] = `
<SidebarContent
  actions={null}
  className="bcs-metadata"
  elementId=""
  sidebarView="metadata"
  title={
    <FormattedMessage
      defaultMessage="Metadata"
      id="be.sidebarMetadataTitle"
    />
  }
>
  <LoadingIndicatorWrapper
    className="metadata-instance-editor"
    isLoading={false}
  >
    <EmptyContent
      canAdd={false}
    />
  </LoadingIndicatorWrapper>
</SidebarContent>
`;

exports[`elements/content-sidebar/Metadata/MetadataSidebar should render Metadata sidebar component with template add dropdown 1`] = `
<SidebarContent
  actions={
    <TemplateDropdown
      hasTemplates={false}
      isDropdownBusy={false}
      onAdd={[Function]}
      templates={Array []}
      usedTemplates={
        Array [
          undefined,
        ]
      }
    />
  }
  className="bcs-metadata"
  elementId=""
  sidebarView="metadata"
  title={
    <FormattedMessage
      defaultMessage="Metadata"
      id="be.sidebarMetadataTitle"
    />
  }
>
  <LoadingIndicatorWrapper
    className="metadata-instance-editor"
    isLoading={false}
  >
    <Instances
      editors={
        Array [
          Object {},
        ]
      }
      onModification={[Function]}
      onRemove={[Function]}
      onSave={[Function]}
    />
  </LoadingIndicatorWrapper>
</SidebarContent>
`;

exports[`elements/content-sidebar/Metadata/MetadataSidebar should render error when there was an error 1`] = `
<SidebarContent
  actions={null}
  className="bcs-metadata"
  elementId=""
  sidebarView="metadata"
  title={
    <FormattedMessage
      defaultMessage="Metadata"
      id="be.sidebarMetadataTitle"
    />
  }
>
  <InlineError
    title={
      <FormattedMessage
        defaultMessage="Error"
        id="be.error"
      />
    }
  >
    <FormattedMessage />
  </InlineError>
</SidebarContent>
`;

exports[`elements/content-sidebar/Metadata/MetadataSidebar should render loading indicator component when file is not available 1`] = `
<SidebarContent
  actions={null}
  className="bcs-metadata"
  elementId=""
  sidebarView="metadata"
  title={
    <FormattedMessage
      defaultMessage="Metadata"
      id="be.sidebarMetadataTitle"
    />
  }
>
  <LoadingIndicator />
</SidebarContent>
`;

exports[`elements/content-sidebar/Metadata/MetadataSidebar should render loading indicator component when instances are not available 1`] = `
<SidebarContent
  actions={null}
  className="bcs-metadata"
  elementId=""
  sidebarView="metadata"
  title={
    <FormattedMessage
      defaultMessage="Metadata"
      id="be.sidebarMetadataTitle"
    />
  }
>
  <LoadingIndicator />
</SidebarContent>
`;

exports[`elements/content-sidebar/Metadata/MetadataSidebar should render loading indicator component when templates are not available 1`] = `
<SidebarContent
  actions={null}
  className="bcs-metadata"
  elementId=""
  sidebarView="metadata"
  title={
    <FormattedMessage
      defaultMessage="Metadata"
      id="be.sidebarMetadataTitle"
    />
  }
>
  <LoadingIndicator />
</SidebarContent>
`;
