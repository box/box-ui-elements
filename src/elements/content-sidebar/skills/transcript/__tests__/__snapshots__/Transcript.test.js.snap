// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`elements/content-sidebar/Skills/Transcript/Transcript should correctly render editable Transcript when editable and editmode 1`] = `
<LoadingIndicatorWrapper
  className="be-transcript"
  isLoading={false}
>
  <div
    className="be-transcript-actions"
  >
    <Tooltip
      constrainToScrollParent={false}
      constrainToWindow={true}
      isDisabled={false}
      position="top-center"
      text={
        <FormattedMessage
          defaultMessage="Copy"
          id="be.copy"
        />
      }
      theme="default"
    >
      <PlainButton
        className="be-transcript-copy"
        data-resin-target="skill-transcriptcopy"
        getDOMRef={[Function]}
        onClick={[Function]}
        type="button"
      >
        <IconCopy
          color="#909090"
        />
      </PlainButton>
    </Tooltip>
    <Tooltip
      constrainToScrollParent={false}
      constrainToWindow={true}
      isDisabled={false}
      position="top-center"
      text={
        <FormattedMessage
          defaultMessage="Edit"
          id="be.editLabel"
        />
      }
      theme="default"
    >
      <PlainButton
        className="be-transcript-edit"
        data-resin-target="skill-transcriptedit"
        onClick={[Function]}
        type="button"
      >
        <IconEdit />
      </PlainButton>
    </Tooltip>
  </div>
  <div
    className="be-transcript-content-collapsed"
  >
    <TranscriptRow
      interactionTarget="skill-transcript"
      isEditing={false}
      key="0"
      onCancel={[Function]}
      onChange={[Function]}
      onClick={[Function]}
      onSave={[Function]}
      text="foo"
    />
    <TranscriptRow
      interactionTarget="skill-transcript"
      isEditing={false}
      key="1"
      onCancel={[Function]}
      onChange={[Function]}
      onClick={[Function]}
      onSave={[Function]}
      text="bar"
    />
  </div>
</LoadingIndicatorWrapper>
`;

exports[`elements/content-sidebar/Skills/Transcript/Transcript should correctly render error mask when no Transcript 1`] = `
<LoadingIndicatorWrapper
  className="be-transcript"
  isLoading={false}
>
  <FormattedMessage
    defaultMessage="Weâ€™re sorry, no skills information was found."
    id="be.skillNoInfoFoundError"
  />
</LoadingIndicatorWrapper>
`;

exports[`elements/content-sidebar/Skills/Transcript/Transcript should correctly render expand button 1`] = `
<LoadingIndicatorWrapper
  className="be-transcript"
  isLoading={false}
>
  <div
    className="be-transcript-actions"
  >
    <Tooltip
      constrainToScrollParent={false}
      constrainToWindow={true}
      isDisabled={false}
      position="top-center"
      text={
        <FormattedMessage
          defaultMessage="Copy"
          id="be.copy"
        />
      }
      theme="default"
    >
      <PlainButton
        className="be-transcript-copy"
        data-resin-target="skill-transcriptcopy"
        getDOMRef={[Function]}
        onClick={[Function]}
        type="button"
      >
        <IconCopy
          color="#909090"
        />
      </PlainButton>
    </Tooltip>
    <Tooltip
      constrainToScrollParent={false}
      constrainToWindow={true}
      isDisabled={false}
      position="top-center"
      text={
        <FormattedMessage
          defaultMessage="Expand"
          id="be.expand"
        />
      }
      theme="default"
    >
      <PlainButton
        className="be-transcript-expand"
        data-resin-target="skill-transcriptexpand"
        onClick={[Function]}
        type="button"
      >
        <IconExpand
          color="#909090"
        />
      </PlainButton>
    </Tooltip>
    <Tooltip
      constrainToScrollParent={false}
      constrainToWindow={true}
      isDisabled={false}
      position="top-center"
      text={
        <FormattedMessage
          defaultMessage="Edit"
          id="be.editLabel"
        />
      }
      theme="default"
    >
      <PlainButton
        className="be-transcript-edit"
        data-resin-target="skill-transcriptedit"
        onClick={[Function]}
        type="button"
      >
        <IconEdit />
      </PlainButton>
    </Tooltip>
  </div>
  <div
    className="be-transcript-content-collapsed"
  >
    <TranscriptRow
      interactionTarget="skill-transcript"
      isEditing={false}
      key="0"
      onCancel={[Function]}
      onChange={[Function]}
      onClick={[Function]}
      onSave={[Function]}
      text="foo"
    />
    <TranscriptRow
      interactionTarget="skill-transcript"
      isEditing={false}
      key="1"
      onCancel={[Function]}
      onChange={[Function]}
      onClick={[Function]}
      onSave={[Function]}
      text="bar"
    />
    <TranscriptRow
      interactionTarget="skill-transcript"
      isEditing={false}
      key="2"
      onCancel={[Function]}
      onChange={[Function]}
      onClick={[Function]}
      onSave={[Function]}
      text="bar1"
    />
    <TranscriptRow
      interactionTarget="skill-transcript"
      isEditing={false}
      key="3"
      onCancel={[Function]}
      onChange={[Function]}
      onClick={[Function]}
      onSave={[Function]}
      text="bar2"
    />
    <TranscriptRow
      interactionTarget="skill-transcript"
      isEditing={false}
      key="4"
      onCancel={[Function]}
      onChange={[Function]}
      onClick={[Function]}
      onSave={[Function]}
      text="bar3"
    />
    <TranscriptRow
      interactionTarget="skill-transcript"
      isEditing={false}
      key="5"
      onCancel={[Function]}
      onChange={[Function]}
      onClick={[Function]}
      onSave={[Function]}
      text="bar4"
    />
  </div>
</LoadingIndicatorWrapper>
`;

exports[`elements/content-sidebar/Skills/Transcript/Transcript should correctly render read only Transcript when not editable 1`] = `
<LoadingIndicatorWrapper
  className="be-transcript"
  isLoading={false}
>
  <div
    className="be-transcript-actions"
  >
    <Tooltip
      constrainToScrollParent={false}
      constrainToWindow={true}
      isDisabled={false}
      position="top-center"
      text={
        <FormattedMessage
          defaultMessage="Copy"
          id="be.copy"
        />
      }
      theme="default"
    >
      <PlainButton
        className="be-transcript-copy"
        data-resin-target="skill-transcriptcopy"
        getDOMRef={[Function]}
        onClick={[Function]}
        type="button"
      >
        <IconCopy
          color="#909090"
        />
      </PlainButton>
    </Tooltip>
  </div>
  <div
    className="be-transcript-content-collapsed"
  >
    <TranscriptRow
      interactionTarget="skill-transcript"
      isEditing={false}
      key="0"
      onCancel={[Function]}
      onChange={[Function]}
      onClick={[Function]}
      onSave={[Function]}
      text="foo"
    />
    <TranscriptRow
      interactionTarget="skill-transcript"
      isEditing={false}
      key="1"
      onCancel={[Function]}
      onChange={[Function]}
      onClick={[Function]}
      onSave={[Function]}
      text="bar"
    />
  </div>
</LoadingIndicatorWrapper>
`;

exports[`elements/content-sidebar/Skills/Transcript/Transcript should correctly render when isLoading is true 1`] = `
<LoadingIndicatorWrapper
  className="be-transcript"
  isLoading={true}
>
  <div
    className="be-transcript-content-collapsed"
  >
    <TranscriptRow
      interactionTarget="skill-transcript"
      isEditing={false}
      key="0"
      onCancel={[Function]}
      onChange={[Function]}
      onClick={[Function]}
      onSave={[Function]}
      text="foo"
    />
    <TranscriptRow
      interactionTarget="skill-transcript"
      isEditing={false}
      key="1"
      onCancel={[Function]}
      onChange={[Function]}
      onClick={[Function]}
      onSave={[Function]}
      text="bar"
    />
  </div>
</LoadingIndicatorWrapper>
`;
