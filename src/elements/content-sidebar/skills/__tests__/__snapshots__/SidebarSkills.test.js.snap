// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`elements/content-sidebar/Skills/SidebarSkills should have no editable permission if can_upload is false 1`] = `
<SidebarSkills
  cards={
    Array [
      Object {
        "entries": Array [
          Object {
            "title": "bar",
          },
        ],
      },
    ]
  }
  errors={Object {}}
  file={
    Object {
      "permissions": Object {
        "can_upload": false,
      },
    }
  }
  getViewer={[MockFunction]}
>
  <sidebar-section
    interactionTarget=""
    isOpen={true}
    key="card_9"
    title={
      <FormattedMessage
        defaultMessage="Skill Card"
        id="be.defaultSkill"
      />
    }
  >
    <sidebar-skills-card
      card={
        Object {
          "entries": Array [
            Object {
              "title": "bar",
            },
          ],
        }
      }
      cards={
        Array [
          Object {
            "entries": Array [
              Object {
                "title": "bar",
              },
            ],
          },
        ]
      }
      getViewer={[MockFunction]}
      hasError={false}
      isEditable={false}
      onSkillChange={[Function]}
    />
  </sidebar-section>
</SidebarSkills>
`;

exports[`elements/content-sidebar/Skills/SidebarSkills should render only the valid cards 1`] = `
<SidebarSkills
  cards={
    Array [
      Object {},
      Object {
        "entries": Array [
          Object {
            "title": "bar",
          },
        ],
      },
    ]
  }
  errors={
    Object {
      "1": true,
    }
  }
  file={
    Object {
      "permissions": Object {
        "can_upload": true,
      },
    }
  }
  getViewer={[MockFunction]}
>
  <sidebar-section
    interactionTarget=""
    isOpen={true}
    key="card_8"
    title={
      <FormattedMessage
        defaultMessage="Skill Card"
        id="be.defaultSkill"
      />
    }
  >
    <sidebar-skills-card
      card={
        Object {
          "entries": Array [
            Object {
              "title": "bar",
            },
          ],
        }
      }
      cards={
        Array [
          Object {},
          Object {
            "entries": Array [
              Object {
                "title": "bar",
              },
            ],
          },
        ]
      }
      getViewer={[MockFunction]}
      hasError={true}
      isEditable={true}
      onSkillChange={[Function]}
    />
  </sidebar-section>
</SidebarSkills>
`;

exports[`elements/content-sidebar/Skills/SidebarSkills should render the cards when there are valid skills 1`] = `
<SidebarSkills
  cards={
    Array [
      Object {
        "entries": Array [
          Object {},
        ],
        "skill_card_title": Object {
          "code": "skills_faces",
        },
      },
      Object {
        "entries": Array [],
        "skill_card_title": Object {
          "code": "skills_transcript",
        },
      },
      Object {
        "entries": Array [],
        "skill_card_title": Object {
          "code": "skills_topics",
        },
      },
      Object {
        "entries": Array [
          Object {},
        ],
        "skill_card_title": Object {
          "code": "skills_status",
        },
      },
      Object {
        "entries": Array [],
        "skill_card_title": Object {
          "code": "skills_error",
        },
      },
      Object {
        "entries": Array [
          Object {},
        ],
        "skill_card_title": Object {
          "message": "title",
        },
      },
    ]
  }
  errors={
    Object {
      "3": true,
      "5": true,
    }
  }
  file={
    Object {
      "permissions": Object {
        "can_upload": true,
      },
    }
  }
  getViewer={[MockFunction]}
>
  <sidebar-section
    interactionTarget=""
    isOpen={true}
    key="card_1"
    title={
      <FormattedMessage
        defaultMessage="Faces"
        id="be.faceSkill"
      />
    }
  >
    <sidebar-skills-card
      card={
        Object {
          "entries": Array [
            Object {},
          ],
          "skill_card_title": Object {
            "code": "skills_faces",
          },
        }
      }
      cards={
        Array [
          Object {
            "entries": Array [
              Object {},
            ],
            "skill_card_title": Object {
              "code": "skills_faces",
            },
          },
          Object {
            "entries": Array [],
            "skill_card_title": Object {
              "code": "skills_transcript",
            },
          },
          Object {
            "entries": Array [],
            "skill_card_title": Object {
              "code": "skills_topics",
            },
          },
          Object {
            "entries": Array [
              Object {},
            ],
            "skill_card_title": Object {
              "code": "skills_status",
            },
          },
          Object {
            "entries": Array [],
            "skill_card_title": Object {
              "code": "skills_error",
            },
          },
          Object {
            "entries": Array [
              Object {},
            ],
            "skill_card_title": Object {
              "message": "title",
            },
          },
        ]
      }
      getViewer={[MockFunction]}
      hasError={false}
      isEditable={true}
      onSkillChange={[Function]}
    />
  </sidebar-section>
  <sidebar-section
    interactionTarget=""
    isOpen={false}
    key="card_2"
    title={
      <FormattedMessage
        defaultMessage="Transcript"
        id="be.transcriptSkill"
      />
    }
  >
    <sidebar-skills-card
      card={
        Object {
          "entries": Array [],
          "skill_card_title": Object {
            "code": "skills_transcript",
          },
        }
      }
      cards={
        Array [
          Object {
            "entries": Array [
              Object {},
            ],
            "skill_card_title": Object {
              "code": "skills_faces",
            },
          },
          Object {
            "entries": Array [],
            "skill_card_title": Object {
              "code": "skills_transcript",
            },
          },
          Object {
            "entries": Array [],
            "skill_card_title": Object {
              "code": "skills_topics",
            },
          },
          Object {
            "entries": Array [
              Object {},
            ],
            "skill_card_title": Object {
              "code": "skills_status",
            },
          },
          Object {
            "entries": Array [],
            "skill_card_title": Object {
              "code": "skills_error",
            },
          },
          Object {
            "entries": Array [
              Object {},
            ],
            "skill_card_title": Object {
              "message": "title",
            },
          },
        ]
      }
      getViewer={[MockFunction]}
      hasError={false}
      isEditable={true}
      onSkillChange={[Function]}
    />
  </sidebar-section>
  <sidebar-section
    interactionTarget=""
    isOpen={false}
    key="card_3"
    title={
      <FormattedMessage
        defaultMessage="Topics"
        id="be.topicsSkill"
      />
    }
  >
    <sidebar-skills-card
      card={
        Object {
          "entries": Array [],
          "skill_card_title": Object {
            "code": "skills_topics",
          },
        }
      }
      cards={
        Array [
          Object {
            "entries": Array [
              Object {},
            ],
            "skill_card_title": Object {
              "code": "skills_faces",
            },
          },
          Object {
            "entries": Array [],
            "skill_card_title": Object {
              "code": "skills_transcript",
            },
          },
          Object {
            "entries": Array [],
            "skill_card_title": Object {
              "code": "skills_topics",
            },
          },
          Object {
            "entries": Array [
              Object {},
            ],
            "skill_card_title": Object {
              "code": "skills_status",
            },
          },
          Object {
            "entries": Array [],
            "skill_card_title": Object {
              "code": "skills_error",
            },
          },
          Object {
            "entries": Array [
              Object {},
            ],
            "skill_card_title": Object {
              "message": "title",
            },
          },
        ]
      }
      getViewer={[MockFunction]}
      hasError={false}
      isEditable={true}
      onSkillChange={[Function]}
    />
  </sidebar-section>
  <sidebar-section
    interactionTarget=""
    isOpen={true}
    key="card_4"
    title={
      <FormattedMessage
        defaultMessage="Status"
        id="be.statusSkill"
      />
    }
  >
    <sidebar-skills-card
      card={
        Object {
          "entries": Array [
            Object {},
          ],
          "skill_card_title": Object {
            "code": "skills_status",
          },
        }
      }
      cards={
        Array [
          Object {
            "entries": Array [
              Object {},
            ],
            "skill_card_title": Object {
              "code": "skills_faces",
            },
          },
          Object {
            "entries": Array [],
            "skill_card_title": Object {
              "code": "skills_transcript",
            },
          },
          Object {
            "entries": Array [],
            "skill_card_title": Object {
              "code": "skills_topics",
            },
          },
          Object {
            "entries": Array [
              Object {},
            ],
            "skill_card_title": Object {
              "code": "skills_status",
            },
          },
          Object {
            "entries": Array [],
            "skill_card_title": Object {
              "code": "skills_error",
            },
          },
          Object {
            "entries": Array [
              Object {},
            ],
            "skill_card_title": Object {
              "message": "title",
            },
          },
        ]
      }
      getViewer={[MockFunction]}
      hasError={true}
      isEditable={true}
      onSkillChange={[Function]}
    />
  </sidebar-section>
  <sidebar-section
    interactionTarget=""
    isOpen={false}
    key="card_5"
    title={
      <FormattedMessage
        defaultMessage="Error"
        id="be.error"
      />
    }
  >
    <sidebar-skills-card
      card={
        Object {
          "entries": Array [],
          "skill_card_title": Object {
            "code": "skills_error",
          },
        }
      }
      cards={
        Array [
          Object {
            "entries": Array [
              Object {},
            ],
            "skill_card_title": Object {
              "code": "skills_faces",
            },
          },
          Object {
            "entries": Array [],
            "skill_card_title": Object {
              "code": "skills_transcript",
            },
          },
          Object {
            "entries": Array [],
            "skill_card_title": Object {
              "code": "skills_topics",
            },
          },
          Object {
            "entries": Array [
              Object {},
            ],
            "skill_card_title": Object {
              "code": "skills_status",
            },
          },
          Object {
            "entries": Array [],
            "skill_card_title": Object {
              "code": "skills_error",
            },
          },
          Object {
            "entries": Array [
              Object {},
            ],
            "skill_card_title": Object {
              "message": "title",
            },
          },
        ]
      }
      getViewer={[MockFunction]}
      hasError={false}
      isEditable={true}
      onSkillChange={[Function]}
    />
  </sidebar-section>
  <sidebar-section
    interactionTarget=""
    isOpen={true}
    key="card_6"
    title="title"
  >
    <sidebar-skills-card
      card={
        Object {
          "entries": Array [
            Object {},
          ],
          "skill_card_title": Object {
            "message": "title",
          },
        }
      }
      cards={
        Array [
          Object {
            "entries": Array [
              Object {},
            ],
            "skill_card_title": Object {
              "code": "skills_faces",
            },
          },
          Object {
            "entries": Array [],
            "skill_card_title": Object {
              "code": "skills_transcript",
            },
          },
          Object {
            "entries": Array [],
            "skill_card_title": Object {
              "code": "skills_topics",
            },
          },
          Object {
            "entries": Array [
              Object {},
            ],
            "skill_card_title": Object {
              "code": "skills_status",
            },
          },
          Object {
            "entries": Array [],
            "skill_card_title": Object {
              "code": "skills_error",
            },
          },
          Object {
            "entries": Array [
              Object {},
            ],
            "skill_card_title": Object {
              "message": "title",
            },
          },
        ]
      }
      getViewer={[MockFunction]}
      hasError={true}
      isEditable={true}
      onSkillChange={[Function]}
    />
  </sidebar-section>
</SidebarSkills>
`;
