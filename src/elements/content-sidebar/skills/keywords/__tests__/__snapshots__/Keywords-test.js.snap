// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`elements/content-sidebar/Skills/Keywords/Keywords should correctly render edit button when editable 1`] = `
<LoadingIndicatorWrapper
  className="be-keywords"
  isLoading={false}
>
  <Tooltip
    constrainToScrollParent={false}
    constrainToWindow={true}
    isDisabled={false}
    position="top-center"
    text={
      <FormattedMessage
        defaultMessage="Edit"
        id="be.editLabel"
      />
    }
    theme="default"
  >
    <PlainButton
      className="be-keyword-edit"
      data-resin-target="skill-keywordedit"
      onClick={[Function]}
      type="button"
    >
      <IconEdit />
    </PlainButton>
  </Tooltip>
  <ReadOnlyselecteds
    duration={100}
    keywords={
      Array [
        Object {
          "text": "foo",
        },
        Object {
          "text": "bar",
        },
      ]
    }
  />
</LoadingIndicatorWrapper>
`;

exports[`elements/content-sidebar/Skills/Keywords/Keywords should correctly render editable keywords when editable and editmode 1`] = `
<LoadingIndicatorWrapper
  className="be-keywords"
  isLoading={false}
>
  <Tooltip
    constrainToScrollParent={false}
    constrainToWindow={true}
    isDisabled={false}
    position="top-center"
    text={
      <FormattedMessage
        defaultMessage="Edit"
        id="be.editLabel"
      />
    }
    theme="default"
  >
    <PlainButton
      className="be-keyword-edit be-keyword-is-editing"
      data-resin-target="skill-keywordedit"
      onClick={[Function]}
      type="button"
    >
      <IconEdit />
    </PlainButton>
  </Tooltip>
  <EditableKeywords
    keywords={
      Array [
        Object {
          "text": "foo",
        },
        Object {
          "text": "bar",
        },
      ]
    }
    onAdd={[Function]}
    onCancel={[Function]}
    onDelete={[Function]}
    onSave={[Function]}
  />
</LoadingIndicatorWrapper>
`;

exports[`elements/content-sidebar/Skills/Keywords/Keywords should correctly render error mask when no keywords 1`] = `
<LoadingIndicatorWrapper
  className="be-keywords"
  isLoading={false}
>
  <FormattedMessage
    defaultMessage="Weâ€™re sorry, no skills information was found."
    id="be.skillNoInfoFoundError"
  />
</LoadingIndicatorWrapper>
`;

exports[`elements/content-sidebar/Skills/Keywords/Keywords should correctly render keywords which are added but not the ones removed 1`] = `
<LoadingIndicatorWrapper
  className="be-keywords"
  isLoading={false}
>
  <ReadOnlyselecteds
    duration={100}
    keywords={
      Array [
        Object {
          "text": "bar",
        },
        Object {
          "text": "baz",
        },
      ]
    }
  />
</LoadingIndicatorWrapper>
`;

exports[`elements/content-sidebar/Skills/Keywords/Keywords should correctly render read only keywords when not editable 1`] = `
<LoadingIndicatorWrapper
  className="be-keywords"
  isLoading={false}
>
  <ReadOnlyselecteds
    duration={100}
    keywords={
      Array [
        Object {
          "text": "foo",
        },
        Object {
          "text": "bar",
        },
      ]
    }
  />
</LoadingIndicatorWrapper>
`;

exports[`elements/content-sidebar/Skills/Keywords/Keywords should correctly render when isLoading is true 1`] = `
<LoadingIndicatorWrapper
  className="be-keywords"
  isLoading={true}
>
  <ReadOnlyselecteds
    duration={100}
    keywords={
      Array [
        Object {
          "text": "foo",
        },
        Object {
          "text": "bar",
        },
      ]
    }
  />
</LoadingIndicatorWrapper>
`;
