// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components/content-sidebar/activity-feed/task-form/TaskError when type is APPROVAL and edit mode is CREATE, with error obj { status: 403 }, we show the proper inline error 1`] = `
<TaskError
  editMode="CREATE"
  error={
    Object {
      "status": 403,
    }
  }
  taskType="APPROVAL"
>
  <div />
</TaskError>
`;

exports[`components/content-sidebar/activity-feed/task-form/TaskError when type is APPROVAL and edit mode is CREATE, with error obj { status: 404 }, we show the proper inline error 1`] = `
<TaskError
  editMode="CREATE"
  error={
    Object {
      "status": 404,
    }
  }
  taskType="APPROVAL"
>
  <div />
</TaskError>
`;

exports[`components/content-sidebar/activity-feed/task-form/TaskError when type is APPROVAL and edit mode is CREATE, with error obj undefined, we show the proper inline error 1`] = `
<TaskError
  editMode="CREATE"
  taskType="APPROVAL"
/>
`;

exports[`components/content-sidebar/activity-feed/task-form/TaskError when type is APPROVAL and edit mode is EDIT, with error obj { status: 403 }, we show the proper inline error 1`] = `
<TaskError
  editMode="EDIT"
  error={
    Object {
      "status": 403,
    }
  }
  taskType="APPROVAL"
>
  <div>
    <InlineNotice
      title={
        <FormattedMessage
          defaultMessage="Task Updated with Errors"
          id="be.contentSidebar.activityFeed.taskForm.taskEditWarningTitle"
        />
      }
      type="error"
    >
      <div
        className="inline-alert inline-alert-visible inline-alert-error"
      >
        <strong>
          <FormattedMessage
            defaultMessage="Task Updated with Errors"
            id="be.contentSidebar.activityFeed.taskForm.taskEditWarningTitle"
          >
            <div />
          </FormattedMessage>
        </strong>
        <div>
          <FormattedMessage
            defaultMessage="Unable to remove assignee(s) because the task is now approved."
            id="be.contentSidebar.activityFeed.taskForm.taskApprovalAssigneeRemovalWarningMessage"
          >
            <div />
          </FormattedMessage>
        </div>
      </div>
    </InlineNotice>
  </div>
</TaskError>
`;

exports[`components/content-sidebar/activity-feed/task-form/TaskError when type is APPROVAL and edit mode is EDIT, with error obj { status: 404 }, we show the proper inline error 1`] = `
<TaskError
  editMode="EDIT"
  error={
    Object {
      "status": 404,
    }
  }
  taskType="APPROVAL"
>
  <div />
</TaskError>
`;

exports[`components/content-sidebar/activity-feed/task-form/TaskError when type is APPROVAL and edit mode is EDIT, with error obj undefined, we show the proper inline error 1`] = `
<TaskError
  editMode="EDIT"
  taskType="APPROVAL"
/>
`;

exports[`components/content-sidebar/activity-feed/task-form/TaskError when type is GENERAL and edit mode is CREATE, with error obj { code: 'group_exceeds_limit' }, we show the proper inline error 1`] = `
<TaskError
  editMode="CREATE"
  error={
    Object {
      "code": "group_exceeds_limit",
    }
  }
  taskType="GENERAL"
>
  <div>
    <InlineNotice
      title={
        <FormattedMessage
          defaultMessage="Exceeded max assignees per group"
          id="be.contentSidebar.activityFeed.taskForm.taskGroupExceedsWarningTitle"
        />
      }
      type="warning"
    >
      <div
        className="inline-alert inline-alert-visible inline-alert-warning"
      >
        <strong>
          <FormattedMessage
            defaultMessage="Exceeded max assignees per group"
            id="be.contentSidebar.activityFeed.taskForm.taskGroupExceedsWarningTitle"
          >
            <div />
          </FormattedMessage>
        </strong>
        <div>
          <FormattedMessage
            defaultMessage="One or more groups did not receive this task as the group size exceeded the task limit of 250 assignees per group."
            id="be.api.taskGroupExceedsWarningTitle"
          >
            <div />
          </FormattedMessage>
        </div>
      </div>
    </InlineNotice>
  </div>
</TaskError>
`;

exports[`components/content-sidebar/activity-feed/task-form/TaskError when type is GENERAL and edit mode is CREATE, with error obj { status: 403 }, we show the proper inline error 1`] = `
<TaskError
  editMode="CREATE"
  error={
    Object {
      "status": 403,
    }
  }
  taskType="GENERAL"
>
  <div />
</TaskError>
`;

exports[`components/content-sidebar/activity-feed/task-form/TaskError when type is GENERAL and edit mode is CREATE, with error obj { status: 404 }, we show the proper inline error 1`] = `
<TaskError
  editMode="CREATE"
  error={
    Object {
      "status": 404,
    }
  }
  taskType="GENERAL"
>
  <div />
</TaskError>
`;

exports[`components/content-sidebar/activity-feed/task-form/TaskError when type is GENERAL and edit mode is CREATE, with error obj undefined, we show the proper inline error 1`] = `
<TaskError
  editMode="CREATE"
  taskType="GENERAL"
/>
`;

exports[`components/content-sidebar/activity-feed/task-form/TaskError when type is GENERAL and edit mode is EDIT, with error obj { status: 403 }, we show the proper inline error 1`] = `
<TaskError
  editMode="EDIT"
  error={
    Object {
      "status": 403,
    }
  }
  taskType="GENERAL"
>
  <div>
    <InlineNotice
      title={
        <FormattedMessage
          defaultMessage="Task Updated with Errors"
          id="be.contentSidebar.activityFeed.taskForm.taskEditWarningTitle"
        />
      }
      type="error"
    >
      <div
        className="inline-alert inline-alert-visible inline-alert-error"
      >
        <strong>
          <FormattedMessage
            defaultMessage="Task Updated with Errors"
            id="be.contentSidebar.activityFeed.taskForm.taskEditWarningTitle"
          >
            <div />
          </FormattedMessage>
        </strong>
        <div>
          <FormattedMessage
            defaultMessage="Unable to remove assignee(s) because the task is now completed."
            id="be.contentSidebar.activityFeed.taskForm.taskGeneralAssigneeRemovalWarningMessage"
          >
            <div />
          </FormattedMessage>
        </div>
      </div>
    </InlineNotice>
  </div>
</TaskError>
`;

exports[`components/content-sidebar/activity-feed/task-form/TaskError when type is GENERAL and edit mode is EDIT, with error obj { status: 404 }, we show the proper inline error 1`] = `
<TaskError
  editMode="EDIT"
  error={
    Object {
      "status": 404,
    }
  }
  taskType="GENERAL"
>
  <div />
</TaskError>
`;

exports[`components/content-sidebar/activity-feed/task-form/TaskError when type is GENERAL and edit mode is EDIT, with error obj undefined, we show the proper inline error 1`] = `
<TaskError
  editMode="EDIT"
  taskType="GENERAL"
/>
`;
