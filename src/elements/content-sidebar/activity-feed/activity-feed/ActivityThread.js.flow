/**
 * Flowtype definitions for ActivityThread
 * Generated by Flowgen from a Typescript Definition
 */

import * as React from 'react';
import { Comment, CommentFeedItemType } from '../../../../common/types/feed';
import { SelectorItems, User } from '../../../../common/types/core';
import { GetAvatarUrlCallback, GetProfileUrlCallback } from '../../../common/flowTypes';

declare export type Props = {
    children: React.Node,
    currentUser?: User,
    getAvatarUrl: GetAvatarUrlCallback,
    getMentionWithQuery?: Function,
    getUserProfileUrl?: GetProfileUrlCallback,
    hasNewThreadedReplies?: boolean,
    hasReplies?: boolean,
    isPending?: boolean,
    isRepliesLoading?: boolean,
    mentionSelectorContacts?: SelectorItems<>,
    onHideReplies?: (lastReply: Comment) => void,
    onReplyCreate?: (text: string) => void,
    onReplyDelete?: ({ id: string, permissions: BoxCommentPermission }) => void,
    onReplyEdit?: (
        id: string,
        text: string,
        status?: FeedItemStatus,
        hasMention?: boolean,
        permissions: BoxCommentPermission,
        onSuccess: ?Function,
        onError: ?Function,
    ) => void,
    onReplySelect?: (id: string | null) => void,
    onShowReplies?: () => void,
    repliesTotalCount?: number,
    replies?: Array<Comment>,
    translations?: Object,
};

declare export default React.ComponentType<Props>;
