// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`elements/content-sidebar/ActivityFeed/task/Task should correctly render task 1`] = `
<div
  className="bcs-task"
  data-testid="task-card"
>
  <mock-comment
    created_at={12345678}
    created_by={
      Object {
        "id": 1,
        "name": "Jake Thomas",
      }
    }
    currentUser={
      Object {
        "id": 1,
        "name": "Jake Thomas",
      }
    }
    id="123125"
    inlineDeleteMessage={
      Object {
        "defaultMessage": "Are you sure you want to permanently delete this task?",
        "id": "be.taskDeletePrompt",
      }
    }
    onDelete={[MockFunction]}
    onEdit={[MockFunction]}
    permissions={
      Object {
        "can_delete": true,
        "can_edit": true,
      }
    }
    tagged_message="Do it! Do it! Do it! Do it! Do it! Do it! Do it! Do it! ."
    type="task"
  />
  <div
    className="bcs-task-approvers-container"
  >
    <div
      className="bcs-task-approvers-header"
    >
      <strong>
        <FormattedMessage
          defaultMessage="Tasks"
          id="be.tasksForApproval"
        />
      </strong>
      <span
        className="bcs-task-due-date"
      >
        <FormattedMessage
          defaultMessage="Due"
          id="be.taskDueDate"
        />
        <FormattedDate
          day="numeric"
          month="long"
          value={87654321}
          year="numeric"
        />
      </span>
    </div>
    <div
      className="bcs-task-assignees"
    >
      <PendingAssignment
        id={1}
        key="1"
        name="Jake Thomas"
        onTaskApproval={[Function]}
        onTaskReject={[Function]}
        shouldShowActions={false}
      />
      <CompletedAssignment
        id={2}
        key="2"
        name="Peter Pan"
      />
    </div>
  </div>
</div>
`;

exports[`elements/content-sidebar/ActivityFeed/task/Task should not render due date when not passed in 1`] = `
<div
  className="bcs-task"
  data-testid="task-card"
>
  <mock-comment
    created_at={12345678}
    created_by={
      Object {
        "id": 1,
        "name": "Jake Thomas",
      }
    }
    currentUser={
      Object {
        "id": 1,
        "name": "Jake Thomas",
      }
    }
    id="123125"
    inlineDeleteMessage={
      Object {
        "defaultMessage": "Are you sure you want to permanently delete this task?",
        "id": "be.taskDeletePrompt",
      }
    }
    isPending={false}
    permissions={
      Object {
        "can_delete": true,
        "can_edit": true,
      }
    }
    tagged_message="Do it! Do it! Do it! Do it! Do it! Do it! Do it! Do it! ."
    type="task"
  />
  <div
    className="bcs-task-approvers-container"
  >
    <div
      className="bcs-task-approvers-header"
    >
      <strong>
        <FormattedMessage
          defaultMessage="Tasks"
          id="be.tasksForApproval"
        />
      </strong>
    </div>
    <div
      className="bcs-task-assignees"
    >
      <PendingAssignment
        id={1}
        key="1"
        name="Jake Thomas"
        onTaskApproval={[Function]}
        onTaskReject={[Function]}
        shouldShowActions={false}
      />
      <CompletedAssignment
        id={2}
        key="2"
        name="Peter Pan"
      />
    </div>
  </div>
</div>
`;

exports[`elements/content-sidebar/ActivityFeed/task/Task should show actions for current user and if onAssignmentUpdate is defined 1`] = `
<div
  className="bcs-task"
  data-testid="task-card"
>
  <mock-comment
    created_at={12345678}
    created_by={
      Object {
        "id": 1,
        "name": "Jake Thomas",
      }
    }
    currentUser={
      Object {
        "id": 1,
        "name": "Jake Thomas",
      }
    }
    id="123125"
    inlineDeleteMessage={
      Object {
        "defaultMessage": "Are you sure you want to permanently delete this task?",
        "id": "be.taskDeletePrompt",
      }
    }
    isPending={false}
    permissions={
      Object {
        "can_delete": true,
        "can_edit": true,
      }
    }
    tagged_message="Do it! Do it! Do it! Do it! Do it! Do it! Do it! Do it! ."
    type="task"
  />
  <div
    className="bcs-task-approvers-container"
  >
    <div
      className="bcs-task-approvers-header"
    >
      <strong>
        <FormattedMessage
          defaultMessage="Tasks"
          id="be.tasksForApproval"
        />
      </strong>
      <span
        className="bcs-task-due-date"
      >
        <FormattedMessage
          defaultMessage="Due"
          id="be.taskDueDate"
        />
        <FormattedDate
          day="numeric"
          month="long"
          value={87654321}
          year="numeric"
        />
      </span>
    </div>
    <div
      className="bcs-task-assignees"
    >
      <PendingAssignment
        id={1}
        key="1"
        name="Jake Thomas"
        onTaskApproval={[Function]}
        onTaskReject={[Function]}
        shouldShowActions={true}
      />
      <CompletedAssignment
        id={2}
        key="2"
        name="Peter Pan"
      />
    </div>
  </div>
</div>
`;

exports[`elements/content-sidebar/ActivityFeed/task/Task should show tooltips when actions are shown 1`] = `
<div
  className="bcs-task-pending-assignment"
>
  <div
    className="bcs-task-assignment-name"
  >
    Jake Thomas
  </div>
  <div
    className="bcs-task-assignment-actions"
  >
    <Tooltip
      constrainToScrollParent={false}
      constrainToWindow={true}
      isDisabled={false}
      position="bottom-center"
      text={
        <FormattedMessage
          defaultMessage="Complete"
          id="be.taskApprove"
        />
      }
      theme="default"
    >
      <PlainButton
        className="bcs-task-check-btn"
        data-resin-target="activityfeed-taskapprove"
        onClick={[Function]}
      >
        <IconCheck
          className="bcs-task-check-icon"
          height={18}
          width={18}
        />
      </PlainButton>
    </Tooltip>
    <Tooltip
      constrainToScrollParent={false}
      constrainToWindow={true}
      isDisabled={false}
      position="bottom-center"
      text={
        <FormattedMessage
          defaultMessage="Decline"
          id="be.taskReject"
        />
      }
      theme="default"
    >
      <PlainButton
        className="bcs-task-x-btn"
        data-resin-target="activityfeed-taskreject"
        onClick={[Function]}
      >
        <IconClose
          className="bcs-task-x-icon"
          height={18}
          width={18}
        />
      </PlainButton>
    </Tooltip>
  </div>
</div>
`;
