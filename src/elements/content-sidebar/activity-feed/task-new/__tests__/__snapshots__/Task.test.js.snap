// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`elements/content-sidebar/ActivityFeed/task-new/Task should correctly render task 1`] = `
<ForwardRef(ActivityCard)
  className="bcs-Task"
  data-resin-feature="tasks"
  data-resin-numassignees={2}
  data-resin-taskid="123125"
  data-resin-tasktype="GENERAL"
>
  <Media
    className="bcs-Task-media"
    data-testid="task-card"
  >
    <MediaFigure
      className="bcs-Task-avatar"
    >
      <Avatar
        user={
          Object {
            "id": "5",
            "name": "Steven Yang",
            "type": "user",
          }
        }
      />
      <IconTaskGeneral
        className="bcs-Task-avatarBadge"
        height={20}
        width={20}
      />
    </MediaFigure>
    <MediaBody>
      <TetherComponent
        attachment="top right"
        className="bcs-Task-deleteConfirmationModal"
        constraints={
          Array [
            Object {
              "attachment": "together",
              "to": "scrollParent",
            },
          ]
        }
        renderElementTag="div"
        renderElementTo={null}
        targetAttachment="bottom right"
      >
        <MediaMenu
          data-testid="task-actions-menu"
          isDisabled={false}
          menuProps={
            Object {
              "data-resin-component": "activityfeedtask",
            }
          }
        >
          <MenuItem
            data-resin-target="activityfeed-task-edit"
            data-testid="edit-task"
            onClick={[Function]}
          >
            <IconPencil
              color="#4e4e4e"
            />
            <FormattedMessage
              defaultMessage="Modify task"
              id="be.contentSidebar.activityFeed.task.taskEditMenuItem"
            />
          </MenuItem>
          <MenuItem
            data-resin-target="activityfeed-task-delete"
            data-testid="delete-task"
            onClick={[Function]}
          >
            <IconTrash
              color="#4e4e4e"
            />
            <FormattedMessage
              defaultMessage="Delete task"
              id="be.contentSidebar.activityFeed.task.taskDeleteMenuItem"
            />
          </MenuItem>
        </MediaMenu>
      </TetherComponent>
      <div
        className="bcs-Task-headline"
      >
        <UserLink
          data-resin-target="activityfeed-profilelink"
          id="5"
          name="Steven Yang"
          type="user"
        />
      </div>
      <div>
        <ActivityTimestamp
          date={1262304000000}
        />
      </div>
      <div
        className="bcs-Task-status"
      >
        <Memo()
          status="NOT_STARTED"
        />
        <TaskMultiFileIcon
          isMultiFile={false}
        />
        <TaskCompletionRuleIcon
          completionRule="ALL_ASSIGNEES"
        />
      </div>
      <div
        className="bcs-Task-dueDate"
      />
      <div>
        <ActivityMessage
          id="123125"
          tagged_message="This is where we tell each other what we need to do"
          translationEnabled={false}
          translationFailed={null}
        />
      </div>
      <div
        className="bcs-Task-assigneeListContainer"
      >
        <AssigneeList
          initialAssigneeCount={3}
          isOpen={false}
          onCollapse={[Function]}
          onExpand={[Function]}
          users={
            Object {
              "entries": Array [
                Object {
                  "id": "current-user-assignment-id",
                  "permissions": Object {
                    "can_delete": true,
                    "can_update": true,
                  },
                  "role": "ASSIGNEE",
                  "status": "NOT_STARTED",
                  "target": Object {
                    "id": "1",
                    "name": "Jake Thomas",
                    "type": "user",
                  },
                  "type": "task_collaborator",
                },
                Object {
                  "id": "other-user-assignment-id",
                  "permissions": Object {
                    "can_delete": true,
                    "can_update": true,
                  },
                  "role": "ASSIGNEE",
                  "status": "COMPLETED",
                  "target": Object {
                    "id": "3",
                    "name": "Patrick Paul",
                    "type": "user",
                  },
                  "type": "task_collaborator",
                },
              ],
              "limit": 10,
              "next_marker": null,
            }
          }
        />
      </div>
      <div
        className="bcs-Task-actionsContainer"
        data-testid="action-container"
      >
        <TaskActions
          isMultiFile={false}
          onTaskApproval={[Function]}
          onTaskComplete={[Function]}
          onTaskReject={[Function]}
          taskType="GENERAL"
        />
      </div>
    </MediaBody>
  </Media>
  <TaskModal
    editMode="EDIT"
    feedbackUrl=""
    isTaskFormOpen={false}
    onModalClose={[Function]}
    onSubmitError={[Function]}
    onSubmitSuccess={[Function]}
    taskFormProps={
      Object {
        "approverSelectorContacts": undefined,
        "approvers": Array [
          Object {
            "id": "current-user-assignment-id",
            "permissions": Object {
              "can_delete": true,
              "can_update": true,
            },
            "role": "ASSIGNEE",
            "status": "NOT_STARTED",
            "target": Object {
              "id": "1",
              "name": "Jake Thomas",
              "type": "user",
            },
            "type": "task_collaborator",
          },
          Object {
            "id": "other-user-assignment-id",
            "permissions": Object {
              "can_delete": true,
              "can_update": true,
            },
            "role": "ASSIGNEE",
            "status": "COMPLETED",
            "target": Object {
              "id": "3",
              "name": "Patrick Paul",
              "type": "user",
            },
            "type": "task_collaborator",
          },
        ],
        "completionRule": "ALL_ASSIGNEES",
        "createTask": [Function],
        "dueDate": null,
        "editTask": [MockFunction],
        "getApproverWithQuery": undefined,
        "getAvatarUrl": undefined,
        "id": "123125",
        "message": "This is where we tell each other what we need to do",
      }
    }
    taskType="GENERAL"
  />
</ForwardRef(ActivityCard)>
`;
