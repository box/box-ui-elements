// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`features/query-bar/components/filter/Condition render() should render Condition 1`] = `
<div
  className="condition-container"
>
  <div
    className="condition-delete-button"
  >
    <button
      className="delete-button"
      onClick={[Function]}
      type="button"
    >
      <IconClose
        color="#999EA4"
        height={18}
        width={18}
      />
    </button>
  </div>
  <div
    className="condition-connector"
  >
    <p
      className="condition-connector-text"
    >
      <FormattedMessage
        defaultMessage="WHERE"
        id="boxui.queryBar.connectorWhereText"
      />
    </p>
  </div>
  <div
    className="condition-column-dropdown-container"
  >
    <div
      className="filter-dropdown-single-select-field-container"
    >
      <SingleSelectField
        fieldType="column"
        isDisabled={false}
        onChange={[Function]}
        options={
          Array [
            Object {
              "displayText": "Hullo Thar",
              "type": "string",
              "value": "Hullo Thar",
            },
            Object {
              "displayText": "Last Updated",
              "type": "string",
              "value": "Last Updated",
            },
            Object {
              "displayText": "Contract Value",
              "type": "enum",
              "value": "Contract Value",
            },
          ]
        }
        selectedValue="Contract Value"
      />
    </div>
  </div>
  <div
    className="condition-operator-dropdown-container"
  >
    <div
      className="filter-dropdown-single-select-field-container"
    >
      <SingleSelectField
        fieldType="operator"
        isDisabled={false}
        onChange={[Function]}
        options={
          Array [
            Object {
              "displayText": "is",
              "type": "string",
              "value": "is",
            },
          ]
        }
        selectedValue="is"
      />
    </div>
  </div>
  <div
    className="condition-value-dropdown-container"
  >
    <ValueField
      selectedValue=""
      updateSelectedField={[Function]}
      updateValueField={[Function]}
      valueKey={null}
      valueOptions={
        Array [
          Object {
            "displayText": "$100",
            "type": "enum",
            "value": "$100",
          },
        ]
      }
      valueType="string"
    />
  </div>
</div>
`;
