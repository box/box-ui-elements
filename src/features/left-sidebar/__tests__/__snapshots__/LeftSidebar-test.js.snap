// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`feature/left-sidebar/LeftSidebar should not render nested menu items with missing properties passed 1`] = `
<NavSidebar
  className="left-sidebar "
>
  <div
    className="left-sidebar-container"
  >
    <NavList
      className="left-sidebar-list"
      heading={
        <React.Fragment>
          <LeftSidebarLink
            className="left-sidebar-link"
            htmlAttributes={
              Object {
                "href": "/folder/0",
              }
            }
            icon={null}
            isScrolling={false}
            message="All Files"
            newItemBadge={null}
            selected={false}
            showTooltip={true}
          />
        </React.Fragment>
      }
      key="list-all-files"
      placeholder={null}
      ulProps={Object {}}
    >
      <LeftSidebarLink
        className="left-sidebar-link"
        htmlAttributes={
          Object {
            "href": "/recents",
          }
        }
        icon={null}
        isScrolling={false}
        message="Recents"
        newItemBadge={null}
        selected={false}
        showTooltip={true}
      />
    </NavList>
  </div>
  <CopyrightLink />
</NavSidebar>
`;

exports[`feature/left-sidebar/LeftSidebar should pass badge elements appropriately based on properties 1`] = `
<NavSidebar
  className="left-sidebar "
>
  <div
    className="left-sidebar-container"
  >
    <LeftSidebarLink
      className="left-sidebar-link"
      htmlAttributes={
        Object {
          "href": "/folder/0",
        }
      }
      icon={null}
      isScrolling={false}
      message="All Files"
      newItemBadge={<NewItemsIndicator />}
      selected={false}
      showTooltip={true}
    />
  </div>
  <CopyrightLink />
</NavSidebar>
`;

exports[`feature/left-sidebar/LeftSidebar should pass icon components appropriately based on properties 1`] = `
<NavSidebar
  className="left-sidebar "
>
  <div
    className="left-sidebar-container"
  >
    <LeftSidebarLink
      className="left-sidebar-link"
      htmlAttributes={
        Object {
          "href": "/folder/0",
        }
      }
      icon={
        <LeftSidebarIconWrapper
          className=""
        >
          <iconExampleComponent
            color="#0061d5"
            selected={false}
          />
        </LeftSidebarIconWrapper>
      }
      isScrolling={false}
      message="All Files"
      newItemBadge={<NewItemsIndicator />}
      selected={false}
      showTooltip={true}
    />
  </div>
  <CopyrightLink />
</NavSidebar>
`;

exports[`feature/left-sidebar/LeftSidebar should pass icon elements appropriately based on properties 1`] = `
<NavSidebar
  className="left-sidebar "
>
  <div
    className="left-sidebar-container"
  >
    <LeftSidebarLink
      className="left-sidebar-link"
      htmlAttributes={
        Object {
          "href": "/folder/0",
        }
      }
      icon={
        <LeftSidebarIconWrapper
          className=""
        >
          <div
            id="this-is-icon"
          />
        </LeftSidebarIconWrapper>
      }
      isScrolling={false}
      message="All Files"
      newItemBadge={<NewItemsIndicator />}
      selected={false}
      showTooltip={true}
    />
  </div>
  <CopyrightLink />
</NavSidebar>
`;

exports[`feature/left-sidebar/LeftSidebar should pass in custom sidebar properties as needed 1`] = `
<NavSidebar
  className="left-sidebar "
  data-resin-component="leftnav"
>
  <div
    className="left-sidebar-container"
  >
    <LeftSidebarLink
      className="left-sidebar-link is-selected"
      customTheme={
        Object {
          "contrastColor": "#123",
          "isLight": "yes",
          "primaryColorDark": "#123",
          "primaryColorDarker": "#123",
          "primaryColorLight": "#f0f0f0",
          "primaryColorLighter": "#123",
          "secondaryColor": "#123",
        }
      }
      htmlAttributes={
        Object {
          "href": "/folder/0",
        }
      }
      icon={null}
      isScrolling={false}
      message="All Files"
      newItemBadge={null}
      selected={true}
      showTooltip={true}
    />
  </div>
  <CopyrightLink
    linkProps={
      Object {
        "htmlAttributes": Object {
          "href": "/test-url",
        },
      }
    }
  />
</NavSidebar>
`;

exports[`feature/left-sidebar/LeftSidebar should render FooterIndicator if indicatorText is set 1`] = `
<NavSidebar
  className="left-sidebar "
>
  <div
    className="left-sidebar-container"
  />
  <CopyrightLink />
  <FooterIndicator
    indicatorText="abcde"
  />
</NavSidebar>
`;

exports[`feature/left-sidebar/LeftSidebar should render collapsible nested menu items with appropriate properties passed 1`] = `
<NavSidebar
  className="left-sidebar "
>
  <div
    className="left-sidebar-container"
  >
    <LoadingIndicatorWrapper
      className="favorites-loading-wrapper"
      crawlerPosition="top"
      key="loading-indicator-0"
    >
      <NavList
        className="left-sidebar-list"
        heading={
          <NavListCollapseHeader
            onToggleCollapse={[Function]}
          >
            <React.Fragment>
              <LeftSidebarLink
                className="left-sidebar-link"
                htmlAttributes={
                  Object {
                    "href": "/folder/0",
                  }
                }
                icon={null}
                isScrolling={false}
                message="All Files"
                newItemBadge={null}
                selected={false}
                showTooltip={true}
              />
            </React.Fragment>
          </NavListCollapseHeader>
        }
        key="list-all-files"
        placeholder={null}
        ulProps={
          Object {
            "onScroll": [Function],
            "ref": [Function],
          }
        }
      >
        <LeftSidebarLink
          className="left-sidebar-link"
          htmlAttributes={
            Object {
              "href": "/recents",
            }
          }
          icon={null}
          isScrolling={false}
          message="Recents"
          newItemBadge={null}
          selected={false}
          showTooltip={true}
        />
      </NavList>
    </LoadingIndicatorWrapper>
  </div>
  <CopyrightLink />
</NavSidebar>
`;

exports[`feature/left-sidebar/LeftSidebar should render instant login component 1`] = `
<NavSidebar
  className="left-sidebar "
>
  <InstantLogin
    hrefAttributes={
      Object {
        "href": "/master",
      }
    }
    message="message"
    showTooltip={false}
  />
  <div
    className="left-sidebar-container"
  >
    <LeftSidebarLink
      className="left-sidebar-link"
      htmlAttributes={
        Object {
          "href": "/folder/0",
        }
      }
      icon={null}
      isScrolling={false}
      message="All Files"
      newItemBadge={null}
      selected={false}
      showTooltip={true}
    />
  </div>
  <CopyrightLink />
</NavSidebar>
`;

exports[`feature/left-sidebar/LeftSidebar should render non-collapsible nested menu items with appropriate properties passed 1`] = `
<NavSidebar
  className="left-sidebar "
>
  <div
    className="left-sidebar-container"
  >
    <NavList
      className="left-sidebar-list"
      heading={
        <React.Fragment>
          <LeftSidebarLink
            className="left-sidebar-link"
            htmlAttributes={
              Object {
                "href": "/folder/0",
              }
            }
            icon={null}
            isScrolling={false}
            message="All Files"
            newItemBadge={null}
            selected={false}
            showTooltip={true}
          />
        </React.Fragment>
      }
      key="list-all-files"
      placeholder={null}
      ulProps={Object {}}
    >
      <LeftSidebarLink
        className="left-sidebar-link"
        htmlAttributes={
          Object {
            "href": "/recents",
          }
        }
        icon={null}
        isScrolling={false}
        message="Recents"
        newItemBadge={null}
        selected={false}
        showTooltip={true}
      />
    </NavList>
  </div>
  <CopyrightLink />
</NavSidebar>
`;

exports[`feature/left-sidebar/LeftSidebar should render one menu item with appropriate properties passed 1`] = `
<NavSidebar
  className="left-sidebar "
>
  <div
    className="left-sidebar-container"
  >
    <LeftSidebarLink
      className="left-sidebar-link"
      htmlAttributes={
        Object {
          "href": "/folder/0",
        }
      }
      icon={null}
      isScrolling={false}
      message="All Files"
      newItemBadge={null}
      selected={false}
      showTooltip={true}
    />
  </div>
  <CopyrightLink />
</NavSidebar>
`;

exports[`feature/left-sidebar/LeftSidebar should render placeholder inside nested menu items with appropriate properties passed 1`] = `
<NavSidebar
  className="left-sidebar "
>
  <div
    className="left-sidebar-container"
  >
    <LoadingIndicatorWrapper
      className="favorites-loading-wrapper"
      crawlerPosition="top"
      key="loading-indicator-0"
    >
      <NavList
        className="left-sidebar-list"
        heading={
          <NavListCollapseHeader
            onToggleCollapse={[Function]}
          >
            <React.Fragment>
              <LeftSidebarLink
                className="left-sidebar-link"
                htmlAttributes={
                  Object {
                    "href": "/folder/0",
                  }
                }
                icon={null}
                isScrolling={false}
                message="All Files"
                newItemBadge={null}
                selected={false}
                showTooltip={true}
              />
            </React.Fragment>
          </NavListCollapseHeader>
        }
        key="list-all-files"
        placeholder={
          <div
            className="placeholder"
          >
            This is a simple placeholder text
          </div>
        }
        ulProps={
          Object {
            "onScroll": [Function],
            "ref": [Function],
          }
        }
      />
    </LoadingIndicatorWrapper>
  </div>
  <CopyrightLink />
</NavSidebar>
`;

exports[`feature/left-sidebar/LeftSidebar should render with default properties intact 1`] = `
<NavSidebar
  className="left-sidebar "
>
  <div
    className="left-sidebar-container"
  />
  <CopyrightLink />
</NavSidebar>
`;
