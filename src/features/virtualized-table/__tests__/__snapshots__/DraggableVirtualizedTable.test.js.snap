// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`features/virtualized-table/DraggableVirtualizedTable should render a DraggableVirtualizedTable 1`] = `
<DragDropContext
  onDragEnd={[Function]}
>
  <Connect(Droppable)
    direction="vertical"
    droppableId="tableId"
    ignoreContainerClipping={false}
    isDropDisabled={false}
    type="DEFAULT"
  >
    <Component />
  </Connect(Droppable)>
</DragDropContext>
`;

exports[`features/virtualized-table/DraggableVirtualizedTable should render a DraggableVirtualizedTable 2`] = `
<div>
  <VirtualizedTable
    className="bdl-DraggableVirtualizedTable"
    rowData={
      Array [
        Object {
          "description": "description1",
          "name": "name1",
        },
        Object {
          "description": "description2",
          "name": "name2",
        },
        Object {
          "description": "description3",
          "name": "name3",
        },
      ]
    }
    rowRenderer={[Function]}
  >
    <Column
      cellDataGetter={[Function]}
      cellRenderer={[Function]}
      className="bdl-DraggableVirtualizedTable-dragHandleColumn"
      dataKey="dragHandle"
      defaultSortDirection="ASC"
      disableSort={true}
      flexGrow={0}
      flexShrink={1}
      headerClassName="bdl-DraggableVirtualizedTable-dragHandleColumn"
      headerRenderer={[Function]}
      style={Object {}}
      width={24}
    />
    <Column
      cellDataGetter={[Function]}
      cellRenderer={[Function]}
      dataKey="name"
      defaultSortDirection="ASC"
      flexGrow={0}
      flexShrink={1}
      headerRenderer={[Function]}
      label="Name"
      style={Object {}}
      width={100}
    />
    <Column
      cellDataGetter={[Function]}
      cellRenderer={[Function]}
      dataKey="description"
      defaultSortDirection="ASC"
      flexGrow={0}
      flexShrink={1}
      headerRenderer={[Function]}
      label="Description"
      style={Object {}}
      width={100}
    />
  </VirtualizedTable>
</div>
`;

exports[`features/virtualized-table/DraggableVirtualizedTable should render a drag icon when drag handle cell renderer is called 1`] = `
<IconDrag
  color="#000"
  height={24}
  width={24}
/>
`;
