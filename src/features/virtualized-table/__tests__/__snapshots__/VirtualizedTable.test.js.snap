// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`features/virtualized-table/VirtualizedTable should successfully render a VirtualizedTable 1`] = `
<VirtualizedTable
  intl={
    {
      "formatDate": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatRelativeTime": [Function],
    }
  }
  rowData={
    [
      {
        "description": "description1",
        "name": "name1",
      },
      {
        "description": "description2",
        "name": "name2",
      },
      {
        "description": "description3",
        "name": "name3",
      },
    ]
  }
>
  <Column
    cellDataGetter={[Function]}
    cellRenderer={[Function]}
    dataKey="name"
    defaultSortDirection="ASC"
    flexGrow={0}
    flexShrink={1}
    headerRenderer={[Function]}
    headerRole="columnheader"
    label="Name"
    role="gridcell"
    style={{}}
    width={100}
  />
  <Column
    cellDataGetter={[Function]}
    cellRenderer={[Function]}
    dataKey="description"
    defaultSortDirection="ASC"
    flexGrow={0}
    flexShrink={1}
    headerRenderer={[Function]}
    headerRole="columnheader"
    label="Description"
    role="gridcell"
    style={{}}
    width={100}
  />
</VirtualizedTable>
`;

exports[`features/virtualized-table/VirtualizedTable should successfully render a VirtualizedTable 2`] = `
<AutoSizer
  disableHeight={true}
  disableWidth={false}
  onResize={[Function]}
  style={{}}
>
  <Component />
</AutoSizer>
`;

exports[`features/virtualized-table/VirtualizedTable should successfully render a VirtualizedTable 3`] = `
<WindowScroller
  onResize={[Function]}
  onScroll={[Function]}
  scrollElement={[Window]}
  scrollingResetTimeInterval={150}
  serverHeight={0}
  serverWidth={0}
>
  <Component />
</WindowScroller>
`;

exports[`features/virtualized-table/VirtualizedTable should successfully render a VirtualizedTable 4`] = `
<Table
  autoHeight={true}
  className="bdl-VirtualizedTable"
  disableHeader={false}
  estimatedRowSize={30}
  gridContainerRole=""
  headerHeight={39}
  headerRowRenderer={[Function]}
  headerStyle={{}}
  height={768}
  isScrolling={false}
  noRowsRenderer={[Function]}
  onRowsRendered={[Function]}
  onScroll={[Function]}
  overscanIndicesGetter={[Function]}
  overscanRowCount={10}
  role="grid"
  rowCount={3}
  rowGetter={[Function]}
  rowHeight={52}
  rowRenderer={[Function]}
  rowStyle={{}}
  scrollToAlignment="auto"
  scrollToIndex={-1}
  scrollTop={0}
  sort={[Function]}
  style={{}}
  tabIndex={-1}
  width={0}
>
  <Column
    cellDataGetter={[Function]}
    cellRenderer={[Function]}
    dataKey="name"
    defaultSortDirection="ASC"
    flexGrow={0}
    flexShrink={1}
    headerRenderer={[Function]}
    headerRole="columnheader"
    label="Name"
    role="gridcell"
    style={{}}
    width={100}
  />
  <Column
    cellDataGetter={[Function]}
    cellRenderer={[Function]}
    dataKey="description"
    defaultSortDirection="ASC"
    flexGrow={0}
    flexShrink={1}
    headerRenderer={[Function]}
    headerRole="columnheader"
    label="Description"
    role="gridcell"
    style={{}}
    width={100}
  />
</Table>
`;

exports[`features/virtualized-table/VirtualizedTable should successfully render a VirtualizedTable with fixed height 1`] = `
<AutoSizer
  defaultHeight={10}
  disableHeight={true}
  disableWidth={false}
  onResize={[Function]}
  style={{}}
>
  <Component />
</AutoSizer>
`;

exports[`features/virtualized-table/VirtualizedTable should successfully render a VirtualizedTable with fixed height 2`] = `
<Table
  className="bdl-VirtualizedTable"
  disableHeader={false}
  estimatedRowSize={30}
  gridContainerRole=""
  headerHeight={39}
  headerRowRenderer={[Function]}
  headerStyle={{}}
  height={10}
  noRowsRenderer={[Function]}
  onRowsRendered={[Function]}
  onScroll={[Function]}
  overscanIndicesGetter={[Function]}
  overscanRowCount={10}
  role="grid"
  rowCount={3}
  rowGetter={[Function]}
  rowHeight={52}
  rowRenderer={[Function]}
  rowStyle={{}}
  scrollToAlignment="auto"
  scrollToIndex={-1}
  sort={[Function]}
  style={{}}
  tabIndex={-1}
  width={0}
>
  <Column
    cellDataGetter={[Function]}
    cellRenderer={[Function]}
    dataKey="name"
    defaultSortDirection="ASC"
    flexGrow={0}
    flexShrink={1}
    headerRenderer={[Function]}
    headerRole="columnheader"
    label="Name"
    role="gridcell"
    style={{}}
    width={100}
  />
  <Column
    cellDataGetter={[Function]}
    cellRenderer={[Function]}
    dataKey="description"
    defaultSortDirection="ASC"
    flexGrow={0}
    flexShrink={1}
    headerRenderer={[Function]}
    headerRole="columnheader"
    label="Description"
    role="gridcell"
    style={{}}
    width={100}
  />
</Table>
`;
