// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`features/collaborator-avatars/CollaboratorAvatarItem render() should not render avatar if badges are disabled 1`] = `
<Badgeable
  topLeft={null}
>
  <Avatar
    email="test@example.org"
    id={1}
    isExternal={true}
    name="foo bar"
    shouldShowExternal={false}
  />
</Badgeable>
`;

exports[`features/collaborator-avatars/CollaboratorAvatarItem render() should not render badges with expiration lacking an execution date value 1`] = `
<Badgeable
  topLeft={null}
>
  <Avatar
    id={1}
    isExternal={false}
    name="foo bar"
    shouldShowExternal={true}
  />
</Badgeable>
`;

exports[`features/collaborator-avatars/CollaboratorAvatarItem render() should not render badges with expiration, but badging not allowed 1`] = `
<Badgeable
  topLeft={null}
>
  <Avatar
    id={1}
    isExternal={false}
    name="foo bar"
    shouldShowExternal={false}
  />
</Badgeable>
`;

exports[`features/collaborator-avatars/CollaboratorAvatarItem render() should not render if external collab is disabled 1`] = `
<Badgeable
  topLeft={null}
>
  <Avatar
    email="test@example.org"
    id={1}
    isExternal={false}
    name="foo bar"
    shouldShowExternal={true}
  />
</Badgeable>
`;

exports[`features/collaborator-avatars/CollaboratorAvatarItem render() should render avatar with expiration if we allow badging 1`] = `
<Badgeable
  topLeft={
    <Tooltip
      constrainToScrollParent={false}
      constrainToWindow={true}
      isDisabled={false}
      position="middle-right"
      text={
        <FormattedMessage
          defaultMessage="Access expires on {date}"
          id="boxui.collaboratorAvatars.collaborators.expirationTooltipText"
          values={
            Object {
              "date": "January 1, 2009",
            }
          }
        />
      }
      theme="default"
    >
      <div>
        <IconExpirationBadge
          className="themed"
          height={14}
          width={14}
        />
      </div>
    </Tooltip>
  }
>
  <Avatar
    id={1}
    isExternal={false}
    name="foo bar"
    shouldShowExternal={true}
  />
</Badgeable>
`;

exports[`features/collaborator-avatars/CollaboratorAvatarItem render() should render avatar with external collab if all preconditions are met 1`] = `
<Badgeable
  topLeft={null}
>
  <Avatar
    email="test@example.org"
    id={1}
    isExternal={true}
    name="foo bar"
    shouldShowExternal={true}
  />
</Badgeable>
`;

exports[`features/collaborator-avatars/CollaboratorAvatarItem render() should render custom avatar 1`] = `
<Badgeable
  topLeft={null}
>
  <Avatar
    avatarUrl="http://foo.bar"
    id={1}
    isExternal={false}
    name="foo bar"
    shouldShowExternal={false}
  />
</Badgeable>
`;

exports[`features/collaborator-avatars/CollaboratorAvatarItem render() should render default component 1`] = `
<Badgeable
  topLeft={null}
>
  <Avatar
    id={1}
    isExternal={false}
    name="foo bar"
    shouldShowExternal={false}
  />
</Badgeable>
`;
