// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`features/metadata-instance-editor/fields/ should correctly render button that is passed in 1`] = `
<Flyout
  className="metadata-instance-editor-template-dropdown-flyout"
  closeOnClick={true}
  closeOnClickOutside={true}
  closeOnWindowBlur={false}
  constrainToScrollParent={true}
  constrainToWindow={false}
  isVisibleByDefault={false}
  onClose={[Function]}
  onOpen={[Function]}
  openOnHover={false}
  openOnHoverDelayTimeout={300}
  portaledClasses={Array []}
  position="bottom-left"
  shouldDefaultFocus={true}
>
  <Button
    className=""
    isLoading={false}
    showRadar={false}
    type="submit"
  />
  <Overlay>
    <SelectorDropdown
      className="metadata-instance-editor-template-dropdown-menu"
      isAlwaysOpen={true}
      onSelect={[Function]}
      selector={
        <InputContainer
          label=""
          onChange={[Function]}
          type="text"
          useClearButton={true}
          value=""
        />
      }
      shouldScroll={true}
    >
      <DatalistItem
        key="template1"
      >
        <PlainButton
          className="metadata-template-dropdown-select-template"
          tabIndex="-1"
          type="button"
        >
          <div
            className="template-display-name"
          >
            template1 title
          </div>
        </PlainButton>
      </DatalistItem>
    </SelectorDropdown>
  </Overlay>
</Flyout>
`;

exports[`features/metadata-instance-editor/fields/ should correctly render dropdown when isDropdownOpen is false 1`] = `
<Flyout
  className="metadata-instance-editor-template-dropdown-flyout"
  closeOnClick={true}
  closeOnClickOutside={true}
  closeOnWindowBlur={false}
  constrainToScrollParent={true}
  constrainToWindow={false}
  isVisibleByDefault={false}
  onClose={[Function]}
  onOpen={[Function]}
  openOnHover={false}
  openOnHoverDelayTimeout={300}
  portaledClasses={Array []}
  position="bottom-left"
  shouldDefaultFocus={true}
>
  <PlainButton
    className="lnk"
    data-resin-target="metadata-templateaddmenu"
    type="button"
  >
    <MenuToggle>
      <FormattedMessage
        defaultMessage="Add"
        id="boxui.metadataInstanceEditor.templateAdd"
      />
    </MenuToggle>
  </PlainButton>
  <Overlay>
    <SelectorDropdown
      className="metadata-instance-editor-template-dropdown-menu"
      isAlwaysOpen={true}
      onSelect={[Function]}
      selector={
        <InputContainer
          label=""
          onChange={[Function]}
          type="text"
          useClearButton={true}
          value=""
        />
      }
      shouldScroll={true}
    >
      <DatalistItem
        key="template1"
      >
        <PlainButton
          className="metadata-template-dropdown-select-template"
          tabIndex="-1"
          type="button"
        >
          <div
            className="template-display-name"
          >
            template1 title
          </div>
        </PlainButton>
      </DatalistItem>
    </SelectorDropdown>
  </Overlay>
</Flyout>
`;

exports[`features/metadata-instance-editor/fields/ should correctly render dropdown when isDropdownOpen is true 1`] = `
<Flyout
  className="metadata-instance-editor-template-dropdown-flyout"
  closeOnClick={true}
  closeOnClickOutside={true}
  closeOnWindowBlur={false}
  constrainToScrollParent={true}
  constrainToWindow={false}
  isVisibleByDefault={false}
  onClose={[Function]}
  onOpen={[Function]}
  openOnHover={false}
  openOnHoverDelayTimeout={300}
  portaledClasses={Array []}
  position="bottom-left"
  shouldDefaultFocus={true}
>
  <PlainButton
    className="lnk is-toggled"
    data-resin-target="metadata-templateaddmenu"
    type="button"
  >
    <MenuToggle>
      <FormattedMessage
        defaultMessage="Add"
        id="boxui.metadataInstanceEditor.templateAdd"
      />
    </MenuToggle>
  </PlainButton>
  <Overlay>
    <SelectorDropdown
      className="metadata-instance-editor-template-dropdown-menu"
      isAlwaysOpen={true}
      onSelect={[Function]}
      selector={
        <InputContainer
          label=""
          onChange={[Function]}
          type="text"
          useClearButton={true}
          value=""
        />
      }
      shouldScroll={true}
    >
      <DatalistItem
        key="template1"
      >
        <PlainButton
          className="metadata-template-dropdown-select-template"
          tabIndex="-1"
          type="button"
        >
          <div
            className="template-display-name"
          >
            template1 title
          </div>
        </PlainButton>
      </DatalistItem>
    </SelectorDropdown>
  </Overlay>
</Flyout>
`;

exports[`features/metadata-instance-editor/fields/ should correctly render empty error message when no templates 1`] = `
<Flyout
  className="metadata-instance-editor-template-dropdown-flyout"
  closeOnClick={true}
  closeOnClickOutside={true}
  closeOnWindowBlur={false}
  constrainToScrollParent={true}
  constrainToWindow={false}
  isVisibleByDefault={false}
  onClose={[Function]}
  onOpen={[Function]}
  openOnHover={false}
  openOnHoverDelayTimeout={300}
  portaledClasses={Array []}
  position="bottom-left"
  shouldDefaultFocus={true}
>
  <PlainButton
    className="lnk is-toggled"
    data-resin-target="metadata-templateaddmenu"
    type="button"
  >
    <MenuToggle>
      <FormattedMessage
        defaultMessage="Add"
        id="boxui.metadataInstanceEditor.templateAdd"
      />
    </MenuToggle>
  </PlainButton>
  <Overlay>
    <SelectorDropdown
      className="metadata-instance-editor-template-dropdown-menu"
      isAlwaysOpen={true}
      onSelect={[Function]}
      selector={
        <InputContainer
          label=""
          onChange={[Function]}
          type="text"
          useClearButton={true}
          value=""
        />
      }
      shouldScroll={true}
    />
    <i
      className="metadata-instance-editor-template-message"
    >
      <FormattedMessage
        defaultMessage="Zero templates"
        id="boxui.metadataInstanceEditor.templatesServerHasNoTemplates"
      />
    </i>
  </Overlay>
</Flyout>
`;

exports[`features/metadata-instance-editor/fields/ should correctly render error message when no unused templates available 1`] = `
<Flyout
  className="metadata-instance-editor-template-dropdown-flyout"
  closeOnClick={true}
  closeOnClickOutside={true}
  closeOnWindowBlur={false}
  constrainToScrollParent={true}
  constrainToWindow={false}
  isVisibleByDefault={false}
  onClose={[Function]}
  onOpen={[Function]}
  openOnHover={false}
  openOnHoverDelayTimeout={300}
  portaledClasses={Array []}
  position="bottom-left"
  shouldDefaultFocus={true}
>
  <PlainButton
    className="lnk is-toggled"
    data-resin-target="metadata-templateaddmenu"
    type="button"
  >
    <MenuToggle>
      <FormattedMessage
        defaultMessage="Add"
        id="boxui.metadataInstanceEditor.templateAdd"
      />
    </MenuToggle>
  </PlainButton>
  <Overlay>
    <SelectorDropdown
      className="metadata-instance-editor-template-dropdown-menu"
      isAlwaysOpen={true}
      onSelect={[Function]}
      selector={
        <InputContainer
          label=""
          onChange={[Function]}
          type="text"
          useClearButton={true}
          value=""
        />
      }
      shouldScroll={true}
    />
    <i
      className="metadata-instance-editor-template-message"
    >
      <FormattedMessage
        defaultMessage="All templates have been added"
        id="boxui.metadataInstanceEditor.templatesNoRemainingTemplates"
      />
    </i>
  </Overlay>
</Flyout>
`;

exports[`features/metadata-instance-editor/fields/ should correctly render loading indicator when isDropdownOpen and isDropdownBusy is true 1`] = `
<Flyout
  className="metadata-instance-editor-template-dropdown-flyout"
  closeOnClick={true}
  closeOnClickOutside={true}
  closeOnWindowBlur={false}
  constrainToScrollParent={true}
  constrainToWindow={false}
  isVisibleByDefault={false}
  onClose={[Function]}
  onOpen={[Function]}
  openOnHover={false}
  openOnHoverDelayTimeout={300}
  portaledClasses={Array []}
  position="bottom-left"
  shouldDefaultFocus={true}
>
  <PlainButton
    className="lnk is-toggled"
    data-resin-target="metadata-templateaddmenu"
    type="button"
  >
    <MenuToggle>
      <FormattedMessage
        defaultMessage="Add"
        id="boxui.metadataInstanceEditor.templateAdd"
      />
    </MenuToggle>
  </PlainButton>
  <Overlay>
    <SelectorDropdown
      className="metadata-instance-editor-template-dropdown-menu"
      isAlwaysOpen={true}
      onSelect={[Function]}
      selector={
        <InputContainer
          label=""
          onChange={[Function]}
          type="text"
          useClearButton={true}
          value=""
        />
      }
      shouldScroll={true}
    />
    <LoadingIndicator
      className="metadata-instance-editor-template-message template-dropdown-loading-indicator"
    />
  </Overlay>
</Flyout>
`;

exports[`features/metadata-instance-editor/fields/ should correctly render plain button when no entry button is passed in 1`] = `
<Flyout
  className="metadata-instance-editor-template-dropdown-flyout"
  closeOnClick={true}
  closeOnClickOutside={true}
  closeOnWindowBlur={false}
  constrainToScrollParent={true}
  constrainToWindow={false}
  isVisibleByDefault={false}
  onClose={[Function]}
  onOpen={[Function]}
  openOnHover={false}
  openOnHoverDelayTimeout={300}
  portaledClasses={Array []}
  position="bottom-left"
  shouldDefaultFocus={true}
>
  <PlainButton
    className="lnk"
    data-resin-target="metadata-templateaddmenu"
    type="button"
  >
    <MenuToggle>
      <FormattedMessage
        defaultMessage="Add"
        id="boxui.metadataInstanceEditor.templateAdd"
      />
    </MenuToggle>
  </PlainButton>
  <Overlay>
    <SelectorDropdown
      className="metadata-instance-editor-template-dropdown-menu"
      isAlwaysOpen={true}
      onSelect={[Function]}
      selector={
        <InputContainer
          label=""
          onChange={[Function]}
          type="text"
          useClearButton={true}
          value=""
        />
      }
      shouldScroll={true}
    >
      <DatalistItem
        key="template1"
      >
        <PlainButton
          className="metadata-template-dropdown-select-template"
          tabIndex="-1"
          type="button"
        >
          <div
            className="template-display-name"
          >
            template1 title
          </div>
        </PlainButton>
      </DatalistItem>
    </SelectorDropdown>
  </Overlay>
</Flyout>
`;
