// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`features/metadata-instance-editor/fields/Instance collapsible isOpen prop should be true 1`] = `
<div>
  <Collapsible
    animationDuration={50}
    buttonProps={
      {
        "data-resin-target": "metadata-card",
      }
    }
    className=""
    hasStickyHeader={true}
    headerActionItems={
      <Tooltip
        constrainToScrollParent={false}
        constrainToWindow={true}
        isDisabled={false}
        position="top-left"
        theme="default"
      >
        <PlainButton
          aria-pressed={false}
          className="metadata-instance-editor-instance-edit"
          data-resin-target="metadata-instanceedit"
          onClick={[Function]}
          type="button"
        >
          <IconEdit />
        </PlainButton>
      </Tooltip>
    }
    isBordered={true}
    isOpen={true}
    title={
      <span
        className="metadata-instance-editor-instance-title"
      >
        <IconMetadataColored
          type="default"
        />
        <span
          className="metadata-instance-editor-instance-title-text"
        />
      </span>
    }
  >
    <LoadingIndicatorWrapper
      isLoading={false}
    >
      <Form
        onValidSubmit={[Function]}
      >
        <div
          className="metadata-instance-editor-instance"
        >
          <TemplatedInstance
            canEdit={false}
            data={
              {
                "datefield": "2018-06-20T00:00:00.000Z",
                "enumfield": "yes",
                "floatfield": 1,
                "multiselectfield": [
                  "yes",
                  "no",
                ],
                "stringfield": "some string",
              }
            }
            errors={{}}
            onFieldChange={[Function]}
            onFieldRemove={[Function]}
            template={
              {
                "singleTemplateField": [
                  {
                    "description": "example of an empty enum field",
                    "displayName": "Empty Enum Field",
                    "id": "field0",
                    "key": "emptyenumfield",
                    "type": "enum",
                  },
                ],
              }
            }
          />
        </div>
      </Form>
    </LoadingIndicatorWrapper>
  </Collapsible>
</div>
`;

exports[`features/metadata-instance-editor/fields/Instance message id should be fileMetadataRemoveCustomTemplateConfirm 1`] = `
<FormattedMessage
  defaultMessage="Are you sure you want to delete this custom metadata and all of its values from this file?"
  id="boxui.metadataInstanceEditor.fileMetadataRemoveCustomTemplateConfirm"
  values={
    {
      "metadataName": "Empty Enum Field",
    }
  }
/>
`;

exports[`features/metadata-instance-editor/fields/Instance message id should be fileMetadataRemoveTemplateConfirm 1`] = `
<FormattedMessage
  defaultMessage="Are you sure you want to delete "{metadataName}" and all of its values from this file?"
  id="boxui.metadataInstanceEditor.fileMetadataRemoveTemplateConfirm"
  values={
    {
      "metadataName": "Empty Enum Field",
    }
  }
/>
`;

exports[`features/metadata-instance-editor/fields/Instance message id should be folderMetadataRemoveCustomTemplateConfirm 1`] = `
<FormattedMessage
  defaultMessage="Are you sure you want to delete this custom metadata and all of its values? Any metadata template values already applied to files in this folder will not be deleted."
  id="boxui.metadataInstanceEditor.folderMetadataRemoveCustomTemplateConfirm"
  values={
    {
      "metadataName": "Empty Enum Field",
    }
  }
/>
`;

exports[`features/metadata-instance-editor/fields/Instance message id should be folderMetadataRemoveTemplateConfirm 1`] = `
<FormattedMessage
  defaultMessage="Are you sure you want to delete "{metadataName}" and all of its values? Any metadata template values already applied to files in this folder will not be deleted."
  id="boxui.metadataInstanceEditor.folderMetadataRemoveTemplateConfirm"
  values={
    {
      "metadataName": "Empty Enum Field",
    }
  }
/>
`;

exports[`features/metadata-instance-editor/fields/Instance should correctly render custom metadata instance 1`] = `
<div>
  <Collapsible
    animationDuration={550}
    buttonProps={
      {
        "data-resin-target": "metadata-card",
      }
    }
    className=""
    hasStickyHeader={true}
    headerActionItems={null}
    isBordered={true}
    isOpen={true}
    title={
      <span
        className="metadata-instance-editor-instance-title"
      >
        <IconMetadataColored
          type="default"
        />
        <span
          className="metadata-instance-editor-instance-title-text"
        >
          <FormattedMessage
            defaultMessage="Custom Metadata"
            id="boxui.metadataInstanceEditor.customTitle"
          />
        </span>
      </span>
    }
  >
    <LoadingIndicatorWrapper
      isLoading={false}
    >
      <Form
        onValidSubmit={[Function]}
      >
        <div
          className="metadata-instance-editor-instance"
        >
          <CustomInstance
            canEdit={true}
            data={
              {
                "datefield": "2018-06-20T00:00:00.000Z",
                "enumfield": "yes",
                "floatfield": 1,
                "multiselectfield": [
                  "yes",
                  "no",
                ],
                "stringfield": "some string",
              }
            }
            onFieldChange={[Function]}
            onFieldRemove={[Function]}
          />
        </div>
      </Form>
    </LoadingIndicatorWrapper>
  </Collapsible>
</div>
`;

exports[`features/metadata-instance-editor/fields/Instance should correctly render templated metadata instance 1`] = `
<div>
  <Collapsible
    animationDuration={550}
    buttonProps={
      {
        "data-resin-target": "metadata-card",
      }
    }
    className=""
    hasStickyHeader={true}
    headerActionItems={null}
    isBordered={true}
    isOpen={true}
    title={
      <span
        className="metadata-instance-editor-instance-title"
      >
        <IconMetadataColored
          type="default"
        />
        <span
          className="metadata-instance-editor-instance-title-text"
        />
      </span>
    }
  >
    <LoadingIndicatorWrapper
      isLoading={false}
    >
      <Form
        onValidSubmit={[Function]}
      >
        <div
          className="metadata-instance-editor-instance"
        >
          <TemplatedInstance
            data={
              {
                "datefield": "2018-06-20T00:00:00.000Z",
                "enumfield": "yes",
                "floatfield": 1,
                "multiselectfield": [
                  "yes",
                  "no",
                ],
                "stringfield": "some string",
              }
            }
            errors={{}}
            onFieldChange={[Function]}
            onFieldRemove={[Function]}
            template={
              {
                "fields": [
                  {
                    "displayName": "No Description Field",
                    "id": "field0",
                    "key": "nodescfield",
                    "type": "string",
                  },
                  {
                    "description": "example of a string field",
                    "displayName": "String Field",
                    "id": "field1",
                    "key": "stringfield",
                    "type": "string",
                  },
                  {
                    "description": "example of an empty string field",
                    "displayName": "Empty String Field",
                    "id": "field2",
                    "key": "emptystring",
                    "type": "string",
                  },
                  {
                    "description": "example of a float field",
                    "displayName": "Float Field",
                    "id": "field3",
                    "key": "floatfield",
                    "type": "float",
                  },
                  {
                    "description": "example of an empty float field",
                    "displayName": "Empty Float Field",
                    "id": "field4",
                    "key": "emptyfloat",
                    "type": "float",
                  },
                  {
                    "description": "example of a enum field",
                    "displayName": "Enum Field",
                    "id": "field5",
                    "key": "enumfield",
                    "options": [
                      {
                        "key": "yes",
                      },
                      {
                        "key": "no",
                      },
                    ],
                    "type": "enum",
                  },
                  {
                    "description": "example of an empty enum field",
                    "displayName": "Empty Enum Field",
                    "id": "field6",
                    "key": "emptyenumfield",
                    "options": [
                      {
                        "key": "yes",
                      },
                      {
                        "key": "no",
                      },
                    ],
                    "type": "enum",
                  },
                  {
                    "description": "example of a date field",
                    "displayName": "Date Field",
                    "id": "field7",
                    "key": "datefield",
                    "type": "date",
                  },
                  {
                    "description": "example of an empty date field",
                    "displayName": "Empty Date Field",
                    "id": "field8",
                    "key": "emptydatefield",
                    "type": "date",
                  },
                  {
                    "description": "example of a multi select field field",
                    "displayName": "Multi Select Field",
                    "id": "field9",
                    "key": "multiselectfield",
                    "options": [
                      {
                        "key": "yes",
                      },
                      {
                        "key": "no",
                      },
                      {
                        "key": "maybe",
                      },
                      {
                        "key": "idk?",
                      },
                      {
                        "key": "oh well",
                      },
                      {
                        "key": "whatever",
                      },
                    ],
                    "type": "multiSelect",
                  },
                ],
              }
            }
          />
        </div>
      </Form>
    </LoadingIndicatorWrapper>
  </Collapsible>
</div>
`;

exports[`features/metadata-instance-editor/fields/Instance should correctly render templated metadata instance with CascadePolicy 1`] = `
<div>
  <Collapsible
    animationDuration={550}
    buttonProps={
      {
        "data-resin-target": "metadata-card",
      }
    }
    className=""
    hasStickyHeader={true}
    headerActionItems={null}
    isBordered={true}
    isOpen={true}
    title={
      <span
        className="metadata-instance-editor-instance-title"
      >
        <IconMetadataColored
          type="cascade"
        />
        <span
          className="metadata-instance-editor-instance-title-text"
        />
      </span>
    }
  >
    <LoadingIndicatorWrapper
      isLoading={false}
    >
      <Form
        onValidSubmit={[Function]}
      >
        <div
          className="metadata-instance-editor-instance"
        >
          <CascadePolicy
            isCascadingEnabled={true}
            isCascadingOverwritten={false}
            isCustomMetadata={false}
            onCascadeModeChange={[Function]}
            onCascadeToggle={[Function]}
            shouldShowCascadeOptions={false}
          />
          <TemplatedInstance
            data={
              {
                "datefield": "2018-06-20T00:00:00.000Z",
                "enumfield": "yes",
                "floatfield": 1,
                "multiselectfield": [
                  "yes",
                  "no",
                ],
                "stringfield": "some string",
              }
            }
            errors={{}}
            onFieldChange={[Function]}
            onFieldRemove={[Function]}
            template={
              {
                "fields": [
                  {
                    "displayName": "No Description Field",
                    "id": "field0",
                    "key": "nodescfield",
                    "type": "string",
                  },
                  {
                    "description": "example of a string field",
                    "displayName": "String Field",
                    "id": "field1",
                    "key": "stringfield",
                    "type": "string",
                  },
                  {
                    "description": "example of an empty string field",
                    "displayName": "Empty String Field",
                    "id": "field2",
                    "key": "emptystring",
                    "type": "string",
                  },
                  {
                    "description": "example of a float field",
                    "displayName": "Float Field",
                    "id": "field3",
                    "key": "floatfield",
                    "type": "float",
                  },
                  {
                    "description": "example of an empty float field",
                    "displayName": "Empty Float Field",
                    "id": "field4",
                    "key": "emptyfloat",
                    "type": "float",
                  },
                  {
                    "description": "example of a enum field",
                    "displayName": "Enum Field",
                    "id": "field5",
                    "key": "enumfield",
                    "options": [
                      {
                        "key": "yes",
                      },
                      {
                        "key": "no",
                      },
                    ],
                    "type": "enum",
                  },
                  {
                    "description": "example of an empty enum field",
                    "displayName": "Empty Enum Field",
                    "id": "field6",
                    "key": "emptyenumfield",
                    "options": [
                      {
                        "key": "yes",
                      },
                      {
                        "key": "no",
                      },
                    ],
                    "type": "enum",
                  },
                  {
                    "description": "example of a date field",
                    "displayName": "Date Field",
                    "id": "field7",
                    "key": "datefield",
                    "type": "date",
                  },
                  {
                    "description": "example of an empty date field",
                    "displayName": "Empty Date Field",
                    "id": "field8",
                    "key": "emptydatefield",
                    "type": "date",
                  },
                  {
                    "description": "example of a multi select field field",
                    "displayName": "Multi Select Field",
                    "id": "field9",
                    "key": "multiselectfield",
                    "options": [
                      {
                        "key": "yes",
                      },
                      {
                        "key": "no",
                      },
                      {
                        "key": "maybe",
                      },
                      {
                        "key": "idk?",
                      },
                      {
                        "key": "oh well",
                      },
                      {
                        "key": "whatever",
                      },
                    ],
                    "type": "multiSelect",
                  },
                ],
              }
            }
          />
        </div>
      </Form>
    </LoadingIndicatorWrapper>
  </Collapsible>
</div>
`;

exports[`features/metadata-instance-editor/fields/Instance should correctly render the busy indicator 1`] = `
<div>
  <Collapsible
    animationDuration={550}
    buttonProps={
      {
        "data-resin-target": "metadata-card",
      }
    }
    className=""
    hasStickyHeader={true}
    headerActionItems={null}
    isBordered={true}
    isOpen={true}
    title={
      <span
        className="metadata-instance-editor-instance-title"
      >
        <IconMetadataColored
          type="default"
        />
        <span
          className="metadata-instance-editor-instance-title-text"
        />
      </span>
    }
  >
    <LoadingIndicatorWrapper
      isLoading={true}
    >
      <Form
        onValidSubmit={[Function]}
      >
        <div
          className="metadata-instance-editor-instance"
        >
          <TemplatedInstance
            canEdit={false}
            data={
              {
                "datefield": "2018-06-20T00:00:00.000Z",
                "enumfield": "yes",
                "floatfield": 1,
                "multiselectfield": [
                  "yes",
                  "no",
                ],
                "stringfield": "some string",
              }
            }
            errors={{}}
            onFieldChange={[Function]}
            onFieldRemove={[Function]}
            template={
              {
                "fields": [
                  {
                    "displayName": "No Description Field",
                    "id": "field0",
                    "key": "nodescfield",
                    "type": "string",
                  },
                  {
                    "description": "example of a string field",
                    "displayName": "String Field",
                    "id": "field1",
                    "key": "stringfield",
                    "type": "string",
                  },
                  {
                    "description": "example of an empty string field",
                    "displayName": "Empty String Field",
                    "id": "field2",
                    "key": "emptystring",
                    "type": "string",
                  },
                  {
                    "description": "example of a float field",
                    "displayName": "Float Field",
                    "id": "field3",
                    "key": "floatfield",
                    "type": "float",
                  },
                  {
                    "description": "example of an empty float field",
                    "displayName": "Empty Float Field",
                    "id": "field4",
                    "key": "emptyfloat",
                    "type": "float",
                  },
                  {
                    "description": "example of a enum field",
                    "displayName": "Enum Field",
                    "id": "field5",
                    "key": "enumfield",
                    "options": [
                      {
                        "key": "yes",
                      },
                      {
                        "key": "no",
                      },
                    ],
                    "type": "enum",
                  },
                  {
                    "description": "example of an empty enum field",
                    "displayName": "Empty Enum Field",
                    "id": "field6",
                    "key": "emptyenumfield",
                    "options": [
                      {
                        "key": "yes",
                      },
                      {
                        "key": "no",
                      },
                    ],
                    "type": "enum",
                  },
                  {
                    "description": "example of a date field",
                    "displayName": "Date Field",
                    "id": "field7",
                    "key": "datefield",
                    "type": "date",
                  },
                  {
                    "description": "example of an empty date field",
                    "displayName": "Empty Date Field",
                    "id": "field8",
                    "key": "emptydatefield",
                    "type": "date",
                  },
                  {
                    "description": "example of a multi select field field",
                    "displayName": "Multi Select Field",
                    "id": "field9",
                    "key": "multiselectfield",
                    "options": [
                      {
                        "key": "yes",
                      },
                      {
                        "key": "no",
                      },
                      {
                        "key": "maybe",
                      },
                      {
                        "key": "idk?",
                      },
                      {
                        "key": "oh well",
                      },
                      {
                        "key": "whatever",
                      },
                    ],
                    "type": "multiSelect",
                  },
                ],
              }
            }
          />
        </div>
      </Form>
    </LoadingIndicatorWrapper>
  </Collapsible>
</div>
`;

exports[`features/metadata-instance-editor/fields/Instance should correctly render the footer 1`] = `
<div>
  <Collapsible
    animationDuration={550}
    buttonProps={
      {
        "data-resin-target": "metadata-card",
      }
    }
    className=""
    hasStickyHeader={true}
    headerActionItems={
      <Tooltip
        constrainToScrollParent={false}
        constrainToWindow={true}
        isDisabled={false}
        position="top-left"
        theme="default"
      >
        <PlainButton
          aria-pressed={true}
          className="metadata-instance-editor-instance-edit metadata-instance-editor-instance-is-editing"
          data-resin-target="metadata-instanceedit"
          onClick={[Function]}
          type="button"
        >
          <IconEdit />
        </PlainButton>
      </Tooltip>
    }
    isBordered={true}
    isOpen={true}
    title={
      <span
        className="metadata-instance-editor-instance-title"
      >
        <IconMetadataColored
          type="default"
        />
        <span
          className="metadata-instance-editor-instance-title-text"
        />
      </span>
    }
  >
    <LoadingIndicatorWrapper
      isLoading={false}
    >
      <Form
        onValidSubmit={[Function]}
      >
        <div
          className="metadata-instance-editor-instance"
        >
          <TemplatedInstance
            canEdit={true}
            data={
              {
                "datefield": "2018-06-20T00:00:00.000Z",
                "enumfield": "yes",
                "floatfield": 1,
                "multiselectfield": [
                  "yes",
                  "no",
                ],
                "stringfield": "some string",
              }
            }
            errors={{}}
            onFieldChange={[Function]}
            onFieldRemove={[Function]}
            template={
              {
                "fields": [
                  {
                    "displayName": "No Description Field",
                    "id": "field0",
                    "key": "nodescfield",
                    "type": "string",
                  },
                  {
                    "description": "example of a string field",
                    "displayName": "String Field",
                    "id": "field1",
                    "key": "stringfield",
                    "type": "string",
                  },
                  {
                    "description": "example of an empty string field",
                    "displayName": "Empty String Field",
                    "id": "field2",
                    "key": "emptystring",
                    "type": "string",
                  },
                  {
                    "description": "example of a float field",
                    "displayName": "Float Field",
                    "id": "field3",
                    "key": "floatfield",
                    "type": "float",
                  },
                  {
                    "description": "example of an empty float field",
                    "displayName": "Empty Float Field",
                    "id": "field4",
                    "key": "emptyfloat",
                    "type": "float",
                  },
                  {
                    "description": "example of a enum field",
                    "displayName": "Enum Field",
                    "id": "field5",
                    "key": "enumfield",
                    "options": [
                      {
                        "key": "yes",
                      },
                      {
                        "key": "no",
                      },
                    ],
                    "type": "enum",
                  },
                  {
                    "description": "example of an empty enum field",
                    "displayName": "Empty Enum Field",
                    "id": "field6",
                    "key": "emptyenumfield",
                    "options": [
                      {
                        "key": "yes",
                      },
                      {
                        "key": "no",
                      },
                    ],
                    "type": "enum",
                  },
                  {
                    "description": "example of a date field",
                    "displayName": "Date Field",
                    "id": "field7",
                    "key": "datefield",
                    "type": "date",
                  },
                  {
                    "description": "example of an empty date field",
                    "displayName": "Empty Date Field",
                    "id": "field8",
                    "key": "emptydatefield",
                    "type": "date",
                  },
                  {
                    "description": "example of a multi select field field",
                    "displayName": "Multi Select Field",
                    "id": "field9",
                    "key": "multiselectfield",
                    "options": [
                      {
                        "key": "yes",
                      },
                      {
                        "key": "no",
                      },
                      {
                        "key": "maybe",
                      },
                      {
                        "key": "idk?",
                      },
                      {
                        "key": "oh well",
                      },
                      {
                        "key": "whatever",
                      },
                    ],
                    "type": "multiSelect",
                  },
                ],
              }
            }
          />
        </div>
        <Footer
          onCancel={[Function]}
          onRemove={[Function]}
          showSave={false}
        />
      </Form>
    </LoadingIndicatorWrapper>
  </Collapsible>
</div>
`;

exports[`features/metadata-instance-editor/fields/Instance should correctly render the footer even when all fields are hidden 1`] = `
<div>
  <Collapsible
    animationDuration={150}
    buttonProps={
      {
        "data-resin-target": "metadata-card",
      }
    }
    className=""
    hasStickyHeader={true}
    headerActionItems={
      <Tooltip
        constrainToScrollParent={false}
        constrainToWindow={true}
        isDisabled={false}
        position="top-left"
        theme="default"
      >
        <PlainButton
          aria-pressed={true}
          className="metadata-instance-editor-instance-edit metadata-instance-editor-instance-is-editing"
          data-resin-target="metadata-instanceedit"
          onClick={[Function]}
          type="button"
        >
          <IconEdit />
        </PlainButton>
      </Tooltip>
    }
    isBordered={true}
    isOpen={true}
    title={
      <span
        className="metadata-instance-editor-instance-title"
      >
        <IconMetadataColored
          type="default"
        />
        <span
          className="metadata-instance-editor-instance-title-text"
        />
      </span>
    }
  >
    <LoadingIndicatorWrapper
      isLoading={false}
    >
      <Form
        onValidSubmit={[Function]}
      >
        <div
          className="metadata-instance-editor-instance"
        >
          <TemplatedInstance
            canEdit={true}
            data={
              {
                "datefield": "2018-06-20T00:00:00.000Z",
                "enumfield": "yes",
                "floatfield": 1,
                "multiselectfield": [
                  "yes",
                  "no",
                ],
                "stringfield": "some string",
              }
            }
            errors={{}}
            onFieldChange={[Function]}
            onFieldRemove={[Function]}
            template={
              {
                "fields": [
                  {
                    "displayName": "No Description Field that is hidden",
                    "hidden": true,
                    "id": "field0",
                    "key": "nodescfield",
                    "type": "string",
                  },
                  {
                    "displayName": "No Description Field that is also hidden",
                    "id": "field1",
                    "isHidden": true,
                    "key": "nodescfield",
                    "type": "string",
                  },
                ],
              }
            }
          />
        </div>
        <Footer
          onCancel={[Function]}
          onRemove={[Function]}
          showSave={false}
        />
      </Form>
    </LoadingIndicatorWrapper>
  </Collapsible>
</div>
`;

exports[`features/metadata-instance-editor/fields/Instance should correctly render the footer even when there are no fields in a template 1`] = `
<div>
  <Collapsible
    animationDuration={50}
    buttonProps={
      {
        "data-resin-target": "metadata-card",
      }
    }
    className=""
    hasStickyHeader={true}
    headerActionItems={
      <Tooltip
        constrainToScrollParent={false}
        constrainToWindow={true}
        isDisabled={false}
        position="top-left"
        theme="default"
      >
        <PlainButton
          aria-pressed={true}
          className="metadata-instance-editor-instance-edit metadata-instance-editor-instance-is-editing"
          data-resin-target="metadata-instanceedit"
          onClick={[Function]}
          type="button"
        >
          <IconEdit />
        </PlainButton>
      </Tooltip>
    }
    isBordered={true}
    isOpen={true}
    title={
      <span
        className="metadata-instance-editor-instance-title"
      >
        <IconMetadataColored
          type="default"
        />
        <span
          className="metadata-instance-editor-instance-title-text"
        />
      </span>
    }
  >
    <LoadingIndicatorWrapper
      isLoading={false}
    >
      <Form
        onValidSubmit={[Function]}
      >
        <div
          className="metadata-instance-editor-instance"
        >
          <TemplatedInstance
            canEdit={true}
            data={
              {
                "datefield": "2018-06-20T00:00:00.000Z",
                "enumfield": "yes",
                "floatfield": 1,
                "multiselectfield": [
                  "yes",
                  "no",
                ],
                "stringfield": "some string",
              }
            }
            errors={{}}
            onFieldChange={[Function]}
            onFieldRemove={[Function]}
            template={
              {
                "fields": [],
              }
            }
          />
        </div>
        <Footer
          onCancel={[Function]}
          onRemove={[Function]}
          showSave={false}
        />
      </Form>
    </LoadingIndicatorWrapper>
  </Collapsible>
</div>
`;

exports[`features/metadata-instance-editor/fields/Instance should correctly render the footer with save button when dirty 1`] = `
<div>
  <Collapsible
    animationDuration={550}
    buttonProps={
      {
        "data-resin-target": "metadata-card",
      }
    }
    className=""
    hasStickyHeader={true}
    headerActionItems={null}
    isBordered={true}
    isOpen={true}
    title={
      <span
        className="metadata-instance-editor-instance-title"
      >
        <IconMetadataColored
          type="default"
        />
        <span
          className="metadata-instance-editor-instance-title-text"
        />
      </span>
    }
  >
    <LoadingIndicatorWrapper
      isLoading={false}
    >
      <Form
        onValidSubmit={[Function]}
      >
        <div
          className="metadata-instance-editor-instance"
        >
          <TemplatedInstance
            canEdit={true}
            data={
              {
                "datefield": "2018-06-20T00:00:00.000Z",
                "enumfield": "yes",
                "floatfield": 1,
                "multiselectfield": [
                  "yes",
                  "no",
                ],
                "stringfield": "some string",
              }
            }
            errors={{}}
            onFieldChange={[Function]}
            onFieldRemove={[Function]}
            template={
              {
                "fields": [
                  {
                    "displayName": "No Description Field",
                    "id": "field0",
                    "key": "nodescfield",
                    "type": "string",
                  },
                  {
                    "description": "example of a string field",
                    "displayName": "String Field",
                    "id": "field1",
                    "key": "stringfield",
                    "type": "string",
                  },
                  {
                    "description": "example of an empty string field",
                    "displayName": "Empty String Field",
                    "id": "field2",
                    "key": "emptystring",
                    "type": "string",
                  },
                  {
                    "description": "example of a float field",
                    "displayName": "Float Field",
                    "id": "field3",
                    "key": "floatfield",
                    "type": "float",
                  },
                  {
                    "description": "example of an empty float field",
                    "displayName": "Empty Float Field",
                    "id": "field4",
                    "key": "emptyfloat",
                    "type": "float",
                  },
                  {
                    "description": "example of a enum field",
                    "displayName": "Enum Field",
                    "id": "field5",
                    "key": "enumfield",
                    "options": [
                      {
                        "key": "yes",
                      },
                      {
                        "key": "no",
                      },
                    ],
                    "type": "enum",
                  },
                  {
                    "description": "example of an empty enum field",
                    "displayName": "Empty Enum Field",
                    "id": "field6",
                    "key": "emptyenumfield",
                    "options": [
                      {
                        "key": "yes",
                      },
                      {
                        "key": "no",
                      },
                    ],
                    "type": "enum",
                  },
                  {
                    "description": "example of a date field",
                    "displayName": "Date Field",
                    "id": "field7",
                    "key": "datefield",
                    "type": "date",
                  },
                  {
                    "description": "example of an empty date field",
                    "displayName": "Empty Date Field",
                    "id": "field8",
                    "key": "emptydatefield",
                    "type": "date",
                  },
                  {
                    "description": "example of a multi select field field",
                    "displayName": "Multi Select Field",
                    "id": "field9",
                    "key": "multiselectfield",
                    "options": [
                      {
                        "key": "yes",
                      },
                      {
                        "key": "no",
                      },
                      {
                        "key": "maybe",
                      },
                      {
                        "key": "idk?",
                      },
                      {
                        "key": "oh well",
                      },
                      {
                        "key": "whatever",
                      },
                    ],
                    "type": "multiSelect",
                  },
                ],
              }
            }
          />
        </div>
        <Footer
          onCancel={[Function]}
          onRemove={[Function]}
          showSave={true}
        />
      </Form>
    </LoadingIndicatorWrapper>
  </Collapsible>
</div>
`;

exports[`features/metadata-instance-editor/fields/Instance should not render footer when not editing 1`] = `
<div>
  <Collapsible
    animationDuration={550}
    buttonProps={
      {
        "data-resin-target": "metadata-card",
      }
    }
    className=""
    hasStickyHeader={true}
    headerActionItems={null}
    isBordered={true}
    isOpen={true}
    title={
      <span
        className="metadata-instance-editor-instance-title"
      >
        <IconMetadataColored
          type="default"
        />
        <span
          className="metadata-instance-editor-instance-title-text"
        />
      </span>
    }
  >
    <LoadingIndicatorWrapper
      isLoading={false}
    >
      <Form
        onValidSubmit={[Function]}
      >
        <div
          className="metadata-instance-editor-instance"
        >
          <TemplatedInstance
            canEdit={false}
            data={
              {
                "datefield": "2018-06-20T00:00:00.000Z",
                "enumfield": "yes",
                "floatfield": 1,
                "multiselectfield": [
                  "yes",
                  "no",
                ],
                "stringfield": "some string",
              }
            }
            errors={{}}
            onFieldChange={[Function]}
            onFieldRemove={[Function]}
            template={
              {
                "fields": [
                  {
                    "displayName": "No Description Field",
                    "id": "field0",
                    "key": "nodescfield",
                    "type": "string",
                  },
                  {
                    "description": "example of a string field",
                    "displayName": "String Field",
                    "id": "field1",
                    "key": "stringfield",
                    "type": "string",
                  },
                  {
                    "description": "example of an empty string field",
                    "displayName": "Empty String Field",
                    "id": "field2",
                    "key": "emptystring",
                    "type": "string",
                  },
                  {
                    "description": "example of a float field",
                    "displayName": "Float Field",
                    "id": "field3",
                    "key": "floatfield",
                    "type": "float",
                  },
                  {
                    "description": "example of an empty float field",
                    "displayName": "Empty Float Field",
                    "id": "field4",
                    "key": "emptyfloat",
                    "type": "float",
                  },
                  {
                    "description": "example of a enum field",
                    "displayName": "Enum Field",
                    "id": "field5",
                    "key": "enumfield",
                    "options": [
                      {
                        "key": "yes",
                      },
                      {
                        "key": "no",
                      },
                    ],
                    "type": "enum",
                  },
                  {
                    "description": "example of an empty enum field",
                    "displayName": "Empty Enum Field",
                    "id": "field6",
                    "key": "emptyenumfield",
                    "options": [
                      {
                        "key": "yes",
                      },
                      {
                        "key": "no",
                      },
                    ],
                    "type": "enum",
                  },
                  {
                    "description": "example of a date field",
                    "displayName": "Date Field",
                    "id": "field7",
                    "key": "datefield",
                    "type": "date",
                  },
                  {
                    "description": "example of an empty date field",
                    "displayName": "Empty Date Field",
                    "id": "field8",
                    "key": "emptydatefield",
                    "type": "date",
                  },
                  {
                    "description": "example of a multi select field field",
                    "displayName": "Multi Select Field",
                    "id": "field9",
                    "key": "multiselectfield",
                    "options": [
                      {
                        "key": "yes",
                      },
                      {
                        "key": "no",
                      },
                      {
                        "key": "maybe",
                      },
                      {
                        "key": "idk?",
                      },
                      {
                        "key": "oh well",
                      },
                      {
                        "key": "whatever",
                      },
                    ],
                    "type": "multiSelect",
                  },
                ],
              }
            }
          />
        </div>
      </Form>
    </LoadingIndicatorWrapper>
  </Collapsible>
</div>
`;
