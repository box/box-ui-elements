// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`features/list-view/ListView Snapshot test Should return a snapshot of the ListView component 1`] = `
<ListView
  columnCount={4}
  getColumnWidth={[MockFunction]}
  getGridCell={[Function]}
  getGridHeader={[Function]}
  height={100}
  rowCount={4}
  width={100}
>
  <div
    className="metadata-items-container"
  >
    <MultiGrid
      cellRenderer={[Function]}
      classNameBottomLeftGrid="item-list-bottom-left-grid"
      classNameBottomRightGrid=""
      classNameTopLeftGrid="item-list-top-left-grid"
      classNameTopRightGrid="item-list-top-right-grid"
      columnCount={4}
      columnWidth={100}
      enableFixedColumnScroll={true}
      enableFixedRowScroll={true}
      fixedColumnCount={1}
      fixedRowCount={1}
      height={100}
      hideBottomLeftGridScrollbar={true}
      hideTopRightGridScrollbar={true}
      rowCount={4}
      rowHeight={40}
      scrollToColumn={0}
      scrollToRow={0}
      style={Object {}}
      styleBottomLeftGrid={Object {}}
      styleBottomRightGrid={Object {}}
      styleTopLeftGrid={Object {}}
      styleTopRightGrid={Object {}}
      width={100}
    >
      <div
        style={
          Object {
            "height": 100,
            "overflow": "visible",
            "width": 100,
          }
        }
      >
        <div
          style={
            Object {
              "height": 40,
              "position": "relative",
              "width": 100,
            }
          }
        >
          <Grid
            aria-label="grid"
            aria-readonly={true}
            autoContainerWidth={false}
            autoHeight={false}
            autoWidth={false}
            cellRangeRenderer={[Function]}
            cellRenderer={[Function]}
            className="item-list-top-left-grid"
            classNameBottomLeftGrid="item-list-bottom-left-grid"
            classNameBottomRightGrid=""
            classNameTopLeftGrid="item-list-top-left-grid"
            classNameTopRightGrid="item-list-top-right-grid"
            columnCount={1}
            columnWidth={100}
            containerRole="rowgroup"
            containerStyle={Object {}}
            enableFixedColumnScroll={true}
            enableFixedRowScroll={true}
            estimatedColumnSize={100}
            estimatedRowSize={30}
            fixedColumnCount={1}
            fixedRowCount={1}
            getScrollbarSize={[Function]}
            height={40}
            hideBottomLeftGridScrollbar={true}
            hideTopRightGridScrollbar={true}
            isScrollingOptOut={false}
            noContentRenderer={[Function]}
            onScroll={[Function]}
            onScrollbarPresenceChange={[Function]}
            onSectionRendered={[Function]}
            overscanColumnCount={0}
            overscanIndicesGetter={[Function]}
            overscanRowCount={10}
            role="grid"
            rowCount={1}
            rowHeight={40}
            scrollToAlignment="auto"
            scrollToColumn={-1}
            scrollToRow={-1}
            scrollingResetTimeInterval={150}
            style={
              Object {
                "left": 0,
                "overflowX": "hidden",
                "overflowY": "hidden",
                "position": "absolute",
                "top": 0,
              }
            }
            styleBottomLeftGrid={Object {}}
            styleBottomRightGrid={Object {}}
            styleTopLeftGrid={Object {}}
            styleTopRightGrid={Object {}}
            tabIndex={null}
            width={100}
          >
            <div
              aria-label="grid"
              aria-readonly={true}
              className="ReactVirtualized__Grid item-list-top-left-grid"
              onScroll={[Function]}
              role="grid"
              style={
                Object {
                  "WebkitOverflowScrolling": "touch",
                  "boxSizing": "border-box",
                  "direction": "ltr",
                  "height": 40,
                  "left": 0,
                  "overflowX": "hidden",
                  "overflowY": "hidden",
                  "position": "absolute",
                  "top": 0,
                  "width": 100,
                  "willChange": "transform",
                }
              }
              tabIndex={null}
            >
              <div
                className="ReactVirtualized__Grid__innerScrollContainer"
                role="rowgroup"
                style={
                  Object {
                    "height": 40,
                    "maxHeight": 40,
                    "maxWidth": 100,
                    "overflow": "hidden",
                    "pointerEvents": "",
                    "position": "relative",
                    "width": 100,
                  }
                }
              >
                <div
                  className="item-list-column-header"
                  key="0-0"
                  style={
                    Object {
                      "height": 40,
                      "left": 0,
                      "position": "absolute",
                      "top": 0,
                      "width": 100,
                    }
                  }
                >
                  h1
                </div>
              </div>
            </div>
          </Grid>
          <div
            className="TopRightGrid_ScrollWrapper"
            style={
              Object {
                "height": 40,
                "left": 100,
                "overflowX": "hidden",
                "overflowY": "hidden",
                "position": "absolute",
                "top": 0,
                "width": 0,
              }
            }
          >
            <Grid
              aria-label="grid"
              aria-readonly={true}
              autoContainerWidth={false}
              autoHeight={false}
              autoWidth={false}
              cellRangeRenderer={[Function]}
              cellRenderer={[Function]}
              className="item-list-top-right-grid"
              classNameBottomLeftGrid="item-list-bottom-left-grid"
              classNameBottomRightGrid=""
              classNameTopLeftGrid="item-list-top-left-grid"
              classNameTopRightGrid="item-list-top-right-grid"
              columnCount={3}
              columnWidth={[Function]}
              containerRole="rowgroup"
              containerStyle={Object {}}
              enableFixedColumnScroll={true}
              enableFixedRowScroll={true}
              estimatedColumnSize={100}
              estimatedRowSize={30}
              fixedColumnCount={1}
              fixedRowCount={1}
              getScrollbarSize={[Function]}
              height={40}
              hideBottomLeftGridScrollbar={true}
              hideTopRightGridScrollbar={true}
              isScrollingOptOut={false}
              noContentRenderer={[Function]}
              onScroll={[Function]}
              onScrollbarPresenceChange={[Function]}
              onSectionRendered={[Function]}
              overscanColumnCount={0}
              overscanIndicesGetter={[Function]}
              overscanRowCount={10}
              role="grid"
              rowCount={1}
              rowHeight={40}
              scrollLeft={0}
              scrollToAlignment="auto"
              scrollToColumn={-1}
              scrollToRow={-1}
              scrollingResetTimeInterval={150}
              style={
                Object {
                  "left": 0,
                  "overflowX": "auto",
                  "overflowY": "hidden",
                  "position": "absolute",
                  "top": 0,
                }
              }
              styleBottomLeftGrid={Object {}}
              styleBottomRightGrid={Object {}}
              styleTopLeftGrid={Object {}}
              styleTopRightGrid={Object {}}
              tabIndex={null}
              width={0}
            >
              <div
                aria-label="grid"
                aria-readonly={true}
                className="ReactVirtualized__Grid item-list-top-right-grid"
                onScroll={[Function]}
                role="grid"
                style={
                  Object {
                    "WebkitOverflowScrolling": "touch",
                    "boxSizing": "border-box",
                    "direction": "ltr",
                    "height": 40,
                    "left": 0,
                    "overflowX": "auto",
                    "overflowY": "hidden",
                    "position": "absolute",
                    "top": 0,
                    "width": 0,
                    "willChange": "transform",
                  }
                }
                tabIndex={null}
              />
            </Grid>
          </div>
        </div>
        <div
          style={
            Object {
              "height": 60,
              "overflow": "visible",
              "position": "relative",
              "width": 100,
            }
          }
        >
          <div
            className="BottomLeftGrid_ScrollWrapper"
            style={
              Object {
                "height": 60,
                "left": 0,
                "overflowX": "hidden",
                "overflowY": "hidden",
                "position": "absolute",
                "width": 100,
              }
            }
          >
            <Grid
              aria-label="grid"
              aria-readonly={true}
              autoContainerWidth={false}
              autoHeight={false}
              autoWidth={false}
              cellRangeRenderer={[Function]}
              cellRenderer={[Function]}
              className="item-list-bottom-left-grid"
              classNameBottomLeftGrid="item-list-bottom-left-grid"
              classNameBottomRightGrid=""
              classNameTopLeftGrid="item-list-top-left-grid"
              classNameTopRightGrid="item-list-top-right-grid"
              columnCount={1}
              columnWidth={100}
              containerRole="rowgroup"
              containerStyle={Object {}}
              enableFixedColumnScroll={true}
              enableFixedRowScroll={true}
              estimatedColumnSize={100}
              estimatedRowSize={30}
              fixedColumnCount={1}
              fixedRowCount={1}
              getScrollbarSize={[Function]}
              height={60}
              hideBottomLeftGridScrollbar={true}
              hideTopRightGridScrollbar={true}
              isScrollingOptOut={false}
              noContentRenderer={[Function]}
              onScroll={[Function]}
              onScrollbarPresenceChange={[Function]}
              onSectionRendered={[Function]}
              overscanColumnCount={0}
              overscanIndicesGetter={[Function]}
              overscanRowCount={10}
              role="grid"
              rowCount={3}
              rowHeight={[Function]}
              scrollToAlignment="auto"
              scrollToColumn={-1}
              scrollToRow={-1}
              scrollTop={0}
              scrollingResetTimeInterval={150}
              style={
                Object {
                  "left": 0,
                  "overflowX": "hidden",
                  "overflowY": "auto",
                  "position": "absolute",
                }
              }
              styleBottomLeftGrid={Object {}}
              styleBottomRightGrid={Object {}}
              styleTopLeftGrid={Object {}}
              styleTopRightGrid={Object {}}
              tabIndex={null}
              width={100}
            >
              <div
                aria-label="grid"
                aria-readonly={true}
                className="ReactVirtualized__Grid item-list-bottom-left-grid"
                onScroll={[Function]}
                role="grid"
                style={
                  Object {
                    "WebkitOverflowScrolling": "touch",
                    "boxSizing": "border-box",
                    "direction": "ltr",
                    "height": 60,
                    "left": 0,
                    "overflowX": "hidden",
                    "overflowY": "auto",
                    "position": "absolute",
                    "width": 100,
                    "willChange": "transform",
                  }
                }
                tabIndex={null}
              >
                <div
                  className="ReactVirtualized__Grid__innerScrollContainer"
                  role="rowgroup"
                  style={
                    Object {
                      "height": 120,
                      "maxHeight": 120,
                      "maxWidth": 100,
                      "overflow": "hidden",
                      "pointerEvents": "",
                      "position": "relative",
                      "width": 100,
                    }
                  }
                >
                  <div
                    className="item-list-name-cell"
                    key="0-0"
                    style={
                      Object {
                        "height": 40,
                        "left": 0,
                        "position": "absolute",
                        "top": 0,
                        "width": 100,
                      }
                    }
                  >
                    A
                  </div>
                  <div
                    className="item-list-name-cell"
                    key="1-0"
                    style={
                      Object {
                        "height": 40,
                        "left": 0,
                        "position": "absolute",
                        "top": 40,
                        "width": 100,
                      }
                    }
                  >
                    B
                  </div>
                  <div
                    className="item-list-name-cell"
                    key="2-0"
                    style={
                      Object {
                        "height": 40,
                        "left": 0,
                        "position": "absolute",
                        "top": 80,
                        "width": 100,
                      }
                    }
                  >
                    C
                  </div>
                </div>
              </div>
            </Grid>
          </div>
          <Grid
            aria-label="grid"
            aria-readonly={true}
            autoContainerWidth={false}
            autoHeight={false}
            autoWidth={false}
            cellRangeRenderer={[Function]}
            cellRenderer={[Function]}
            className=""
            classNameBottomLeftGrid="item-list-bottom-left-grid"
            classNameBottomRightGrid=""
            classNameTopLeftGrid="item-list-top-left-grid"
            classNameTopRightGrid="item-list-top-right-grid"
            columnCount={3}
            columnWidth={[Function]}
            containerRole="rowgroup"
            containerStyle={Object {}}
            enableFixedColumnScroll={true}
            enableFixedRowScroll={true}
            estimatedColumnSize={100}
            estimatedRowSize={30}
            fixedColumnCount={1}
            fixedRowCount={1}
            getScrollbarSize={[Function]}
            height={60}
            hideBottomLeftGridScrollbar={true}
            hideTopRightGridScrollbar={true}
            isScrollingOptOut={false}
            noContentRenderer={[Function]}
            onScroll={[Function]}
            onScrollbarPresenceChange={[Function]}
            onSectionRendered={[Function]}
            overscanColumnCount={0}
            overscanIndicesGetter={[Function]}
            overscanRowCount={10}
            role="grid"
            rowCount={3}
            rowHeight={[Function]}
            scrollLeft={0}
            scrollToAlignment="auto"
            scrollToColumn={-1}
            scrollToRow={-1}
            scrollTop={0}
            scrollingResetTimeInterval={150}
            style={
              Object {
                "left": 100,
                "position": "absolute",
              }
            }
            styleBottomLeftGrid={Object {}}
            styleBottomRightGrid={Object {}}
            styleTopLeftGrid={Object {}}
            styleTopRightGrid={Object {}}
            tabIndex={0}
            width={0}
          >
            <div
              aria-label="grid"
              aria-readonly={true}
              className="ReactVirtualized__Grid"
              onScroll={[Function]}
              role="grid"
              style={
                Object {
                  "WebkitOverflowScrolling": "touch",
                  "boxSizing": "border-box",
                  "direction": "ltr",
                  "height": 60,
                  "left": 100,
                  "overflowX": "auto",
                  "overflowY": "auto",
                  "position": "absolute",
                  "width": 0,
                  "willChange": "transform",
                }
              }
              tabIndex={0}
            />
          </Grid>
        </div>
      </div>
    </MultiGrid>
  </div>
</ListView>
`;
