// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`features/unified-share-modal/UnifiedShareModal render() should not render a default component FTUX when prop is false 1`] = `
<Fragment>
  <Modal
    className="be-modal unified-share-modal"
    focusElementSelector=".toggle-simple"
    style={
      Object {
        "backdrop": Object {},
        "dialog": Object {},
      }
    }
    title={
      <UnifiedShareModalTitle
        isEmailLinkSectionExpanded={false}
        item={
          Object {
            "grantedPermissions": Object {
              "itemShare": true,
            },
            "hideCollaborators": false,
            "id": "111",
            "name": "test file",
            "type": "file",
          }
        }
        showCollaboratorList={false}
      />
    }
  >
    <UnifiedShareForm
      classification={
        Object {
          "definition": undefined,
          "name": undefined,
        }
      }
      collaborationRestrictionWarning=""
      collaboratorsList={
        Object {
          "collaborators": Array [],
        }
      }
      createSharedLinkOnLoad={false}
      displayInModal={true}
      focusSharedLinkOnLoad={false}
      getInitialData={[MockFunction]}
      handleFtuxCloseClick={[Function]}
      initiallySelectedContacts={Array []}
      intl={
        Object {
          "formatMessage": [MockFunction],
        }
      }
      inviteePermissions={
        Array [
          Object {
            "text": "Editor",
            "value": "Editor",
          },
        ]
      }
      isAllowEditSharedLinkForFileEnabled={false}
      isFetching={true}
      item={
        Object {
          "grantedPermissions": Object {
            "itemShare": true,
          },
          "hideCollaborators": false,
          "id": "111",
          "name": "test file",
          "type": "file",
        }
      }
      openConfirmModal={[Function]}
      restrictedExternalCollabEmails={Array []}
      sharedLink={Object {}}
      sharedLinkLoaded={false}
      shouldRenderFTUXTooltip={true}
      showCalloutForUser={false}
      trackingProps={
        Object {
          "inviteCollabTracking": Object {},
          "inviteCollabsEmailTracking": Object {},
          "modalTracking": Object {},
          "removeLinkConfirmModalTracking": Object {},
          "sharedLinkEmailTracking": Object {},
          "sharedLinkTracking": Object {},
        }
      }
    />
  </Modal>
</Fragment>
`;

exports[`features/unified-share-modal/UnifiedShareModal render() should not render a default component FTUX when state is false 1`] = `
<Fragment>
  <Modal
    className="be-modal unified-share-modal"
    focusElementSelector=".toggle-simple"
    style={
      Object {
        "backdrop": Object {},
        "dialog": Object {},
      }
    }
    title={
      <UnifiedShareModalTitle
        isEmailLinkSectionExpanded={false}
        item={
          Object {
            "grantedPermissions": Object {
              "itemShare": true,
            },
            "hideCollaborators": false,
            "id": "111",
            "name": "test file",
            "type": "file",
          }
        }
        showCollaboratorList={false}
      />
    }
  >
    <UnifiedShareForm
      classification={
        Object {
          "definition": undefined,
          "name": undefined,
        }
      }
      collaborationRestrictionWarning=""
      collaboratorsList={
        Object {
          "collaborators": Array [],
        }
      }
      createSharedLinkOnLoad={false}
      displayInModal={true}
      focusSharedLinkOnLoad={false}
      getInitialData={[MockFunction]}
      handleFtuxCloseClick={[Function]}
      initiallySelectedContacts={Array []}
      intl={
        Object {
          "formatMessage": [MockFunction],
        }
      }
      inviteePermissions={
        Array [
          Object {
            "text": "Editor",
            "value": "Editor",
          },
        ]
      }
      isAllowEditSharedLinkForFileEnabled={false}
      isFetching={true}
      item={
        Object {
          "grantedPermissions": Object {
            "itemShare": true,
          },
          "hideCollaborators": false,
          "id": "111",
          "name": "test file",
          "type": "file",
        }
      }
      openConfirmModal={[Function]}
      restrictedExternalCollabEmails={Array []}
      sharedLink={Object {}}
      sharedLinkLoaded={false}
      shouldRenderFTUXTooltip={false}
      showCalloutForUser={true}
      trackingProps={
        Object {
          "inviteCollabTracking": Object {},
          "inviteCollabsEmailTracking": Object {},
          "modalTracking": Object {},
          "removeLinkConfirmModalTracking": Object {},
          "sharedLinkEmailTracking": Object {},
          "sharedLinkTracking": Object {},
        }
      }
    />
  </Modal>
</Fragment>
`;

exports[`features/unified-share-modal/UnifiedShareModal render() should render a component with autofocus set for shared link when focusSharedLinkOnLoad is enabled and there is a shared link 1`] = `
<Fragment>
  <Modal
    className="be-modal unified-share-modal"
    focusElementSelector=".toggle-simple"
    style={
      Object {
        "backdrop": Object {},
        "dialog": Object {},
      }
    }
    title={
      <UnifiedShareModalTitle
        isEmailLinkSectionExpanded={false}
        item={
          Object {
            "grantedPermissions": Object {
              "itemShare": true,
            },
            "hideCollaborators": false,
            "id": "111",
            "name": "test file",
            "type": "file",
          }
        }
        showCollaboratorList={false}
      />
    }
  >
    <UnifiedShareForm
      classification={
        Object {
          "definition": undefined,
          "name": undefined,
        }
      }
      collaborationRestrictionWarning=""
      collaboratorsList={
        Object {
          "collaborators": Array [],
        }
      }
      createSharedLinkOnLoad={false}
      displayInModal={true}
      focusSharedLinkOnLoad={true}
      getInitialData={[MockFunction]}
      handleFtuxCloseClick={[Function]}
      initiallySelectedContacts={Array []}
      intl={
        Object {
          "formatMessage": [MockFunction],
        }
      }
      inviteePermissions={
        Array [
          Object {
            "text": "Editor",
            "value": "Editor",
          },
        ]
      }
      isAllowEditSharedLinkForFileEnabled={false}
      isFetching={true}
      item={
        Object {
          "grantedPermissions": Object {
            "itemShare": true,
          },
          "hideCollaborators": false,
          "id": "111",
          "name": "test file",
          "type": "file",
        }
      }
      openConfirmModal={[Function]}
      restrictedExternalCollabEmails={Array []}
      sharedLink={
        Object {
          "url": "https://foo.com",
        }
      }
      sharedLinkLoaded={true}
      shouldRenderFTUXTooltip={false}
      trackingProps={
        Object {
          "inviteCollabTracking": Object {},
          "inviteCollabsEmailTracking": Object {},
          "modalTracking": Object {},
          "removeLinkConfirmModalTracking": Object {},
          "sharedLinkEmailTracking": Object {},
          "sharedLinkTracking": Object {},
        }
      }
    />
  </Modal>
</Fragment>
`;

exports[`features/unified-share-modal/UnifiedShareModal render() should render a default component FTUX based on enabled prop and state 1`] = `
<Fragment>
  <Modal
    className="be-modal unified-share-modal"
    focusElementSelector=".toggle-simple"
    style={
      Object {
        "backdrop": Object {},
        "dialog": Object {},
      }
    }
    title={
      <UnifiedShareModalTitle
        isEmailLinkSectionExpanded={false}
        item={
          Object {
            "grantedPermissions": Object {
              "itemShare": true,
            },
            "hideCollaborators": false,
            "id": "111",
            "name": "test file",
            "type": "file",
          }
        }
        showCollaboratorList={false}
      />
    }
  >
    <UnifiedShareForm
      classification={
        Object {
          "definition": undefined,
          "name": undefined,
        }
      }
      collaborationRestrictionWarning=""
      collaboratorsList={
        Object {
          "collaborators": Array [],
        }
      }
      createSharedLinkOnLoad={false}
      displayInModal={true}
      focusSharedLinkOnLoad={false}
      getInitialData={[MockFunction]}
      handleFtuxCloseClick={[Function]}
      initiallySelectedContacts={Array []}
      intl={
        Object {
          "formatMessage": [MockFunction],
        }
      }
      inviteePermissions={
        Array [
          Object {
            "text": "Editor",
            "value": "Editor",
          },
        ]
      }
      isAllowEditSharedLinkForFileEnabled={false}
      isFetching={true}
      item={
        Object {
          "grantedPermissions": Object {
            "itemShare": true,
          },
          "hideCollaborators": false,
          "id": "111",
          "name": "test file",
          "type": "file",
        }
      }
      openConfirmModal={[Function]}
      restrictedExternalCollabEmails={Array []}
      sharedLink={Object {}}
      sharedLinkLoaded={false}
      shouldRenderFTUXTooltip={true}
      showCalloutForUser={true}
      trackingProps={
        Object {
          "inviteCollabTracking": Object {},
          "inviteCollabsEmailTracking": Object {},
          "modalTracking": Object {},
          "removeLinkConfirmModalTracking": Object {},
          "sharedLinkEmailTracking": Object {},
          "sharedLinkTracking": Object {},
        }
      }
    />
  </Modal>
</Fragment>
`;

exports[`features/unified-share-modal/UnifiedShareModal render() should render a default component in initial loading state 1`] = `
<Fragment>
  <Modal
    className="be-modal unified-share-modal"
    focusElementSelector=".toggle-simple"
    style={
      Object {
        "backdrop": Object {},
        "dialog": Object {},
      }
    }
    title={
      <UnifiedShareModalTitle
        isEmailLinkSectionExpanded={false}
        item={
          Object {
            "grantedPermissions": Object {
              "itemShare": true,
            },
            "hideCollaborators": false,
            "id": "111",
            "name": "test file",
            "type": "file",
          }
        }
        showCollaboratorList={false}
      />
    }
  >
    <UnifiedShareForm
      classification={
        Object {
          "definition": undefined,
          "name": undefined,
        }
      }
      collaborationRestrictionWarning=""
      collaboratorsList={
        Object {
          "collaborators": Array [],
        }
      }
      createSharedLinkOnLoad={false}
      displayInModal={true}
      focusSharedLinkOnLoad={false}
      getInitialData={[MockFunction]}
      handleFtuxCloseClick={[Function]}
      initiallySelectedContacts={Array []}
      intl={
        Object {
          "formatMessage": [MockFunction],
        }
      }
      inviteePermissions={
        Array [
          Object {
            "text": "Editor",
            "value": "Editor",
          },
        ]
      }
      isAllowEditSharedLinkForFileEnabled={false}
      isFetching={true}
      item={
        Object {
          "grantedPermissions": Object {
            "itemShare": true,
          },
          "hideCollaborators": false,
          "id": "111",
          "name": "test file",
          "type": "file",
        }
      }
      openConfirmModal={[Function]}
      restrictedExternalCollabEmails={Array []}
      sharedLink={Object {}}
      sharedLinkLoaded={false}
      shouldRenderFTUXTooltip={false}
      trackingProps={
        Object {
          "inviteCollabTracking": Object {},
          "inviteCollabsEmailTracking": Object {},
          "modalTracking": Object {},
          "removeLinkConfirmModalTracking": Object {},
          "sharedLinkEmailTracking": Object {},
          "sharedLinkTracking": Object {},
        }
      }
    />
  </Modal>
</Fragment>
`;

exports[`features/unified-share-modal/UnifiedShareModal render() should render a default component when showing invite section expanded 1`] = `
<Fragment>
  <Modal
    className="be-modal unified-share-modal"
    focusElementSelector=".toggle-simple"
    style={
      Object {
        "backdrop": Object {},
        "dialog": Object {},
      }
    }
    title={
      <UnifiedShareModalTitle
        isEmailLinkSectionExpanded={false}
        item={
          Object {
            "grantedPermissions": Object {
              "itemShare": true,
            },
            "hideCollaborators": false,
            "id": "111",
            "name": "test file",
            "type": "file",
          }
        }
        showCollaboratorList={false}
      />
    }
  >
    <UnifiedShareForm
      classification={
        Object {
          "definition": undefined,
          "name": undefined,
        }
      }
      collaborationRestrictionWarning=""
      collaboratorsList={
        Object {
          "collaborators": Array [],
        }
      }
      createSharedLinkOnLoad={false}
      displayInModal={true}
      focusSharedLinkOnLoad={false}
      getInitialData={[MockFunction]}
      handleFtuxCloseClick={[Function]}
      initiallySelectedContacts={Array []}
      intl={
        Object {
          "formatMessage": [MockFunction],
        }
      }
      inviteePermissions={
        Array [
          Object {
            "text": "Editor",
            "value": "Editor",
          },
        ]
      }
      isAllowEditSharedLinkForFileEnabled={false}
      isFetching={false}
      item={
        Object {
          "grantedPermissions": Object {
            "itemShare": true,
          },
          "hideCollaborators": false,
          "id": "111",
          "name": "test file",
          "type": "file",
        }
      }
      openConfirmModal={[Function]}
      restrictedExternalCollabEmails={Array []}
      sharedLink={Object {}}
      sharedLinkLoaded={false}
      shouldRenderFTUXTooltip={false}
      trackingProps={
        Object {
          "inviteCollabTracking": Object {},
          "inviteCollabsEmailTracking": Object {},
          "modalTracking": Object {},
          "removeLinkConfirmModalTracking": Object {},
          "sharedLinkEmailTracking": Object {},
          "sharedLinkTracking": Object {},
        }
      }
    />
  </Modal>
</Fragment>
`;

exports[`features/unified-share-modal/UnifiedShareModal render() should render a default component when the user cannot invite collaborators due to item type of weblink 1`] = `
<Fragment>
  <Modal
    className="be-modal unified-share-modal"
    focusElementSelector=".toggle-simple"
    style={
      Object {
        "backdrop": Object {},
        "dialog": Object {},
      }
    }
    title={
      <UnifiedShareModalTitle
        isEmailLinkSectionExpanded={false}
        item={
          Object {
            "grantedPermissions": Object {
              "itemShare": true,
            },
            "hideCollaborators": false,
            "id": "111",
            "name": "test file",
            "type": "web_link",
          }
        }
        showCollaboratorList={false}
      />
    }
  >
    <UnifiedShareForm
      canInvite={false}
      classification={
        Object {
          "definition": undefined,
          "name": undefined,
        }
      }
      collaborationRestrictionWarning=""
      collaboratorsList={
        Object {
          "collaborators": Array [],
        }
      }
      createSharedLinkOnLoad={false}
      displayInModal={true}
      focusSharedLinkOnLoad={false}
      getInitialData={[MockFunction]}
      handleFtuxCloseClick={[Function]}
      initiallySelectedContacts={Array []}
      intl={
        Object {
          "formatMessage": [MockFunction],
        }
      }
      inviteePermissions={
        Array [
          Object {
            "text": "Editor",
            "value": "Editor",
          },
        ]
      }
      isAllowEditSharedLinkForFileEnabled={false}
      isFetching={false}
      item={
        Object {
          "grantedPermissions": Object {
            "itemShare": true,
          },
          "hideCollaborators": false,
          "id": "111",
          "name": "test file",
          "type": "web_link",
        }
      }
      openConfirmModal={[Function]}
      restrictedExternalCollabEmails={Array []}
      sharedLink={Object {}}
      sharedLinkLoaded={false}
      shouldRenderFTUXTooltip={false}
      trackingProps={
        Object {
          "inviteCollabTracking": Object {},
          "inviteCollabsEmailTracking": Object {},
          "modalTracking": Object {},
          "removeLinkConfirmModalTracking": Object {},
          "sharedLinkEmailTracking": Object {},
          "sharedLinkTracking": Object {},
        }
      }
    />
  </Modal>
</Fragment>
`;

exports[`features/unified-share-modal/UnifiedShareModal render() should render a default component when the user cannot invite collaborators due to permissions 1`] = `
<Fragment>
  <Modal
    className="be-modal unified-share-modal"
    focusElementSelector=".toggle-simple"
    style={
      Object {
        "backdrop": Object {},
        "dialog": Object {},
      }
    }
    title={
      <UnifiedShareModalTitle
        isEmailLinkSectionExpanded={false}
        item={
          Object {
            "grantedPermissions": Object {
              "itemShare": true,
            },
            "hideCollaborators": false,
            "id": "111",
            "name": "test file",
            "type": "folder",
          }
        }
        showCollaboratorList={false}
      />
    }
  >
    <UnifiedShareForm
      canInvite={false}
      classification={
        Object {
          "definition": undefined,
          "name": undefined,
        }
      }
      collaborationRestrictionWarning=""
      collaboratorsList={
        Object {
          "collaborators": Array [],
        }
      }
      createSharedLinkOnLoad={false}
      displayInModal={true}
      focusSharedLinkOnLoad={false}
      getInitialData={[MockFunction]}
      handleFtuxCloseClick={[Function]}
      initiallySelectedContacts={Array []}
      intl={
        Object {
          "formatMessage": [MockFunction],
        }
      }
      inviteePermissions={
        Array [
          Object {
            "text": "Editor",
            "value": "Editor",
          },
        ]
      }
      isAllowEditSharedLinkForFileEnabled={false}
      isFetching={true}
      item={
        Object {
          "grantedPermissions": Object {
            "itemShare": true,
          },
          "hideCollaborators": false,
          "id": "111",
          "name": "test file",
          "type": "folder",
        }
      }
      openConfirmModal={[Function]}
      restrictedExternalCollabEmails={Array []}
      sharedLink={Object {}}
      sharedLinkLoaded={false}
      shouldRenderFTUXTooltip={false}
      trackingProps={
        Object {
          "inviteCollabTracking": Object {},
          "inviteCollabsEmailTracking": Object {},
          "modalTracking": Object {},
          "removeLinkConfirmModalTracking": Object {},
          "sharedLinkEmailTracking": Object {},
          "sharedLinkTracking": Object {},
        }
      }
    />
  </Modal>
</Fragment>
`;

exports[`features/unified-share-modal/UnifiedShareModal render() should render a default component with collaboration restriction warning specified and invite section is NOT expanded 1`] = `
<Fragment>
  <Modal
    className="be-modal unified-share-modal"
    focusElementSelector=".bdl-PillSelector-input"
    style={
      Object {
        "backdrop": Object {},
        "dialog": Object {},
      }
    }
    title={
      <UnifiedShareModalTitle
        isEmailLinkSectionExpanded={false}
        item={
          Object {
            "grantedPermissions": Object {
              "itemShare": true,
            },
            "hideCollaborators": false,
            "id": "111",
            "name": "test file",
            "type": "file",
          }
        }
        showCollaboratorList={false}
      />
    }
  >
    <UnifiedShareForm
      canInvite={true}
      classification={
        Object {
          "definition": undefined,
          "name": undefined,
        }
      }
      collaborationRestrictionWarning="Collaboration invitations can only be sent to people within company."
      collaboratorsList={
        Object {
          "collaborators": Array [],
        }
      }
      createSharedLinkOnLoad={false}
      displayInModal={true}
      focusSharedLinkOnLoad={false}
      getInitialData={[MockFunction]}
      handleFtuxCloseClick={[Function]}
      initiallySelectedContacts={Array []}
      intl={
        Object {
          "formatMessage": [MockFunction],
        }
      }
      inviteePermissions={
        Array [
          Object {
            "text": "Editor",
            "value": "Editor",
          },
        ]
      }
      isAllowEditSharedLinkForFileEnabled={false}
      isFetching={false}
      item={
        Object {
          "grantedPermissions": Object {
            "itemShare": true,
          },
          "hideCollaborators": false,
          "id": "111",
          "name": "test file",
          "type": "file",
        }
      }
      openConfirmModal={[Function]}
      restrictedExternalCollabEmails={Array []}
      sharedLink={Object {}}
      sharedLinkLoaded={false}
      shouldRenderFTUXTooltip={false}
      trackingProps={
        Object {
          "inviteCollabTracking": Object {},
          "inviteCollabsEmailTracking": Object {},
          "modalTracking": Object {},
          "removeLinkConfirmModalTracking": Object {},
          "sharedLinkEmailTracking": Object {},
          "sharedLinkTracking": Object {},
        }
      }
    />
  </Modal>
</Fragment>
`;

exports[`features/unified-share-modal/UnifiedShareModal render() should render a default component with collaboration restriction warning specified and invite section is expanded 1`] = `
<Fragment>
  <Modal
    className="be-modal unified-share-modal"
    focusElementSelector=".bdl-PillSelector-input"
    style={
      Object {
        "backdrop": Object {},
        "dialog": Object {},
      }
    }
    title={
      <UnifiedShareModalTitle
        isEmailLinkSectionExpanded={false}
        item={
          Object {
            "grantedPermissions": Object {
              "itemShare": true,
            },
            "hideCollaborators": false,
            "id": "111",
            "name": "test file",
            "type": "file",
          }
        }
        showCollaboratorList={false}
      />
    }
  >
    <UnifiedShareForm
      canInvite={true}
      classification={
        Object {
          "definition": undefined,
          "name": undefined,
        }
      }
      collaborationRestrictionWarning="Collaboration invitations can only be sent to people within company."
      collaboratorsList={
        Object {
          "collaborators": Array [],
        }
      }
      createSharedLinkOnLoad={false}
      displayInModal={true}
      focusSharedLinkOnLoad={false}
      getInitialData={[MockFunction]}
      handleFtuxCloseClick={[Function]}
      initiallySelectedContacts={Array []}
      intl={
        Object {
          "formatMessage": [MockFunction],
        }
      }
      inviteePermissions={
        Array [
          Object {
            "text": "Editor",
            "value": "Editor",
          },
        ]
      }
      isAllowEditSharedLinkForFileEnabled={false}
      isFetching={false}
      item={
        Object {
          "grantedPermissions": Object {
            "itemShare": true,
          },
          "hideCollaborators": false,
          "id": "111",
          "name": "test file",
          "type": "file",
        }
      }
      openConfirmModal={[Function]}
      restrictedExternalCollabEmails={Array []}
      sharedLink={Object {}}
      sharedLinkLoaded={false}
      shouldRenderFTUXTooltip={false}
      trackingProps={
        Object {
          "inviteCollabTracking": Object {},
          "inviteCollabsEmailTracking": Object {},
          "modalTracking": Object {},
          "removeLinkConfirmModalTracking": Object {},
          "sharedLinkEmailTracking": Object {},
          "sharedLinkTracking": Object {},
        }
      }
    />
  </Modal>
</Fragment>
`;

exports[`features/unified-share-modal/UnifiedShareModal render() should render a default component with collaborator list if showCollaboratorList state is set 1`] = `
<Fragment>
  <Modal
    className="be-modal unified-share-modal"
    focusElementSelector=".toggle-simple"
    style={
      Object {
        "backdrop": Object {},
        "dialog": Object {},
      }
    }
    title={
      <UnifiedShareModalTitle
        isEmailLinkSectionExpanded={false}
        item={
          Object {
            "grantedPermissions": Object {
              "itemShare": true,
            },
            "hideCollaborators": false,
            "id": "111",
            "name": "test file",
            "type": "file",
          }
        }
        showCollaboratorList={true}
      />
    }
  >
    <UnifiedShareForm
      classification={
        Object {
          "definition": undefined,
          "name": undefined,
        }
      }
      collaborationRestrictionWarning=""
      collaboratorsList={
        Object {
          "collaborators": Array [
            Object {
              "hasCustomAvatar": false,
              "name": "test a",
            },
            Object {
              "hasCustomAvatar": false,
              "name": "test b",
            },
          ],
        }
      }
      createSharedLinkOnLoad={false}
      displayInModal={true}
      focusSharedLinkOnLoad={false}
      getInitialData={[MockFunction]}
      handleFtuxCloseClick={[Function]}
      initiallySelectedContacts={Array []}
      intl={
        Object {
          "formatMessage": [MockFunction],
        }
      }
      inviteePermissions={
        Array [
          Object {
            "text": "Editor",
            "value": "Editor",
          },
        ]
      }
      isAllowEditSharedLinkForFileEnabled={false}
      isFetching={true}
      item={
        Object {
          "grantedPermissions": Object {
            "itemShare": true,
          },
          "hideCollaborators": false,
          "id": "111",
          "name": "test file",
          "type": "file",
        }
      }
      openConfirmModal={[Function]}
      restrictedExternalCollabEmails={Array []}
      sharedLink={Object {}}
      sharedLinkLoaded={false}
      shouldRenderFTUXTooltip={false}
      trackingProps={
        Object {
          "inviteCollabTracking": Object {},
          "inviteCollabsEmailTracking": Object {},
          "modalTracking": Object {},
          "removeLinkConfirmModalTracking": Object {},
          "sharedLinkEmailTracking": Object {},
          "sharedLinkTracking": Object {},
        }
      }
    />
  </Modal>
</Fragment>
`;

exports[`features/unified-share-modal/UnifiedShareModal render() should render a default component with confirm modal open 1`] = `
<Fragment>
  <Modal
    className="be-modal unified-share-modal"
    focusElementSelector=".toggle-simple"
    isOpen={false}
    style={
      Object {
        "backdrop": Object {},
        "dialog": Object {},
      }
    }
    title={
      <UnifiedShareModalTitle
        isEmailLinkSectionExpanded={false}
        item={
          Object {
            "grantedPermissions": Object {
              "itemShare": true,
            },
            "hideCollaborators": false,
            "id": "111",
            "name": "test file",
            "type": "file",
          }
        }
        showCollaboratorList={false}
      />
    }
  >
    <UnifiedShareForm
      classification={
        Object {
          "definition": undefined,
          "name": undefined,
        }
      }
      collaborationRestrictionWarning=""
      collaboratorsList={
        Object {
          "collaborators": Array [],
        }
      }
      createSharedLinkOnLoad={false}
      displayInModal={true}
      focusSharedLinkOnLoad={false}
      getInitialData={[MockFunction]}
      handleFtuxCloseClick={[Function]}
      initiallySelectedContacts={Array []}
      intl={
        Object {
          "formatMessage": [MockFunction],
        }
      }
      inviteePermissions={
        Array [
          Object {
            "text": "Editor",
            "value": "Editor",
          },
        ]
      }
      isAllowEditSharedLinkForFileEnabled={false}
      isFetching={false}
      item={
        Object {
          "grantedPermissions": Object {
            "itemShare": true,
          },
          "hideCollaborators": false,
          "id": "111",
          "name": "test file",
          "type": "file",
        }
      }
      openConfirmModal={[Function]}
      restrictedExternalCollabEmails={Array []}
      sharedLink={Object {}}
      sharedLinkLoaded={false}
      shouldRenderFTUXTooltip={false}
      trackingProps={
        Object {
          "inviteCollabTracking": Object {},
          "inviteCollabsEmailTracking": Object {},
          "modalTracking": Object {},
          "removeLinkConfirmModalTracking": Object {},
          "sharedLinkEmailTracking": Object {},
          "sharedLinkTracking": Object {},
        }
      }
    />
  </Modal>
  <RemoveLinkConfirmModal
    isOpen={true}
    onRequestClose={[Function]}
    removeLink={[Function]}
  />
</Fragment>
`;

exports[`features/unified-share-modal/UnifiedShareModal render() should render a default component with correct Focus element and props when focusSharedLinkOnLoad is enabled 1`] = `
<Fragment>
  <Modal
    className="be-modal unified-share-modal"
    focusElementSelector=".toggle-simple"
    style={
      Object {
        "backdrop": Object {},
        "dialog": Object {},
      }
    }
    title={
      <UnifiedShareModalTitle
        isEmailLinkSectionExpanded={false}
        item={
          Object {
            "grantedPermissions": Object {
              "itemShare": true,
            },
            "hideCollaborators": false,
            "id": "111",
            "name": "test file",
            "type": "file",
          }
        }
        showCollaboratorList={false}
      />
    }
  >
    <UnifiedShareForm
      classification={
        Object {
          "definition": undefined,
          "name": undefined,
        }
      }
      collaborationRestrictionWarning=""
      collaboratorsList={
        Object {
          "collaborators": Array [],
        }
      }
      createSharedLinkOnLoad={false}
      displayInModal={true}
      focusSharedLinkOnLoad={true}
      getInitialData={[MockFunction]}
      handleFtuxCloseClick={[Function]}
      initiallySelectedContacts={Array []}
      intl={
        Object {
          "formatMessage": [MockFunction],
        }
      }
      inviteePermissions={
        Array [
          Object {
            "text": "Editor",
            "value": "Editor",
          },
        ]
      }
      isAllowEditSharedLinkForFileEnabled={false}
      isFetching={true}
      item={
        Object {
          "grantedPermissions": Object {
            "itemShare": true,
          },
          "hideCollaborators": false,
          "id": "111",
          "name": "test file",
          "type": "file",
        }
      }
      openConfirmModal={[Function]}
      restrictedExternalCollabEmails={Array []}
      sharedLink={
        Object {
          "url": "https://foo.com",
        }
      }
      sharedLinkLoaded={false}
      shouldRenderFTUXTooltip={false}
      trackingProps={
        Object {
          "inviteCollabTracking": Object {},
          "inviteCollabsEmailTracking": Object {},
          "modalTracking": Object {},
          "removeLinkConfirmModalTracking": Object {},
          "sharedLinkEmailTracking": Object {},
          "sharedLinkTracking": Object {},
        }
      }
    />
  </Modal>
</Fragment>
`;

exports[`features/unified-share-modal/UnifiedShareModal render() should render a default component with default props 1`] = `
<Fragment>
  <Modal
    className="be-modal unified-share-modal"
    focusElementSelector=".toggle-simple"
    style={
      Object {
        "backdrop": Object {},
        "dialog": Object {},
      }
    }
    title={
      <UnifiedShareModalTitle
        isEmailLinkSectionExpanded={false}
        item={
          Object {
            "grantedPermissions": Object {
              "itemShare": true,
            },
            "hideCollaborators": false,
            "id": "111",
            "name": "test file",
            "type": "file",
          }
        }
        showCollaboratorList={false}
      />
    }
  >
    <UnifiedShareForm
      classification={
        Object {
          "definition": undefined,
          "name": undefined,
        }
      }
      collaborationRestrictionWarning=""
      collaboratorsList={
        Object {
          "collaborators": Array [],
        }
      }
      createSharedLinkOnLoad={false}
      displayInModal={true}
      focusSharedLinkOnLoad={false}
      getInitialData={[MockFunction]}
      handleFtuxCloseClick={[Function]}
      initiallySelectedContacts={Array []}
      intl={
        Object {
          "formatMessage": [MockFunction],
        }
      }
      inviteePermissions={
        Array [
          Object {
            "text": "Editor",
            "value": "Editor",
          },
        ]
      }
      isAllowEditSharedLinkForFileEnabled={false}
      isFetching={false}
      item={
        Object {
          "grantedPermissions": Object {
            "itemShare": true,
          },
          "hideCollaborators": false,
          "id": "111",
          "name": "test file",
          "type": "file",
        }
      }
      openConfirmModal={[Function]}
      restrictedExternalCollabEmails={Array []}
      sharedLink={Object {}}
      sharedLinkLoaded={false}
      shouldRenderFTUXTooltip={false}
      trackingProps={
        Object {
          "inviteCollabTracking": Object {},
          "inviteCollabsEmailTracking": Object {},
          "modalTracking": Object {},
          "removeLinkConfirmModalTracking": Object {},
          "sharedLinkEmailTracking": Object {},
          "sharedLinkTracking": Object {},
        }
      }
    />
  </Modal>
</Fragment>
`;

exports[`features/unified-share-modal/UnifiedShareModal render() should render a default component with invitee permissions listed 1`] = `
<Fragment>
  <Modal
    className="be-modal unified-share-modal"
    focusElementSelector=".bdl-PillSelector-input"
    style={
      Object {
        "backdrop": Object {},
        "dialog": Object {},
      }
    }
    title={
      <UnifiedShareModalTitle
        isEmailLinkSectionExpanded={false}
        item={
          Object {
            "grantedPermissions": Object {
              "itemShare": true,
            },
            "hideCollaborators": false,
            "id": "111",
            "name": "test file",
            "type": "file",
          }
        }
        showCollaboratorList={false}
      />
    }
  >
    <UnifiedShareForm
      canInvite={true}
      classification={
        Object {
          "definition": undefined,
          "name": undefined,
        }
      }
      collaborationRestrictionWarning=""
      collaboratorsList={
        Object {
          "collaborators": Array [],
        }
      }
      createSharedLinkOnLoad={false}
      displayInModal={true}
      focusSharedLinkOnLoad={false}
      getInitialData={[MockFunction]}
      handleFtuxCloseClick={[Function]}
      initiallySelectedContacts={Array []}
      intl={
        Object {
          "formatMessage": [MockFunction],
        }
      }
      inviteePermissions={
        Array [
          "Editor",
        ]
      }
      isAllowEditSharedLinkForFileEnabled={false}
      isFetching={false}
      item={
        Object {
          "grantedPermissions": Object {
            "itemShare": true,
          },
          "hideCollaborators": false,
          "id": "111",
          "name": "test file",
          "type": "file",
        }
      }
      openConfirmModal={[Function]}
      restrictedExternalCollabEmails={Array []}
      sharedLink={Object {}}
      sharedLinkLoaded={false}
      shouldRenderFTUXTooltip={false}
      submitting={false}
      trackingProps={
        Object {
          "inviteCollabTracking": Object {},
          "inviteCollabsEmailTracking": Object {},
          "modalTracking": Object {},
          "removeLinkConfirmModalTracking": Object {},
          "sharedLinkEmailTracking": Object {},
          "sharedLinkTracking": Object {},
        }
      }
    />
  </Modal>
</Fragment>
`;

exports[`features/unified-share-modal/UnifiedShareModal render() should render a default component with send invite error specified 1`] = `
<Fragment>
  <Modal
    className="be-modal unified-share-modal"
    focusElementSelector=".bdl-PillSelector-input"
    style={
      Object {
        "backdrop": Object {},
        "dialog": Object {},
      }
    }
    title={
      <UnifiedShareModalTitle
        isEmailLinkSectionExpanded={false}
        item={
          Object {
            "grantedPermissions": Object {
              "itemShare": true,
            },
            "hideCollaborators": false,
            "id": "111",
            "name": "test file",
            "type": "file",
          }
        }
        showCollaboratorList={false}
      />
    }
  >
    <UnifiedShareForm
      canInvite={true}
      classification={
        Object {
          "definition": undefined,
          "name": undefined,
        }
      }
      collaborationRestrictionWarning=""
      collaboratorsList={
        Object {
          "collaborators": Array [],
        }
      }
      createSharedLinkOnLoad={false}
      displayInModal={true}
      focusSharedLinkOnLoad={false}
      getInitialData={[MockFunction]}
      handleFtuxCloseClick={[Function]}
      initiallySelectedContacts={Array []}
      intl={
        Object {
          "formatMessage": [MockFunction],
        }
      }
      inviteePermissions={
        Array [
          Object {
            "text": "Editor",
            "value": "Editor",
          },
        ]
      }
      isAllowEditSharedLinkForFileEnabled={false}
      isFetching={false}
      item={
        Object {
          "grantedPermissions": Object {
            "itemShare": true,
          },
          "hideCollaborators": false,
          "id": "111",
          "name": "test file",
          "type": "file",
        }
      }
      openConfirmModal={[Function]}
      restrictedExternalCollabEmails={Array []}
      sendInvitesError={
        <span>
          Some Error
        </span>
      }
      sharedLink={Object {}}
      sharedLinkLoaded={false}
      shouldRenderFTUXTooltip={false}
      trackingProps={
        Object {
          "inviteCollabTracking": Object {},
          "inviteCollabsEmailTracking": Object {},
          "modalTracking": Object {},
          "removeLinkConfirmModalTracking": Object {},
          "sharedLinkEmailTracking": Object {},
          "sharedLinkTracking": Object {},
        }
      }
    />
  </Modal>
</Fragment>
`;

exports[`features/unified-share-modal/UnifiedShareModal render() should render a default component with upgrade CTA when showUpgradeOptions is enabled 1`] = `
<Fragment>
  <Modal
    className="be-modal unified-share-modal"
    focusElementSelector=".bdl-PillSelector-input"
    style={
      Object {
        "backdrop": Object {},
        "dialog": Object {},
      }
    }
    title={
      <UnifiedShareModalTitle
        isEmailLinkSectionExpanded={false}
        item={
          Object {
            "grantedPermissions": Object {
              "itemShare": true,
            },
            "hideCollaborators": false,
            "id": "111",
            "name": "test file",
            "type": "file",
          }
        }
        showCollaboratorList={false}
      />
    }
  >
    <UnifiedShareForm
      canInvite={true}
      classification={
        Object {
          "definition": undefined,
          "name": undefined,
        }
      }
      collaborationRestrictionWarning=""
      collaboratorsList={
        Object {
          "collaborators": Array [],
        }
      }
      createSharedLinkOnLoad={false}
      displayInModal={true}
      focusSharedLinkOnLoad={false}
      getInitialData={[MockFunction]}
      handleFtuxCloseClick={[Function]}
      initiallySelectedContacts={Array []}
      intl={
        Object {
          "formatMessage": [MockFunction],
        }
      }
      inviteePermissions={
        Array [
          Object {
            "text": "Editor",
            "value": "Editor",
          },
        ]
      }
      isAllowEditSharedLinkForFileEnabled={false}
      isFetching={false}
      item={
        Object {
          "grantedPermissions": Object {
            "itemShare": true,
          },
          "hideCollaborators": false,
          "id": "111",
          "name": "test file",
          "type": "file",
        }
      }
      openConfirmModal={[Function]}
      restrictedExternalCollabEmails={Array []}
      sharedLink={Object {}}
      sharedLinkLoaded={false}
      shouldRenderFTUXTooltip={false}
      showUpgradeOptions={true}
      trackingProps={
        Object {
          "inviteCollabTracking": Object {},
          "inviteCollabsEmailTracking": Object {},
          "modalTracking": Object {},
          "removeLinkConfirmModalTracking": Object {},
          "sharedLinkEmailTracking": Object {},
          "sharedLinkTracking": Object {},
        }
      }
    />
  </Modal>
</Fragment>
`;

exports[`features/unified-share-modal/UnifiedShareModal render() should render an allShareRestrictionWarning message when it is available 1`] = `null`;
