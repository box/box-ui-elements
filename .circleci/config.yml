aliases:
  - &yarn
    name: Installing dependencies
    command: yarn install --non-interactive --frozen-lockfile --cache-folder ~/.cache/yarn

  - &clean
    name: Cleaning
    command: yarn cache clean

  - &i18n
    name: Building locales
    command: yarn build:i18n

  - &build
    name: Building project
    command: yarn build:prod:npm

  - &restore-yarn-cache
    keys:
        - yarn-cache-{{ .Branch }}-{{ checksum "yarn.lock" }}
        - yarn-cache-{{ .Branch }}-

  - &save-yarn-cache
    paths:
      - ~/.cache/yarn
      - node_modules
    key: yarn-cache-{{ .Branch }}-{{ checksum "yarn.lock" }}

  - &prepare-cache
    name: Prepare Yarn Cache
    command: |
        mkdir -p ~/.cache/yarn
        chown -R $(whoami) ~/.cache/yarn

defaults: &defaults
  resource_class: large
  working_directory: ~/buie
  docker:
    - image: cimg/node:18.18

version: 2

jobs:
  lint:
    <<: *defaults
    steps:
      - checkout
      - run: *prepare-cache
      - restore-cache: *restore-yarn-cache
      - run: *yarn
      - save-cache: *save-yarn-cache
      - run: *clean
      - run: *i18n
      - run:
          name: Commit lint
          command: ./scripts/commitlint.sh
      - run:
          name: Code lint
          command: yarn lint

  flow:
      <<: *defaults
      steps:
        - checkout
        - run: *prepare-cache
        - restore-cache: *restore-yarn-cache
        - run: *yarn
        - save-cache: *save-yarn-cache
        - run: *clean
        - run:
            name: Flow
            command: yarn flow check

  build-unit-tests:
    <<: *defaults
    steps:
      - checkout
      - run: *prepare-cache
      - restore-cache: *restore-yarn-cache
      - run: *yarn
      - save-cache: *save-yarn-cache
      - run: *clean
      - run: *i18n
      - run:
          name: Babel build
          command: yarn build:ci:es
      - run:
          name: Checking locales and styles
          command: ./scripts/check_generated_files.sh
      - run:
          name: Webpack build
          command: yarn build:ci:dist
      - run: echo 'export TZ=America/Los_Angeles' >> $BASH_ENV
      - run:
          name: Unit tests
          command: yarn test --maxWorkers=3

  e2e-tests:
    <<: *defaults
    docker:
      - image: cypress/included:13.13.0
    steps:
      - checkout
      - run: *prepare-cache
      - restore-cache: *restore-yarn-cache
      - run: *yarn
      - save-cache: *save-yarn-cache
      - run:
          name: E2E tests
          command: yarn test:e2e

  chromatic-deploy:
    <<: *defaults
    steps:
        - checkout
        - run: *prepare-cache
        - restore-cache: *restore-yarn-cache
        - run: *yarn
        - save-cache: *save-yarn-cache
        - run: *clean
        - run: *i18n
        - run: *build
        - run:
            name: Chromatic
            command: yarn chromatic

workflows:
  version: 2
  lint_test_build:
    jobs:
      - lint
      - flow
      - build-unit-tests
      - e2e-tests
      - chromatic-deploy
