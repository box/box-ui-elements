"use strict";(globalThis.webpackChunkbox_ui_elements=globalThis.webpackChunkbox_ui_elements||[]).push([[63602],{"./src/elements/content-preview/stories/tests/ContentPreview-visual.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,basic:()=>basic,citationDisabled:()=>citationDisabled,clearConversation:()=>clearConversation,closeModal:()=>closeModal,default:()=>__WEBPACK_DEFAULT_EXPORT__,hoverOverCitation:()=>hoverOverCitation,markdownDisabled:()=>markdownDisabled,markdownEnabled:()=>markdownEnabled,submitAnswer:()=>submitAnswer,withModernization:()=>withModernization});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),react_router_dom__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/react-router-dom/esm/react-router-dom.js"),storybook_test__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("storybook/test"),_box_blueprint_web__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@box/blueprint-web/dist/lib-esm/primitives/notification/index.js"),msw__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/msw/lib/core/http.mjs"),msw__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./node_modules/msw/lib/core/HttpResponse.mjs"),_common_mocks_mockRequests__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/elements/common/__mocks__/mockRequests.ts"),_constants__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/constants.js"),_ContentPreview__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/elements/content-preview/ContentPreview.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const basic={play:async({canvasElement})=>{const canvas=(0,storybook_test__WEBPACK_IMPORTED_MODULE_1__.within)(canvasElement),button=await canvas.findByRole("button",{name:"Box AI"},{timeout:5e3});(0,storybook_test__WEBPACK_IMPORTED_MODULE_1__.expect)(button).toBeInTheDocument(),await storybook_test__WEBPACK_IMPORTED_MODULE_1__.userEvent.click(button);const dialog=await(0,storybook_test__WEBPACK_IMPORTED_MODULE_1__.waitFor)((()=>document.querySelector('[role="dialog"]')));(0,storybook_test__WEBPACK_IMPORTED_MODULE_1__.expect)(dialog).toBeInTheDocument();const modal=(0,storybook_test__WEBPACK_IMPORTED_MODULE_1__.within)(dialog);(0,storybook_test__WEBPACK_IMPORTED_MODULE_1__.expect)(modal.getByText(/Welcome to Box AI/i)).toBeInTheDocument(),(0,storybook_test__WEBPACK_IMPORTED_MODULE_1__.expect)(modal.getByText("Chat cleared when you close pdf")).toBeInTheDocument(),(0,storybook_test__WEBPACK_IMPORTED_MODULE_1__.expect)(modal.getByText("Ask Box AI")).toBeInTheDocument()}},withModernization={args:{enableModernizedComponents:!0}},closeModal={play:async({canvasElement})=>{const canvas=(0,storybook_test__WEBPACK_IMPORTED_MODULE_1__.within)(canvasElement),button=await canvas.findByRole("button",{name:"Box AI"},{timeout:5e3});(0,storybook_test__WEBPACK_IMPORTED_MODULE_1__.expect)(button).toBeInTheDocument(),await storybook_test__WEBPACK_IMPORTED_MODULE_1__.userEvent.click(button);const dialog=await(0,storybook_test__WEBPACK_IMPORTED_MODULE_1__.waitFor)((()=>document.querySelector('[role="dialog"]')));(0,storybook_test__WEBPACK_IMPORTED_MODULE_1__.expect)(dialog).toBeInTheDocument();const closeButton=(0,storybook_test__WEBPACK_IMPORTED_MODULE_1__.within)(dialog).getByRole("button",{name:"Close Modal"});await storybook_test__WEBPACK_IMPORTED_MODULE_1__.userEvent.click(closeButton)}},submitAnswer={play:async({canvasElement})=>{const canvas=(0,storybook_test__WEBPACK_IMPORTED_MODULE_1__.within)(canvasElement),button=await canvas.findByRole("button",{name:"Box AI"},{timeout:5e3});(0,storybook_test__WEBPACK_IMPORTED_MODULE_1__.expect)(button).toBeInTheDocument(),await storybook_test__WEBPACK_IMPORTED_MODULE_1__.userEvent.click(button);const dialog=await(0,storybook_test__WEBPACK_IMPORTED_MODULE_1__.waitFor)((()=>document.querySelector('[role="dialog"]')));(0,storybook_test__WEBPACK_IMPORTED_MODULE_1__.expect)(dialog).toBeInTheDocument();const modal=(0,storybook_test__WEBPACK_IMPORTED_MODULE_1__.within)(dialog),textInput=modal.getByRole("textbox",{name:"Ask Box AI"});(0,storybook_test__WEBPACK_IMPORTED_MODULE_1__.expect)(textInput).toBeInTheDocument(),textInput.focus(),await storybook_test__WEBPACK_IMPORTED_MODULE_1__.userEvent.keyboard("Why are public APIs important?"),await storybook_test__WEBPACK_IMPORTED_MODULE_1__.userEvent.click(modal.getByRole("button",{name:"Ask"}),{pointerEventsCheck:0});const answer=await modal.findByText("Public APIs are important because of key and important reasons.");(0,storybook_test__WEBPACK_IMPORTED_MODULE_1__.expect)(answer).toBeInTheDocument(),(0,storybook_test__WEBPACK_IMPORTED_MODULE_1__.expect)(modal.getByText("Based on:")).toBeInTheDocument()}},hoverOverCitation={play:async({canvasElement})=>{const canvas=(0,storybook_test__WEBPACK_IMPORTED_MODULE_1__.within)(canvasElement),button=await canvas.findByRole("button",{name:"Box AI"},{timeout:5e3});(0,storybook_test__WEBPACK_IMPORTED_MODULE_1__.expect)(button).toBeInTheDocument(),await storybook_test__WEBPACK_IMPORTED_MODULE_1__.userEvent.click(button);const dialog=await(0,storybook_test__WEBPACK_IMPORTED_MODULE_1__.waitFor)((()=>document.querySelector('[role="dialog"]')));(0,storybook_test__WEBPACK_IMPORTED_MODULE_1__.expect)(dialog).toBeInTheDocument();const modal=(0,storybook_test__WEBPACK_IMPORTED_MODULE_1__.within)(dialog),textInput=modal.getByRole("textbox",{name:"Ask Box AI"});(0,storybook_test__WEBPACK_IMPORTED_MODULE_1__.expect)(textInput).toBeInTheDocument(),textInput.focus(),await storybook_test__WEBPACK_IMPORTED_MODULE_1__.userEvent.keyboard("Why are public APIs important?"),await storybook_test__WEBPACK_IMPORTED_MODULE_1__.userEvent.click(modal.getByRole("button",{name:"Ask"}),{pointerEventsCheck:0});const answer=await modal.findByText("Public APIs are important because of key and important reasons.");(0,storybook_test__WEBPACK_IMPORTED_MODULE_1__.expect)(answer).toBeInTheDocument(),(0,storybook_test__WEBPACK_IMPORTED_MODULE_1__.expect)(modal.getByText("Based on:")).toBeInTheDocument();const citation=(await modal.getAllByTestId("content-answers-citation-status"))[0];(0,storybook_test__WEBPACK_IMPORTED_MODULE_1__.expect)(citation).toBeInTheDocument(),await storybook_test__WEBPACK_IMPORTED_MODULE_1__.userEvent.hover(citation);const main=await(0,storybook_test__WEBPACK_IMPORTED_MODULE_1__.waitFor)((()=>document.querySelector(".sb-main-padded.sb-show-main")));await(0,storybook_test__WEBPACK_IMPORTED_MODULE_1__.waitFor)((async()=>{await(0,storybook_test__WEBPACK_IMPORTED_MODULE_1__.expect)((0,storybook_test__WEBPACK_IMPORTED_MODULE_1__.within)(main).getByText("Public APIs are key drivers of innovation and growth.")).toBeVisible()}))}},citationDisabled={args:{contentAnswersProps:{show:!0,isCitationsEnabled:!1,isMarkdownEnabled:!0}},play:async({canvasElement})=>{const canvas=(0,storybook_test__WEBPACK_IMPORTED_MODULE_1__.within)(canvasElement),button=await canvas.findByRole("button",{name:"Box AI"},{timeout:5e3});(0,storybook_test__WEBPACK_IMPORTED_MODULE_1__.expect)(button).toBeInTheDocument(),await storybook_test__WEBPACK_IMPORTED_MODULE_1__.userEvent.click(button);const dialog=await(0,storybook_test__WEBPACK_IMPORTED_MODULE_1__.waitFor)((()=>document.querySelector('[role="dialog"]')));(0,storybook_test__WEBPACK_IMPORTED_MODULE_1__.expect)(dialog).toBeInTheDocument();const modal=(0,storybook_test__WEBPACK_IMPORTED_MODULE_1__.within)(dialog),textInput=modal.getByRole("textbox",{name:"Ask Box AI"});(0,storybook_test__WEBPACK_IMPORTED_MODULE_1__.expect)(textInput).toBeInTheDocument(),textInput.focus(),await storybook_test__WEBPACK_IMPORTED_MODULE_1__.userEvent.keyboard("Why are public APIs important?"),await storybook_test__WEBPACK_IMPORTED_MODULE_1__.userEvent.click(modal.getByRole("button",{name:"Ask"}),{pointerEventsCheck:0});const answer=await modal.findByText("Public APIs are important because of key and important reasons.");(0,storybook_test__WEBPACK_IMPORTED_MODULE_1__.expect)(answer).toBeInTheDocument(),(0,storybook_test__WEBPACK_IMPORTED_MODULE_1__.expect)(modal.queryByText("Based on:")).not.toBeInTheDocument()}},clearConversation={play:async({canvasElement})=>{const canvas=(0,storybook_test__WEBPACK_IMPORTED_MODULE_1__.within)(canvasElement),button=await canvas.findByRole("button",{name:"Box AI"},{timeout:5e3});(0,storybook_test__WEBPACK_IMPORTED_MODULE_1__.expect)(button).toBeInTheDocument(),await storybook_test__WEBPACK_IMPORTED_MODULE_1__.userEvent.click(button);const dialog=await(0,storybook_test__WEBPACK_IMPORTED_MODULE_1__.waitFor)((()=>document.querySelector('[role="dialog"]')));(0,storybook_test__WEBPACK_IMPORTED_MODULE_1__.expect)(dialog).toBeInTheDocument();const modal=(0,storybook_test__WEBPACK_IMPORTED_MODULE_1__.within)(dialog),textInput=modal.getByRole("textbox",{name:"Ask Box AI"});(0,storybook_test__WEBPACK_IMPORTED_MODULE_1__.expect)(textInput).toBeInTheDocument(),textInput.focus(),await storybook_test__WEBPACK_IMPORTED_MODULE_1__.userEvent.keyboard("Why are public APIs important?"),await storybook_test__WEBPACK_IMPORTED_MODULE_1__.userEvent.click(modal.getByRole("button",{name:"Ask"}),{pointerEventsCheck:0});const answer=await modal.findByText("Public APIs are important because of key and important reasons.");(0,storybook_test__WEBPACK_IMPORTED_MODULE_1__.expect)(answer).toBeInTheDocument(),(0,storybook_test__WEBPACK_IMPORTED_MODULE_1__.expect)(modal.getByText("Based on:")).toBeInTheDocument();const clearConversationButton=modal.getByRole("button",{name:"Clear conversation"});await storybook_test__WEBPACK_IMPORTED_MODULE_1__.userEvent.click(clearConversationButton);const oldAnswer=modal.queryByText("Public APIs are important because of key and important reasons.");(0,storybook_test__WEBPACK_IMPORTED_MODULE_1__.expect)(oldAnswer).not.toBeInTheDocument()}},markdownEnabled={play:async({canvasElement})=>{const canvas=(0,storybook_test__WEBPACK_IMPORTED_MODULE_1__.within)(canvasElement),button=await canvas.findByRole("button",{name:"Box AI"},{timeout:5e3});(0,storybook_test__WEBPACK_IMPORTED_MODULE_1__.expect)(button).toBeInTheDocument(),await storybook_test__WEBPACK_IMPORTED_MODULE_1__.userEvent.click(button);const dialog=await(0,storybook_test__WEBPACK_IMPORTED_MODULE_1__.waitFor)((()=>document.querySelector('[role="dialog"]')));(0,storybook_test__WEBPACK_IMPORTED_MODULE_1__.expect)(dialog).toBeInTheDocument();const modal=(0,storybook_test__WEBPACK_IMPORTED_MODULE_1__.within)(dialog),textInput=modal.getByRole("textbox",{name:"Ask Box AI"});(0,storybook_test__WEBPACK_IMPORTED_MODULE_1__.expect)(textInput).toBeInTheDocument(),textInput.focus(),await storybook_test__WEBPACK_IMPORTED_MODULE_1__.userEvent.keyboard("table summarizing the highlights from the document"),await storybook_test__WEBPACK_IMPORTED_MODULE_1__.userEvent.click(modal.getByRole("button",{name:"Ask"}),{pointerEventsCheck:0});const answer=await modal.findByText("Here’s a table summarizing the highlights from the document:");(0,storybook_test__WEBPACK_IMPORTED_MODULE_1__.expect)(answer).toBeInTheDocument()}},markdownDisabled={args:{contentAnswersProps:{show:!0,isCitationsEnabled:!1,isMarkdownEnabled:!1}},play:async({canvasElement})=>{const canvas=(0,storybook_test__WEBPACK_IMPORTED_MODULE_1__.within)(canvasElement),button=await canvas.findByRole("button",{name:"Box AI"},{timeout:5e3});(0,storybook_test__WEBPACK_IMPORTED_MODULE_1__.expect)(button).toBeInTheDocument(),await storybook_test__WEBPACK_IMPORTED_MODULE_1__.userEvent.click(button);const dialog=await(0,storybook_test__WEBPACK_IMPORTED_MODULE_1__.waitFor)((()=>document.querySelector('[role="dialog"]')));(0,storybook_test__WEBPACK_IMPORTED_MODULE_1__.expect)(dialog).toBeInTheDocument();const modal=(0,storybook_test__WEBPACK_IMPORTED_MODULE_1__.within)(dialog),textInput=modal.getByRole("textbox",{name:"Ask Box AI"});(0,storybook_test__WEBPACK_IMPORTED_MODULE_1__.expect)(textInput).toBeInTheDocument(),textInput.focus(),await storybook_test__WEBPACK_IMPORTED_MODULE_1__.userEvent.keyboard("table summarizing the highlights from the document"),await storybook_test__WEBPACK_IMPORTED_MODULE_1__.userEvent.click(modal.getByRole("button",{name:"Ask"}),{pointerEventsCheck:0})}},__WEBPACK_DEFAULT_EXPORT__={title:"Elements/ContentPreview/tests/visual/BoxAI",component:_ContentPreview__WEBPACK_IMPORTED_MODULE_4__.A,render:_ref=>{let args=_extends({},(function _objectDestructuringEmpty(t){if(null==t)throw new TypeError("Cannot destructure "+t)}(_ref),_ref));return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_box_blueprint_web__WEBPACK_IMPORTED_MODULE_5__.E.Provider,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_router_dom__WEBPACK_IMPORTED_MODULE_6__.Kd,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ContentPreview__WEBPACK_IMPORTED_MODULE_4__.A,_extends({key:`${args.fileId}-${args.token}`},args))))},args:{features:__webpack_require__.g.FEATURE_FLAGS,fileId:__webpack_require__.g.FILE_ID,hasHeader:!0,token:__webpack_require__.g.TOKEN,contentAnswersProps:{show:!0,isCitationsEnabled:!0,isMarkdownEnabled:!0}},parameters:{chromatic:{ignoreSelectors:['[class^="bp_avatar_module_avatar--"] > [class^="bp_avatar_module_text--"]']},msw:{handlers:[msw__WEBPACK_IMPORTED_MODULE_7__.L.post(_common_mocks_mockRequests__WEBPACK_IMPORTED_MODULE_2__.Cv.url,(()=>msw__WEBPACK_IMPORTED_MODULE_8__.c.json(_common_mocks_mockRequests__WEBPACK_IMPORTED_MODULE_2__.Cv.response))),msw__WEBPACK_IMPORTED_MODULE_7__.L.get(_common_mocks_mockRequests__WEBPACK_IMPORTED_MODULE_2__.X3.url,(()=>msw__WEBPACK_IMPORTED_MODULE_8__.c.json(_common_mocks_mockRequests__WEBPACK_IMPORTED_MODULE_2__.X3.response))),msw__WEBPACK_IMPORTED_MODULE_7__.L.get(_common_mocks_mockRequests__WEBPACK_IMPORTED_MODULE_2__.ul.url,(()=>msw__WEBPACK_IMPORTED_MODULE_8__.c.json(_common_mocks_mockRequests__WEBPACK_IMPORTED_MODULE_2__.ul.response))),msw__WEBPACK_IMPORTED_MODULE_7__.L.post(`${_constants__WEBPACK_IMPORTED_MODULE_3__.f9u}/2.0/ai/ask`,(async({request})=>"table summarizing the highlights from the document"===(await request.json()).prompt?msw__WEBPACK_IMPORTED_MODULE_8__.c.json({answer:"Here’s a table summarizing the highlights from the document:\n\n| **Highlight**                                                                                     |\n|---------------------------------------------------------------------------------------------------|\n| Captain of the NCAA Division I Women’s Lacrosse Team, with a 3.8 GPA in Business at Brown University and experience in sales, marketing, and operations across various internships. |",created_at:"2024-09-20T12:25:51.816-07:00",completion_reason:"done"}):msw__WEBPACK_IMPORTED_MODULE_8__.c.json({answer:"Public APIs are important because of key and important reasons.",citations:[{content:"Public APIs are key drivers of innovation and growth.",id:"123",type:"file",name:"The importance of public APIs.pdf"}],completion_reason:"done",created_at:"2012-12-12T10:53:43-08:00"})))]}}},__namedExportsOrder=["basic","withModernization","closeModal","submitAnswer","hoverOverCitation","citationDisabled","clearConversation","markdownEnabled","markdownDisabled"];basic.parameters={...basic.parameters,docs:{...basic.parameters?.docs,source:{originalSource:"{\n  play: async ({\n    canvasElement\n  }) => {\n    const canvas = within(canvasElement);\n    const button = await canvas.findByRole('button', {\n      name: 'Box AI'\n    }, {\n      timeout: WAIT_TIMEOUT\n    });\n    expect(button).toBeInTheDocument();\n    await userEvent.click(button);\n    const dialog = await waitFor(() => document.querySelector('[role=\"dialog\"]'));\n    expect(dialog).toBeInTheDocument();\n    const modal = within(dialog);\n    expect(modal.getByText(/Welcome to Box AI/i)).toBeInTheDocument();\n    expect(modal.getByText('Chat cleared when you close pdf')).toBeInTheDocument();\n    expect(modal.getByText('Ask Box AI')).toBeInTheDocument();\n  }\n}",...basic.parameters?.docs?.source}}},withModernization.parameters={...withModernization.parameters,docs:{...withModernization.parameters?.docs,source:{originalSource:"{\n  args: {\n    enableModernizedComponents: true\n  }\n}",...withModernization.parameters?.docs?.source}}},closeModal.parameters={...closeModal.parameters,docs:{...closeModal.parameters?.docs,source:{originalSource:"{\n  play: async ({\n    canvasElement\n  }) => {\n    const canvas = within(canvasElement);\n    const button = await canvas.findByRole('button', {\n      name: 'Box AI'\n    }, {\n      timeout: WAIT_TIMEOUT\n    });\n    expect(button).toBeInTheDocument();\n    await userEvent.click(button);\n    const dialog = await waitFor(() => document.querySelector('[role=\"dialog\"]'));\n    expect(dialog).toBeInTheDocument();\n    const modal = within(dialog);\n    const closeButton = modal.getByRole('button', {\n      name: 'Close Modal'\n    });\n    await userEvent.click(closeButton);\n  }\n}",...closeModal.parameters?.docs?.source}}},submitAnswer.parameters={...submitAnswer.parameters,docs:{...submitAnswer.parameters?.docs,source:{originalSource:"{\n  play: async ({\n    canvasElement\n  }) => {\n    const canvas = within(canvasElement);\n    const button = await canvas.findByRole('button', {\n      name: 'Box AI'\n    }, {\n      timeout: WAIT_TIMEOUT\n    });\n    expect(button).toBeInTheDocument();\n    await userEvent.click(button);\n    const dialog = await waitFor(() => document.querySelector('[role=\"dialog\"]'));\n    expect(dialog).toBeInTheDocument();\n    const modal = within(dialog);\n    const textInput = modal.getByRole('textbox', {\n      name: 'Ask Box AI'\n    });\n    expect(textInput).toBeInTheDocument();\n    textInput.focus();\n    await userEvent.keyboard('Why are public APIs important?');\n    await userEvent.click(modal.getByRole('button', {\n      name: 'Ask'\n    }), {\n      pointerEventsCheck: 0\n    });\n    const answer = await modal.findByText('Public APIs are important because of key and important reasons.');\n    expect(answer).toBeInTheDocument();\n    expect(modal.getByText('Based on:')).toBeInTheDocument();\n  }\n}",...submitAnswer.parameters?.docs?.source}}},hoverOverCitation.parameters={...hoverOverCitation.parameters,docs:{...hoverOverCitation.parameters?.docs,source:{originalSource:"{\n  play: async ({\n    canvasElement\n  }) => {\n    const canvas = within(canvasElement);\n    const button = await canvas.findByRole('button', {\n      name: 'Box AI'\n    }, {\n      timeout: WAIT_TIMEOUT\n    });\n    expect(button).toBeInTheDocument();\n    await userEvent.click(button);\n    const dialog = await waitFor(() => document.querySelector('[role=\"dialog\"]'));\n    expect(dialog).toBeInTheDocument();\n    const modal = within(dialog);\n    const textInput = modal.getByRole('textbox', {\n      name: 'Ask Box AI'\n    });\n    expect(textInput).toBeInTheDocument();\n    textInput.focus();\n    await userEvent.keyboard('Why are public APIs important?');\n    await userEvent.click(modal.getByRole('button', {\n      name: 'Ask'\n    }), {\n      pointerEventsCheck: 0\n    });\n    const answer = await modal.findByText('Public APIs are important because of key and important reasons.');\n    expect(answer).toBeInTheDocument();\n    expect(modal.getByText('Based on:')).toBeInTheDocument();\n    const citations = await modal.getAllByTestId('content-answers-citation-status');\n    const citation = citations[0];\n    expect(citation).toBeInTheDocument();\n    await userEvent.hover(citation);\n    const main = await waitFor(() => document.querySelector('.sb-main-padded.sb-show-main'));\n    await waitFor(async () => {\n      await expect(within(main).getByText('Public APIs are key drivers of innovation and growth.')).toBeVisible();\n    });\n  }\n}",...hoverOverCitation.parameters?.docs?.source}}},citationDisabled.parameters={...citationDisabled.parameters,docs:{...citationDisabled.parameters?.docs,source:{originalSource:"{\n  args: {\n    contentAnswersProps: {\n      show: true,\n      isCitationsEnabled: false,\n      isMarkdownEnabled: true\n    }\n  },\n  play: async ({\n    canvasElement\n  }) => {\n    const canvas = within(canvasElement);\n    const button = await canvas.findByRole('button', {\n      name: 'Box AI'\n    }, {\n      timeout: WAIT_TIMEOUT\n    });\n    expect(button).toBeInTheDocument();\n    await userEvent.click(button);\n    const dialog = await waitFor(() => document.querySelector('[role=\"dialog\"]'));\n    expect(dialog).toBeInTheDocument();\n    const modal = within(dialog);\n    const textInput = modal.getByRole('textbox', {\n      name: 'Ask Box AI'\n    });\n    expect(textInput).toBeInTheDocument();\n    textInput.focus();\n    await userEvent.keyboard('Why are public APIs important?');\n    await userEvent.click(modal.getByRole('button', {\n      name: 'Ask'\n    }), {\n      pointerEventsCheck: 0\n    });\n    const answer = await modal.findByText('Public APIs are important because of key and important reasons.');\n    expect(answer).toBeInTheDocument();\n    expect(modal.queryByText('Based on:')).not.toBeInTheDocument();\n  }\n}",...citationDisabled.parameters?.docs?.source}}},clearConversation.parameters={...clearConversation.parameters,docs:{...clearConversation.parameters?.docs,source:{originalSource:"{\n  play: async ({\n    canvasElement\n  }) => {\n    const canvas = within(canvasElement);\n    const button = await canvas.findByRole('button', {\n      name: 'Box AI'\n    }, {\n      timeout: WAIT_TIMEOUT\n    });\n    expect(button).toBeInTheDocument();\n    await userEvent.click(button);\n    const dialog = await waitFor(() => document.querySelector('[role=\"dialog\"]'));\n    expect(dialog).toBeInTheDocument();\n    const modal = within(dialog);\n    const textInput = modal.getByRole('textbox', {\n      name: 'Ask Box AI'\n    });\n    expect(textInput).toBeInTheDocument();\n    textInput.focus();\n    await userEvent.keyboard('Why are public APIs important?');\n    await userEvent.click(modal.getByRole('button', {\n      name: 'Ask'\n    }), {\n      pointerEventsCheck: 0\n    });\n    const answer = await modal.findByText('Public APIs are important because of key and important reasons.');\n    expect(answer).toBeInTheDocument();\n    expect(modal.getByText('Based on:')).toBeInTheDocument();\n    const clearConversationButton = modal.getByRole('button', {\n      name: 'Clear conversation'\n    });\n    await userEvent.click(clearConversationButton);\n    const oldAnswer = modal.queryByText('Public APIs are important because of key and important reasons.');\n    expect(oldAnswer).not.toBeInTheDocument();\n  }\n}",...clearConversation.parameters?.docs?.source}}},markdownEnabled.parameters={...markdownEnabled.parameters,docs:{...markdownEnabled.parameters?.docs,source:{originalSource:"{\n  play: async ({\n    canvasElement\n  }) => {\n    const canvas = within(canvasElement);\n    const button = await canvas.findByRole('button', {\n      name: 'Box AI'\n    }, {\n      timeout: WAIT_TIMEOUT\n    });\n    expect(button).toBeInTheDocument();\n    await userEvent.click(button);\n    const dialog = await waitFor(() => document.querySelector('[role=\"dialog\"]'));\n    expect(dialog).toBeInTheDocument();\n    const modal = within(dialog);\n    const textInput = modal.getByRole('textbox', {\n      name: 'Ask Box AI'\n    });\n    expect(textInput).toBeInTheDocument();\n    textInput.focus();\n    await userEvent.keyboard('table summarizing the highlights from the document');\n    await userEvent.click(modal.getByRole('button', {\n      name: 'Ask'\n    }), {\n      pointerEventsCheck: 0\n    });\n    const answer = await modal.findByText('Here’s a table summarizing the highlights from the document:');\n    expect(answer).toBeInTheDocument();\n  }\n}",...markdownEnabled.parameters?.docs?.source}}},markdownDisabled.parameters={...markdownDisabled.parameters,docs:{...markdownDisabled.parameters?.docs,source:{originalSource:"{\n  args: {\n    contentAnswersProps: {\n      show: true,\n      isCitationsEnabled: false,\n      isMarkdownEnabled: false\n    }\n  },\n  play: async ({\n    canvasElement\n  }) => {\n    const canvas = within(canvasElement);\n    const button = await canvas.findByRole('button', {\n      name: 'Box AI'\n    }, {\n      timeout: WAIT_TIMEOUT\n    });\n    expect(button).toBeInTheDocument();\n    await userEvent.click(button);\n    const dialog = await waitFor(() => document.querySelector('[role=\"dialog\"]'));\n    expect(dialog).toBeInTheDocument();\n    const modal = within(dialog);\n    const textInput = modal.getByRole('textbox', {\n      name: 'Ask Box AI'\n    });\n    expect(textInput).toBeInTheDocument();\n    textInput.focus();\n    await userEvent.keyboard('table summarizing the highlights from the document');\n    await userEvent.click(modal.getByRole('button', {\n      name: 'Ask'\n    }), {\n      pointerEventsCheck: 0\n    });\n  }\n}",...markdownDisabled.parameters?.docs?.source}}}},"./src/elements/common/__mocks__/mockRequests.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Cv:()=>mockEventRequest,X3:()=>mockUserRequest,ul:()=>mockFileRequest});const apiV2Path=`${__webpack_require__("./src/constants.js").f9u}/2.0`,mockEventRequest={url:`${apiV2Path}/events`,response:{}},mockUserRequest={url:`${apiV2Path}/users/me`,response:{type:"user",id:"7504104663",name:"PreviewTestApp",login:"AutomationUser_759881_KEmZdXHHrF@boxdevedition.com",created_at:"2019-03-04T11:04:35-08:00",modified_at:"2024-09-10T21:44:30-07:00",language:"en",timezone:"America/Los_Angeles",space_amount:10737418240,space_used:23802100,max_upload_size:53687091200,status:"active",job_title:"",phone:"",address:"",notification_email:null}},mockFileRequest={url:`${apiV2Path}/files/${__webpack_require__.g.FILE_ID}`,response:{type:"file",id:"415542803939",etag:"3",permissions:{can_download:!0,can_preview:!0,can_upload:!1,can_comment:!0,can_rename:!1,can_delete:!1,can_share:!1,can_set_share_access:!1,can_invite_collaborator:!1,can_annotate:!1,can_view_annotations_all:!0,can_view_annotations_self:!0,can_create_annotations:!0,can_view_annotations:!0},shared_link:null,sha1:"9650d7a6213181771fd38e761e2c2a330848a5fc",file_version:{type:"file_version",id:"780895440222",sha1:"9650d7a6213181771fd38e761e2c2a330848a5fc"},name:"Document (PDF).pdf",size:792687,extension:"pdf",watermark_info:{is_watermarked:!1},is_download_available:!0}}}}]);