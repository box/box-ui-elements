"use strict";(globalThis.webpackChunkbox_ui_elements=globalThis.webpackChunkbox_ui_elements||[]).push([[55837],{"./src/features/shared-link-modal/stories/SharedLink.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,basic:()=>basic,default:()=>SharedLink_stories});var react=__webpack_require__("./node_modules/react/index.js"),Button=__webpack_require__("./src/components/button/Button.tsx"),Flyout=__webpack_require__("./src/components/flyout/Flyout.js"),Overlay=__webpack_require__("./src/components/flyout/Overlay.js"),SharedLink=__webpack_require__("./src/features/shared-link-modal/SharedLink.js");const basic=()=>{const[accessLevel,setAccessLevel]=react.useState("peopleInYourCompany"),[submitting,setSubmitting]=react.useState(!1),fakeRequest=()=>(setSubmitting(!0),new Promise((resolve=>{setTimeout((()=>{setSubmitting(!1),resolve()}),500)})));return react.createElement(Flyout.A,{className:"shared-link-flyout",closeOnClick:!1,constrainToScrollParent:!1,constrainToWindow:!0,portaledClasses:["modal","share-access-menu"],position:"bottom-right"},react.createElement(Button.A,null,"Shared Link Flyout"),react.createElement(Overlay.A,{style:{width:"300px"}},react.createElement(SharedLink.A,{accessDropdownMenuProps:{constrainToWindow:!0},accessLevel,accessMenuButtonProps:{"data-resin-target":"changepermissions"},allowedAccessLevels:{peopleWithTheLink:!0,peopleInYourCompany:!0,peopleInThisItem:!0},canRemoveLink:!0,changeAccessLevel:newLevel=>fakeRequest().then((()=>setAccessLevel(newLevel))),copyButtonProps:{"data-resin-target":"copy"},enterpriseName:"Box",isDownloadAllowed:!0,isEditAllowed:!0,isPreviewAllowed:!0,itemType:"folder",onSettingsClick:()=>null,removeLink:fakeRequest,removeLinkButtonProps:{"data-resin-target":"remove"},settingsButtonProps:{"data-resin-target":"settings"},sharedLink:"http://box.com/s/abcdefg",submitting})))},SharedLink_stories={title:"Features/SharedLink",component:SharedLink.A,parameters:{notes:"`import SharedLink from 'box-ui-elements/es/features/shared-link-modal/SharedLink';`\n"}},__namedExportsOrder=["basic"];basic.parameters={...basic.parameters,docs:{...basic.parameters?.docs,source:{originalSource:"() => {\n  const [accessLevel, setAccessLevel] = React.useState('peopleInYourCompany');\n  const [submitting, setSubmitting] = React.useState(false);\n  const fakeRequest = () => {\n    setSubmitting(true);\n    return new Promise(resolve => {\n      setTimeout(() => {\n        setSubmitting(false);\n        resolve();\n      }, 500);\n    });\n  };\n  return <Flyout className=\"shared-link-flyout\" closeOnClick={false} constrainToScrollParent={false} constrainToWindow portaledClasses={['modal', 'share-access-menu']} position=\"bottom-right\">\n            <Button>Shared Link Flyout</Button>\n            <Overlay style={{\n      width: '300px'\n    }}>\n                <SharedLink accessDropdownMenuProps={{\n        constrainToWindow: true\n      }} accessLevel={accessLevel} accessMenuButtonProps={{\n        'data-resin-target': 'changepermissions'\n      }} allowedAccessLevels={{\n        peopleWithTheLink: true,\n        peopleInYourCompany: true,\n        peopleInThisItem: true\n      }} canRemoveLink changeAccessLevel={newLevel => fakeRequest().then(() => setAccessLevel(newLevel))} copyButtonProps={{\n        'data-resin-target': 'copy'\n      }} enterpriseName=\"Box\" isDownloadAllowed isEditAllowed isPreviewAllowed itemType=\"folder\" onSettingsClick={() => null} removeLink={fakeRequest} removeLinkButtonProps={{\n        'data-resin-target': 'remove'\n      }} settingsButtonProps={{\n        'data-resin-target': 'settings'\n      }} sharedLink=\"http://box.com/s/abcdefg\" submitting={submitting} />\n            </Overlay>\n        </Flyout>;\n}",...basic.parameters?.docs?.source}}}}}]);