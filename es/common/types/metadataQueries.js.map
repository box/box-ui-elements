{"version":3,"file":"metadataQueries.js","names":[],"sources":["../../../src/common/types/metadataQueries.js"],"sourcesContent":["// @flow\nimport type { MetadataInstanceV2 } from './metadata';\nimport type { SortDirection, BoxItem } from './core';\n\ntype MetadataQueryResponseEntryEnterprise = {\n    [string]: MetadataInstanceV2,\n};\n\ntype MetadataQueryResponseData = {\n    entries: Array<BoxItem>,\n    next_marker?: string,\n};\n\ntype MetadataQueryOrderByClause = {\n    direction: SortDirection,\n    field_key: string,\n};\n\ntype MetadataFieldConfig = {\n    canEdit?: boolean,\n    displayName?: string,\n    key: string,\n};\n\n// FieldsToShow array items could be simple strings or objects\n// e.g. const fieldsToShow: FieldsToShow = [ 'name', { key: 'desc', displayName: 'Desc', canEdit: true } ];\ntype FieldsToShow = Array<MetadataFieldConfig | string>;\n\ntype MetadataQuery = {\n    ancestor_folder_id: string,\n    fields?: Array<string>,\n    from: string,\n    limit?: number,\n    marker?: string,\n    order_by?: Array<MetadataQueryOrderByClause>,\n    query?: string,\n    query_params?: {\n        [string]: boolean | number | string,\n    },\n    use_index?: string,\n};\n\nexport type {\n    MetadataFieldConfig,\n    FieldsToShow,\n    MetadataQuery,\n    MetadataQueryOrderByClause,\n    MetadataQueryResponseData,\n    MetadataQueryResponseEntryEnterprise,\n};\n"],"mappings":"","ignoreList":[]}