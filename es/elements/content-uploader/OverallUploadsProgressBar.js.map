{"version":3,"file":"OverallUploadsProgressBar.js","names":["React","FormattedMessage","Text","ProgressBar","UploadsManagerAction","VIEW_UPLOAD_IN_PROGRESS","VIEW_UPLOAD_SUCCESS","VIEW_ERROR","VIEW_UPLOAD_EMPTY","messages","getUploadStatus","view","createElement","uploadsManagerUploadInProgress","uploadsManagerUploadComplete","uploadsManagerUploadPrompt","uploadsManagerUploadFailed","getPercent","percent","OverallUploadsProgressBar","customPrompt","hasMultipleFailedUploads","isDragging","isExpanded","isResumeVisible","isVisible","onClick","onKeyDown","onUploadsManagerActionClick","shouldShowPrompt","message","status","updatedPercent","className","role","tabIndex","as","color","variant"],"sources":["../../../src/elements/content-uploader/OverallUploadsProgressBar.tsx"],"sourcesContent":["import * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Text } from '@box/blueprint-web';\nimport ProgressBar from './ProgressBar';\nimport UploadsManagerAction from './UploadsManagerAction';\nimport { VIEW_UPLOAD_IN_PROGRESS, VIEW_UPLOAD_SUCCESS, VIEW_ERROR, VIEW_UPLOAD_EMPTY } from '../../constants';\nimport type { View } from '../../common/types/core';\nimport type { UploadStatus } from '../../common/types/upload';\n\nimport messages from '../common/messages';\n\nimport './OverallUploadsProgressBar.scss';\n\n/**\n * Get upload status\n *\n * @param {View} view\n * @return {FormattedMessage|string}\n */\nconst getUploadStatus = (view: string): string | React.ReactNode => {\n    switch (view) {\n        case VIEW_UPLOAD_IN_PROGRESS:\n            return <FormattedMessage {...messages.uploadsManagerUploadInProgress} />;\n        case VIEW_UPLOAD_SUCCESS:\n            return <FormattedMessage {...messages.uploadsManagerUploadComplete} />;\n        case VIEW_UPLOAD_EMPTY:\n            return <FormattedMessage {...messages.uploadsManagerUploadPrompt} />;\n        case VIEW_ERROR:\n            return <FormattedMessage {...messages.uploadsManagerUploadFailed} />;\n        default:\n            return '';\n    }\n};\n\n/**\n * Get overall upload progress percentage\n *\n * @param {string} view\n * @param {number} percent\n */\nconst getPercent = (view: string, percent: number): number => {\n    switch (view) {\n        case VIEW_UPLOAD_SUCCESS:\n            return 100;\n        case VIEW_UPLOAD_EMPTY:\n        case VIEW_ERROR:\n            return 0;\n        default:\n            return percent;\n    }\n};\n\nexport interface OverallUploadsProgressBarProps {\n    customPrompt?: {\n        defaultMessage: string;\n        description: string;\n        id: string;\n    };\n    hasMultipleFailedUploads: boolean;\n    isDragging: boolean;\n    isExpanded: boolean;\n    isResumeVisible: boolean;\n    isVisible: boolean;\n    onClick: React.MouseEventHandler<HTMLDivElement>;\n    onKeyDown: React.KeyboardEventHandler<HTMLDivElement>;\n    onUploadsManagerActionClick: (status: UploadStatus) => void;\n    percent: number;\n    view: View;\n}\n\nconst OverallUploadsProgressBar = ({\n    customPrompt,\n    hasMultipleFailedUploads,\n    isDragging,\n    isExpanded,\n    isResumeVisible,\n    isVisible,\n    onClick,\n    onKeyDown,\n    onUploadsManagerActionClick,\n    percent,\n    view,\n}: OverallUploadsProgressBarProps) => {\n    // Show the upload prompt and set progress to 0 when the uploads manager\n    // is invisible or is having files dragged to it\n    const shouldShowPrompt = isDragging || !isVisible;\n    const message = customPrompt || messages.uploadsManagerUploadPrompt;\n    const status = shouldShowPrompt ? <FormattedMessage {...message} /> : getUploadStatus(view);\n    const updatedPercent = shouldShowPrompt ? 0 : getPercent(view, percent);\n\n    return (\n        <div\n            aria-hidden={!isVisible}\n            className=\"bcu-overall-progress-bar\"\n            data-resin-target={isExpanded ? 'uploadcollapse' : 'uploadexpand'}\n            onClick={onClick}\n            onKeyDown={onKeyDown}\n            role=\"button\"\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            tabIndex={isVisible ? '0' : '-1'}\n        >\n            <Text as=\"span\" className=\"bcu-upload-status\" color=\"textOnDarkDefault\" variant=\"bodyDefaultBold\">\n                {status}\n            </Text>\n            <ProgressBar percent={updatedPercent} />\n            {isResumeVisible && (\n                <UploadsManagerAction\n                    hasMultipleFailedUploads={hasMultipleFailedUploads}\n                    onClick={onUploadsManagerActionClick}\n                />\n            )}\n            <span className=\"bcu-uploads-manager-toggle\" />\n        </div>\n    );\n};\n\nexport default OverallUploadsProgressBar;\n"],"mappings":"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","ignoreList":[]}