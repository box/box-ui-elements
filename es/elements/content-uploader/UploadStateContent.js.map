{"version":3,"file":"UploadStateContent.js","names":["React","FormattedMessage","UploadInput","messages","UploadStateContent","fileInputLabel","folderInputLabel","message","onChange","useButton","inputLabelClass","canUploadFolder","inputsContent","handleChange","event","currentTarget","value","fileInputContent","createElement","inputLabel","folderInputContent","isFolderUpload","_extends","uploadOptions","values","option1","option2","className"],"sources":["../../../src/elements/content-uploader/UploadStateContent.tsx"],"sourcesContent":["import * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport UploadInput from './UploadInput';\nimport messages from '../common/messages';\n\nexport interface UploadStateContentProps {\n    fileInputLabel?: React.ReactNode;\n    folderInputLabel?: React.ReactNode;\n    message?: string;\n    onChange?: (event: React.ChangeEvent<HTMLInputElement>) => void;\n    useButton?: boolean;\n}\n\nconst UploadStateContent = ({\n    fileInputLabel,\n    folderInputLabel,\n    message,\n    onChange,\n    useButton = false,\n}: UploadStateContentProps) => {\n    const inputLabelClass = useButton ? 'btn btn-primary be-input-btn' : 'be-input-link'; // TODO: Refactor to use Blueprint components\n    const canUploadFolder = !useButton && !!folderInputLabel;\n\n    let inputsContent;\n\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        if (!onChange) {\n            return;\n        }\n\n        onChange(event);\n\n        const { currentTarget } = event;\n        currentTarget.value = ''; // Reset the file input selection\n    };\n\n    const fileInputContent = fileInputLabel ? (\n        <UploadInput inputLabel={fileInputLabel} inputLabelClass={inputLabelClass} onChange={handleChange} />\n    ) : null;\n    const folderInputContent = canUploadFolder ? (\n        <UploadInput\n            inputLabel={folderInputLabel}\n            inputLabelClass={inputLabelClass}\n            isFolderUpload\n            onChange={handleChange}\n        />\n    ) : null;\n\n    if (fileInputContent && folderInputContent) {\n        inputsContent = (\n            <FormattedMessage\n                {...messages.uploadOptions}\n                values={{\n                    option1: fileInputContent,\n                    option2: folderInputContent,\n                }}\n            />\n        );\n    } else if (fileInputContent) {\n        inputsContent = fileInputContent;\n    }\n\n    return (\n        <div>\n            {message && <div className=\"bcu-upload-state-message\">{message}</div>}\n            {inputsContent && <div className=\"bcu-upload-input-container\">{inputsContent}</div>}\n        </div>\n    );\n};\n\nexport default UploadStateContent;\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,gBAAgB,QAAQ,YAAY;AAC7C,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,QAAQ,MAAM,oBAAoB;AAUzC,MAAMC,kBAAkB,GAAGA,CAAC;EACxBC,cAAc;EACdC,gBAAgB;EAChBC,OAAO;EACPC,QAAQ;EACRC,SAAS,GAAG;AACS,CAAC,KAAK;EAC3B,MAAMC,eAAe,GAAGD,SAAS,GAAG,8BAA8B,GAAG,eAAe,CAAC,CAAC;EACtF,MAAME,eAAe,GAAG,CAACF,SAAS,IAAI,CAAC,CAACH,gBAAgB;EAExD,IAAIM,aAAa;EAEjB,MAAMC,YAAY,GAAIC,KAA0C,IAAK;IACjE,IAAI,CAACN,QAAQ,EAAE;MACX;IACJ;IAEAA,QAAQ,CAACM,KAAK,CAAC;IAEf,MAAM;MAAEC;IAAc,CAAC,GAAGD,KAAK;IAC/BC,aAAa,CAACC,KAAK,GAAG,EAAE,CAAC,CAAC;EAC9B,CAAC;EAED,MAAMC,gBAAgB,GAAGZ,cAAc,gBACnCL,KAAA,CAAAkB,aAAA,CAAChB,WAAW;IAACiB,UAAU,EAAEd,cAAe;IAACK,eAAe,EAAEA,eAAgB;IAACF,QAAQ,EAAEK;EAAa,CAAE,CAAC,GACrG,IAAI;EACR,MAAMO,kBAAkB,GAAGT,eAAe,gBACtCX,KAAA,CAAAkB,aAAA,CAAChB,WAAW;IACRiB,UAAU,EAAEb,gBAAiB;IAC7BI,eAAe,EAAEA,eAAgB;IACjCW,cAAc;IACdb,QAAQ,EAAEK;EAAa,CAC1B,CAAC,GACF,IAAI;EAER,IAAII,gBAAgB,IAAIG,kBAAkB,EAAE;IACxCR,aAAa,gBACTZ,KAAA,CAAAkB,aAAA,CAACjB,gBAAgB,EAAAqB,QAAA,KACTnB,QAAQ,CAACoB,aAAa;MAC1BC,MAAM,EAAE;QACJC,OAAO,EAAER,gBAAgB;QACzBS,OAAO,EAAEN;MACb;IAAE,EACL,CACJ;EACL,CAAC,MAAM,IAAIH,gBAAgB,EAAE;IACzBL,aAAa,GAAGK,gBAAgB;EACpC;EAEA,oBACIjB,KAAA,CAAAkB,aAAA,cACKX,OAAO,iBAAIP,KAAA,CAAAkB,aAAA;IAAKS,SAAS,EAAC;EAA0B,GAAEpB,OAAa,CAAC,EACpEK,aAAa,iBAAIZ,KAAA,CAAAkB,aAAA;IAAKS,SAAS,EAAC;EAA4B,GAAEf,aAAmB,CACjF,CAAC;AAEd,CAAC;AAED,eAAeR,kBAAkB","ignoreList":[]}