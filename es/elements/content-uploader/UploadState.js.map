{"version":3,"file":"UploadState.js","names":["React","classNames","useIntl","DiscoDanceParty","HatWand","UploadCloud","UploadStateContent","VIEW_ERROR","VIEW_UPLOAD_EMPTY","VIEW_UPLOAD_IN_PROGRESS","VIEW_UPLOAD_SUCCESS","messages","UploadState","canDrop","hasItems","isOver","isTouch","view","onSelect","isFolderUploadEnabled","formatMessage","icon","content","createElement","uploadErrorState","message","uploadError","uploadEmptyState","uploadInProgress","fileInputLabel","uploadNoDragDrop","onChange","useButton","uploadEmptyFileInput","folderInputLabel","uploadEmptyFolderInput","uploadEmptyWithFolderUploadEnabled","uploadEmptyWithFolderUploadDisabled","uploadSuccessState","uploadSuccessFileInput","uploadSuccessFolderInput","uploadSuccess","className"],"sources":["../../../src/elements/content-uploader/UploadState.tsx"],"sourcesContent":["import * as React from 'react';\nimport classNames from 'classnames';\nimport { useIntl } from 'react-intl';\nimport { DiscoDanceParty, HatWand, UploadCloud } from '@box/blueprint-web-assets/illustrations/Medium';\n\nimport UploadStateContent from './UploadStateContent';\nimport type { View } from '../../common/types/core';\n\nimport { VIEW_ERROR, VIEW_UPLOAD_EMPTY, VIEW_UPLOAD_IN_PROGRESS, VIEW_UPLOAD_SUCCESS } from '../../constants';\n\nimport messages from '../common/messages';\n\nimport './UploadState.scss';\n\nexport interface UploadStateProps {\n    canDrop: boolean;\n    hasItems: boolean;\n    isFolderUploadEnabled: boolean;\n    isOver: boolean;\n    isTouch: boolean;\n    onSelect: (event: React.ChangeEvent<HTMLInputElement>) => void;\n    view: View;\n}\n\nconst UploadState = ({\n    canDrop,\n    hasItems,\n    isOver,\n    isTouch,\n    view,\n    onSelect,\n    isFolderUploadEnabled,\n}: UploadStateProps) => {\n    const { formatMessage } = useIntl();\n    let icon;\n    let content;\n    switch (view) {\n        case VIEW_ERROR:\n            icon = <HatWand aria-label={formatMessage(messages.uploadErrorState)} />;\n            content = <UploadStateContent message={formatMessage(messages.uploadError)} />;\n            break;\n        case VIEW_UPLOAD_EMPTY:\n            icon = <UploadCloud aria-label={formatMessage(messages.uploadEmptyState)} />;\n            /* eslint-disable no-nested-ternary */\n            content =\n                canDrop && hasItems ? (\n                    <UploadStateContent message={formatMessage(messages.uploadInProgress)} />\n                ) : isTouch ? (\n                    <UploadStateContent\n                        fileInputLabel={formatMessage(messages.uploadNoDragDrop)}\n                        onChange={onSelect}\n                        useButton\n                    />\n                ) : (\n                    <UploadStateContent\n                        fileInputLabel={formatMessage(messages.uploadEmptyFileInput)}\n                        folderInputLabel={isFolderUploadEnabled && formatMessage(messages.uploadEmptyFolderInput)}\n                        message={\n                            isFolderUploadEnabled\n                                ? formatMessage(messages.uploadEmptyWithFolderUploadEnabled)\n                                : formatMessage(messages.uploadEmptyWithFolderUploadDisabled)\n                        }\n                        onChange={onSelect}\n                    />\n                );\n            /* eslint-enable no-nested-ternary */\n            break;\n        case VIEW_UPLOAD_IN_PROGRESS:\n            icon = <UploadCloud aria-label={formatMessage(messages.uploadEmptyState)} />;\n            content = <UploadStateContent message={formatMessage(messages.uploadInProgress)} />;\n            break;\n        case VIEW_UPLOAD_SUCCESS:\n            icon = <DiscoDanceParty aria-label={formatMessage(messages.uploadSuccessState)} />;\n            content = (\n                <UploadStateContent\n                    fileInputLabel={formatMessage(messages.uploadSuccessFileInput)}\n                    folderInputLabel={isFolderUploadEnabled && formatMessage(messages.uploadSuccessFolderInput)}\n                    message={formatMessage(messages.uploadSuccess)}\n                    onChange={onSelect}\n                    useButton={isTouch}\n                />\n            );\n            break;\n        default:\n            break;\n    }\n\n    const className = classNames('bcu-upload-state', {\n        'bcu-is-droppable': isOver && canDrop,\n        'bcu-is-not-droppable': isOver && !canDrop,\n        'bcu-has-items': hasItems,\n    });\n\n    return (\n        <div className={className}>\n            <div>\n                {icon}\n                {content}\n            </div>\n            <div className=\"bcu-drag-drop-overlay\" />\n        </div>\n    );\n};\n\nexport default UploadState;\n"],"mappings":"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","ignoreList":[]}