{"version":3,"file":"ItemAction.js","names":["React","useIntl","Button","IconButton","LoadingIndicator","Tooltip","ArrowCurveForward","Checkmark","XMark","Size5","SurfaceStatusSurfaceSuccess","IconInProgress","ERROR_CODE_ITEM_NAME_IN_USE","ERROR_CODE_UPLOAD_FILE_SIZE_LIMIT_EXCEEDED","STATUS_COMPLETE","STATUS_ERROR","STATUS_IN_PROGRESS","STATUS_PENDING","STATUS_STAGED","messages","ItemAction","error","isFolder","isResumableUploadsEnabled","onClick","onUpgradeCTAClick","status","formatMessage","code","LoadingIndicatorIcon","forwardRef","createElement","loading","className","Icon","tooltip","complete","color","height","width","remove","uploadsCancelButtonTooltip","resume","retry","variant","uploadsFileSizeLimitExceededUpgradeMessageForUpgradeCta","isDisabled","tooltipText","content","disabled","icon"],"sources":["../../../src/elements/content-uploader/ItemAction.tsx"],"sourcesContent":["import * as React from 'react';\nimport type { ForwardRefExoticComponent, RefAttributes, SVGProps } from 'react';\nimport { useIntl } from 'react-intl';\nimport { AxiosError } from 'axios';\nimport { Button, IconButton, LoadingIndicator, Tooltip } from '@box/blueprint-web';\nimport { ArrowCurveForward, Checkmark, XMark } from '@box/blueprint-web-assets/icons/Fill';\nimport { Size5, SurfaceStatusSurfaceSuccess } from '@box/blueprint-web-assets/tokens/tokens';\nimport IconInProgress from './IconInProgress';\n\nimport {\n    ERROR_CODE_ITEM_NAME_IN_USE,\n    ERROR_CODE_UPLOAD_FILE_SIZE_LIMIT_EXCEEDED,\n    STATUS_COMPLETE,\n    STATUS_ERROR,\n    STATUS_IN_PROGRESS,\n    STATUS_PENDING,\n    STATUS_STAGED,\n} from '../../constants';\n\nimport messages from '../common/messages';\n\nimport type { UploadStatus } from '../../common/types/upload';\n\nimport './ItemAction.scss';\n\nexport interface ItemActionProps {\n    error?: Partial<AxiosError>;\n    isFolder?: boolean;\n    isResumableUploadsEnabled: boolean;\n    onClick: React.MouseEventHandler<HTMLButtonElement>;\n    onUpgradeCTAClick?: () => void;\n    status: UploadStatus;\n}\n\ntype IconComponent = ForwardRefExoticComponent<SVGProps<SVGSVGElement> & RefAttributes<SVGSVGElement>>;\n\nconst ItemAction = ({\n    error,\n    isFolder = false,\n    isResumableUploadsEnabled,\n    onClick,\n    onUpgradeCTAClick,\n    status,\n}: ItemActionProps) => {\n    const { formatMessage } = useIntl();\n    const { code } = error || {};\n\n    const LoadingIndicatorIcon = React.forwardRef<SVGSVGElement>(() => (\n        <LoadingIndicator aria-label={formatMessage(messages.loading)} className=\"bcu-ItemAction-loading\" />\n    ));\n\n    let Icon: IconComponent = XMark;\n    let tooltip;\n\n    if (isFolder && status !== STATUS_PENDING) {\n        return null;\n    }\n\n    switch (status) {\n        case STATUS_COMPLETE:\n            Icon = React.forwardRef<SVGSVGElement>(() => (\n                <Checkmark\n                    aria-label={formatMessage(messages.complete)}\n                    color={SurfaceStatusSurfaceSuccess}\n                    height={Size5}\n                    width={Size5}\n                />\n            ));\n            if (!isResumableUploadsEnabled) {\n                tooltip = messages.remove;\n            }\n            break;\n        case STATUS_ERROR:\n            if (code === ERROR_CODE_ITEM_NAME_IN_USE) {\n                Icon = XMark;\n                tooltip = messages.uploadsCancelButtonTooltip;\n            } else {\n                Icon = ArrowCurveForward;\n                tooltip = isResumableUploadsEnabled ? messages.resume : messages.retry;\n            }\n            break;\n        case STATUS_IN_PROGRESS:\n        case STATUS_STAGED:\n            if (isResumableUploadsEnabled) {\n                Icon = LoadingIndicatorIcon;\n            } else {\n                Icon = IconInProgress as IconComponent;\n                tooltip = messages.uploadsCancelButtonTooltip;\n            }\n            break;\n        case STATUS_PENDING:\n        default:\n            if (isResumableUploadsEnabled) {\n                Icon = LoadingIndicatorIcon;\n            } else {\n                tooltip = messages.uploadsCancelButtonTooltip;\n            }\n            break;\n    }\n\n    if (status === STATUS_ERROR && code === ERROR_CODE_UPLOAD_FILE_SIZE_LIMIT_EXCEEDED && !!onUpgradeCTAClick) {\n        return (\n            <Button\n                onClick={onUpgradeCTAClick}\n                data-resin-target=\"large_version_error_inline_upgrade_cta\"\n                variant=\"primary\"\n            >\n                {formatMessage(messages.uploadsFileSizeLimitExceededUpgradeMessageForUpgradeCta)}\n            </Button>\n        );\n    }\n\n    const isDisabled = status === STATUS_STAGED;\n    const tooltipText = tooltip && formatMessage(tooltip);\n\n    return (\n        <div className=\"bcu-item-action\">\n            {tooltip ? (\n                <Tooltip content={tooltipText}>\n                    <IconButton aria-label={tooltipText} disabled={isDisabled} icon={Icon} onClick={onClick} />\n                </Tooltip>\n            ) : (\n                <Icon />\n            )}\n        </div>\n    );\n};\n\nexport default ItemAction;\n"],"mappings":"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","ignoreList":[]}