{"version":3,"file":"ItemList.js","names":["React","noop","Table","Column","AutoSizer","nameCellRenderer","progressCellRenderer","actionCellRenderer","removeCellRenderer","ACTION_CELL_WIDTH","ItemList","isResumableUploadsEnabled","items","onClick","onRemoveClick","onUpgradeCTAClick","createElement","width","height","nameCell","progressCell","actionCell","removeCell","className","disableHeader","headerHeight","rowClassName","rowCount","length","rowGetter","index","rowHeight","cellRenderer","dataKey","flexGrow","flexShrink","style","textAlign"],"sources":["../../../src/elements/content-uploader/ItemList.tsx"],"sourcesContent":["import * as React from 'react';\nimport noop from 'lodash/noop';\nimport { Table, Column } from '@box/react-virtualized/dist/es/Table';\nimport AutoSizer from '@box/react-virtualized/dist/es/AutoSizer';\n\nimport nameCellRenderer from './nameCellRenderer';\nimport progressCellRenderer from './progressCellRenderer';\nimport actionCellRenderer from './actionCellRenderer';\nimport removeCellRenderer from './removeCellRenderer';\n\nimport type { UploadItem } from '../../common/types/upload';\n\nimport '@box/react-virtualized/styles.css';\nimport './ItemList.scss';\n\nconst ACTION_CELL_WIDTH = 32;\n\nexport interface ItemListProps {\n    isResumableUploadsEnabled?: boolean;\n    items: UploadItem[];\n    onClick: React.MouseEventHandler<HTMLButtonElement>;\n    onRemoveClick?: (item: UploadItem) => void;\n    onUpgradeCTAClick?: () => void;\n}\n\nexport interface cellRendererProps {\n    rowData: UploadItem;\n}\n\nconst ItemList = ({\n    isResumableUploadsEnabled = false,\n    items,\n    onClick,\n    onRemoveClick = noop,\n    onUpgradeCTAClick,\n}: ItemListProps) => (\n    <AutoSizer>\n        {({ width, height }) => {\n            const nameCell = nameCellRenderer(isResumableUploadsEnabled);\n            const progressCell = progressCellRenderer(!!onUpgradeCTAClick);\n            const actionCell = actionCellRenderer(isResumableUploadsEnabled, onClick, onUpgradeCTAClick);\n            const removeCell = removeCellRenderer(onRemoveClick);\n\n            return (\n                <Table\n                    className=\"bcu-item-list\"\n                    disableHeader\n                    headerHeight={0}\n                    height={height}\n                    rowClassName=\"bcu-item-row\"\n                    rowCount={items.length}\n                    rowGetter={({ index }) => items[index]}\n                    rowHeight={50}\n                    width={width}\n                >\n                    <Column cellRenderer={nameCell} dataKey=\"name\" flexGrow={1} flexShrink={1} width={300} />\n                    <Column\n                        cellRenderer={progressCell}\n                        dataKey=\"progress\"\n                        flexGrow={1}\n                        flexShrink={1}\n                        style={{ textAlign: 'right' }}\n                        width={300}\n                    />\n                    <Column\n                        className={isResumableUploadsEnabled ? '' : 'bcu-item-list-action-column'}\n                        cellRenderer={actionCell}\n                        dataKey=\"status\"\n                        flexShrink={0}\n                        width={onUpgradeCTAClick ? 100 : ACTION_CELL_WIDTH}\n                    />\n                    {isResumableUploadsEnabled && (\n                        <Column\n                            className=\"bcu-item-list-action-column\"\n                            cellRenderer={removeCell}\n                            dataKey=\"remove\"\n                            flexShrink={0}\n                            width={ACTION_CELL_WIDTH}\n                        />\n                    )}\n                </Table>\n            );\n        }}\n    </AutoSizer>\n);\n\nexport default ItemList;\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,IAAI,MAAM,aAAa;AAC9B,SAASC,KAAK,EAAEC,MAAM,QAAQ,sCAAsC;AACpE,OAAOC,SAAS,MAAM,0CAA0C;AAEhE,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,OAAOC,oBAAoB,MAAM,wBAAwB;AACzD,OAAOC,kBAAkB,MAAM,sBAAsB;AACrD,OAAOC,kBAAkB,MAAM,sBAAsB;AAIrD,OAAO,mCAAmC;AAC1C,OAAO,iBAAiB;AAExB,MAAMC,iBAAiB,GAAG,EAAE;AAc5B,MAAMC,QAAQ,GAAGA,CAAC;EACdC,yBAAyB,GAAG,KAAK;EACjCC,KAAK;EACLC,OAAO;EACPC,aAAa,GAAGb,IAAI;EACpBc;AACW,CAAC,kBACZf,KAAA,CAAAgB,aAAA,CAACZ,SAAS,QACL,CAAC;EAAEa,KAAK;EAAEC;AAAO,CAAC,KAAK;EACpB,MAAMC,QAAQ,GAAGd,gBAAgB,CAACM,yBAAyB,CAAC;EAC5D,MAAMS,YAAY,GAAGd,oBAAoB,CAAC,CAAC,CAACS,iBAAiB,CAAC;EAC9D,MAAMM,UAAU,GAAGd,kBAAkB,CAACI,yBAAyB,EAAEE,OAAO,EAAEE,iBAAiB,CAAC;EAC5F,MAAMO,UAAU,GAAGd,kBAAkB,CAACM,aAAa,CAAC;EAEpD,oBACId,KAAA,CAAAgB,aAAA,CAACd,KAAK;IACFqB,SAAS,EAAC,eAAe;IACzBC,aAAa;IACbC,YAAY,EAAE,CAAE;IAChBP,MAAM,EAAEA,MAAO;IACfQ,YAAY,EAAC,cAAc;IAC3BC,QAAQ,EAAEf,KAAK,CAACgB,MAAO;IACvBC,SAAS,EAAEA,CAAC;MAAEC;IAAM,CAAC,KAAKlB,KAAK,CAACkB,KAAK,CAAE;IACvCC,SAAS,EAAE,EAAG;IACdd,KAAK,EAAEA;EAAM,gBAEbjB,KAAA,CAAAgB,aAAA,CAACb,MAAM;IAAC6B,YAAY,EAAEb,QAAS;IAACc,OAAO,EAAC,MAAM;IAACC,QAAQ,EAAE,CAAE;IAACC,UAAU,EAAE,CAAE;IAAClB,KAAK,EAAE;EAAI,CAAE,CAAC,eACzFjB,KAAA,CAAAgB,aAAA,CAACb,MAAM;IACH6B,YAAY,EAAEZ,YAAa;IAC3Ba,OAAO,EAAC,UAAU;IAClBC,QAAQ,EAAE,CAAE;IACZC,UAAU,EAAE,CAAE;IACdC,KAAK,EAAE;MAAEC,SAAS,EAAE;IAAQ,CAAE;IAC9BpB,KAAK,EAAE;EAAI,CACd,CAAC,eACFjB,KAAA,CAAAgB,aAAA,CAACb,MAAM;IACHoB,SAAS,EAAEZ,yBAAyB,GAAG,EAAE,GAAG,6BAA8B;IAC1EqB,YAAY,EAAEX,UAAW;IACzBY,OAAO,EAAC,QAAQ;IAChBE,UAAU,EAAE,CAAE;IACdlB,KAAK,EAAEF,iBAAiB,GAAG,GAAG,GAAGN;EAAkB,CACtD,CAAC,EACDE,yBAAyB,iBACtBX,KAAA,CAAAgB,aAAA,CAACb,MAAM;IACHoB,SAAS,EAAC,6BAA6B;IACvCS,YAAY,EAAEV,UAAW;IACzBW,OAAO,EAAC,QAAQ;IAChBE,UAAU,EAAE,CAAE;IACdlB,KAAK,EAAER;EAAkB,CAC5B,CAEF,CAAC;AAEhB,CACO,CACd;AAED,eAAeC,QAAQ","ignoreList":[]}