{"version":3,"file":"cellRendererHelper.js","names":["TYPE_FILE","isRowSelectable","selectableType","extensionsWhitelist","hasHitSelectionLimit","rowData","type","extension","selected","shouldAllowSelection","isTypeSelectable","indexOf","isFilePicker","isExtensionWhitelisted","length"],"sources":["../../../src/elements/content-picker/cellRendererHelper.js"],"sourcesContent":["/**\n * @flow\n * @file Function to filter cells from being selected\n * @author Box\n */\n\nimport { TYPE_FILE } from '../../constants';\nimport type { BoxItem } from '../../common/types/core';\n\nfunction isRowSelectable(\n    selectableType: string,\n    extensionsWhitelist: string[],\n    hasHitSelectionLimit: boolean,\n    rowData: BoxItem,\n): boolean {\n    const { type, extension = '', selected }: BoxItem = rowData;\n    const shouldAllowSelection: boolean = hasHitSelectionLimit ? !!selected : true;\n    const isTypeSelectable: boolean = !!type && selectableType.indexOf(type) > -1;\n    const isFilePicker: boolean = selectableType.indexOf(TYPE_FILE) > -1;\n    const isExtensionWhitelisted: boolean =\n        isFilePicker && extensionsWhitelist.length ? extensionsWhitelist.indexOf(extension) > -1 : true;\n\n    return shouldAllowSelection && isTypeSelectable && isExtensionWhitelisted;\n}\n\nexport default isRowSelectable;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA,SAASA,SAAS,QAAQ,iBAAiB;AAG3C,SAASC,eAAeA,CACpBC,cAAsB,EACtBC,mBAA6B,EAC7BC,oBAA6B,EAC7BC,OAAgB,EACT;EACP,MAAM;IAAEC,IAAI;IAAEC,SAAS,GAAG,EAAE;IAAEC;EAAkB,CAAC,GAAGH,OAAO;EAC3D,MAAMI,oBAA6B,GAAGL,oBAAoB,GAAG,CAAC,CAACI,QAAQ,GAAG,IAAI;EAC9E,MAAME,gBAAyB,GAAG,CAAC,CAACJ,IAAI,IAAIJ,cAAc,CAACS,OAAO,CAACL,IAAI,CAAC,GAAG,CAAC,CAAC;EAC7E,MAAMM,YAAqB,GAAGV,cAAc,CAACS,OAAO,CAACX,SAAS,CAAC,GAAG,CAAC,CAAC;EACpE,MAAMa,sBAA+B,GACjCD,YAAY,IAAIT,mBAAmB,CAACW,MAAM,GAAGX,mBAAmB,CAACQ,OAAO,CAACJ,SAAS,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI;EAEnG,OAAOE,oBAAoB,IAAIC,gBAAgB,IAAIG,sBAAsB;AAC7E;AAEA,eAAeZ,eAAe","ignoreList":[]}