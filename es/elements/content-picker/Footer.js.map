{"version":3,"file":"Footer.js","names":["React","FormattedMessage","useIntl","Button","ButtonType","ButtonGroup","IconCheck","IconClose","messages","PrimaryButton","Tooltip","Footer","currentCollection","selectedCount","selectedItems","onSelectedClick","hasHitSelectionLimit","isSingleSelect","onCancel","onChoose","chooseButtonLabel","cancelButtonLabel","children","renderCustomActionButtons","showSelectedButton","formatMessage","cancelMessage","cancel","chooseMessage","choose","isChooseButtonDisabled","createElement","className","onClick","type","BUTTON","_extends","selected","values","count","max","currentFolderId","id","currentFolderName","name","text","height","width","isDisabled","disabled","color"],"sources":["../../../src/elements/content-picker/Footer.tsx"],"sourcesContent":["import * as React from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport type { Collection, BoxItem } from '../../common/types/core';\nimport Button, { ButtonType } from '../../components/button';\nimport ButtonGroup from '../../components/button-group';\nimport IconCheck from '../../icons/general/IconCheck';\nimport IconClose from '../../icons/general/IconClose';\nimport messages from '../common/messages';\nimport PrimaryButton from '../../components/primary-button';\nimport Tooltip from '../common/Tooltip';\nimport './Footer.scss';\n\ninterface Props {\n    cancelButtonLabel?: string;\n    children?: React.ReactNode;\n    chooseButtonLabel?: string;\n    currentCollection: Collection;\n    hasHitSelectionLimit: boolean;\n    isSingleSelect: boolean;\n    onCancel: () => void;\n    onChoose: () => void;\n    onSelectedClick: () => void;\n    renderCustomActionButtons?: (options: {\n        currentFolderId: string;\n        currentFolderName: string;\n        onCancel: () => void;\n        onChoose: () => void;\n        selectedCount: number;\n        selectedItems: BoxItem[];\n    }) => React.ReactNode;\n    selectedCount: number;\n    selectedItems: BoxItem[];\n    showSelectedButton: boolean;\n}\n\nconst Footer = ({\n    currentCollection,\n    selectedCount,\n    selectedItems,\n    onSelectedClick,\n    hasHitSelectionLimit,\n    isSingleSelect,\n    onCancel,\n    onChoose,\n    chooseButtonLabel,\n    cancelButtonLabel,\n    children,\n    renderCustomActionButtons,\n    showSelectedButton,\n}: Props): React.ReactElement => {\n    const { formatMessage } = useIntl();\n    const cancelMessage = formatMessage(messages.cancel);\n    const chooseMessage = formatMessage(messages.choose);\n    const isChooseButtonDisabled = !selectedCount;\n\n    return (\n        <footer className=\"bcp-footer\">\n            <div className=\"bcp-footer-left\">\n                {showSelectedButton && !isSingleSelect && (\n                    <Button className=\"bcp-selected\" onClick={onSelectedClick} type={ButtonType.BUTTON}>\n                        <FormattedMessage\n                            className=\"bcp-selected-count\"\n                            {...messages.selected}\n                            values={{ count: selectedCount }}\n                        />\n                        {hasHitSelectionLimit && (\n                            <span className=\"bcp-selected-max\">\n                                (<FormattedMessage {...messages.max} />)\n                            </span>\n                        )}\n                    </Button>\n                )}\n            </div>\n            <div className=\"bcp-footer-right\">\n                {children}\n                {renderCustomActionButtons ? (\n                    renderCustomActionButtons({\n                        currentFolderId: currentCollection.id,\n                        currentFolderName: currentCollection.name,\n                        onCancel,\n                        onChoose,\n                        selectedCount,\n                        selectedItems,\n                    })\n                ) : (\n                    <ButtonGroup className=\"bcp-footer-actions\">\n                        <Tooltip text={cancelButtonLabel || cancelMessage}>\n                            <Button aria-label={cancelMessage} onClick={onCancel} type={ButtonType.BUTTON}>\n                                <IconClose height={16} width={16} />\n                            </Button>\n                        </Tooltip>\n                        <Tooltip isDisabled={isChooseButtonDisabled} text={chooseButtonLabel || chooseMessage}>\n                            <PrimaryButton\n                                aria-label={chooseMessage}\n                                isDisabled={isChooseButtonDisabled}\n                                onClick={onChoose}\n                                type={ButtonType.BUTTON}\n                                {...{ disabled: isChooseButtonDisabled }} // sets disabled attribute for native HTML button\n                            >\n                                <IconCheck color=\"#fff\" height={16} width={16} />\n                            </PrimaryButton>\n                        </Tooltip>\n                    </ButtonGroup>\n                )}\n            </div>\n        </footer>\n    );\n};\n\nexport default Footer;\n"],"mappings":"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","ignoreList":[]}