{"version":3,"file":"checkboxCellRenderer.js","names":["React","Checkbox","isRowSelectable","onItemSelect","selectableType","extensionsWhitelist","hasHitSelectionLimit","rowData","name","selected","createElement","hideLabel","isChecked","label","onChange"],"sources":["../../../src/elements/content-picker/checkboxCellRenderer.js"],"sourcesContent":["/**\n * @flow\n * @file Function to render the checkbox table cell\n * @author Box\n */\n\nimport * as React from 'react';\nimport Checkbox from '../../components/checkbox/Checkbox';\nimport isRowSelectable from './cellRendererHelper';\nimport type { BoxItem } from '../../common/types/core';\n\nexport default (\n    onItemSelect: Function,\n    selectableType: string,\n    extensionsWhitelist: string[],\n    hasHitSelectionLimit: boolean,\n): Function => ({ rowData }: { rowData: BoxItem }) => {\n    const { name, selected = false } = rowData;\n\n    if (!isRowSelectable(selectableType, extensionsWhitelist, hasHitSelectionLimit, rowData)) {\n        return <span />;\n    }\n\n    return (\n        <Checkbox\n            hideLabel\n            isChecked={selected}\n            label={((name: any): string)}\n            name={((name: any): string)}\n            onChange={() => onItemSelect(rowData)}\n        />\n    );\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,QAAQ,MAAM,oCAAoC;AACzD,OAAOC,eAAe,MAAM,sBAAsB;AAGlD,eAAe,CACXC,YAAsB,EACtBC,cAAsB,EACtBC,mBAA6B,EAC7BC,oBAA6B,KAClB,CAAC;EAAEC;AAA8B,CAAC,KAAK;EAClD,MAAM;IAAEC,IAAI;IAAEC,QAAQ,GAAG;EAAM,CAAC,GAAGF,OAAO;EAE1C,IAAI,CAACL,eAAe,CAACE,cAAc,EAAEC,mBAAmB,EAAEC,oBAAoB,EAAEC,OAAO,CAAC,EAAE;IACtF,oBAAOP,KAAA,CAAAU,aAAA,aAAO,CAAC;EACnB;EAEA,oBACIV,KAAA,CAAAU,aAAA,CAACT,QAAQ;IACLU,SAAS;IACTC,SAAS,EAAEH,QAAS;IACpBI,KAAK,EAAIL,IAAoB;IAC7BA,IAAI,EAAIA,IAAoB;IAC5BM,QAAQ,EAAEA,CAAA,KAAMX,YAAY,CAACI,OAAO;EAAE,CACzC,CAAC;AAEV,CAAC","ignoreList":[]}