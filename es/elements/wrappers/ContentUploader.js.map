{"version":3,"file":"ContentUploader.js","names":["React","render","ES6Wrapper","ContentUploaderPopup","WrappedContentUploaderComponent","ContentUploader","constructor","args","_defineProperty","emit","data","_this$options","options","modal","rest","_objectWithoutProperties","_excluded","UploaderComponent","createElement","_extends","language","messages","componentRef","setComponent","rootFolderId","id","token","onClose","onComplete","onError","onBeforeUpload","onUpload","container","global","Box"],"sources":["../../../src/elements/wrappers/ContentUploader.js"],"sourcesContent":["/**\n * @flow\n * @file Base class for the Content Uploader ES6 wrapper\n * @author Box\n */\n\nimport * as React from 'react';\n// TODO switch to createRoot when upgrading to React 18\n// eslint-disable-next-line react/no-deprecated\nimport { render } from 'react-dom';\nimport ES6Wrapper from './ES6Wrapper';\n// $FlowFixMe\nimport ContentUploaderPopup from '../content-uploader/ContentUploaderPopup';\n// $FlowFixMe\nimport WrappedContentUploaderComponent from '../content-uploader/ContentUploader';\nimport type { UploadFileWithAPIOptions } from '../../common/types/upload';\nimport type { BoxItem } from '../../common/types/core';\nimport type { ModalOptions } from '../common/flowTypes';\n\nclass ContentUploader extends ES6Wrapper {\n    /**\n     * Callback on closing uploader. Emits 'close' event.\n     *\n     * @return {void}\n     */\n    onClose = (): void => {\n        this.emit('close');\n    };\n\n    /**\n     * Callback when all files finish uploading. Emits 'complete' event with Box File objects of uploaded items as data.\n     *\n     * @param {Array} data - Completed upload items\n     * @return {void}\n     */\n    onComplete = (data: BoxItem[]): void => {\n        this.emit('complete', data);\n    };\n\n    /**\n     * Callback on a single upload error. Emits 'uploaderror' event with information about the failed upload.\n     *\n     * @param {Object} data - File and error info about failed upload\n     * @return {void}\n     */\n    onError = (data: any): void => {\n        this.emit('error', data);\n    };\n\n    /**\n     * Callback on a single pre-uploaded file. Emits 'beforeupload' event with the Box File object pre-upload.\n     *\n     * @param {Object} data - Upload item\n     * @return {void}\n     */\n    onBeforeUpload = (data: UploadFileWithAPIOptions | File): void => {\n        this.emit('beforeupload', data);\n    };\n\n    /**\n     * Callback on a single successful upload. Emits 'uploadsuccess' event with Box File object of uploaded item.\n     *\n     * @param {BoxItem} data - Successfully uploaded item\n     * @return {void}\n     */\n    onUpload = (data: BoxItem): void => {\n        this.emit('upload', data);\n    };\n\n    /** @inheritdoc */\n    render() {\n        const { modal, ...rest }: { modal?: ModalOptions } = this.options;\n        const UploaderComponent = modal ? ContentUploaderPopup : WrappedContentUploaderComponent;\n\n        render(\n            <UploaderComponent\n                language={this.language}\n                messages={this.messages}\n                componentRef={this.setComponent}\n                rootFolderId={this.id}\n                token={this.token}\n                onClose={this.onClose}\n                onComplete={this.onComplete}\n                onError={this.onError}\n                onBeforeUpload={this.onBeforeUpload}\n                onUpload={this.onUpload}\n                modal={((modal: any): ModalOptions)}\n                {...rest}\n            />,\n            this.container,\n        );\n    }\n}\n\nglobal.Box = global.Box || {};\nglobal.Box.ContentUploader = ContentUploader;\nexport default ContentUploader;\n"],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;;AAEA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B;AACA;AACA,SAASC,MAAM,QAAQ,WAAW;AAClC,OAAOC,UAAU,MAAM,cAAc;AACrC;AACA,OAAOC,oBAAoB,MAAM,0CAA0C;AAC3E;AACA,OAAOC,+BAA+B,MAAM,qCAAqC;AAKjF,MAAMC,eAAe,SAASH,UAAU,CAAC;EAAAI,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IACrC;AACJ;AACA;AACA;AACA;IAJIC,eAAA,kBAKU,MAAY;MAClB,IAAI,CAACC,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;IAED;AACJ;AACA;AACA;AACA;AACA;IALID,eAAA,qBAMcE,IAAe,IAAW;MACpC,IAAI,CAACD,IAAI,CAAC,UAAU,EAAEC,IAAI,CAAC;IAC/B,CAAC;IAED;AACJ;AACA;AACA;AACA;AACA;IALIF,eAAA,kBAMWE,IAAS,IAAW;MAC3B,IAAI,CAACD,IAAI,CAAC,OAAO,EAAEC,IAAI,CAAC;IAC5B,CAAC;IAED;AACJ;AACA;AACA;AACA;AACA;IALIF,eAAA,yBAMkBE,IAAqC,IAAW;MAC9D,IAAI,CAACD,IAAI,CAAC,cAAc,EAAEC,IAAI,CAAC;IACnC,CAAC;IAED;AACJ;AACA;AACA;AACA;AACA;IALIF,eAAA,mBAMYE,IAAa,IAAW;MAChC,IAAI,CAACD,IAAI,CAAC,QAAQ,EAAEC,IAAI,CAAC;IAC7B,CAAC;EAAA;EAED;EACAT,MAAMA,CAAA,EAAG;IACL,MAAAU,aAAA,GAAqD,IAAI,CAACC,OAAO;MAA3D;QAAEC;MAAyC,CAAC,GAAAF,aAAA;MAAhCG,IAAI,GAAAC,wBAAA,CAAAJ,aAAA,EAAAK,SAAA;IACtB,MAAMC,iBAAiB,GAAGJ,KAAK,GAAGV,oBAAoB,GAAGC,+BAA+B;IAExFH,MAAM,cACFD,KAAA,CAAAkB,aAAA,CAACD,iBAAiB,EAAAE,QAAA;MACdC,QAAQ,EAAE,IAAI,CAACA,QAAS;MACxBC,QAAQ,EAAE,IAAI,CAACA,QAAS;MACxBC,YAAY,EAAE,IAAI,CAACC,YAAa;MAChCC,YAAY,EAAE,IAAI,CAACC,EAAG;MACtBC,KAAK,EAAE,IAAI,CAACA,KAAM;MAClBC,OAAO,EAAE,IAAI,CAACA,OAAQ;MACtBC,UAAU,EAAE,IAAI,CAACA,UAAW;MAC5BC,OAAO,EAAE,IAAI,CAACA,OAAQ;MACtBC,cAAc,EAAE,IAAI,CAACA,cAAe;MACpCC,QAAQ,EAAE,IAAI,CAACA,QAAS;MACxBlB,KAAK,EAAIA;IAA2B,GAChCC,IAAI,CACX,CAAC,EACF,IAAI,CAACkB,SACT,CAAC;EACL;AACJ;AAEAC,MAAM,CAACC,GAAG,GAAGD,MAAM,CAACC,GAAG,IAAI,CAAC,CAAC;AAC7BD,MAAM,CAACC,GAAG,CAAC7B,eAAe,GAAGA,eAAe;AAC5C,eAAeA,eAAe","ignoreList":[]}