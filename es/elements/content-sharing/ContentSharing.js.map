{"version":3,"file":"ContentSharing.js","names":["React","API","withBlueprintModernization","isFeatureEnabled","SharingModal","ContentSharingV2","CLIENT_NAME_CONTENT_SHARING","CLIENT_VERSION","DEFAULT_HOSTNAME_API","createAPI","apiHost","itemID","itemType","token","clientName","id","version","ContentSharing","children","config","customButton","displayInModal","features","hasProviders","language","messages","uuid","api","setAPI","useState","launchButton","setLaunchButton","isVisible","setIsVisible","useEffect","cloneElement","onClick","createElement","Fragment","ContentSharingComponent"],"sources":["../../../src/elements/content-sharing/ContentSharing.js"],"sourcesContent":["/**\n * @flow\n * @file ContentSharing Element\n * @description This is the top-level component for ContentSharing. It instantiates the API, which it then\n * passes to the SharingModal component either immediately (when no custom button is provided) or on\n * button click (when a custom button is provided).\n * @author Box\n */\nimport 'regenerator-runtime/runtime';\nimport * as React from 'react';\nimport API from '../../api';\n// $FlowFixMe\nimport { withBlueprintModernization } from '../common/withBlueprintModernization';\nimport { isFeatureEnabled } from '../common/feature-checking';\nimport SharingModal from './SharingModal';\n// $FlowFixMe\nimport ContentSharingV2 from './ContentSharingV2';\nimport { CLIENT_NAME_CONTENT_SHARING, CLIENT_VERSION, DEFAULT_HOSTNAME_API } from '../../constants';\n\nimport type { ItemType, StringMap } from '../../common/types/core';\nimport type { USMConfig } from '../../features/unified-share-modal/flowTypes';\nimport type { FeatureConfig } from '../common/feature-checking';\n\nimport '../common/base.scss';\nimport '../common/fonts.scss';\nimport '../common/modal.scss';\n\ntype ContentSharingProps = {\n    /** apiHost - API hostname. Defaults to https://api.box.com */\n    apiHost: string,\n    /** children - Children for the element to open the Unified Share Modal */\n    children?: React.Element<any>,\n    /** config - Configuration object that shows/hides features in the USM */\n    config?: USMConfig,\n    /**\n     * customButton - Clickable element for opening the SharingModal component.\n     * This property should always be used in conjunction with displayInModal.\n     */\n    customButton?: React.Element<any>,\n    /**\n     * displayInModal - Whether the SharingModal component should be displayed in a modal.\n     * If false, the SharingModal component will appear as a form within the surrounding page.\n     * This property can be used with or without a customButton. If used without a customButton,\n     * the modal will appear on page load. See ContentSharing.stories.js for examples.\n     */\n    displayInModal: boolean,\n    /** features - Features for the element */\n    features?: FeatureConfig,\n    /** hasProviders - Whether the element has providers for USM already */\n    hasProviders?: boolean,\n    /** itemID - Box file or folder ID */\n    itemID: string,\n    /** itemType - \"file\" or \"folder\" */\n    itemType: ItemType,\n    /** language - Language used for the element */\n    language: string,\n    /** messages - Localized strings used by the element */\n    messages?: StringMap,\n    /** token - Valid access token */\n    token: string,\n    /** uuid - Unique identifier, used for refreshing element visibility when called from the ES6 wrapper */\n    uuid?: string,\n};\n\nconst createAPI = (apiHost, itemID, itemType, token) =>\n    new API({\n        apiHost,\n        clientName: CLIENT_NAME_CONTENT_SHARING,\n        id: `${itemType}_${itemID}`,\n        token,\n        version: CLIENT_VERSION,\n    });\n\nfunction ContentSharing({\n    apiHost = DEFAULT_HOSTNAME_API,\n    children,\n    config,\n    customButton,\n    displayInModal,\n    features = {},\n    hasProviders = true,\n    itemID,\n    itemType,\n    language,\n    messages,\n    token,\n    uuid,\n}: ContentSharingProps) {\n    const [api, setAPI] = React.useState<API | null>(createAPI(apiHost, itemID, itemType, token));\n    const [launchButton, setLaunchButton] = React.useState<React.Element<any> | null>(null);\n    const [isVisible, setIsVisible] = React.useState<boolean>(!customButton);\n\n    // Reset the API if necessary\n    React.useEffect(() => {\n        if (apiHost && itemID && itemType && token) {\n            setAPI(createAPI(apiHost, itemID, itemType, token));\n        }\n    }, [apiHost, itemID, itemType, token]);\n\n    // Reset state if the API has changed\n    React.useEffect(() => {\n        setIsVisible(!customButton);\n    }, [api, customButton, uuid]);\n\n    React.useEffect(() => {\n        if (customButton && !launchButton) {\n            setLaunchButton(\n                React.cloneElement(customButton, {\n                    onClick: () => {\n                        return setIsVisible(true);\n                    },\n                }),\n            );\n        }\n    }, [config, customButton, displayInModal, itemID, itemType, language, launchButton, messages, isVisible]);\n\n    if (isFeatureEnabled(features, 'contentSharingV2')) {\n        return (\n            api && (\n                <ContentSharingV2\n                    api={api}\n                    itemID={itemID}\n                    itemType={itemType}\n                    hasProviders={hasProviders}\n                    language={language}\n                    messages={messages}\n                >\n                    {children}\n                </ContentSharingV2>\n            )\n        );\n    }\n\n    return (\n        <>\n            {launchButton}\n            {api && (\n                <SharingModal\n                    api={api}\n                    config={config}\n                    displayInModal={displayInModal}\n                    isVisible={isVisible}\n                    itemID={itemID}\n                    itemType={itemType}\n                    language={language}\n                    messages={messages}\n                    setIsVisible={setIsVisible}\n                    uuid={uuid}\n                />\n            )}\n        </>\n    );\n}\n\nexport { ContentSharing as ContentSharingComponent };\nexport default withBlueprintModernization(ContentSharing);\n"],"mappings":"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","ignoreList":[]}