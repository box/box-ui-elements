{"version":3,"file":"useCollaborators.js","names":["React","noop","API","TYPE_FILE","TYPE_FOLDER","useCollaborators","api","itemID","itemType","options","collaboratorsList","setCollaboratorsList","useState","handleSuccess","handleError","useEffect","handleGetCollaborationsSuccess","response","handleGetCollaborationsError","entries","next_marker","collabAPIInstance","getFileCollaborationsAPI","getFolderCollaborationsAPI","getCollaborations"],"sources":["../../../../src/elements/content-sharing/hooks/useCollaborators.js"],"sourcesContent":["// @flow\n\nimport * as React from 'react';\nimport noop from 'lodash/noop';\nimport API from '../../../api';\nimport { TYPE_FILE, TYPE_FOLDER } from '../../../constants';\nimport type { Collaborations, ItemType } from '../../../common/types/core';\nimport type { ContentSharingHooksOptions } from '../types';\n\n/**\n * Get the item's collaborators\n *\n * A note on the wording: the USM uses the term \"collaborators\" internally,\n * so the state variable and state setting function also refer to \"collaborators.\"\n * However, we are using the Collaborations API here, so the API-related functions\n * use the term \"collaborations.\" For more details, see ./api/FileCollaborations.\n *\n * @param {API} api\n * @param {string} itemID\n * @param {ItemType} itemType\n * @param {ContentSharingHooksOptions} options\n * @returns {Collaborations | null}\n */\nfunction useCollaborators(\n    api: API,\n    itemID: string,\n    itemType: ItemType,\n    options: ContentSharingHooksOptions,\n): Collaborations | null {\n    const [collaboratorsList, setCollaboratorsList] = React.useState<Collaborations | null>(null);\n    const { handleSuccess = noop, handleError = noop } = options;\n\n    React.useEffect(() => {\n        if (collaboratorsList) return;\n\n        const handleGetCollaborationsSuccess = (response: Collaborations) => {\n            setCollaboratorsList(response);\n            handleSuccess(response);\n        };\n\n        const handleGetCollaborationsError = () => {\n            setCollaboratorsList({ entries: [], next_marker: null });\n            handleError();\n        };\n\n        let collabAPIInstance;\n        if (itemType === TYPE_FILE) {\n            collabAPIInstance = api.getFileCollaborationsAPI(false);\n        } else if (itemType === TYPE_FOLDER) {\n            collabAPIInstance = api.getFolderCollaborationsAPI(false);\n        }\n        if (collabAPIInstance) {\n            collabAPIInstance.getCollaborations(itemID, handleGetCollaborationsSuccess, handleGetCollaborationsError);\n        }\n    }, [api, collaboratorsList, handleError, handleSuccess, itemID, itemType]);\n\n    return collaboratorsList;\n}\n\nexport default useCollaborators;\n"],"mappings":"AAEA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,IAAI,MAAM,aAAa;AAC9B,OAAOC,GAAG,MAAM,cAAc;AAC9B,SAASC,SAAS,EAAEC,WAAW,QAAQ,oBAAoB;AAI3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,gBAAgBA,CACrBC,GAAQ,EACRC,MAAc,EACdC,QAAkB,EAClBC,OAAmC,EACd;EACrB,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGX,KAAK,CAACY,QAAQ,CAAwB,IAAI,CAAC;EAC7F,MAAM;IAAEC,aAAa,GAAGZ,IAAI;IAAEa,WAAW,GAAGb;EAAK,CAAC,GAAGQ,OAAO;EAE5DT,KAAK,CAACe,SAAS,CAAC,MAAM;IAClB,IAAIL,iBAAiB,EAAE;IAEvB,MAAMM,8BAA8B,GAAIC,QAAwB,IAAK;MACjEN,oBAAoB,CAACM,QAAQ,CAAC;MAC9BJ,aAAa,CAACI,QAAQ,CAAC;IAC3B,CAAC;IAED,MAAMC,4BAA4B,GAAGA,CAAA,KAAM;MACvCP,oBAAoB,CAAC;QAAEQ,OAAO,EAAE,EAAE;QAAEC,WAAW,EAAE;MAAK,CAAC,CAAC;MACxDN,WAAW,CAAC,CAAC;IACjB,CAAC;IAED,IAAIO,iBAAiB;IACrB,IAAIb,QAAQ,KAAKL,SAAS,EAAE;MACxBkB,iBAAiB,GAAGf,GAAG,CAACgB,wBAAwB,CAAC,KAAK,CAAC;IAC3D,CAAC,MAAM,IAAId,QAAQ,KAAKJ,WAAW,EAAE;MACjCiB,iBAAiB,GAAGf,GAAG,CAACiB,0BAA0B,CAAC,KAAK,CAAC;IAC7D;IACA,IAAIF,iBAAiB,EAAE;MACnBA,iBAAiB,CAACG,iBAAiB,CAACjB,MAAM,EAAES,8BAA8B,EAAEE,4BAA4B,CAAC;IAC7G;EACJ,CAAC,EAAE,CAACZ,GAAG,EAAEI,iBAAiB,EAAEI,WAAW,EAAED,aAAa,EAAEN,MAAM,EAAEC,QAAQ,CAAC,CAAC;EAE1E,OAAOE,iBAAiB;AAC5B;AAEA,eAAeL,gBAAgB","ignoreList":[]}