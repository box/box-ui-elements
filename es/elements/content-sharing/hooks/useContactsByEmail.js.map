{"version":3,"file":"useContactsByEmail.js","names":["React","noop","API","useContactsByEmail","api","itemID","options","getContactsByEmail","setGetContactsByEmail","useState","handleSuccess","handleError","transformUsers","useEffect","resolveAPICall","resolve","response","transformFn","entries","length","updatedGetContactsByEmailFn","filterTerm","Array","isArray","emails","Promise","parsedFilterTerm","getMarkerBasedUsersAPI","getUsersInEnterprise","filter_term"],"sources":["../../../../src/elements/content-sharing/hooks/useContactsByEmail.js"],"sourcesContent":["// @flow\n\nimport * as React from 'react';\nimport noop from 'lodash/noop';\nimport API from '../../../api';\nimport type { UserCollection, UserMini } from '../../../common/types/core';\nimport type { ContactByEmailObject, ContentSharingHooksOptions, GetContactsByEmailFnType } from '../types';\n\n/**\n * Generate the getContactsByEmail() function, which is used for looking up contacts added to the collaborators field in the USM.\n *\n * @param {API} api\n * @param {string} itemID\n * @param {ContentSharingHooksOptions} options\n * @returns {GetContactsByEmailFnType | null}\n */\nfunction useContactsByEmail(\n    api: API,\n    itemID: string,\n    options: ContentSharingHooksOptions,\n): GetContactsByEmailFnType | null {\n    const [getContactsByEmail, setGetContactsByEmail] = React.useState<null | GetContactsByEmailFnType>(null);\n    const { handleSuccess = noop, handleError = noop, transformUsers } = options;\n\n    React.useEffect(() => {\n        if (getContactsByEmail) return;\n\n        const resolveAPICall = (\n            resolve: (result: ContactByEmailObject | Array<UserMini>) => void,\n            response: UserCollection,\n            transformFn: ?Function,\n        ) => {\n            handleSuccess(response);\n            // A successful API call will always return an entries array, but we still need these checks for Flow purposes\n            if (response && response.entries && response.entries.length) {\n                return resolve(transformFn ? transformFn(response) : response.entries);\n            }\n            return resolve({});\n        };\n\n        const updatedGetContactsByEmailFn: GetContactsByEmailFnType = () => (filterTerm: {\n            [emails: string]: string,\n        }) => {\n            if (!filterTerm || !Array.isArray(filterTerm.emails) || !filterTerm.emails.length) {\n                return Promise.resolve({});\n            }\n            const parsedFilterTerm = filterTerm.emails[0];\n\n            return new Promise((resolve: (result: ContactByEmailObject | Array<UserMini>) => void) => {\n                api.getMarkerBasedUsersAPI(false).getUsersInEnterprise(\n                    itemID,\n                    (response: UserCollection) => resolveAPICall(resolve, response, transformUsers),\n                    handleError,\n                    { filter_term: parsedFilterTerm },\n                );\n            });\n        };\n        setGetContactsByEmail(updatedGetContactsByEmailFn);\n    }, [api, getContactsByEmail, handleError, handleSuccess, itemID, transformUsers]);\n\n    return getContactsByEmail;\n}\n\nexport default useContactsByEmail;\n"],"mappings":"AAEA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,IAAI,MAAM,aAAa;AAC9B,OAAOC,GAAG,MAAM,cAAc;AAI9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,kBAAkBA,CACvBC,GAAQ,EACRC,MAAc,EACdC,OAAmC,EACJ;EAC/B,MAAM,CAACC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGR,KAAK,CAACS,QAAQ,CAAkC,IAAI,CAAC;EACzG,MAAM;IAAEC,aAAa,GAAGT,IAAI;IAAEU,WAAW,GAAGV,IAAI;IAAEW;EAAe,CAAC,GAAGN,OAAO;EAE5EN,KAAK,CAACa,SAAS,CAAC,MAAM;IAClB,IAAIN,kBAAkB,EAAE;IAExB,MAAMO,cAAc,GAAGA,CACnBC,OAAiE,EACjEC,QAAwB,EACxBC,WAAsB,KACrB;MACDP,aAAa,CAACM,QAAQ,CAAC;MACvB;MACA,IAAIA,QAAQ,IAAIA,QAAQ,CAACE,OAAO,IAAIF,QAAQ,CAACE,OAAO,CAACC,MAAM,EAAE;QACzD,OAAOJ,OAAO,CAACE,WAAW,GAAGA,WAAW,CAACD,QAAQ,CAAC,GAAGA,QAAQ,CAACE,OAAO,CAAC;MAC1E;MACA,OAAOH,OAAO,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC;IAED,MAAMK,2BAAqD,GAAGA,CAAA,KAAOC,UAEpE,IAAK;MACF,IAAI,CAACA,UAAU,IAAI,CAACC,KAAK,CAACC,OAAO,CAACF,UAAU,CAACG,MAAM,CAAC,IAAI,CAACH,UAAU,CAACG,MAAM,CAACL,MAAM,EAAE;QAC/E,OAAOM,OAAO,CAACV,OAAO,CAAC,CAAC,CAAC,CAAC;MAC9B;MACA,MAAMW,gBAAgB,GAAGL,UAAU,CAACG,MAAM,CAAC,CAAC,CAAC;MAE7C,OAAO,IAAIC,OAAO,CAAEV,OAAiE,IAAK;QACtFX,GAAG,CAACuB,sBAAsB,CAAC,KAAK,CAAC,CAACC,oBAAoB,CAClDvB,MAAM,EACLW,QAAwB,IAAKF,cAAc,CAACC,OAAO,EAAEC,QAAQ,EAAEJ,cAAc,CAAC,EAC/ED,WAAW,EACX;UAAEkB,WAAW,EAAEH;QAAiB,CACpC,CAAC;MACL,CAAC,CAAC;IACN,CAAC;IACDlB,qBAAqB,CAACY,2BAA2B,CAAC;EACtD,CAAC,EAAE,CAAChB,GAAG,EAAEG,kBAAkB,EAAEI,WAAW,EAAED,aAAa,EAAEL,MAAM,EAAEO,cAAc,CAAC,CAAC;EAEjF,OAAOL,kBAAkB;AAC7B;AAEA,eAAeJ,kBAAkB","ignoreList":[]}