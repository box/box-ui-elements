{"version":3,"file":"types.js","names":[],"sources":["../../../src/elements/content-sharing/types.js"],"sourcesContent":["// @flow\nimport type { CollaborationRole, Item, SharedLink } from '@box/unified-share-modal';\n\nimport type {\n    Access,\n    BoxItemClassification,\n    BoxItemPermission,\n    Collaboration,\n    GroupMini,\n    ItemType,\n    NewCollaboration,\n    SharedLink as APISharedLink,\n    UserMini,\n} from '../../common/types/core';\nimport type {\n    accessLevelsDisabledReasonType,\n    contactType,\n    InviteCollaboratorsRequest,\n    item,\n    sharedLinkType as USMSharedLinkType,\n} from '../../features/unified-share-modal/flowTypes';\nimport type { RequestOptions } from '../../common/types/api';\n\n// \"SLS\" denotes values that are used in the Shared Link Settings modal\ntype ContentSharingEnterpriseDataType = {\n    enterpriseName?: string,\n    serverURL?: string, // SLS\n};\n\nexport type ContentSharingUserDataType = {\n    id: string,\n    userEnterpriseData: ContentSharingEnterpriseDataType,\n};\n\n// This type is used when an item does not have a shared link.\ntype SharedLinkNotCreatedType = {\n    accessLevel?: string,\n    canChangeExpiration?: boolean,\n    canInvite: boolean,\n    expirationTimestamp?: ?number,\n    isDownloadAvailable?: boolean,\n};\n\n// This is the full shared link type, which extends the internal USM shared link with\n// data necessary for instantiating the Shared Link Settings modal.\ntype SharedLinkCreatedType = USMSharedLinkType &\n    SharedLinkNotCreatedType & {\n        canChangeDownload: boolean, // SLS\n        canChangeExpiration: boolean, // SLS\n        canChangePassword: boolean, // SLS\n        canChangeVanityName: boolean, // SLS\n        directLink: string, // SLS\n        isDirectLinkAvailable: boolean, // SLS\n        isDownloadAvailable: boolean, // SLS\n        isDownloadEnabled: boolean, // SLS\n        isPasswordAvailable: boolean, // SLS\n        isPasswordEnabled: boolean, // SLS\n        vanityName: string,\n    };\n\nexport type ContentSharingSharedLinkType = ContentSharingEnterpriseDataType &\n    (SharedLinkNotCreatedType | SharedLinkCreatedType);\n\nexport type ContentSharingItemDataType = {\n    item: item,\n    sharedLink: ContentSharingSharedLinkType,\n};\n\nexport type ContentSharingItemAPIResponse = {\n    allowed_invitee_roles: Array<string>,\n    allowed_shared_link_access_levels?: Array<string>,\n    allowed_shared_link_access_levels_disabled_reasons?: accessLevelsDisabledReasonType,\n    classification: ?BoxItemClassification,\n    description: string,\n    etag: string,\n    extension: string,\n    id: string,\n    name: string,\n    owned_by: {\n        id: string,\n        login: string,\n    },\n    permissions: BoxItemPermission,\n    shared_link?: APISharedLink,\n    shared_link_features: {\n        download_url: boolean,\n        password: boolean,\n        vanity_name: boolean,\n    },\n    type: ItemType,\n};\n\nexport type ContentSharingHooksOptions = {\n    handleError?: Function,\n    handleRemoveSharedLinkError?: Function,\n    handleRemoveSharedLinkSuccess?: Function,\n    handleSuccess?: Function,\n    handleUpdateSharedLinkError?: Function,\n    handleUpdateSharedLinkSuccess?: Function,\n    setIsLoading?: Function,\n    transformAccess?: Function,\n    transformGroups?: Function,\n    transformItem?: Function,\n    transformPermissions?: Function,\n    transformResponse?: Function,\n    transformSettings?: Function,\n    transformUsers?: Function,\n};\n\nexport type SharedLinkSettingsOptions = {\n    expirationTimestamp: number,\n    isDownloadEnabled: boolean,\n    isExpirationEnabled: boolean,\n    isPasswordEnabled: boolean,\n    password: string,\n    vanityName: string,\n};\n\nexport type ContentSharingCollaborationsRequest = {\n    groups: Array<$Shape<NewCollaboration>>,\n    users: Array<$Shape<NewCollaboration>>,\n};\n\nexport type UseInvitesOptions = ContentSharingHooksOptions & {\n    transformRequest: InviteCollaboratorsRequest => ContentSharingCollaborationsRequest,\n};\n\nexport type SharedLinkUpdateLevelFnType = () => (level: string) => Promise<void>;\n\nexport type SharedLinkUpdateSettingsFnType = () => ($Shape<APISharedLink>) => Promise<void>;\n\nexport type GetContactsFnType = () => (filterTerm: string) => Promise<Array<contactType | GroupMini | UserMini>> | null;\n\nexport type ContactByEmailObject = { [string]: contactType | UserMini | [] };\n\nexport type GetContactsByEmailFnType = () => (filterTerm: {\n    [emails: string]: string,\n}) => Promise<ContactByEmailObject | Array<UserMini>> | null;\n\nexport type SendInvitesFnType = () => InviteCollaboratorsRequest => Promise<null | Array<Function>>;\n\nexport type ConnectToItemShareFnType = ({\n    access?: Access,\n    errorFn?: Function,\n    requestOptions?: RequestOptions,\n    successFn?: Function,\n}) => Function;\n\nexport type AvatarURLMap = { [number | string]: ?string };\n\nexport type ConvertCollabOptions = {\n    avatarURLMap?: ?AvatarURLMap,\n    collab: Collaboration,\n    isCurrentUserOwner: boolean,\n    ownerEmail: ?string,\n};\n\nexport interface ItemData {\n    collaborationRoles: CollaborationRole[];\n    item: Item;\n    sharedLink: SharedLink;\n}\n"],"mappings":"","ignoreList":[]}