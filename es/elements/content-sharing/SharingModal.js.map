{"version":3,"file":"SharingModal.js","names":["React","isEmpty","noop","FormattedMessage","API","Internationalize","NotificationsWrapper","Notification","DURATION_SHORT","TYPE_ERROR","LoadingIndicator","UnifiedShareModal","SharedLinkSettingsModal","SharingNotification","convertItemResponse","convertUserContactsByEmailResponse","convertUserResponse","useContactsByEmail","FIELD_ENTERPRISE","FIELD_HOSTNAME","TYPE_FILE","TYPE_FOLDER","CONTENT_SHARING_ERRORS","CONTENT_SHARING_ITEM_FIELDS","CONTENT_SHARING_VIEWS","INVITEE_PERMISSIONS_FOLDER","INVITEE_PERMISSIONS_FILE","contentSharingMessages","SharingModal","api","config","displayInModal","isVisible","itemID","itemType","language","messages","setIsVisible","uuid","item","setItem","useState","sharedLink","setSharedLink","currentUserEnterpriseName","setCurrentUserEnterpriseName","currentUserID","setCurrentUserID","initialDataErrorMessage","setInitialDataErrorMessage","isInitialDataErrorVisible","setIsInitialDataErrorVisible","collaboratorsList","setCollaboratorsList","onAddLink","setOnAddLink","onRemoveLink","setOnRemoveLink","changeSharedLinkAccessLevel","setChangeSharedLinkAccessLevel","changeSharedLinkPermissionLevel","setChangeSharedLinkPermissionLevel","onSubmitSettings","setOnSubmitSettings","currentView","setCurrentView","UNIFIED_SHARE_MODAL","getContacts","setGetContacts","getContactsByEmail","setGetContactsByEmail","sendInvites","setSendInvites","isLoading","setIsLoading","handleGetItemSuccess","useCallback","itemData","itemFromAPI","sharedLinkFromAPI","getError","error","errorObject","status","response","loadingError","useEffect","getItem","getFileAPI","getFile","fields","getFolderAPI","getFolderFields","getUserSuccess","userData","id","userEnterpriseData","enterpriseName","prevSharedLink","_objectSpread","getUserData","getUsersAPI","getUser","params","toString","getContactsByEmailFn","transformUsers","data","createElement","onClose","type","duration","serverURL","ownerEmail","ownerID","permissions","accessLevel","canChangeExpiration","expirationTimestamp","isDownloadAvailable","Fragment","closeComponent","closeSettings","SHARED_LINK_SETTINGS","_extends","isDirectLinkUnavailableDueToDownloadSettings","isDirectLinkUnavailableDueToAccessPolicy","isDirectLinkUnavailableDueToMaliciousContent","isOpen","onRequestClose","onSubmit","submitting","canInvite","getCollaboratorContacts","initialDataReceived","inviteePermissions","onSettingsClick"],"sources":["../../../src/elements/content-sharing/SharingModal.js"],"sourcesContent":["/**\n * @flow\n * @file SharingModal\n * @description This is the second-level component for the ContentSharing Element. It receives an API instance\n * from its parent component, ContentSharing, and then instantiates the UnifiedShareModal with API data.\n * @author Box\n */\nimport * as React from 'react';\nimport isEmpty from 'lodash/isEmpty';\nimport noop from 'lodash/noop';\nimport { FormattedMessage } from 'react-intl';\nimport type { $AxiosError } from 'axios';\nimport API from '../../api';\nimport Internationalize from '../common/Internationalize';\nimport NotificationsWrapper from '../../components/notification/NotificationsWrapper';\nimport Notification from '../../components/notification/Notification';\nimport { DURATION_SHORT, TYPE_ERROR } from '../../components/notification/constants';\nimport LoadingIndicator from '../../components/loading-indicator/LoadingIndicator';\nimport UnifiedShareModal from '../../features/unified-share-modal';\nimport SharedLinkSettingsModal from '../../features/shared-link-settings-modal';\nimport SharingNotification from './SharingNotification';\nimport {\n    convertItemResponse,\n    convertUserContactsByEmailResponse,\n    convertUserResponse,\n} from '../../features/unified-share-modal/utils/convertData';\nimport useContactsByEmail from './hooks/useContactsByEmail';\nimport { FIELD_ENTERPRISE, FIELD_HOSTNAME, TYPE_FILE, TYPE_FOLDER } from '../../constants';\nimport { CONTENT_SHARING_ERRORS, CONTENT_SHARING_ITEM_FIELDS, CONTENT_SHARING_VIEWS } from './constants';\nimport { INVITEE_PERMISSIONS_FOLDER, INVITEE_PERMISSIONS_FILE } from '../../features/unified-share-modal/constants';\nimport contentSharingMessages from './messages';\nimport type { ErrorResponseData } from '../../common/types/api';\nimport type { ItemType, StringMap } from '../../common/types/core';\nimport type {\n    collaboratorsListType,\n    item as itemFlowType,\n    USMConfig,\n} from '../../features/unified-share-modal/flowTypes';\nimport type {\n    ContentSharingItemAPIResponse,\n    ContentSharingSharedLinkType,\n    GetContactsFnType,\n    GetContactsByEmailFnType,\n    SendInvitesFnType,\n    SharedLinkUpdateLevelFnType,\n    SharedLinkUpdateSettingsFnType,\n} from './types';\n\ntype SharingModalProps = {\n    api: API,\n    config?: USMConfig,\n    displayInModal: boolean,\n    isVisible: boolean,\n    itemID: string,\n    itemType: ItemType,\n    language: string,\n    messages?: StringMap,\n    setIsVisible: (arg: boolean) => void,\n    uuid?: string,\n};\n\nfunction SharingModal({\n    api,\n    config,\n    displayInModal,\n    isVisible,\n    itemID,\n    itemType,\n    language,\n    messages,\n    setIsVisible,\n    uuid,\n}: SharingModalProps) {\n    const [item, setItem] = React.useState<itemFlowType | null>(null);\n    const [sharedLink, setSharedLink] = React.useState<ContentSharingSharedLinkType | null>(null);\n    const [currentUserEnterpriseName, setCurrentUserEnterpriseName] = React.useState<string | null>(null);\n    const [currentUserID, setCurrentUserID] = React.useState<string | null>(null);\n    const [initialDataErrorMessage, setInitialDataErrorMessage] = React.useState<Object | null>(null);\n    const [isInitialDataErrorVisible, setIsInitialDataErrorVisible] = React.useState<boolean>(false);\n    const [collaboratorsList, setCollaboratorsList] = React.useState<collaboratorsListType | null>(null);\n    const [onAddLink, setOnAddLink] = React.useState<null | SharedLinkUpdateLevelFnType>(null);\n    const [onRemoveLink, setOnRemoveLink] = React.useState<null | SharedLinkUpdateLevelFnType>(null);\n    const [\n        changeSharedLinkAccessLevel,\n        setChangeSharedLinkAccessLevel,\n    ] = React.useState<null | SharedLinkUpdateLevelFnType>(null);\n    const [\n        changeSharedLinkPermissionLevel,\n        setChangeSharedLinkPermissionLevel,\n    ] = React.useState<null | SharedLinkUpdateLevelFnType>(null);\n    const [onSubmitSettings, setOnSubmitSettings] = React.useState<null | SharedLinkUpdateSettingsFnType>(null);\n    const [currentView, setCurrentView] = React.useState<string>(CONTENT_SHARING_VIEWS.UNIFIED_SHARE_MODAL);\n    const [getContacts, setGetContacts] = React.useState<null | GetContactsFnType>(null);\n    const [getContactsByEmail, setGetContactsByEmail] = React.useState<null | GetContactsByEmailFnType>(null);\n    const [sendInvites, setSendInvites] = React.useState<null | SendInvitesFnType>(null);\n    const [isLoading, setIsLoading] = React.useState<boolean>(true);\n\n    // Handle successful GET requests to /files or /folders\n    const handleGetItemSuccess = React.useCallback((itemData: ContentSharingItemAPIResponse) => {\n        const { item: itemFromAPI, sharedLink: sharedLinkFromAPI } = convertItemResponse(itemData);\n        setItem(itemFromAPI);\n        setSharedLink(sharedLinkFromAPI);\n        setIsLoading(false);\n    }, []);\n\n    // Handle initial data retrieval errors\n    const getError = React.useCallback(\n        (error: $AxiosError<Object> | ErrorResponseData) => {\n            if (isInitialDataErrorVisible) return; // display only one component-level notification at a time\n\n            setIsInitialDataErrorVisible(true);\n            setIsLoading(false);\n\n            let errorObject;\n            if (error.status) {\n                errorObject = contentSharingMessages[CONTENT_SHARING_ERRORS[error.status]];\n            } else if (error.response && error.response.status) {\n                errorObject = contentSharingMessages[CONTENT_SHARING_ERRORS[error.response.status]];\n            } else {\n                errorObject = contentSharingMessages.loadingError;\n            }\n            setInitialDataErrorMessage(errorObject);\n        },\n        [isInitialDataErrorVisible],\n    );\n\n    // Reset state if the API has changed\n    React.useEffect(() => {\n        setChangeSharedLinkAccessLevel(null);\n        setChangeSharedLinkPermissionLevel(null);\n        setCollaboratorsList(null);\n        setInitialDataErrorMessage(null);\n        setCurrentUserID(null);\n        setCurrentUserEnterpriseName(null);\n        setIsInitialDataErrorVisible(false);\n        setIsLoading(true);\n        setItem(null);\n        setOnAddLink(null);\n        setOnRemoveLink(null);\n        setSharedLink(null);\n    }, [api]);\n\n    // Refresh error state if the uuid has changed\n    React.useEffect(() => {\n        setInitialDataErrorMessage(null);\n        setIsInitialDataErrorVisible(false);\n    }, [uuid]);\n\n    // Get initial data for the item\n    React.useEffect(() => {\n        const getItem = () => {\n            if (itemType === TYPE_FILE) {\n                api.getFileAPI().getFile(itemID, handleGetItemSuccess, getError, {\n                    fields: CONTENT_SHARING_ITEM_FIELDS,\n                });\n            } else if (itemType === TYPE_FOLDER) {\n                api.getFolderAPI().getFolderFields(itemID, handleGetItemSuccess, getError, {\n                    fields: CONTENT_SHARING_ITEM_FIELDS,\n                });\n            }\n        };\n\n        if (api && !isEmpty(api) && !initialDataErrorMessage && isVisible && !item && !sharedLink) {\n            getItem();\n        }\n    }, [api, initialDataErrorMessage, getError, handleGetItemSuccess, isVisible, item, itemID, itemType, sharedLink]);\n\n    // Get initial data for the user\n    React.useEffect(() => {\n        const getUserSuccess = userData => {\n            const { id, userEnterpriseData } = convertUserResponse(userData);\n            setCurrentUserID(id);\n            setCurrentUserEnterpriseName(userEnterpriseData.enterpriseName || null);\n            setSharedLink(prevSharedLink => ({ ...prevSharedLink, ...userEnterpriseData }));\n            setInitialDataErrorMessage(null);\n            setIsLoading(false);\n        };\n\n        const getUserData = () => {\n            api.getUsersAPI(false).getUser(itemID, getUserSuccess, getError, {\n                params: {\n                    fields: [FIELD_ENTERPRISE, FIELD_HOSTNAME].toString(),\n                },\n            });\n        };\n\n        if (api && !isEmpty(api) && !initialDataErrorMessage && item && sharedLink && !currentUserID) {\n            getUserData();\n        }\n    }, [getError, item, itemID, itemType, sharedLink, currentUserID, api, initialDataErrorMessage]);\n\n    // Set the getContactsByEmail function. This call is not associated with a banner notification,\n    // which is why it exists at this level and not in SharingNotification\n    const getContactsByEmailFn: GetContactsByEmailFnType | null = useContactsByEmail(api, itemID, {\n        transformUsers: data => convertUserContactsByEmailResponse(data),\n    });\n    if (getContactsByEmailFn && !getContactsByEmail) {\n        setGetContactsByEmail((): GetContactsByEmailFnType => getContactsByEmailFn);\n    }\n\n    // Display a notification if there is an error in retrieving initial data\n    if (initialDataErrorMessage) {\n        return isInitialDataErrorVisible ? (\n            <Internationalize language={language} messages={messages}>\n                <NotificationsWrapper>\n                    <Notification\n                        onClose={() => setIsInitialDataErrorVisible(false)}\n                        type={TYPE_ERROR}\n                        duration={DURATION_SHORT}\n                    >\n                        <span>\n                            <FormattedMessage {...initialDataErrorMessage} />\n                        </span>\n                    </Notification>\n                </NotificationsWrapper>\n            </Internationalize>\n        ) : null;\n    }\n\n    // Ensure that all necessary data has been received before rendering child components.\n    // If the USM is visible, show the LoadingIndicator; otherwise, show nothing.\n    // \"serverURL\" is added to sharedLink after the call to the Users API, so it needs to be checked separately.\n    if (!item || !sharedLink || !currentUserID || !sharedLink.serverURL) {\n        return isVisible ? <LoadingIndicator /> : null;\n    }\n\n    const { ownerEmail, ownerID, permissions } = item;\n    const {\n        accessLevel = '',\n        canChangeExpiration = false,\n        expirationTimestamp,\n        isDownloadAvailable = false,\n        serverURL,\n    } = sharedLink;\n    return (\n        <Internationalize language={language} messages={messages}>\n            <>\n                <SharingNotification\n                    accessLevel={accessLevel}\n                    api={api}\n                    closeComponent={displayInModal ? () => setIsVisible(false) : noop}\n                    closeSettings={() => setCurrentView(CONTENT_SHARING_VIEWS.UNIFIED_SHARE_MODAL)}\n                    collaboratorsList={collaboratorsList}\n                    currentUserID={currentUserID}\n                    getContacts={getContacts}\n                    isDownloadAvailable={isDownloadAvailable}\n                    itemID={itemID}\n                    itemType={itemType}\n                    onSubmitSettings={onSubmitSettings}\n                    ownerEmail={ownerEmail}\n                    ownerID={ownerID}\n                    permissions={permissions}\n                    sendInvites={sendInvites}\n                    serverURL={serverURL}\n                    setChangeSharedLinkAccessLevel={setChangeSharedLinkAccessLevel}\n                    setChangeSharedLinkPermissionLevel={setChangeSharedLinkPermissionLevel}\n                    setGetContacts={setGetContacts}\n                    setCollaboratorsList={setCollaboratorsList}\n                    setIsLoading={setIsLoading}\n                    setItem={setItem}\n                    setOnAddLink={setOnAddLink}\n                    setOnRemoveLink={setOnRemoveLink}\n                    setOnSubmitSettings={setOnSubmitSettings}\n                    setSendInvites={setSendInvites}\n                    setSharedLink={setSharedLink}\n                />\n                {isVisible && currentView === CONTENT_SHARING_VIEWS.SHARED_LINK_SETTINGS && (\n                    <SharedLinkSettingsModal\n                        isDirectLinkUnavailableDueToDownloadSettings={false}\n                        isDirectLinkUnavailableDueToAccessPolicy={false}\n                        isDirectLinkUnavailableDueToMaliciousContent={false}\n                        isOpen={isVisible}\n                        item={item}\n                        onRequestClose={() => setCurrentView(CONTENT_SHARING_VIEWS.UNIFIED_SHARE_MODAL)}\n                        onSubmit={onSubmitSettings}\n                        submitting={isLoading}\n                        {...sharedLink}\n                        canChangeExpiration={canChangeExpiration && !!currentUserEnterpriseName}\n                    />\n                )}\n                {isVisible && currentView === CONTENT_SHARING_VIEWS.UNIFIED_SHARE_MODAL && (\n                    <UnifiedShareModal\n                        canInvite={sharedLink.canInvite}\n                        config={config}\n                        changeSharedLinkAccessLevel={changeSharedLinkAccessLevel}\n                        changeSharedLinkPermissionLevel={changeSharedLinkPermissionLevel}\n                        collaboratorsList={collaboratorsList}\n                        currentUserID={currentUserID}\n                        displayInModal={displayInModal}\n                        getCollaboratorContacts={getContacts}\n                        getContactsByEmail={getContactsByEmail}\n                        initialDataReceived\n                        inviteePermissions={\n                            itemType === TYPE_FOLDER ? INVITEE_PERMISSIONS_FOLDER : INVITEE_PERMISSIONS_FILE\n                        }\n                        isOpen={isVisible}\n                        item={item}\n                        onAddLink={onAddLink}\n                        onRequestClose={displayInModal ? () => setIsVisible(false) : noop}\n                        onRemoveLink={onRemoveLink}\n                        onSettingsClick={() => setCurrentView(CONTENT_SHARING_VIEWS.SHARED_LINK_SETTINGS)}\n                        sendInvites={sendInvites}\n                        sharedLink={{\n                            ...sharedLink,\n                            expirationTimestamp: expirationTimestamp ? expirationTimestamp / 1000 : null,\n                        }} // the USM expects this value in seconds, while the SLSM expects this value in milliseconds\n                        submitting={isLoading}\n                    />\n                )}\n            </>\n        </Internationalize>\n    );\n}\n\nexport default SharingModal;\n"],"mappings":"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","ignoreList":[]}