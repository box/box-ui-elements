{"version":3,"file":"VersionsMenu.js","names":["React","last","injectIntl","util","messages","VersionsGroup","getHeading","intl","version","created_at","createdAt","currentDate","Date","currentDay","getDay","currentSunday","getDate","createdAtDate","convertToDate","heading","isToday","formatMessage","versionsToday","isYesterday","versionsYesterday","isCurrentYear","formatDate","year","isCurrentMonth","month","versionsThisMonth","versionsPriorWeek","weekday","VersionsMenu","memo","_ref","versions","rest","_objectWithoutProperties","_excluded","id","currentId","versionGroups","reduce","groups","currentGroup","groupHeading","push","groupVersions","createElement","className","map","key","_extends"],"sources":["../../../../src/elements/content-sidebar/versions/VersionsMenu.js"],"sourcesContent":["/**\n * @flow\n * @file Versions Menu component\n * @author Box\n */\n\nimport * as React from 'react';\nimport last from 'lodash/last';\nimport { injectIntl } from 'react-intl';\nimport * as util from '../../../utils/datetime';\nimport messages from './messages';\nimport VersionsGroup from './VersionsGroup';\nimport type { BoxItemVersion } from '../../../common/types/core';\nimport type { InternalSidebarNavigation } from '../../common/types/SidebarNavigation';\nimport './VersionsMenu.scss';\n\ntype Props = {\n    fileId: string,\n    intl: any,\n    internalSidebarNavigation?: InternalSidebarNavigation,\n    routerDisabled?: boolean,\n    versionCount: number,\n    versionLimit: number,\n    versions: Array<BoxItemVersion>,\n};\n\ntype VersionGroups = Array<{ groupHeading: string, groupVersions: Array<BoxItemVersion> }>;\n\nconst getHeading = ({ intl, version }: { intl: any, version: BoxItemVersion }): string => {\n    const { created_at: createdAt } = version;\n    const currentDate = new Date();\n    const currentDay = currentDate.getDay();\n    const currentSunday = currentDate.getDate() - currentDay;\n    const createdAtDate = util.convertToDate(createdAt);\n    let heading;\n\n    if (util.isToday(createdAtDate)) {\n        heading = intl.formatMessage(messages.versionsToday); // Today\n    } else if (util.isYesterday(createdAtDate)) {\n        heading = intl.formatMessage(messages.versionsYesterday); // Yesterday\n    } else if (!util.isCurrentYear(createdAtDate)) {\n        heading = intl.formatDate(createdAt, { year: 'numeric' }); // 2018\n    } else if (!util.isCurrentMonth(createdAtDate)) {\n        heading = intl.formatDate(createdAt, { month: 'long' }); // January\n    } else if (createdAtDate.getDate() <= currentSunday - 7) {\n        heading = intl.formatMessage(messages.versionsThisMonth); // This Month\n    } else if (createdAtDate.getDate() <= currentSunday) {\n        heading = intl.formatMessage(messages.versionsPriorWeek); // Last Week\n    } else {\n        heading = intl.formatDate(createdAt, { weekday: 'long' }); // Monday\n    }\n\n    return heading;\n};\n\nconst VersionsMenu = React.memo<Props>(({ intl, versions, ...rest }: Props) => {\n    const { id: currentId } = versions[0] || {};\n\n    // Build an ordered set of groups with headings based on the original order of the versions array\n    const versionGroups = versions.reduce((groups: VersionGroups, version: BoxItemVersion): VersionGroups => {\n        const currentGroup = last(groups);\n        const groupHeading = getHeading({ intl, version });\n\n        // Push a new group if there are no groups or if the heading has changed\n        if (!currentGroup || currentGroup.groupHeading !== groupHeading) {\n            groups.push({\n                groupHeading,\n                groupVersions: [],\n            });\n        }\n\n        // Push the sorted version to the newest group's versions collection\n        last(groups).groupVersions.push(version);\n        return groups;\n    }, []);\n\n    return (\n        <ul className=\"bcs-VersionsMenu\">\n            {versionGroups.map(({ groupHeading, groupVersions }) => (\n                <li className=\"bcs-VersionsMenu-item\" key={groupHeading}>\n                    <VersionsGroup currentId={currentId} heading={groupHeading} versions={groupVersions} {...rest} />\n                </li>\n            ))}\n        </ul>\n    );\n});\n\nexport default injectIntl(VersionsMenu);\n"],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;;AAEA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,IAAI,MAAM,aAAa;AAC9B,SAASC,UAAU,QAAQ,YAAY;AACvC,OAAO,KAAKC,IAAI,MAAM,yBAAyB;AAC/C,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,aAAa,MAAM,iBAAiB;AAG3C,OAAO,qBAAqB;AAc5B,MAAMC,UAAU,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAgD,CAAC,KAAa;EACtF,MAAM;IAAEC,UAAU,EAAEC;EAAU,CAAC,GAAGF,OAAO;EACzC,MAAMG,WAAW,GAAG,IAAIC,IAAI,CAAC,CAAC;EAC9B,MAAMC,UAAU,GAAGF,WAAW,CAACG,MAAM,CAAC,CAAC;EACvC,MAAMC,aAAa,GAAGJ,WAAW,CAACK,OAAO,CAAC,CAAC,GAAGH,UAAU;EACxD,MAAMI,aAAa,GAAGd,IAAI,CAACe,aAAa,CAACR,SAAS,CAAC;EACnD,IAAIS,OAAO;EAEX,IAAIhB,IAAI,CAACiB,OAAO,CAACH,aAAa,CAAC,EAAE;IAC7BE,OAAO,GAAGZ,IAAI,CAACc,aAAa,CAACjB,QAAQ,CAACkB,aAAa,CAAC,CAAC,CAAC;EAC1D,CAAC,MAAM,IAAInB,IAAI,CAACoB,WAAW,CAACN,aAAa,CAAC,EAAE;IACxCE,OAAO,GAAGZ,IAAI,CAACc,aAAa,CAACjB,QAAQ,CAACoB,iBAAiB,CAAC,CAAC,CAAC;EAC9D,CAAC,MAAM,IAAI,CAACrB,IAAI,CAACsB,aAAa,CAACR,aAAa,CAAC,EAAE;IAC3CE,OAAO,GAAGZ,IAAI,CAACmB,UAAU,CAAChB,SAAS,EAAE;MAAEiB,IAAI,EAAE;IAAU,CAAC,CAAC,CAAC,CAAC;EAC/D,CAAC,MAAM,IAAI,CAACxB,IAAI,CAACyB,cAAc,CAACX,aAAa,CAAC,EAAE;IAC5CE,OAAO,GAAGZ,IAAI,CAACmB,UAAU,CAAChB,SAAS,EAAE;MAAEmB,KAAK,EAAE;IAAO,CAAC,CAAC,CAAC,CAAC;EAC7D,CAAC,MAAM,IAAIZ,aAAa,CAACD,OAAO,CAAC,CAAC,IAAID,aAAa,GAAG,CAAC,EAAE;IACrDI,OAAO,GAAGZ,IAAI,CAACc,aAAa,CAACjB,QAAQ,CAAC0B,iBAAiB,CAAC,CAAC,CAAC;EAC9D,CAAC,MAAM,IAAIb,aAAa,CAACD,OAAO,CAAC,CAAC,IAAID,aAAa,EAAE;IACjDI,OAAO,GAAGZ,IAAI,CAACc,aAAa,CAACjB,QAAQ,CAAC2B,iBAAiB,CAAC,CAAC,CAAC;EAC9D,CAAC,MAAM;IACHZ,OAAO,GAAGZ,IAAI,CAACmB,UAAU,CAAChB,SAAS,EAAE;MAAEsB,OAAO,EAAE;IAAO,CAAC,CAAC,CAAC,CAAC;EAC/D;EAEA,OAAOb,OAAO;AAClB,CAAC;AAED,MAAMc,YAAY,gBAAGjC,KAAK,CAACkC,IAAI,CAAQC,IAAA,IAAwC;EAAA,IAAvC;MAAE5B,IAAI;MAAE6B;IAAyB,CAAC,GAAAD,IAAA;IAAbE,IAAI,GAAAC,wBAAA,CAAAH,IAAA,EAAAI,SAAA;EAC7D,MAAM;IAAEC,EAAE,EAAEC;EAAU,CAAC,GAAGL,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;;EAE3C;EACA,MAAMM,aAAa,GAAGN,QAAQ,CAACO,MAAM,CAAC,CAACC,MAAqB,EAAEpC,OAAuB,KAAoB;IACrG,MAAMqC,YAAY,GAAG5C,IAAI,CAAC2C,MAAM,CAAC;IACjC,MAAME,YAAY,GAAGxC,UAAU,CAAC;MAAEC,IAAI;MAAEC;IAAQ,CAAC,CAAC;;IAElD;IACA,IAAI,CAACqC,YAAY,IAAIA,YAAY,CAACC,YAAY,KAAKA,YAAY,EAAE;MAC7DF,MAAM,CAACG,IAAI,CAAC;QACRD,YAAY;QACZE,aAAa,EAAE;MACnB,CAAC,CAAC;IACN;;IAEA;IACA/C,IAAI,CAAC2C,MAAM,CAAC,CAACI,aAAa,CAACD,IAAI,CAACvC,OAAO,CAAC;IACxC,OAAOoC,MAAM;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACI5C,KAAA,CAAAiD,aAAA;IAAIC,SAAS,EAAC;EAAkB,GAC3BR,aAAa,CAACS,GAAG,CAAC,CAAC;IAAEL,YAAY;IAAEE;EAAc,CAAC,kBAC/ChD,KAAA,CAAAiD,aAAA;IAAIC,SAAS,EAAC,uBAAuB;IAACE,GAAG,EAAEN;EAAa,gBACpD9C,KAAA,CAAAiD,aAAA,CAAC5C,aAAa,EAAAgD,QAAA;IAACZ,SAAS,EAAEA,SAAU;IAACtB,OAAO,EAAE2B,YAAa;IAACV,QAAQ,EAAEY;EAAc,GAAKX,IAAI,CAAG,CAChG,CACP,CACD,CAAC;AAEb,CAAC,CAAC;AAEF,eAAenC,UAAU,CAAC+B,YAAY,CAAC","ignoreList":[]}