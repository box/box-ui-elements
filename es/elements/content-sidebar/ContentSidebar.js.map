{"version":3,"file":"ContentSidebar.js","names":["React","noop","flow","TooltipProvider","API","APIContext","Internationalize","Sidebar","NavRouter","SidebarUtils","CLIENT_NAME_CONTENT_SIDEBAR","CLIENT_VERSION","DEFAULT_HOSTNAME_API","ORIGIN_CONTENT_SIDEBAR","EVENT_JS_READY","mark","SIDEBAR_FIELDS_TO_FETCH","SIDEBAR_FIELDS_TO_FETCH_ARCHIVE","withErrorBoundary","withBlueprintModernization","isFeatureEnabled","isFeatureEnabledInContext","withFeatureConsumer","withFeatureProvider","withLogger","MARK_NAME_JS_READY","ContentSidebar","Component","constructor","props","_defineProperty","isLoading","error","code","console","onError","editors","setState","metadataEditors","file","onFetchFileSuccess","fetchMetadata","apiHost","cache","clientName","language","requestInterceptor","responseInterceptor","sharedLink","sharedLinkPassword","token","api","version","logger","onReadyMetric","endMarkName","clearCache","destroy","componentWillUnmount","componentDidMount","fetchFile","componentDidUpdate","prevProps","fileId","prevFileId","state","metadataSidebarProps","canHaveMetadataSidebar","getMetadataAPI","getMetadata","fetchMetadataSuccessCallback","fetchOptions","features","archiveEnabled","fields","canHaveSidebar","getFileAPI","getFile","fetchFileSuccessCallback","errorCallback","_objectSpread","refresh","sidebarRef","render","activitySidebarProps","additionalTabs","boxAISidebarProps","className","currentUser","defaultView","detailsSidebarProps","docGenSidebarProps","getPreview","getViewer","hasAdditionalTabs","hasActivityFeed","hasMetadata","hasNav","hasSkills","hasVersions","history","isDefaultOpen","messages","onAnnotationSelect","onOpenChange","onPanelChange","onVersionChange","onVersionHistoryClick","signSidebarProps","theme","versionsSidebarProps","initialPath","charAt","shouldRenderSidebar","createElement","Provider","value","initialEntries","wrappedComponentRef","ref","enabled","ContentSidebarComponent"],"sources":["../../../src/elements/content-sidebar/ContentSidebar.js"],"sourcesContent":["/**\n * @flow\n * @file Content Sidebar Container\n * @author Box\n */\n\nimport 'regenerator-runtime/runtime';\nimport * as React from 'react';\nimport noop from 'lodash/noop';\nimport flow from 'lodash/flow';\nimport { TooltipProvider } from '@box/blueprint-web';\nimport type { RouterHistory } from 'react-router-dom';\nimport API from '../../api';\nimport APIContext from '../common/api-context';\nimport Internationalize from '../common/Internationalize';\nimport Sidebar from './Sidebar';\nimport NavRouter from '../common/nav-router';\nimport SidebarUtils from './SidebarUtils';\nimport {\n    CLIENT_NAME_CONTENT_SIDEBAR,\n    CLIENT_VERSION,\n    DEFAULT_HOSTNAME_API,\n    ORIGIN_CONTENT_SIDEBAR,\n} from '../../constants';\nimport { EVENT_JS_READY } from '../common/logger/constants';\nimport { mark } from '../../utils/performance';\nimport { SIDEBAR_FIELDS_TO_FETCH, SIDEBAR_FIELDS_TO_FETCH_ARCHIVE } from '../../utils/fields';\nimport { withErrorBoundary } from '../common/error-boundary';\n// $FlowFixMe\nimport { withBlueprintModernization } from '../common/withBlueprintModernization';\nimport {\n    isFeatureEnabled as isFeatureEnabledInContext,\n    withFeatureConsumer,\n    withFeatureProvider,\n} from '../common/feature-checking';\nimport { withLogger } from '../common/logger';\n\nimport type { ActivitySidebarProps } from './ActivitySidebar';\nimport type { BoxAISidebarProps } from './BoxAISidebar';\nimport type { DetailsSidebarProps } from './DetailsSidebar';\nimport type { DocGenSidebarProps } from './DocGenSidebar/DocGenSidebar';\nimport type { MetadataSidebarProps } from './MetadataSidebar';\nimport type { VersionsSidebarProps } from './versions';\nimport type { SignSidebarProps } from './SidebarNavSign';\nimport type { WithLoggerProps } from '../../common/types/logging';\nimport type { ElementsXhrError, RequestOptions, ErrorContextProps } from '../../common/types/api';\nimport type { MetadataEditor } from '../../common/types/metadata';\nimport type { StringMap, Token, User, BoxItem } from '../../common/types/core';\nimport type { AdditionalSidebarTab } from './flowTypes';\nimport type { FeatureConfig } from '../common/feature-checking';\n// $FlowFixMe TypeScript file\nimport type { Theme } from '../common/theming';\nimport type APICache from '../../utils/Cache';\n\nimport '../common/fonts.scss';\nimport '../common/base.scss';\nimport '../common/modal.scss';\nimport './ContentSidebar.scss';\n\ntype Props = {\n    activitySidebarProps: ActivitySidebarProps,\n    additionalTabs?: Array<AdditionalSidebarTab>,\n    apiHost: string,\n    boxAISidebarProps: BoxAISidebarProps,\n    cache?: APICache,\n    className: string,\n    clientName: string,\n    currentUser?: User,\n    defaultView: string,\n    detailsSidebarProps: DetailsSidebarProps,\n    docGenSidebarProps?: DocGenSidebarProps,\n    features: FeatureConfig,\n    fileId?: string,\n    getPreview: Function,\n    getViewer: Function,\n    hasActivityFeed: boolean,\n    hasAdditionalTabs: boolean,\n    hasMetadata: boolean,\n    hasNav: boolean,\n    hasSkills: boolean,\n    hasVersions: boolean,\n    history?: RouterHistory,\n    isDefaultOpen?: boolean,\n    language?: string,\n    messages?: StringMap,\n    metadataSidebarProps: MetadataSidebarProps,\n    onAnnotationSelect?: Function,\n    onFetchFileSuccess?: () => void,\n    onOpenChange?: (isOpen: boolean, isInitialState: boolean) => void,\n    onPanelChange?: (name: string, isInitialState: boolean) => void,\n    onVersionChange?: Function,\n    onVersionHistoryClick?: Function,\n    requestInterceptor?: Function,\n    responseInterceptor?: Function,\n    sharedLink?: string,\n    sharedLinkPassword?: string,\n    theme?: Theme,\n    signSidebarProps: SignSidebarProps,\n    token: Token,\n    versionsSidebarProps: VersionsSidebarProps,\n} & ErrorContextProps &\n    WithLoggerProps;\n\ntype State = {\n    file?: BoxItem,\n    isLoading: boolean,\n    metadataEditors?: Array<MetadataEditor>,\n};\n\nconst MARK_NAME_JS_READY = `${ORIGIN_CONTENT_SIDEBAR}_${EVENT_JS_READY}`;\n\nmark(MARK_NAME_JS_READY);\n\nclass ContentSidebar extends React.Component<Props, State> {\n    props: Props;\n\n    state: State = { isLoading: true };\n\n    api: API;\n\n    sidebarRef: Sidebar;\n\n    static defaultProps = {\n        activitySidebarProps: {},\n        apiHost: DEFAULT_HOSTNAME_API,\n        boxAISidebarProps: {},\n        className: '',\n        clientName: CLIENT_NAME_CONTENT_SIDEBAR,\n        defaultView: '',\n        detailsSidebarProps: {},\n        docGenSidebarProps: { enabled: false },\n        getPreview: noop,\n        getViewer: noop,\n        hasActivityFeed: false,\n        hasAdditionalTabs: false,\n        hasMetadata: false,\n        hasNav: true,\n        hasSkills: false,\n        isDefaultOpen: true,\n        metadataSidebarProps: {},\n    };\n\n    /**\n     * [constructor]\n     *\n     * @private\n     * @return {ContentSidebar}\n     */\n    constructor(props: Props) {\n        super(props);\n        const {\n            apiHost,\n            cache,\n            clientName,\n            language,\n            requestInterceptor,\n            responseInterceptor,\n            sharedLink,\n            sharedLinkPassword,\n            token,\n        } = props;\n\n        this.api = new API({\n            apiHost,\n            cache,\n            clientName,\n            language,\n            requestInterceptor,\n            responseInterceptor,\n            sharedLink,\n            sharedLinkPassword,\n            token,\n            version: CLIENT_VERSION,\n        });\n\n        /* eslint-disable react/prop-types */\n        const { logger } = props;\n        logger.onReadyMetric({\n            endMarkName: MARK_NAME_JS_READY,\n        });\n        /* eslint-enable react/prop-types */\n    }\n\n    /**\n     * Destroys api instances with caches\n     *\n     * @private\n     * @return {void}\n     */\n    clearCache(): void {\n        this.api.destroy(true);\n    }\n\n    /**\n     * Cleanup\n     *\n     * @private\n     * @inheritdoc\n     * @return {void}\n     */\n    componentWillUnmount() {\n        // Don't destroy the cache while unmounting\n        this.api.destroy(false);\n    }\n\n    /**\n     * Fetches the file data on load\n     *\n     * @private\n     * @inheritdoc\n     * @return {void}\n     */\n    componentDidMount() {\n        this.fetchFile();\n    }\n\n    /**\n     * Fetches new file data on update\n     *\n     * @private\n     * @inheritdoc\n     * @return {void}\n     */\n    componentDidUpdate(prevProps: Props): void {\n        const { fileId }: Props = this.props;\n        const { fileId: prevFileId }: Props = prevProps;\n\n        if (fileId !== prevFileId) {\n            this.fetchFile();\n        }\n    }\n\n    /**\n     * Network error callback\n     *\n     * @private\n     * @param {Error} error - Error object\n     * @param {string} code - error code\n     * @return {void}\n     */\n    errorCallback = (error: ElementsXhrError, code: string): void => {\n        /* eslint-disable no-console */\n        console.error(error);\n        /* eslint-enable no-console */\n\n        /* eslint-disable react/prop-types */\n        this.props.onError(error, code, {\n            error,\n        });\n        /* eslint-enable react/prop-types */\n    };\n\n    /**\n     * File fetch success callback that sets the file and view\n     * Only set file if there is data to show in the sidebar.\n     * Skills sidebar doesn't show when there is no data.\n     *\n     * @private\n     * @param {Object} file - Box file\n     * @return {void}\n     */\n    fetchMetadataSuccessCallback = ({ editors }: { editors: Array<MetadataEditor> }): void => {\n        this.setState({ metadataEditors: editors });\n    };\n\n    /**\n     * Fetches file metadata editors if required\n     *\n     * @private\n     * @return {void}\n     */\n    fetchMetadata(): void {\n        const { file }: State = this.state;\n        const { metadataSidebarProps }: Props = this.props;\n        const { isFeatureEnabled = true }: MetadataSidebarProps = metadataSidebarProps;\n\n        // Only fetch metadata if we think that the file may have metadata on it\n        // but currently the metadata feature is turned off. Use case of this would be a free\n        // user who doesn't have the metadata feature but is collabed on a file from a user\n        // who added metadata on the file. If the feature is enabled we always end up showing\n        // the metadata sidebar irrespective of there being any existing metadata or not.\n        const canHaveMetadataSidebar = !isFeatureEnabled && SidebarUtils.canHaveMetadataSidebar(this.props);\n\n        if (canHaveMetadataSidebar) {\n            this.api\n                .getMetadataAPI(false)\n                .getMetadata(((file: any): BoxItem), this.fetchMetadataSuccessCallback, noop, isFeatureEnabled);\n        }\n    }\n\n    /**\n     * File fetch success callback that sets the file and sidebar visibility.\n     * Also makes an optional request to fetch metadata editors\n     *\n     * @private\n     * @param {Object} file - Box file\n     * @return {void}\n     */\n    fetchFileSuccessCallback = (file: BoxItem): void => {\n        const { onFetchFileSuccess }: Props = this.props;\n        !!onFetchFileSuccess && onFetchFileSuccess();\n        this.setState(\n            {\n                file,\n                isLoading: false,\n            },\n            this.fetchMetadata,\n        );\n    };\n\n    /**\n     * Fetches a file\n     *\n     * @private\n     * @param {Object|void} [fetchOptions] - Fetch options\n     * @return {void}\n     */\n    fetchFile(fetchOptions: RequestOptions = {}): void {\n        const { fileId, features }: Props = this.props;\n        const archiveEnabled = isFeatureEnabledInContext(features, 'contentSidebar.archive.enabled');\n        const fields = archiveEnabled ? SIDEBAR_FIELDS_TO_FETCH_ARCHIVE : SIDEBAR_FIELDS_TO_FETCH;\n\n        this.setState({ isLoading: true });\n\n        if (fileId && SidebarUtils.canHaveSidebar(this.props)) {\n            this.api.getFileAPI().getFile(fileId, this.fetchFileSuccessCallback, this.errorCallback, {\n                ...fetchOptions,\n                fields,\n            });\n        }\n    }\n\n    /**\n     * Refreshes the sidebar panel\n     * @returns {void}\n     */\n    refresh(): void {\n        if (this.sidebarRef) {\n            this.sidebarRef.refresh();\n        }\n    }\n\n    /**\n     * Renders the sidebar\n     *\n     * @private\n     * @inheritdoc\n     * @return {Element}\n     */\n    render() {\n        const {\n            activitySidebarProps,\n            additionalTabs,\n            boxAISidebarProps,\n            className,\n            currentUser,\n            defaultView,\n            detailsSidebarProps,\n            docGenSidebarProps,\n            features,\n            fileId,\n            getPreview,\n            getViewer,\n            hasAdditionalTabs,\n            hasActivityFeed,\n            hasMetadata,\n            hasNav,\n            hasSkills,\n            hasVersions,\n            history,\n            isDefaultOpen,\n            language,\n            messages,\n            metadataSidebarProps,\n            onAnnotationSelect,\n            onOpenChange,\n            onPanelChange,\n            onVersionChange,\n            onVersionHistoryClick,\n            signSidebarProps,\n            theme,\n            versionsSidebarProps,\n        }: Props = this.props;\n        const { file, isLoading, metadataEditors }: State = this.state;\n        const initialPath = defaultView.charAt(0) === '/' ? defaultView : `/${defaultView}`;\n\n        if (!file || !fileId || !SidebarUtils.shouldRenderSidebar(this.props, file, metadataEditors)) {\n            return null;\n        }\n\n        return (\n            <Internationalize language={language} messages={messages}>\n                <APIContext.Provider value={(this.api: any)}>\n                    <NavRouter history={history} initialEntries={[initialPath]} features={features}>\n                        <TooltipProvider>\n                            <Sidebar\n                                activitySidebarProps={activitySidebarProps}\n                                additionalTabs={additionalTabs}\n                                boxAISidebarProps={boxAISidebarProps}\n                                className={className}\n                                currentUser={currentUser}\n                                detailsSidebarProps={detailsSidebarProps}\n                                docGenSidebarProps={docGenSidebarProps}\n                                file={file}\n                                fileId={fileId}\n                                getPreview={getPreview}\n                                getViewer={getViewer}\n                                hasActivityFeed={hasActivityFeed}\n                                hasAdditionalTabs={hasAdditionalTabs}\n                                hasNav={hasNav}\n                                hasMetadata={hasMetadata}\n                                hasSkills={hasSkills}\n                                hasVersions={hasVersions}\n                                isDefaultOpen={isDefaultOpen}\n                                isLoading={isLoading}\n                                metadataEditors={metadataEditors}\n                                metadataSidebarProps={metadataSidebarProps}\n                                onAnnotationSelect={onAnnotationSelect}\n                                onOpenChange={onOpenChange}\n                                onPanelChange={onPanelChange}\n                                onVersionChange={onVersionChange}\n                                onVersionHistoryClick={onVersionHistoryClick}\n                                signSidebarProps={signSidebarProps}\n                                theme={theme}\n                                versionsSidebarProps={versionsSidebarProps}\n                                wrappedComponentRef={ref => {\n                                    this.sidebarRef = ref;\n                                }}\n                            />\n                        </TooltipProvider>\n                    </NavRouter>\n                </APIContext.Provider>\n            </Internationalize>\n        );\n    }\n}\n\nexport type ContentSidebarProps = Props;\nexport { ContentSidebar as ContentSidebarComponent };\nexport default flow([\n    withFeatureConsumer,\n    withFeatureProvider,\n    withBlueprintModernization,\n    withLogger(ORIGIN_CONTENT_SIDEBAR),\n    withErrorBoundary(ORIGIN_CONTENT_SIDEBAR),\n])(ContentSidebar);\n"],"mappings":"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","ignoreList":[]}