{"version":3,"file":"ActivitySidebarFilter.js","names":["React","FormattedMessage","DropdownMenu","MenuToggle","PlainButton","messages","ACTIVITY_FILTER_OPTION_ALL","ACTIVITY_FILTER_OPTION_RESOLVED","ACTIVITY_FILTER_OPTION_TASKS","ACTIVITY_FILTER_OPTION_UNRESOLVED","COMMENT_STATUS_OPEN","COMMENT_STATUS_RESOLVED","FEED_ITEM_TYPE_TASK","Menu","SelectMenuItem","filterOptionToStatus","ActivitySidebarFilter","activityFilterOptions","feedItemType","onFeedItemTypeClick","hasOnlyCommentActivity","options","commentActivityFilterOptions","every","option","includes","allFilterMessage","activitySidebarFilterOptionAllComments","activitySidebarFilterOptionAllActivity","statusMap","msg","val","activitySidebarFilterOptionOpen","activitySidebarFilterOptionResolved","activitySidebarFilterOptionTasks","createElement","className","constrainToWindow","type","map","filterOption","status","key","isSelected","onClick"],"sources":["../../../src/elements/content-sidebar/ActivitySidebarFilter.js"],"sourcesContent":["/**\n * @flow\n * @file Activity feed sidebar filter component\n * @author Box\n */\n\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport DropdownMenu, { MenuToggle } from '../../components/dropdown-menu';\nimport PlainButton from '../../components/plain-button';\nimport messages from './messages';\nimport {\n    ACTIVITY_FILTER_OPTION_ALL,\n    ACTIVITY_FILTER_OPTION_RESOLVED,\n    ACTIVITY_FILTER_OPTION_TASKS,\n    ACTIVITY_FILTER_OPTION_UNRESOLVED,\n    COMMENT_STATUS_OPEN,\n    COMMENT_STATUS_RESOLVED,\n    FEED_ITEM_TYPE_TASK,\n} from '../../constants';\nimport { Menu, SelectMenuItem } from '../../components/menu';\nimport type { ActivityFilterItemType, ActivityFilterOption } from '../../common/types/feed';\nimport './ActivitySidebarFilter.scss';\n\ntype ActivitySidebarFilterProps = {\n    activityFilterOptions: ActivityFilterOption[],\n    feedItemType?: ActivityFilterItemType,\n    onFeedItemTypeClick: (status?: ActivityFilterItemType) => void,\n};\n\nconst filterOptionToStatus = {\n    [ACTIVITY_FILTER_OPTION_ALL]: ACTIVITY_FILTER_OPTION_ALL,\n    [ACTIVITY_FILTER_OPTION_UNRESOLVED]: COMMENT_STATUS_OPEN,\n    [ACTIVITY_FILTER_OPTION_RESOLVED]: COMMENT_STATUS_RESOLVED,\n    [ACTIVITY_FILTER_OPTION_TASKS]: FEED_ITEM_TYPE_TASK,\n};\n\nfunction ActivitySidebarFilter({\n    activityFilterOptions,\n    feedItemType = ACTIVITY_FILTER_OPTION_ALL,\n    onFeedItemTypeClick,\n}: ActivitySidebarFilterProps) {\n    const hasOnlyCommentActivity = (options: ActivityFilterOption[]): boolean => {\n        const commentActivityFilterOptions = [\n            ACTIVITY_FILTER_OPTION_ALL,\n            ACTIVITY_FILTER_OPTION_RESOLVED,\n            ACTIVITY_FILTER_OPTION_UNRESOLVED,\n        ];\n        return options.every(option => commentActivityFilterOptions.includes(option));\n    };\n\n    // The message for all activty is based on whether only comments are in the activityFilterOptions prop\n    const allFilterMessage = hasOnlyCommentActivity(activityFilterOptions)\n        ? messages.activitySidebarFilterOptionAllComments\n        : messages.activitySidebarFilterOptionAllActivity;\n\n    const statusMap = {\n        [ACTIVITY_FILTER_OPTION_ALL]: {\n            msg: allFilterMessage,\n            val: ACTIVITY_FILTER_OPTION_ALL,\n        },\n        [COMMENT_STATUS_OPEN]: { msg: messages.activitySidebarFilterOptionOpen, val: COMMENT_STATUS_OPEN },\n        [COMMENT_STATUS_RESOLVED]: {\n            msg: messages.activitySidebarFilterOptionResolved,\n            val: COMMENT_STATUS_RESOLVED,\n        },\n        [FEED_ITEM_TYPE_TASK]: {\n            msg: messages.activitySidebarFilterOptionTasks,\n            val: FEED_ITEM_TYPE_TASK,\n        },\n    };\n\n    return (\n        <div className=\"bcs-ActivitySidebarFilter\">\n            <DropdownMenu className=\"bcs-ActivitySidebarFilter-dropdownMenu\" constrainToWindow>\n                <PlainButton type=\"button\">\n                    <MenuToggle>\n                        <FormattedMessage {...statusMap[feedItemType].msg} />\n                    </MenuToggle>\n                </PlainButton>\n                <Menu>\n                    {activityFilterOptions.map(filterOption => {\n                        const status = filterOptionToStatus[filterOption];\n                        return (\n                            <SelectMenuItem\n                                key={status}\n                                isSelected={status === feedItemType}\n                                onClick={() => onFeedItemTypeClick(statusMap[status].val)}\n                            >\n                                <FormattedMessage {...statusMap[status].msg} />\n                            </SelectMenuItem>\n                        );\n                    })}\n                </Menu>\n            </DropdownMenu>\n        </div>\n    );\n}\n\nexport default ActivitySidebarFilter;\n"],"mappings":"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","ignoreList":[]}