{"version":3,"file":"useSidebarMetadataFetcher.js","names":["React","getProp","isEmpty","isUserCorrectableError","ERROR_CODE_EMPTY_METADATA_SUGGESTIONS","ERROR_CODE_FETCH_METADATA_SUGGESTIONS","ERROR_CODE_METADATA_AUTOFILL_TIMEOUT","ERROR_CODE_UNKNOWN","ERROR_CODE_METADATA_PRECONDITION_FAILED","FIELD_IS_EXTERNALLY_OWNED","FIELD_PERMISSIONS_CAN_UPLOAD","FIELD_PERMISSIONS","SUCCESS_CODE_UPDATE_METADATA_TEMPLATE_INSTANCE","SUCCESS_CODE_DELETE_METADATA_TEMPLATE_INSTANCE","SUCCESS_CODE_CREATE_METADATA_TEMPLATE_INSTANCE","messages","STATUS","useSidebarMetadataFetcher","api","fileId","onError","onSuccess","isFeatureEnabled","status","setStatus","useState","IDLE","file","setFile","templates","setTemplates","errorMessage","setErrorMessage","templateInstances","setTemplateInstances","extractErrorCode","setExtractErrorCode","onApiError","useCallback","error","code","message","errorStatus","isValidError","ERROR","isErrorDisplayed","fetchMetadataSuccessCallback","fetchedTemplates","fetchedTemplateInstances","SUCCESS","fetchMetadataErrorCallback","e","sidebarMetadataFetchingErrorContent","fetchMetadata","fetchedFile","getMetadataAPI","getMetadata","refreshCache","fetchFileSuccessCallback","currentFile","currentFileCanUpload","newFileCanUpload","shouldFetchMetadata","fetchFileErrorCallback","undefined","sidebarMetadataEditingErrorContent","handleDeleteMetadataInstance","metadataInstance","LOADING","deleteMetadata","handleCreateMetadataInstance","templateInstance","successCallback","createMetadataRedesign","handleUpdateMetadataInstance","JSONPatch","updateMetadataRedesign","setError","extractSuggestions","templateKey","scope","agentId","aiAPI","getIntelligenceAPI","answer","customAiAgent","ai_agent","type","id","requestBody","_objectSpread","items","metadata_template","template_key","extractStructured","response","showNotification","Error","find","template","fields","map","field","value","key","aiSuggestion","useEffect","getFileAPI","getFile","clearExtractError"],"sources":["../../../../src/elements/content-sidebar/hooks/useSidebarMetadataFetcher.ts"],"sourcesContent":["import * as React from 'react';\nimport getProp from 'lodash/get';\nimport { type MessageDescriptor } from 'react-intl';\nimport {\n    type JSONPatchOperations,\n    type MetadataTemplate,\n    type MetadataTemplateInstance,\n    type MetadataTemplateField,\n    type MetadataFieldValue,\n} from '@box/metadata-editor';\nimport isEmpty from 'lodash/isEmpty';\nimport API from '../../../api';\nimport { type ElementsXhrError } from '../../../common/types/api';\nimport { isUserCorrectableError } from '../../../utils/error';\nimport {\n    ERROR_CODE_EMPTY_METADATA_SUGGESTIONS,\n    ERROR_CODE_FETCH_METADATA_SUGGESTIONS,\n    ERROR_CODE_METADATA_AUTOFILL_TIMEOUT,\n    ERROR_CODE_UNKNOWN,\n    ERROR_CODE_METADATA_PRECONDITION_FAILED,\n    FIELD_IS_EXTERNALLY_OWNED,\n    FIELD_PERMISSIONS_CAN_UPLOAD,\n    FIELD_PERMISSIONS,\n    SUCCESS_CODE_UPDATE_METADATA_TEMPLATE_INSTANCE,\n    SUCCESS_CODE_DELETE_METADATA_TEMPLATE_INSTANCE,\n    SUCCESS_CODE_CREATE_METADATA_TEMPLATE_INSTANCE,\n} from '../../../constants';\n\nimport messages from '../../common/messages';\n\nimport { type BoxItem } from '../../../common/types/core';\nimport { type ErrorContextProps, type ExternalProps, type SuccessContextProps } from '../MetadataSidebarRedesign';\nimport { type AiExtractStructured } from '../../../api/schemas/AiExtractStructured';\n\nexport enum STATUS {\n    IDLE = 'idle',\n    LOADING = 'loading',\n    ERROR = 'error',\n    SUCCESS = 'success',\n}\n\ninterface DataFetcher {\n    clearExtractError: () => void;\n    errorMessage: MessageDescriptor | null;\n    extractErrorCode:\n        | ERROR_CODE_METADATA_AUTOFILL_TIMEOUT\n        | ERROR_CODE_METADATA_PRECONDITION_FAILED\n        | ERROR_CODE_UNKNOWN\n        | null;\n    extractSuggestions: (templateKey: string, scope: string, agentId?: string) => Promise<MetadataTemplateField[]>;\n    file: BoxItem | null;\n    handleCreateMetadataInstance: (\n        templateInstance: MetadataTemplateInstance,\n        successCallback: () => void,\n    ) => Promise<void>;\n    handleDeleteMetadataInstance: (metadataInstance: MetadataTemplateInstance) => Promise<void>;\n    handleUpdateMetadataInstance: (\n        metadataTemplateInstance: MetadataTemplateInstance,\n        JSONPatch: Array<Object>,\n        successCallback: () => void,\n    ) => Promise<void>;\n    status: STATUS;\n    templateInstances: Array<MetadataTemplateInstance>;\n    templates: Array<MetadataTemplate>;\n}\n\nfunction useSidebarMetadataFetcher(\n    api: API,\n    fileId: string,\n    onError: ErrorContextProps['onError'],\n    onSuccess: SuccessContextProps['onSuccess'],\n    isFeatureEnabled: ExternalProps['isFeatureEnabled'],\n): DataFetcher {\n    const [status, setStatus] = React.useState<STATUS>(STATUS.IDLE);\n    const [file, setFile] = React.useState<BoxItem>(null);\n    const [templates, setTemplates] = React.useState(null);\n    const [errorMessage, setErrorMessage] = React.useState<MessageDescriptor | null>(null);\n    const [templateInstances, setTemplateInstances] = React.useState<Array<MetadataTemplateInstance>>([]);\n    const [extractErrorCode, setExtractErrorCode] = React.useState<string | null>(null);\n\n    const onApiError = React.useCallback(\n        (error: ElementsXhrError, code: string, message: MessageDescriptor) => {\n            const { status: errorStatus } = error;\n            const isValidError = isUserCorrectableError(errorStatus);\n            setStatus(STATUS.ERROR);\n            setErrorMessage(message);\n            onError(error, code, {\n                error,\n                isErrorDisplayed: isValidError,\n            });\n        },\n        [onError],\n    );\n\n    const fetchMetadataSuccessCallback = React.useCallback(\n        ({\n            templates: fetchedTemplates,\n            templateInstances: fetchedTemplateInstances,\n        }: {\n            templates: Array<MetadataTemplate>;\n            templateInstances: Array<MetadataTemplateInstance>;\n        }) => {\n            setErrorMessage(null);\n            setStatus(STATUS.SUCCESS);\n            setTemplateInstances(fetchedTemplateInstances);\n            setTemplates(fetchedTemplates);\n        },\n        [],\n    );\n\n    const fetchMetadataErrorCallback = React.useCallback(\n        (e: ElementsXhrError, code: string) => {\n            setTemplates(null);\n            setTemplateInstances(null);\n            onApiError(e, code, messages.sidebarMetadataFetchingErrorContent);\n        },\n        [onApiError],\n    );\n\n    const fetchMetadata = React.useCallback(\n        (fetchedFile: BoxItem) => {\n            api.getMetadataAPI(false).getMetadata(\n                fetchedFile,\n                fetchMetadataSuccessCallback,\n                fetchMetadataErrorCallback,\n                isFeatureEnabled,\n                { refreshCache: true },\n                true,\n            );\n        },\n        [api, fetchMetadataErrorCallback, fetchMetadataSuccessCallback, isFeatureEnabled],\n    );\n\n    const fetchFileSuccessCallback = React.useCallback(\n        (fetchedFile: BoxItem) => {\n            const { currentFile } = file ?? {};\n            const currentFileCanUpload = getProp(currentFile, FIELD_PERMISSIONS_CAN_UPLOAD, false);\n            const newFileCanUpload = getProp(fetchedFile, FIELD_PERMISSIONS_CAN_UPLOAD, false);\n            const shouldFetchMetadata = !currentFile || currentFileCanUpload !== newFileCanUpload;\n            setFile(fetchedFile);\n            if (shouldFetchMetadata && fetchedFile) {\n                fetchMetadata(fetchedFile);\n            } else {\n                setStatus(STATUS.SUCCESS);\n            }\n        },\n        [fetchMetadata, file],\n    );\n\n    const fetchFileErrorCallback = React.useCallback(\n        (e: ElementsXhrError, code: string) => {\n            setFile(undefined);\n            onApiError(e, code, messages.sidebarMetadataEditingErrorContent);\n        },\n        [onApiError],\n    );\n\n    const handleDeleteMetadataInstance = React.useCallback(\n        async (metadataInstance: MetadataTemplateInstance): Promise<void> => {\n            if (!file || !metadataInstance) {\n                return;\n            }\n            setStatus(STATUS.LOADING);\n            await api.getMetadataAPI(false).deleteMetadata(\n                file,\n                metadataInstance,\n                () => {\n                    setStatus(STATUS.SUCCESS);\n                    onSuccess(SUCCESS_CODE_DELETE_METADATA_TEMPLATE_INSTANCE, true);\n                },\n                (error: ElementsXhrError, code: string) => {\n                    onApiError(error, code, messages.sidebarMetadataEditingErrorContent);\n                },\n                true,\n            );\n        },\n        [api, onApiError, onSuccess, file],\n    );\n\n    const handleCreateMetadataInstance = React.useCallback(\n        async (templateInstance: MetadataTemplateInstance, successCallback: () => void): Promise<void> => {\n            await api.getMetadataAPI(false).createMetadataRedesign(\n                file,\n                templateInstance,\n                () => {\n                    successCallback();\n                    onSuccess(SUCCESS_CODE_CREATE_METADATA_TEMPLATE_INSTANCE, true);\n                },\n                (error: ElementsXhrError, code: string) =>\n                    onApiError(error, code, messages.sidebarMetadataEditingErrorContent),\n            );\n        },\n        [api, file, onApiError, onSuccess],\n    );\n\n    const handleUpdateMetadataInstance = React.useCallback(\n        async (\n            metadataInstance: MetadataTemplateInstance,\n            JSONPatch: JSONPatchOperations,\n            successCallback: () => void,\n        ) => {\n            await api.getMetadataAPI(false).updateMetadataRedesign(\n                file,\n                metadataInstance,\n                JSONPatch,\n                () => {\n                    successCallback();\n                    onSuccess(SUCCESS_CODE_UPDATE_METADATA_TEMPLATE_INSTANCE, true);\n                },\n                (error: ElementsXhrError, code: string) => {\n                    onApiError(error, code, messages.sidebarMetadataEditingErrorContent);\n                },\n            );\n        },\n        [api, file, onApiError, onSuccess],\n    );\n\n    const [, setError] = React.useState();\n    const extractSuggestions = React.useCallback(\n        async (templateKey: string, scope: string, agentId?: string): Promise<MetadataTemplateField[]> => {\n            const aiAPI = api.getIntelligenceAPI();\n            setExtractErrorCode(null);\n            let answer = null;\n            const customAiAgent = agentId ? { ai_agent: { type: 'ai_agent_id', id: agentId } } : {};\n            const requestBody: AiExtractStructured = {\n                items: [{ id: file.id, type: file.type }],\n                metadata_template: { template_key: templateKey, scope, type: 'metadata_template' },\n                ...customAiAgent,\n            };\n\n            try {\n                answer = (await aiAPI.extractStructured(requestBody)) as Record<string, MetadataFieldValue>;\n            } catch (error) {\n                // Axios makes the status code nested under the response object\n                if (error.response?.status === 408) {\n                    onError(error, ERROR_CODE_METADATA_AUTOFILL_TIMEOUT);\n                    setExtractErrorCode(ERROR_CODE_METADATA_AUTOFILL_TIMEOUT);\n                } else if (error.response?.status === 412) {\n                    onError(error, ERROR_CODE_METADATA_PRECONDITION_FAILED);\n                    setExtractErrorCode(ERROR_CODE_METADATA_PRECONDITION_FAILED);\n                } else if (error.response?.status === 500) {\n                    onError(error, ERROR_CODE_UNKNOWN);\n                    setExtractErrorCode(ERROR_CODE_UNKNOWN);\n                } else if (isUserCorrectableError(error.response?.status)) {\n                    onError(error, ERROR_CODE_FETCH_METADATA_SUGGESTIONS, { showNotification: true });\n                } else {\n                    onError(error, ERROR_CODE_UNKNOWN, { showNotification: true });\n                    // react way of throwing errors from async callbacks - https://github.com/facebook/react/issues/14981#issuecomment-468460187\n                    setError(() => {\n                        throw error;\n                    });\n                }\n                return [];\n            }\n\n            if (isEmpty(answer)) {\n                const error = new Error('No suggestions found.');\n                onError(error, ERROR_CODE_EMPTY_METADATA_SUGGESTIONS, { showNotification: true });\n                return [];\n            }\n\n            const templateInstance = templates.find(template => template.templateKey === templateKey && template.scope);\n            const fields = templateInstance?.fields || [];\n\n            return fields.map(field => {\n                const value = answer[field.key];\n                // TODO: @box/metadadata-editor does not support AI suggestions, enable once supported\n                if (!value || field.type === 'taxonomy') {\n                    return field;\n                }\n                return {\n                    ...field,\n                    aiSuggestion: value,\n                };\n            });\n        },\n        [api, file, onError, templates],\n    );\n\n    React.useEffect(() => {\n        if (status === STATUS.IDLE) {\n            setStatus(STATUS.LOADING);\n            api.getFileAPI().getFile(fileId, fetchFileSuccessCallback, fetchFileErrorCallback, {\n                fields: [FIELD_IS_EXTERNALLY_OWNED, FIELD_PERMISSIONS],\n                refreshCache: true,\n            });\n        }\n    }, [api, fetchFileErrorCallback, fetchFileSuccessCallback, fileId, status]);\n\n    return {\n        clearExtractError: () => setExtractErrorCode(null),\n        extractSuggestions,\n        handleCreateMetadataInstance,\n        handleDeleteMetadataInstance,\n        handleUpdateMetadataInstance,\n        extractErrorCode,\n        errorMessage,\n        file,\n        status,\n        templateInstances,\n        templates,\n    };\n}\n\nexport default useSidebarMetadataFetcher;\n"],"mappings":"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","ignoreList":[]}