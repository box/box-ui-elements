{"version":3,"file":"useMetadataSidebarFilteredTemplates.js","names":["React","SIDEBAR_VIEW_METADATA","useMetadataSidebarFilteredTemplates","history","filteredTemplateIds","templateInstances","filteredTemplates","setFilteredTemplates","useState","useEffect","matchingFilteredTemplateIds","filter","instance","includes","id","hidden","map","handleSetFilteredTemplates","templateIds","length","push","join","templateInstancesList","useMemo","filteredTemplateInstances","some","template"],"sources":["../../../../src/elements/content-sidebar/hooks/useMetadataSidebarFilteredTemplates.tsx"],"sourcesContent":["import * as React from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { type MetadataTemplateInstance } from '@box/metadata-editor';\nimport { SIDEBAR_VIEW_METADATA } from '../../../constants';\n\ntype History = RouteComponentProps['history'];\n\ninterface MetadataSidebarFilter {\n    filteredTemplates: string[];\n    templateInstancesList: MetadataTemplateInstance[];\n    handleSetFilteredTemplates: (templateIds: string[]) => void;\n}\n\nexport function useMetadataSidebarFilteredTemplates(\n    history: History,\n    filteredTemplateIds: string[],\n    templateInstances: MetadataTemplateInstance[],\n): MetadataSidebarFilter {\n    const [filteredTemplates, setFilteredTemplates] = React.useState([]);\n\n    React.useEffect(() => {\n        const matchingFilteredTemplateIds = templateInstances\n            .filter(instance => filteredTemplateIds.includes(instance.id) && !instance.hidden)\n            .map(instance => instance.id);\n\n        setFilteredTemplates(matchingFilteredTemplateIds);\n    }, [filteredTemplateIds, templateInstances]);\n\n    const handleSetFilteredTemplates = (templateIds: string[]) => {\n        if (templateIds.length === 0) {\n            history.push(`/${SIDEBAR_VIEW_METADATA}`);\n        } else {\n            history.push(`/${SIDEBAR_VIEW_METADATA}/filteredTemplates/${templateIds.join(',')}`);\n        }\n        setFilteredTemplates(templateIds);\n    };\n\n    const templateInstancesList = React.useMemo(() => {\n        const filteredTemplateInstances = templateInstances.filter((instance: MetadataTemplateInstance) =>\n            filteredTemplates.some((template: string) => template === instance.id && !instance.hidden),\n        );\n        return filteredTemplates.length === 0 ? templateInstances : filteredTemplateInstances;\n    }, [templateInstances, filteredTemplates]);\n\n    return { filteredTemplates, templateInstancesList, handleSetFilteredTemplates };\n}\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAG9B,SAASC,qBAAqB,QAAQ,oBAAoB;AAU1D,OAAO,SAASC,mCAAmCA,CAC/CC,OAAgB,EAChBC,mBAA6B,EAC7BC,iBAA6C,EACxB;EACrB,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGP,KAAK,CAACQ,QAAQ,CAAC,EAAE,CAAC;EAEpER,KAAK,CAACS,SAAS,CAAC,MAAM;IAClB,MAAMC,2BAA2B,GAAGL,iBAAiB,CAChDM,MAAM,CAACC,QAAQ,IAAIR,mBAAmB,CAACS,QAAQ,CAACD,QAAQ,CAACE,EAAE,CAAC,IAAI,CAACF,QAAQ,CAACG,MAAM,CAAC,CACjFC,GAAG,CAACJ,QAAQ,IAAIA,QAAQ,CAACE,EAAE,CAAC;IAEjCP,oBAAoB,CAACG,2BAA2B,CAAC;EACrD,CAAC,EAAE,CAACN,mBAAmB,EAAEC,iBAAiB,CAAC,CAAC;EAE5C,MAAMY,0BAA0B,GAAIC,WAAqB,IAAK;IAC1D,IAAIA,WAAW,CAACC,MAAM,KAAK,CAAC,EAAE;MAC1BhB,OAAO,CAACiB,IAAI,CAAC,IAAInB,qBAAqB,EAAE,CAAC;IAC7C,CAAC,MAAM;MACHE,OAAO,CAACiB,IAAI,CAAC,IAAInB,qBAAqB,sBAAsBiB,WAAW,CAACG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC;IACxF;IACAd,oBAAoB,CAACW,WAAW,CAAC;EACrC,CAAC;EAED,MAAMI,qBAAqB,GAAGtB,KAAK,CAACuB,OAAO,CAAC,MAAM;IAC9C,MAAMC,yBAAyB,GAAGnB,iBAAiB,CAACM,MAAM,CAAEC,QAAkC,IAC1FN,iBAAiB,CAACmB,IAAI,CAAEC,QAAgB,IAAKA,QAAQ,KAAKd,QAAQ,CAACE,EAAE,IAAI,CAACF,QAAQ,CAACG,MAAM,CAC7F,CAAC;IACD,OAAOT,iBAAiB,CAACa,MAAM,KAAK,CAAC,GAAGd,iBAAiB,GAAGmB,yBAAyB;EACzF,CAAC,EAAE,CAACnB,iBAAiB,EAAEC,iBAAiB,CAAC,CAAC;EAE1C,OAAO;IAAEA,iBAAiB;IAAEgB,qBAAqB;IAAEL;EAA2B,CAAC;AACnF","ignoreList":[]}