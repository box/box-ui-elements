{"version":3,"file":"withSidebarAnnotations.js","names":["React","getProp","noop","matchPath","FEED_ITEM_TYPE_VERSION","getBadUserError","ViewType","FeedEntryType","withSidebarAnnotations","WrappedComponent","WithSidebarAnnotations","Component","constructor","props","_defineProperty","createRef","navigation","activeFeedEntryType","ANNOTATIONS","fileVersionId","params","activeFeedEntryId","undefined","annotationId","sidebar","ACTIVITY","file","getAnnotationsPath","getAnnotationsMatchPath","history","internalSidebarNavigation","internalSidebarNavigationHandler","location","routerDisabled","currentFileVersionId","match","getInternalNavigationMatch","correctedNavigation","getInternalAnnotationsNavigation","replace","annotatorState","activeAnnotationFileVersionId","activeAnnotationId","defaultFileVersionId","newNavigationState","open","updatedNavigation","_objectSpread","newLocationState","state","push","pathname","api","fileId","onVersionChange","feedAPI","getFeedAPI","items","feedItems","getCachedItems","version","filter","item","type","find","id","currentVersionId","updateVersionToCurrent","currentVersionNavigation","isOpen","current","sidebarPanels","isActivity","refresh","redirectDeeplinkedAnnotation","componentDidUpdate","prevProps","prevAnnotatorState","prevFileId","prevInternalSidebarNavigation","prevLocation","action","annotation","prevActiveAnnotationId","prevAnnotation","prevFileVersionId","prevMatch","isAnnotationsPath","isTransitioningToAnnotationPath","hasActiveAnnotationChanged","addAnnotationReply","deleteAnnotationReply","updateAnnotationReply","updateAnnotation","deleteAnnotation","addAnnotation","updateActiveAnnotation","updateActiveVersion","meta","requestId","currentUser","isPending","hasItems","refreshActivitySidebar","annotationReply","addPendingReply","annotationItem","modifyFeedItemRepliesCountBy","updateReplyItem","updateFeedItem","deleteFeedItem","replyId","replyItem","replies","deleteReplyItem","render","createElement","_extends","ref","displayName","name"],"sources":["../../../src/elements/content-sidebar/withSidebarAnnotations.js"],"sourcesContent":["// @flow\nimport * as React from 'react';\nimport getProp from 'lodash/get';\nimport noop from 'lodash/noop';\nimport { matchPath, type ContextRouter } from 'react-router-dom';\nimport { FEED_ITEM_TYPE_VERSION } from '../../constants';\nimport { getBadUserError } from '../../utils/error';\nimport type { WithAnnotatorContextProps } from '../common/annotator-context';\nimport type { BoxItem, User } from '../../common/types/core';\nimport {\n    ViewType,\n    FeedEntryType,\n    type InternalSidebarNavigation,\n    type InternalSidebarNavigationHandler,\n} from '../common/types/SidebarNavigation';\n\ntype Props = {\n    ...ContextRouter,\n    currentUser?: User,\n    file: BoxItem,\n    fileId: string,\n    internalSidebarNavigation?: InternalSidebarNavigation,\n    internalSidebarNavigationHandler?: InternalSidebarNavigationHandler,\n    isOpen: boolean,\n    onVersionChange: Function,\n    routerDisabled?: boolean,\n} & WithAnnotatorContextProps;\n\ntype SidebarPanelsRefType = {\n    refresh: (shouldRefreshCache?: boolean) => void,\n};\n\nexport default function withSidebarAnnotations(\n    WrappedComponent: React.ComponentType<Props>,\n): React.ComponentType<Props> {\n    class WithSidebarAnnotations extends React.Component<Props> {\n        static defaultProps = {\n            annotatorState: {},\n            getAnnotationsMatchPath: noop,\n            getAnnotationsPath: noop,\n            onVersionChange: noop,\n        };\n\n        static displayName: ?string;\n\n        props: Props;\n\n        sidebarPanels: { current: SidebarPanelsRefType | null } = React.createRef();\n\n        constructor(props) {\n            super(props);\n\n            this.redirectDeeplinkedAnnotation();\n        }\n\n        getInternalNavigationMatch = (\n            navigation: InternalSidebarNavigation,\n        ): { params: { annotationId?: string, fileVersionId: string } } | null => {\n            if (\n                !('activeFeedEntryType' in navigation) ||\n                navigation.activeFeedEntryType !== FeedEntryType.ANNOTATIONS ||\n                !navigation.fileVersionId\n            ) {\n                return null;\n            }\n\n            // Only include annotationId if it's defined (mirrors router behavior where missing optional params are omitted)\n            const params =\n                navigation.activeFeedEntryId !== undefined\n                    ? {\n                          fileVersionId: navigation.fileVersionId,\n                          annotationId: navigation.activeFeedEntryId,\n                      }\n                    : {\n                          fileVersionId: navigation.fileVersionId,\n                      };\n\n            return { params };\n        };\n\n        getInternalAnnotationsNavigation = (\n            fileVersionId?: string,\n            annotationId?: string | null,\n        ): InternalSidebarNavigation => {\n            if (!fileVersionId) {\n                return { sidebar: ViewType.ACTIVITY };\n            }\n\n            return {\n                sidebar: ViewType.ACTIVITY,\n                activeFeedEntryType: FeedEntryType.ANNOTATIONS,\n                activeFeedEntryId: annotationId || undefined,\n                fileVersionId,\n            };\n        };\n\n        redirectDeeplinkedAnnotation = () => {\n            const {\n                file,\n                getAnnotationsPath,\n                getAnnotationsMatchPath,\n                history,\n                internalSidebarNavigation,\n                internalSidebarNavigationHandler,\n                location,\n                routerDisabled,\n            } = this.props;\n\n            const currentFileVersionId = getProp(file, 'file_version.id');\n\n            if (routerDisabled && internalSidebarNavigation && internalSidebarNavigationHandler) {\n                // Use internal navigation when router is disabled\n                const match = this.getInternalNavigationMatch(internalSidebarNavigation);\n                const annotationId = getProp(match, 'params.annotationId');\n                const fileVersionId = getProp(match, 'params.fileVersionId');\n\n                if (fileVersionId && fileVersionId !== currentFileVersionId) {\n                    const correctedNavigation = this.getInternalAnnotationsNavigation(\n                        currentFileVersionId,\n                        annotationId,\n                    );\n                    internalSidebarNavigationHandler(correctedNavigation, true);\n                }\n            } else {\n                // Use router-based navigation\n                const match = getAnnotationsMatchPath(location);\n                const annotationId = getProp(match, 'params.annotationId');\n                const fileVersionId = getProp(match, 'params.fileVersionId');\n\n                if (fileVersionId && fileVersionId !== currentFileVersionId) {\n                    history.replace(getAnnotationsPath(currentFileVersionId, annotationId));\n                }\n            }\n        };\n\n        componentDidUpdate(prevProps: Props) {\n            const {\n                annotatorState,\n                fileId,\n                getAnnotationsMatchPath,\n                internalSidebarNavigation,\n                location,\n                onVersionChange,\n                routerDisabled,\n            }: Props = this.props;\n            const {\n                annotatorState: prevAnnotatorState,\n                fileId: prevFileId,\n                internalSidebarNavigation: prevInternalSidebarNavigation,\n                location: prevLocation,\n            }: Props = prevProps;\n            const { action, activeAnnotationId, annotation } = annotatorState;\n            const { activeAnnotationId: prevActiveAnnotationId, annotation: prevAnnotation } = prevAnnotatorState;\n\n            let fileVersionId;\n            let prevFileVersionId;\n            let match;\n\n            if (routerDisabled && internalSidebarNavigation) {\n                // Use internal navigation when router is disabled\n                match = this.getInternalNavigationMatch(internalSidebarNavigation);\n                const prevMatch = prevInternalSidebarNavigation\n                    ? this.getInternalNavigationMatch(prevInternalSidebarNavigation)\n                    : null;\n\n                fileVersionId = getProp(match, 'params.fileVersionId');\n                prevFileVersionId = getProp(prevMatch, 'params.fileVersionId');\n            } else {\n                // Use router-based navigation\n                match = getAnnotationsMatchPath(location);\n                const prevMatch = getAnnotationsMatchPath(prevLocation);\n\n                fileVersionId = getProp(match, 'params.fileVersionId');\n                prevFileVersionId = getProp(prevMatch, 'params.fileVersionId');\n            }\n\n            const isAnnotationsPath = !!match;\n            const isTransitioningToAnnotationPath = activeAnnotationId && !isAnnotationsPath;\n            const hasActiveAnnotationChanged = prevActiveAnnotationId !== activeAnnotationId;\n\n            if (action === 'reply_create_start' || action === 'reply_create_end') {\n                this.addAnnotationReply();\n            }\n\n            if (action === 'reply_delete_start' || action === 'reply_delete_end') {\n                this.deleteAnnotationReply();\n            }\n\n            if (action === 'reply_update_start' || action === 'reply_update_end') {\n                this.updateAnnotationReply();\n            }\n\n            if (action === 'update_start' || action === 'update_end') {\n                this.updateAnnotation();\n            }\n\n            if (action === 'delete_start' || action === 'delete_end') {\n                this.deleteAnnotation();\n            }\n\n            if ((action === 'create_start' || action === 'create_end') && annotation && prevAnnotation !== annotation) {\n                this.addAnnotation();\n            }\n\n            // Active annotation id changed. If location is currently an annotation path or\n            // if location is not currently an annotation path but the active annotation id\n            // transitioned from falsy to truthy, update the location accordingly\n            if (hasActiveAnnotationChanged && (isAnnotationsPath || isTransitioningToAnnotationPath)) {\n                this.updateActiveAnnotation();\n            }\n\n            if (fileVersionId && prevFileVersionId !== fileVersionId) {\n                this.updateActiveVersion();\n            }\n\n            if (prevFileId !== fileId) {\n                // If the file id has changed, reset the current version id since the previous (possibly versioned)\n                // location is no longer active\n                onVersionChange(null);\n            }\n        }\n\n        addAnnotation() {\n            const {\n                annotatorState: { action, annotation, meta: { requestId } = {} },\n                api,\n                currentUser,\n                file,\n                fileId,\n            } = this.props;\n\n            if (!requestId) {\n                return;\n            }\n\n            // TODO: need to address in follow on -- currentUser may be undefined here but is never fetched for sure until ActivitySidebar\n            if (!currentUser) {\n                throw getBadUserError();\n            }\n\n            const feedAPI = api.getFeedAPI(false);\n            const isPending = action === 'create_start';\n            const { items: hasItems } = feedAPI.getCachedItems(fileId) || {};\n\n            // If there are existing items in the cache for this file, then patch the cache with the new annotation\n            // If there are no cache entry for feeditems, then it is assumed that it has not yet been fetched.\n            if (hasItems) {\n                feedAPI.addAnnotation(file, currentUser, annotation, requestId, isPending);\n            }\n\n            this.refreshActivitySidebar();\n        }\n\n        addAnnotationReply() {\n            const {\n                annotatorState: {\n                    action,\n                    annotation: { id: annotationId },\n                    annotationReply,\n                    meta: { requestId },\n                },\n                api,\n                currentUser,\n                file,\n            } = this.props;\n\n            if (!currentUser) {\n                throw getBadUserError();\n            }\n\n            const feedAPI = api.getFeedAPI(false);\n            feedAPI.file = file;\n\n            if (action === 'reply_create_start') {\n                feedAPI.addPendingReply(annotationId, currentUser, { ...annotationReply, id: requestId });\n            } else {\n                const { items: feedItems = [] } = feedAPI.getCachedItems(file.id) || {};\n                const annotationItem = feedItems.find(({ id }) => id === annotationId);\n\n                if (!annotationItem) {\n                    return;\n                }\n\n                feedAPI.modifyFeedItemRepliesCountBy(annotationId, 1);\n                feedAPI.updateReplyItem({ ...annotationReply, isPending: false }, annotationId, requestId);\n            }\n\n            this.refreshActivitySidebar();\n        }\n\n        deleteAnnotation() {\n            const {\n                annotatorState: { action, annotation },\n                api,\n                file,\n            } = this.props;\n\n            const feedAPI = api.getFeedAPI(false);\n            feedAPI.file = file;\n\n            if (action === 'delete_start') {\n                feedAPI.updateFeedItem({ isPending: true }, annotation.id);\n            } else {\n                feedAPI.deleteFeedItem(annotation.id);\n            }\n\n            this.refreshActivitySidebar();\n        }\n\n        deleteAnnotationReply() {\n            const {\n                annotatorState: {\n                    action,\n                    annotation: { id: annotationId },\n                    annotationReply: { id: replyId },\n                },\n                api,\n                file,\n            } = this.props;\n\n            const feedAPI = api.getFeedAPI(false);\n            feedAPI.file = file;\n\n            if (action === 'reply_delete_start') {\n                feedAPI.updateReplyItem({ isPending: true }, annotationId, replyId);\n            } else {\n                const { items: feedItems = [] } = feedAPI.getCachedItems(file.id) || {};\n                const annotationItem = feedItems.find(({ id }) => id === annotationId);\n\n                if (!annotationItem) {\n                    return;\n                }\n\n                // Check if the parent annotation has the reply currently visible and if so, remove it\n                const replyItem = annotationItem.replies.find(({ id }) => id === replyId);\n                if (replyItem) {\n                    feedAPI.deleteReplyItem(replyId, annotationId);\n                }\n\n                // Decrease the amount of replies by 1\n                feedAPI.modifyFeedItemRepliesCountBy(annotationId, -1);\n            }\n\n            this.refreshActivitySidebar();\n        }\n\n        updateAnnotation() {\n            const {\n                annotatorState: { action, annotation },\n                api,\n                file,\n            } = this.props;\n\n            const feedAPI = api.getFeedAPI(false);\n            const isPending = action === 'update_start';\n            feedAPI.file = file;\n\n            feedAPI.updateFeedItem({ ...annotation, isPending }, annotation.id);\n\n            this.refreshActivitySidebar();\n        }\n\n        updateAnnotationReply() {\n            const {\n                annotatorState: { action, annotation, annotationReply },\n                api,\n                file,\n            } = this.props;\n\n            const feedAPI = api.getFeedAPI(false);\n            const isPending = action === 'reply_update_start';\n            feedAPI.file = file;\n\n            feedAPI.updateReplyItem({ ...annotationReply, isPending }, annotation.id, annotationReply.id);\n\n            this.refreshActivitySidebar();\n        }\n\n        updateActiveAnnotation = () => {\n            const {\n                annotatorState: { activeAnnotationFileVersionId, activeAnnotationId },\n                file,\n                getAnnotationsMatchPath,\n                getAnnotationsPath,\n                history,\n                internalSidebarNavigation,\n                internalSidebarNavigationHandler,\n                location,\n                routerDisabled,\n            } = this.props;\n\n            const currentFileVersionId = getProp(file, 'file_version.id');\n            const defaultFileVersionId = activeAnnotationFileVersionId || currentFileVersionId;\n\n            if (routerDisabled && internalSidebarNavigation && internalSidebarNavigationHandler) {\n                // Use internal navigation when router is disabled\n                const match = this.getInternalNavigationMatch(internalSidebarNavigation);\n                const fileVersionId = getProp(match, 'params.fileVersionId', defaultFileVersionId);\n                const newNavigationState = activeAnnotationId ? { open: true } : {};\n\n                // Update the navigation and open state if transitioning to an active annotation id, force the sidebar open\n                const updatedNavigation = {\n                    ...this.getInternalAnnotationsNavigation(fileVersionId, activeAnnotationId),\n                    ...newNavigationState,\n                };\n                internalSidebarNavigationHandler(updatedNavigation);\n            } else {\n                // Use router-based navigation\n                const match = getAnnotationsMatchPath(location);\n                const fileVersionId = getProp(match, 'params.fileVersionId', defaultFileVersionId);\n                const newLocationState = activeAnnotationId ? { open: true } : location.state;\n\n                // Update the location pathname and open state if transitioning to an active annotation id, force the sidebar open\n                history.push({\n                    pathname: getAnnotationsPath(fileVersionId, activeAnnotationId),\n                    state: newLocationState,\n                });\n            }\n        };\n\n        updateActiveVersion = () => {\n            const {\n                api,\n                file,\n                fileId,\n                getAnnotationsMatchPath,\n                getAnnotationsPath,\n                history,\n                internalSidebarNavigation,\n                internalSidebarNavigationHandler,\n                location,\n                onVersionChange,\n                routerDisabled,\n            } = this.props;\n\n            const feedAPI = api.getFeedAPI(false);\n            const currentFileVersionId = getProp(file, 'file_version.id');\n            const { items: feedItems = [] } = feedAPI.getCachedItems(fileId) || {};\n\n            if (routerDisabled && internalSidebarNavigation && internalSidebarNavigationHandler) {\n                // Use internal navigation when router is disabled\n                const match = this.getInternalNavigationMatch(internalSidebarNavigation);\n                const fileVersionId = getProp(match, 'params.fileVersionId');\n                const version = feedItems\n                    .filter(item => item.type === FEED_ITEM_TYPE_VERSION)\n                    .find(item => item.id === fileVersionId);\n\n                if (version) {\n                    onVersionChange(version, {\n                        currentVersionId: currentFileVersionId,\n                        updateVersionToCurrent: () => {\n                            const currentVersionNavigation =\n                                this.getInternalAnnotationsNavigation(currentFileVersionId);\n                            internalSidebarNavigationHandler(currentVersionNavigation);\n                        },\n                    });\n                }\n            } else {\n                // Use router-based navigation\n                const match = getAnnotationsMatchPath(location);\n                const fileVersionId = getProp(match, 'params.fileVersionId');\n                const version = feedItems\n                    .filter(item => item.type === FEED_ITEM_TYPE_VERSION)\n                    .find(item => item.id === fileVersionId);\n\n                if (version) {\n                    onVersionChange(version, {\n                        currentVersionId: currentFileVersionId,\n                        updateVersionToCurrent: () => history.push(getAnnotationsPath(currentFileVersionId)),\n                    });\n                }\n            }\n        };\n\n        refreshActivitySidebar = () => {\n            const { internalSidebarNavigation, isOpen, location, routerDisabled } = this.props;\n            const { current } = this.sidebarPanels;\n\n            let isActivity = false;\n\n            if (routerDisabled && internalSidebarNavigation) {\n                // Check if current navigation is pointing to activity sidebar\n                isActivity = internalSidebarNavigation.sidebar === ViewType.ACTIVITY;\n            } else {\n                // Use router-based check\n                const pathname = getProp(location, 'pathname', '');\n                isActivity = !!matchPath(pathname, '/activity');\n            }\n\n            // If the activity sidebar is currently open, then force it to refresh with the updated data\n            if (current && isActivity && isOpen) {\n                current.refresh(false);\n            }\n        };\n\n        render() {\n            return <WrappedComponent ref={this.sidebarPanels} {...this.props} />;\n        }\n    }\n\n    const displayName = WrappedComponent.displayName || WrappedComponent.name || 'Component';\n    WithSidebarAnnotations.displayName = `WithSidebarAnnotations(${displayName})`;\n\n    return WithSidebarAnnotations;\n}\n"],"mappings":"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","ignoreList":[]}