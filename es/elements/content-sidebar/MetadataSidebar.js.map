{"version":3,"file":"MetadataSidebar.js","names":["React","flow","getProp","noop","FormattedMessage","API","EmptyContent","InlineError","Instances","LoadingIndicator","LoadingIndicatorWrapper","messages","SidebarContent","TemplateDropdown","normalizeTemplates","EVENT_JS_READY","isUserCorrectableError","mark","withAPIContext","withErrorBoundary","withLogger","FIELD_IS_EXTERNALLY_OWNED","FIELD_PERMISSIONS","FIELD_PERMISSIONS_CAN_UPLOAD","IS_ERROR_DISPLAYED","ORIGIN_METADATA_SIDEBAR","SIDEBAR_VIEW_METADATA","MARK_NAME_JS_READY","MetadataSidebar","PureComponent","constructor","props","_defineProperty","isLoading","error","code","newState","onError","status","isValidError","setState","_objectSpread","sidebarMetadataEditingErrorContent","id","api","file","state","editor","getEditor","getMetadataAPI","deleteMetadata","template","onRemoveSuccessHandler","onApiError","editors","clone","slice","push","createMetadata","onAddSuccessHandler","ops","oldEditor","updateMetadata","newEditor","replaceEditor","onSaveErrorHandler","isDirty","e","undefined","sidebarMetadataFetchingErrorContent","templates","selectedTemplateKey","templateFilters","sidebarFileFetchingErrorContent","currentFile","currentCanUpload","newCanUpload","shouldFetchMetadata","callback","fetchMetadata","logger","onReadyMetric","endMarkName","componentDidMount","fetchFile","canEdit","find","instance","splice","indexOf","hasError","isFeatureEnabled","getMetadata","fetchMetadataSuccessCallback","fetchMetadataErrorCallback","refreshCache","fileId","getFileAPI","getFile","fetchFileSuccessCallback","fetchFileErrorCallback","fields","refresh","render","elementId","showEditor","showLoadingIndicator","showTemplateDropdown","showEmptyContent","length","createElement","actions","hasTemplates","isDropdownBusy","onAdd","usedTemplates","map","className","sidebarView","title","sidebarMetadataTitle","canAdd","onModification","onRemove","onSave","MetadataSidebarComponent"],"sources":["../../../src/elements/content-sidebar/MetadataSidebar.js"],"sourcesContent":["/**\n * @flow\n * @file Metadata sidebar component\n * @author Box\n */\n\nimport * as React from 'react';\nimport flow from 'lodash/flow';\nimport getProp from 'lodash/get';\nimport noop from 'lodash/noop';\nimport { FormattedMessage } from 'react-intl';\nimport type { MessageDescriptor } from 'react-intl';\nimport API from '../../api';\nimport EmptyContent from '../../features/metadata-instance-editor/EmptyContent';\nimport InlineError from '../../components/inline-error/InlineError';\nimport Instances from '../../features/metadata-instance-editor/Instances';\nimport LoadingIndicator from '../../components/loading-indicator/LoadingIndicator';\nimport LoadingIndicatorWrapper from '../../components/loading-indicator/LoadingIndicatorWrapper';\nimport messages from '../common/messages';\nimport SidebarContent from './SidebarContent';\nimport TemplateDropdown from '../../features/metadata-instance-editor/TemplateDropdown';\nimport { normalizeTemplates } from '../../features/metadata-instance-editor/metadataUtil';\nimport { EVENT_JS_READY } from '../common/logger/constants';\nimport { isUserCorrectableError } from '../../utils/error';\nimport { mark } from '../../utils/performance';\nimport { withAPIContext } from '../common/api-context';\nimport { withErrorBoundary } from '../common/error-boundary';\nimport { withLogger } from '../common/logger';\nimport {\n    FIELD_IS_EXTERNALLY_OWNED,\n    FIELD_PERMISSIONS,\n    FIELD_PERMISSIONS_CAN_UPLOAD,\n    IS_ERROR_DISPLAYED,\n    ORIGIN_METADATA_SIDEBAR,\n    SIDEBAR_VIEW_METADATA,\n} from '../../constants';\nimport type { WithLoggerProps } from '../../common/types/logging';\nimport type { ElementsXhrError, ErrorContextProps, JSONPatchOperations } from '../../common/types/api';\nimport type { MetadataEditor, MetadataTemplate } from '../../common/types/metadata';\nimport type { BoxItem } from '../../common/types/core';\nimport './MetadataSidebar.scss';\n\ntype ExternalProps = {\n    isFeatureEnabled: boolean,\n    selectedTemplateKey?: string,\n    templateFilters?: Array<string> | string,\n};\n\ntype PropsWithoutContext = {\n    elementId: string,\n    fileId: string,\n    hasSidebarInitialized?: boolean,\n} & ExternalProps;\n\ntype Props = {\n    api: API,\n} & PropsWithoutContext &\n    ErrorContextProps &\n    WithLoggerProps;\n\ntype State = {\n    editors?: Array<MetadataEditor>,\n    error?: MessageDescriptor,\n    file?: BoxItem,\n    isLoading: boolean,\n    templates?: Array<MetadataTemplate>,\n};\n\nconst MARK_NAME_JS_READY = `${ORIGIN_METADATA_SIDEBAR}_${EVENT_JS_READY}`;\n\nmark(MARK_NAME_JS_READY);\n\nclass MetadataSidebar extends React.PureComponent<Props, State> {\n    state = { isLoading: false };\n\n    static defaultProps = {\n        isFeatureEnabled: true,\n    };\n\n    constructor(props: Props) {\n        super(props);\n        const { logger } = this.props;\n        logger.onReadyMetric({\n            endMarkName: MARK_NAME_JS_READY,\n        });\n    }\n\n    componentDidMount() {\n        this.fetchFile();\n    }\n\n    /**\n     * Common error callback\n     *\n     * @param {Error} error - API error\n     * @param {string} code - error code\n     * @param {Object} [newState] - optional state to set\n     * @return {void}\n     */\n    onApiError = (error: ElementsXhrError, code: string, newState: Object = {}) => {\n        const { onError }: Props = this.props;\n        const { status } = error;\n        const isValidError = isUserCorrectableError(status);\n        this.setState({\n            error: messages.sidebarMetadataEditingErrorContent,\n            isLoading: false,\n            ...newState,\n        });\n        onError(error, code, {\n            error,\n            [IS_ERROR_DISPLAYED]: isValidError,\n        });\n    };\n\n    /**\n     * Checks upload permission\n     *\n     * @return {boolean} - true if metadata can be edited\n     */\n    canEdit(): boolean {\n        const { file }: State = this.state;\n        return getProp(file, FIELD_PERMISSIONS_CAN_UPLOAD, false);\n    }\n\n    /**\n     * Finds the editor we are editing\n     *\n     * @param {number} id - instance id\n     * @return {Object} editor instance\n     */\n    getEditor(id: string): ?MetadataEditor {\n        const { editors = [] }: State = this.state;\n        return editors.find(({ instance }) => instance.id === id);\n    }\n\n    /**\n     * Instance remove success handler\n     *\n     * @param {Object} editor - the editor to remove\n     * @return {void}\n     */\n    onRemoveSuccessHandler(editor: MetadataEditor): void {\n        const { editors = [] }: State = this.state;\n        const clone = editors.slice(0);\n        clone.splice(editors.indexOf(editor), 1);\n        this.setState({ editors: clone });\n    }\n\n    /**\n     * Instance remove handler\n     *\n     * @param {string} id - instance id\n     * @return {void}\n     */\n    onRemove = (id: string): void => {\n        const { api }: Props = this.props;\n        const { file }: State = this.state;\n        const editor = this.getEditor(id);\n\n        if (!editor || !file) {\n            return;\n        }\n\n        api.getMetadataAPI(false).deleteMetadata(\n            file,\n            editor.template,\n            () => this.onRemoveSuccessHandler(editor),\n            this.onApiError,\n        );\n    };\n\n    /**\n     * Instance add success handler\n     *\n     * @param {Object} editor - instance editor\n     * @return {void}\n     */\n    onAddSuccessHandler = (editor: MetadataEditor): void => {\n        const { editors = [] }: State = this.state;\n        const clone = editors.slice(0);\n        clone.push(editor);\n        this.setState({ editors: clone, isLoading: false });\n    };\n\n    /**\n     * Instance add handler\n     *\n     * @param {Object} template - instance template\n     * @return {void}\n     */\n    onAdd = (template: MetadataTemplate) => {\n        const { api }: Props = this.props;\n        const { file }: State = this.state;\n\n        if (!file) {\n            return;\n        }\n\n        this.setState({ isLoading: true });\n        api.getMetadataAPI(false).createMetadata(file, template, this.onAddSuccessHandler, this.onApiError);\n    };\n\n    /**\n     * Instance save success handler\n     *\n     * @param {Object} oldEditor - prior editor\n     * @param {Object} newEditor - updated editor\n     * @return {void}\n     */\n    replaceEditor(oldEditor: MetadataEditor, newEditor: MetadataEditor): void {\n        const { editors = [] }: State = this.state;\n        const clone = editors.slice(0);\n        clone.splice(editors.indexOf(oldEditor), 1, newEditor);\n        this.setState({ editors: clone });\n    }\n\n    /**\n     * Instance save error handler\n     *\n     * @param {Object} oldEditor - prior editor\n     * @param {Object} error - api error\n     * @param {string} code - error code\n     * @return {void}\n     */\n    onSaveErrorHandler(oldEditor: MetadataEditor, error: ElementsXhrError, code: string): void {\n        const clone: MetadataEditor = { ...oldEditor, hasError: true }; // shallow clone suffices for hasError setting\n        this.replaceEditor(oldEditor, clone);\n        this.onApiError(error, code);\n    }\n\n    /**\n     * Instance save handler\n     *\n     * @param {string} id - instance id\n     * @param {Array} ops - json patch ops\n     * @return {void}\n     */\n    onSave = (id: string, ops: JSONPatchOperations): void => {\n        const { api }: Props = this.props;\n        const { file }: State = this.state;\n        const oldEditor = this.getEditor(id);\n\n        if (!oldEditor || !file) {\n            return;\n        }\n\n        api.getMetadataAPI(false).updateMetadata(\n            file,\n            oldEditor.template,\n            ops,\n            (newEditor: MetadataEditor) => {\n                this.replaceEditor(oldEditor, newEditor);\n            },\n            (error: ElementsXhrError, code: string) => {\n                this.onSaveErrorHandler(oldEditor, error, code);\n            },\n        );\n    };\n\n    /**\n     * Instance dirty handler\n     *\n     * @param {string} id - instance id\n     * @param {boolean} isDirty - instance dirty state\n     * @return {void}\n     */\n    onModification = (id: string, isDirty: boolean) => {\n        const oldEditor = this.getEditor(id);\n        if (!oldEditor) {\n            return;\n        }\n        const newEditor = { ...oldEditor, isDirty }; // shallow clone suffices for isDirty setting\n        this.replaceEditor(oldEditor, newEditor);\n    };\n\n    /**\n     * Handles a failed metadata fetch\n     *\n     * @private\n     * @param {Error} e - API error\n     * @param {string} code - error code\n     * @return {void}\n     */\n    fetchMetadataErrorCallback = (e: ElementsXhrError, code: string) => {\n        this.onApiError(e, code, {\n            editors: undefined,\n            error: messages.sidebarMetadataFetchingErrorContent,\n            templates: undefined,\n        });\n    };\n\n    /**\n     * Handles a successful metadata fetch\n     *\n     * @param {Object} metadata - instances and templates\n     * @return {void}\n     */\n    fetchMetadataSuccessCallback = ({\n        editors,\n        templates,\n    }: {\n        editors: Array<MetadataEditor>,\n        templates: Array<MetadataTemplate>,\n    }) => {\n        const { selectedTemplateKey, templateFilters } = this.props;\n        this.setState({\n            editors: editors.slice(0), // cloned for potential editing\n            error: undefined,\n            isLoading: false,\n            templates: normalizeTemplates(templates, selectedTemplateKey, templateFilters),\n        });\n    };\n\n    /**\n     * Fetches the metadata editors\n     *\n     * @return {void}\n     */\n    fetchMetadata(): void {\n        const { api, isFeatureEnabled }: Props = this.props;\n        const { file }: State = this.state;\n\n        if (!file) {\n            return;\n        }\n\n        api.getMetadataAPI(false).getMetadata(\n            file,\n            this.fetchMetadataSuccessCallback,\n            this.fetchMetadataErrorCallback,\n            isFeatureEnabled,\n            { refreshCache: true },\n        );\n    }\n\n    /**\n     * Handles a failed file fetch\n     *\n     * @private\n     * @param {Error} e - API error\n     * @param {string} code - error code\n     * @return {void}\n     */\n    fetchFileErrorCallback = (e: ElementsXhrError, code: string) => {\n        this.onApiError(e, code, { error: messages.sidebarFileFetchingErrorContent, file: undefined });\n    };\n\n    /**\n     * Handles a successful file fetch.\n     * Can be called multiple times when refreshing caches.\n     * On file load we should fetch metadata, but we shouldn't need to fetch\n     * if the file permissions haven't changed from a prior file fetch.\n     * Metadata editors mostly care about upload permission.\n     *\n     * @param {Object} file - the Box file\n     * @return {void}\n     */\n    fetchFileSuccessCallback = (file: BoxItem) => {\n        const { file: currentFile }: State = this.state;\n        const currentCanUpload = getProp(currentFile, FIELD_PERMISSIONS_CAN_UPLOAD, false);\n        const newCanUpload = getProp(file, FIELD_PERMISSIONS_CAN_UPLOAD, false);\n        const shouldFetchMetadata = !currentFile || currentCanUpload !== newCanUpload;\n        const callback = shouldFetchMetadata ? this.fetchMetadata : noop;\n        this.setState({ file }, callback);\n    };\n\n    /**\n     * Fetches a file with the fields needed for metadata sidebar\n     *\n     * @return {void}\n     */\n    fetchFile(): void {\n        const { api, fileId }: Props = this.props;\n        api.getFileAPI().getFile(fileId, this.fetchFileSuccessCallback, this.fetchFileErrorCallback, {\n            fields: [FIELD_IS_EXTERNALLY_OWNED, FIELD_PERMISSIONS],\n            refreshCache: true, // see implications in file success callback\n        });\n    }\n\n    refresh(): void {\n        this.fetchMetadata();\n    }\n\n    render() {\n        const { editors, file, error, isLoading, templates }: State = this.state;\n        const { elementId, selectedTemplateKey }: Props = this.props;\n        const showEditor = !!file && !!templates && !!editors;\n        const showLoadingIndicator = !error && !showEditor;\n        const canEdit = this.canEdit();\n        const showTemplateDropdown = showEditor && canEdit;\n        const showEmptyContent = showEditor && ((editors: any): Array<MetadataEditor>).length === 0;\n\n        return (\n            <SidebarContent\n                actions={\n                    showTemplateDropdown ? (\n                        <TemplateDropdown\n                            hasTemplates={templates && templates.length !== 0}\n                            isDropdownBusy={false}\n                            onAdd={this.onAdd}\n                            // $FlowFixMe checked via showTemplateDropdown & showEditor\n                            templates={templates}\n                            // $FlowFixMe checked via showTemplateDropdown & showEditor\n                            usedTemplates={editors.map(editor => editor.template)}\n                        />\n                    ) : null\n                }\n                className=\"bcs-metadata\"\n                elementId={elementId}\n                sidebarView={SIDEBAR_VIEW_METADATA}\n                title={<FormattedMessage {...messages.sidebarMetadataTitle} />}\n            >\n                {error && (\n                    <InlineError title={<FormattedMessage {...messages.error} />}>\n                        <FormattedMessage {...error} />\n                    </InlineError>\n                )}\n                {showLoadingIndicator && <LoadingIndicator />}\n                {showEditor && (\n                    <LoadingIndicatorWrapper className=\"metadata-instance-editor\" isLoading={isLoading}>\n                        {showEmptyContent ? (\n                            <EmptyContent canAdd={canEdit} />\n                        ) : (\n                            <Instances\n                                editors={editors}\n                                onModification={this.onModification}\n                                onRemove={this.onRemove}\n                                onSave={this.onSave}\n                                selectedTemplateKey={selectedTemplateKey}\n                            />\n                        )}\n                    </LoadingIndicatorWrapper>\n                )}\n            </SidebarContent>\n        );\n    }\n}\n\nexport type MetadataSidebarProps = ExternalProps;\nexport { MetadataSidebar as MetadataSidebarComponent };\nexport default flow([withLogger(ORIGIN_METADATA_SIDEBAR), withErrorBoundary(ORIGIN_METADATA_SIDEBAR), withAPIContext])(\n    MetadataSidebar,\n);\n"],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;;AAEA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,IAAI,MAAM,aAAa;AAC9B,OAAOC,OAAO,MAAM,YAAY;AAChC,OAAOC,IAAI,MAAM,aAAa;AAC9B,SAASC,gBAAgB,QAAQ,YAAY;AAE7C,OAAOC,GAAG,MAAM,WAAW;AAC3B,OAAOC,YAAY,MAAM,sDAAsD;AAC/E,OAAOC,WAAW,MAAM,2CAA2C;AACnE,OAAOC,SAAS,MAAM,mDAAmD;AACzE,OAAOC,gBAAgB,MAAM,qDAAqD;AAClF,OAAOC,uBAAuB,MAAM,4DAA4D;AAChG,OAAOC,QAAQ,MAAM,oBAAoB;AACzC,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,gBAAgB,MAAM,0DAA0D;AACvF,SAASC,kBAAkB,QAAQ,sDAAsD;AACzF,SAASC,cAAc,QAAQ,4BAA4B;AAC3D,SAASC,sBAAsB,QAAQ,mBAAmB;AAC1D,SAASC,IAAI,QAAQ,yBAAyB;AAC9C,SAASC,cAAc,QAAQ,uBAAuB;AACtD,SAASC,iBAAiB,QAAQ,0BAA0B;AAC5D,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,SACIC,yBAAyB,EACzBC,iBAAiB,EACjBC,4BAA4B,EAC5BC,kBAAkB,EAClBC,uBAAuB,EACvBC,qBAAqB,QAClB,iBAAiB;AAKxB,OAAO,wBAAwB;AA4B/B,MAAMC,kBAAkB,GAAG,GAAGF,uBAAuB,IAAIV,cAAc,EAAE;AAEzEE,IAAI,CAACU,kBAAkB,CAAC;AAExB,MAAMC,eAAe,SAAS5B,KAAK,CAAC6B,aAAa,CAAe;EAO5DC,WAAWA,CAACC,KAAY,EAAE;IACtB,KAAK,CAACA,KAAK,CAAC;IAACC,eAAA,gBAPT;MAAEC,SAAS,EAAE;IAAM,CAAC;IAkB5B;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;IAPID,eAAA,qBAQa,CAACE,KAAuB,EAAEC,IAAY,EAAEC,QAAgB,GAAG,CAAC,CAAC,KAAK;MAC3E,MAAM;QAAEC;MAAe,CAAC,GAAG,IAAI,CAACN,KAAK;MACrC,MAAM;QAAEO;MAAO,CAAC,GAAGJ,KAAK;MACxB,MAAMK,YAAY,GAAGvB,sBAAsB,CAACsB,MAAM,CAAC;MACnD,IAAI,CAACE,QAAQ,CAAAC,aAAA;QACTP,KAAK,EAAEvB,QAAQ,CAAC+B,kCAAkC;QAClDT,SAAS,EAAE;MAAK,GACbG,QAAQ,CACd,CAAC;MACFC,OAAO,CAACH,KAAK,EAAEC,IAAI,EAAE;QACjBD,KAAK;QACL,CAACV,kBAAkB,GAAGe;MAC1B,CAAC,CAAC;IACN,CAAC;IAoCD;AACJ;AACA;AACA;AACA;AACA;IALIP,eAAA,mBAMYW,EAAU,IAAW;MAC7B,MAAM;QAAEC;MAAW,CAAC,GAAG,IAAI,CAACb,KAAK;MACjC,MAAM;QAAEc;MAAY,CAAC,GAAG,IAAI,CAACC,KAAK;MAClC,MAAMC,MAAM,GAAG,IAAI,CAACC,SAAS,CAACL,EAAE,CAAC;MAEjC,IAAI,CAACI,MAAM,IAAI,CAACF,IAAI,EAAE;QAClB;MACJ;MAEAD,GAAG,CAACK,cAAc,CAAC,KAAK,CAAC,CAACC,cAAc,CACpCL,IAAI,EACJE,MAAM,CAACI,QAAQ,EACf,MAAM,IAAI,CAACC,sBAAsB,CAACL,MAAM,CAAC,EACzC,IAAI,CAACM,UACT,CAAC;IACL,CAAC;IAED;AACJ;AACA;AACA;AACA;AACA;IALIrB,eAAA,8BAMuBe,MAAsB,IAAW;MACpD,MAAM;QAAEO,OAAO,GAAG;MAAU,CAAC,GAAG,IAAI,CAACR,KAAK;MAC1C,MAAMS,KAAK,GAAGD,OAAO,CAACE,KAAK,CAAC,CAAC,CAAC;MAC9BD,KAAK,CAACE,IAAI,CAACV,MAAM,CAAC;MAClB,IAAI,CAACP,QAAQ,CAAC;QAAEc,OAAO,EAAEC,KAAK;QAAEtB,SAAS,EAAE;MAAM,CAAC,CAAC;IACvD,CAAC;IAED;AACJ;AACA;AACA;AACA;AACA;IALID,eAAA,gBAMSmB,QAA0B,IAAK;MACpC,MAAM;QAAEP;MAAW,CAAC,GAAG,IAAI,CAACb,KAAK;MACjC,MAAM;QAAEc;MAAY,CAAC,GAAG,IAAI,CAACC,KAAK;MAElC,IAAI,CAACD,IAAI,EAAE;QACP;MACJ;MAEA,IAAI,CAACL,QAAQ,CAAC;QAAEP,SAAS,EAAE;MAAK,CAAC,CAAC;MAClCW,GAAG,CAACK,cAAc,CAAC,KAAK,CAAC,CAACS,cAAc,CAACb,IAAI,EAAEM,QAAQ,EAAE,IAAI,CAACQ,mBAAmB,EAAE,IAAI,CAACN,UAAU,CAAC;IACvG,CAAC;IA8BD;AACJ;AACA;AACA;AACA;AACA;AACA;IANIrB,eAAA,iBAOS,CAACW,EAAU,EAAEiB,GAAwB,KAAW;MACrD,MAAM;QAAEhB;MAAW,CAAC,GAAG,IAAI,CAACb,KAAK;MACjC,MAAM;QAAEc;MAAY,CAAC,GAAG,IAAI,CAACC,KAAK;MAClC,MAAMe,SAAS,GAAG,IAAI,CAACb,SAAS,CAACL,EAAE,CAAC;MAEpC,IAAI,CAACkB,SAAS,IAAI,CAAChB,IAAI,EAAE;QACrB;MACJ;MAEAD,GAAG,CAACK,cAAc,CAAC,KAAK,CAAC,CAACa,cAAc,CACpCjB,IAAI,EACJgB,SAAS,CAACV,QAAQ,EAClBS,GAAG,EACFG,SAAyB,IAAK;QAC3B,IAAI,CAACC,aAAa,CAACH,SAAS,EAAEE,SAAS,CAAC;MAC5C,CAAC,EACD,CAAC7B,KAAuB,EAAEC,IAAY,KAAK;QACvC,IAAI,CAAC8B,kBAAkB,CAACJ,SAAS,EAAE3B,KAAK,EAAEC,IAAI,CAAC;MACnD,CACJ,CAAC;IACL,CAAC;IAED;AACJ;AACA;AACA;AACA;AACA;AACA;IANIH,eAAA,yBAOiB,CAACW,EAAU,EAAEuB,OAAgB,KAAK;MAC/C,MAAML,SAAS,GAAG,IAAI,CAACb,SAAS,CAACL,EAAE,CAAC;MACpC,IAAI,CAACkB,SAAS,EAAE;QACZ;MACJ;MACA,MAAME,SAAS,GAAAtB,aAAA,CAAAA,aAAA,KAAQoB,SAAS;QAAEK;MAAO,EAAE,CAAC,CAAC;MAC7C,IAAI,CAACF,aAAa,CAACH,SAAS,EAAEE,SAAS,CAAC;IAC5C,CAAC;IAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;IAPI/B,eAAA,qCAQ6B,CAACmC,CAAmB,EAAEhC,IAAY,KAAK;MAChE,IAAI,CAACkB,UAAU,CAACc,CAAC,EAAEhC,IAAI,EAAE;QACrBmB,OAAO,EAAEc,SAAS;QAClBlC,KAAK,EAAEvB,QAAQ,CAAC0D,mCAAmC;QACnDC,SAAS,EAAEF;MACf,CAAC,CAAC;IACN,CAAC;IAED;AACJ;AACA;AACA;AACA;AACA;IALIpC,eAAA,uCAM+B,CAAC;MAC5BsB,OAAO;MACPgB;IAIJ,CAAC,KAAK;MACF,MAAM;QAAEC,mBAAmB;QAAEC;MAAgB,CAAC,GAAG,IAAI,CAACzC,KAAK;MAC3D,IAAI,CAACS,QAAQ,CAAC;QACVc,OAAO,EAAEA,OAAO,CAACE,KAAK,CAAC,CAAC,CAAC;QAAE;QAC3BtB,KAAK,EAAEkC,SAAS;QAChBnC,SAAS,EAAE,KAAK;QAChBqC,SAAS,EAAExD,kBAAkB,CAACwD,SAAS,EAAEC,mBAAmB,EAAEC,eAAe;MACjF,CAAC,CAAC;IACN,CAAC;IAwBD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;IAPIxC,eAAA,iCAQyB,CAACmC,CAAmB,EAAEhC,IAAY,KAAK;MAC5D,IAAI,CAACkB,UAAU,CAACc,CAAC,EAAEhC,IAAI,EAAE;QAAED,KAAK,EAAEvB,QAAQ,CAAC8D,+BAA+B;QAAE5B,IAAI,EAAEuB;MAAU,CAAC,CAAC;IAClG,CAAC;IAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IATIpC,eAAA,mCAU4Ba,IAAa,IAAK;MAC1C,MAAM;QAAEA,IAAI,EAAE6B;MAAmB,CAAC,GAAG,IAAI,CAAC5B,KAAK;MAC/C,MAAM6B,gBAAgB,GAAGzE,OAAO,CAACwE,WAAW,EAAEnD,4BAA4B,EAAE,KAAK,CAAC;MAClF,MAAMqD,YAAY,GAAG1E,OAAO,CAAC2C,IAAI,EAAEtB,4BAA4B,EAAE,KAAK,CAAC;MACvE,MAAMsD,mBAAmB,GAAG,CAACH,WAAW,IAAIC,gBAAgB,KAAKC,YAAY;MAC7E,MAAME,QAAQ,GAAGD,mBAAmB,GAAG,IAAI,CAACE,aAAa,GAAG5E,IAAI;MAChE,IAAI,CAACqC,QAAQ,CAAC;QAAEK;MAAK,CAAC,EAAEiC,QAAQ,CAAC;IACrC,CAAC;IA3RG,MAAM;MAAEE;IAAO,CAAC,GAAG,IAAI,CAACjD,KAAK;IAC7BiD,MAAM,CAACC,aAAa,CAAC;MACjBC,WAAW,EAAEvD;IACjB,CAAC,CAAC;EACN;EAEAwD,iBAAiBA,CAAA,EAAG;IAChB,IAAI,CAACC,SAAS,CAAC,CAAC;EACpB;EAyBA;AACJ;AACA;AACA;AACA;EACIC,OAAOA,CAAA,EAAY;IACf,MAAM;MAAExC;IAAY,CAAC,GAAG,IAAI,CAACC,KAAK;IAClC,OAAO5C,OAAO,CAAC2C,IAAI,EAAEtB,4BAA4B,EAAE,KAAK,CAAC;EAC7D;;EAEA;AACJ;AACA;AACA;AACA;AACA;EACIyB,SAASA,CAACL,EAAU,EAAmB;IACnC,MAAM;MAAEW,OAAO,GAAG;IAAU,CAAC,GAAG,IAAI,CAACR,KAAK;IAC1C,OAAOQ,OAAO,CAACgC,IAAI,CAAC,CAAC;MAAEC;IAAS,CAAC,KAAKA,QAAQ,CAAC5C,EAAE,KAAKA,EAAE,CAAC;EAC7D;;EAEA;AACJ;AACA;AACA;AACA;AACA;EACIS,sBAAsBA,CAACL,MAAsB,EAAQ;IACjD,MAAM;MAAEO,OAAO,GAAG;IAAU,CAAC,GAAG,IAAI,CAACR,KAAK;IAC1C,MAAMS,KAAK,GAAGD,OAAO,CAACE,KAAK,CAAC,CAAC,CAAC;IAC9BD,KAAK,CAACiC,MAAM,CAAClC,OAAO,CAACmC,OAAO,CAAC1C,MAAM,CAAC,EAAE,CAAC,CAAC;IACxC,IAAI,CAACP,QAAQ,CAAC;MAAEc,OAAO,EAAEC;IAAM,CAAC,CAAC;EACrC;EAwDA;AACJ;AACA;AACA;AACA;AACA;AACA;EACIS,aAAaA,CAACH,SAAyB,EAAEE,SAAyB,EAAQ;IACtE,MAAM;MAAET,OAAO,GAAG;IAAU,CAAC,GAAG,IAAI,CAACR,KAAK;IAC1C,MAAMS,KAAK,GAAGD,OAAO,CAACE,KAAK,CAAC,CAAC,CAAC;IAC9BD,KAAK,CAACiC,MAAM,CAAClC,OAAO,CAACmC,OAAO,CAAC5B,SAAS,CAAC,EAAE,CAAC,EAAEE,SAAS,CAAC;IACtD,IAAI,CAACvB,QAAQ,CAAC;MAAEc,OAAO,EAAEC;IAAM,CAAC,CAAC;EACrC;;EAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACIU,kBAAkBA,CAACJ,SAAyB,EAAE3B,KAAuB,EAAEC,IAAY,EAAQ;IACvF,MAAMoB,KAAqB,GAAAd,aAAA,CAAAA,aAAA,KAAQoB,SAAS;MAAE6B,QAAQ,EAAE;IAAI,EAAE,CAAC,CAAC;IAChE,IAAI,CAAC1B,aAAa,CAACH,SAAS,EAAEN,KAAK,CAAC;IACpC,IAAI,CAACF,UAAU,CAACnB,KAAK,EAAEC,IAAI,CAAC;EAChC;EAqFA;AACJ;AACA;AACA;AACA;EACI4C,aAAaA,CAAA,EAAS;IAClB,MAAM;MAAEnC,GAAG;MAAE+C;IAAwB,CAAC,GAAG,IAAI,CAAC5D,KAAK;IACnD,MAAM;MAAEc;IAAY,CAAC,GAAG,IAAI,CAACC,KAAK;IAElC,IAAI,CAACD,IAAI,EAAE;MACP;IACJ;IAEAD,GAAG,CAACK,cAAc,CAAC,KAAK,CAAC,CAAC2C,WAAW,CACjC/C,IAAI,EACJ,IAAI,CAACgD,4BAA4B,EACjC,IAAI,CAACC,0BAA0B,EAC/BH,gBAAgB,EAChB;MAAEI,YAAY,EAAE;IAAK,CACzB,CAAC;EACL;EAiCA;AACJ;AACA;AACA;AACA;EACIX,SAASA,CAAA,EAAS;IACd,MAAM;MAAExC,GAAG;MAAEoD;IAAc,CAAC,GAAG,IAAI,CAACjE,KAAK;IACzCa,GAAG,CAACqD,UAAU,CAAC,CAAC,CAACC,OAAO,CAACF,MAAM,EAAE,IAAI,CAACG,wBAAwB,EAAE,IAAI,CAACC,sBAAsB,EAAE;MACzFC,MAAM,EAAE,CAAChF,yBAAyB,EAAEC,iBAAiB,CAAC;MACtDyE,YAAY,EAAE,IAAI,CAAE;IACxB,CAAC,CAAC;EACN;EAEAO,OAAOA,CAAA,EAAS;IACZ,IAAI,CAACvB,aAAa,CAAC,CAAC;EACxB;EAEAwB,MAAMA,CAAA,EAAG;IACL,MAAM;MAAEjD,OAAO;MAAET,IAAI;MAAEX,KAAK;MAAED,SAAS;MAAEqC;IAAiB,CAAC,GAAG,IAAI,CAACxB,KAAK;IACxE,MAAM;MAAE0D,SAAS;MAAEjC;IAA2B,CAAC,GAAG,IAAI,CAACxC,KAAK;IAC5D,MAAM0E,UAAU,GAAG,CAAC,CAAC5D,IAAI,IAAI,CAAC,CAACyB,SAAS,IAAI,CAAC,CAAChB,OAAO;IACrD,MAAMoD,oBAAoB,GAAG,CAACxE,KAAK,IAAI,CAACuE,UAAU;IAClD,MAAMpB,OAAO,GAAG,IAAI,CAACA,OAAO,CAAC,CAAC;IAC9B,MAAMsB,oBAAoB,GAAGF,UAAU,IAAIpB,OAAO;IAClD,MAAMuB,gBAAgB,GAAGH,UAAU,IAAMnD,OAAO,CAA+BuD,MAAM,KAAK,CAAC;IAE3F,oBACI7G,KAAA,CAAA8G,aAAA,CAAClG,cAAc;MACXmG,OAAO,EACHJ,oBAAoB,gBAChB3G,KAAA,CAAA8G,aAAA,CAACjG,gBAAgB;QACbmG,YAAY,EAAE1C,SAAS,IAAIA,SAAS,CAACuC,MAAM,KAAK,CAAE;QAClDI,cAAc,EAAE,KAAM;QACtBC,KAAK,EAAE,IAAI,CAACA;QACZ;QAAA;QACA5C,SAAS,EAAEA;QACX;QAAA;QACA6C,aAAa,EAAE7D,OAAO,CAAC8D,GAAG,CAACrE,MAAM,IAAIA,MAAM,CAACI,QAAQ;MAAE,CACzD,CAAC,GACF,IACP;MACDkE,SAAS,EAAC,cAAc;MACxBb,SAAS,EAAEA,SAAU;MACrBc,WAAW,EAAE5F,qBAAsB;MACnC6F,KAAK,eAAEvH,KAAA,CAAA8G,aAAA,CAAC1G,gBAAgB,EAAKO,QAAQ,CAAC6G,oBAAuB;IAAE,GAE9DtF,KAAK,iBACFlC,KAAA,CAAA8G,aAAA,CAACvG,WAAW;MAACgH,KAAK,eAAEvH,KAAA,CAAA8G,aAAA,CAAC1G,gBAAgB,EAAKO,QAAQ,CAACuB,KAAQ;IAAE,gBACzDlC,KAAA,CAAA8G,aAAA,CAAC1G,gBAAgB,EAAK8B,KAAQ,CACrB,CAChB,EACAwE,oBAAoB,iBAAI1G,KAAA,CAAA8G,aAAA,CAACrG,gBAAgB,MAAE,CAAC,EAC5CgG,UAAU,iBACPzG,KAAA,CAAA8G,aAAA,CAACpG,uBAAuB;MAAC2G,SAAS,EAAC,0BAA0B;MAACpF,SAAS,EAAEA;IAAU,GAC9E2E,gBAAgB,gBACb5G,KAAA,CAAA8G,aAAA,CAACxG,YAAY;MAACmH,MAAM,EAAEpC;IAAQ,CAAE,CAAC,gBAEjCrF,KAAA,CAAA8G,aAAA,CAACtG,SAAS;MACN8C,OAAO,EAAEA,OAAQ;MACjBoE,cAAc,EAAE,IAAI,CAACA,cAAe;MACpCC,QAAQ,EAAE,IAAI,CAACA,QAAS;MACxBC,MAAM,EAAE,IAAI,CAACA,MAAO;MACpBrD,mBAAmB,EAAEA;IAAoB,CAC5C,CAEgB,CAEjB,CAAC;EAEzB;AACJ;AAACvC,eAAA,CA5WKJ,eAAe,kBAGK;EAClB+D,gBAAgB,EAAE;AACtB,CAAC;AA0WL,SAAS/D,eAAe,IAAIiG,wBAAwB;AACpD,eAAe5H,IAAI,CAAC,CAACmB,UAAU,CAACK,uBAAuB,CAAC,EAAEN,iBAAiB,CAACM,uBAAuB,CAAC,EAAEP,cAAc,CAAC,CAAC,CAClHU,eACJ,CAAC","ignoreList":[]}