{"version":3,"file":"AnnotationThreadContent.js","names":["React","ActivityError","ActivityThread","AnnotationActivity","LoadingIndicator","AnnotationThreadContent","annotation","currentUser","error","getAvatarUrl","getMentionWithQuery","getUserProfileUrl","isLoading","mentionSelectorContacts","onAnnotationDelete","onAnnotationEdit","onAnnotationStatusChange","onReplyCreate","onReplyDelete","onReplyEdit","replies","createElement","Fragment","className","hasReplies","isAlwaysExpanded","isRepliesLoading","repliesTotalCount","length","isCurrentVersion","item","onDelete","onEdit","onStatusChange"],"sources":["../../../../../src/elements/content-sidebar/activity-feed/annotation-thread/AnnotationThreadContent.js"],"sourcesContent":["// @flow\nimport * as React from 'react';\nimport ActivityError from '../common/activity-error';\nimport ActivityThread from '../activity-feed/ActivityThread';\nimport AnnotationActivity from '../annotations';\nimport LoadingIndicator from '../../../../components/loading-indicator/LoadingIndicator';\n\nimport type {\n    Annotation,\n    AnnotationPermission,\n    BoxCommentPermission,\n    Comment,\n    FeedItemStatus,\n} from '../../../../common/types/feed';\nimport type { SelectorItems, User } from '../../../../common/types/core';\nimport type { GetProfileUrlCallback } from '../../../common/flowTypes';\nimport type { AnnotationThreadError } from './types';\n\nimport './AnnotationThreadContent.scss';\n\nimport type { OnAnnotationEdit, OnAnnotationStatusChange } from '../comment/types';\n\ntype Props = {\n    annotation?: Annotation,\n    currentUser: User,\n    error?: AnnotationThreadError,\n    getAvatarUrl: string => Promise<?string>,\n    getMentionWithQuery: (searchStr: string) => void,\n    getUserProfileUrl?: GetProfileUrlCallback,\n    isLoading: boolean,\n    mentionSelectorContacts: SelectorItems<>,\n    onAnnotationDelete?: ({ id: string, permissions: AnnotationPermission }) => any,\n    onAnnotationEdit?: OnAnnotationEdit,\n    onAnnotationStatusChange: OnAnnotationStatusChange,\n    onReplyCreate?: (text: string) => void,\n    onReplyDelete?: ({ id: string, permissions: BoxCommentPermission }) => void,\n    onReplyEdit?: (\n        id: string,\n        text: string,\n        status?: FeedItemStatus,\n        hasMention?: boolean,\n        permissions: BoxCommentPermission,\n        onSuccess: ?Function,\n        onError: ?Function,\n    ) => void,\n    replies?: Array<Comment>,\n};\n\nconst AnnotationThreadContent = ({\n    annotation,\n    currentUser,\n    error,\n    getAvatarUrl,\n    getMentionWithQuery,\n    getUserProfileUrl,\n    isLoading,\n    mentionSelectorContacts,\n    onAnnotationDelete,\n    onAnnotationEdit,\n    onAnnotationStatusChange,\n    onReplyCreate,\n    onReplyDelete,\n    onReplyEdit,\n    replies = [],\n}: Props) => {\n    return (\n        <>\n            {error && <ActivityError {...error} />}\n            {isLoading && (\n                <div className=\"AnnotationThreadContent-loading\" data-testid=\"annotation-loading\">\n                    <LoadingIndicator />\n                </div>\n            )}\n            {annotation && (\n                <ActivityThread\n                    getAvatarUrl={getAvatarUrl}\n                    getMentionWithQuery={getMentionWithQuery}\n                    getUserProfileUrl={getUserProfileUrl}\n                    hasReplies\n                    isAlwaysExpanded\n                    isRepliesLoading={isLoading}\n                    mentionSelectorContacts={mentionSelectorContacts}\n                    onReplyCreate={onReplyCreate}\n                    onReplyDelete={onReplyDelete}\n                    onReplyEdit={onReplyEdit}\n                    replies={replies}\n                    repliesTotalCount={replies.length}\n                >\n                    <AnnotationActivity\n                        currentUser={currentUser}\n                        getAvatarUrl={getAvatarUrl}\n                        getMentionWithQuery={getMentionWithQuery}\n                        getUserProfileUrl={getUserProfileUrl}\n                        isCurrentVersion\n                        item={annotation}\n                        mentionSelectorContacts={mentionSelectorContacts}\n                        onDelete={onAnnotationDelete}\n                        onEdit={onAnnotationEdit}\n                        onStatusChange={onAnnotationStatusChange}\n                    />\n                </ActivityThread>\n            )}\n        </>\n    );\n};\n\nexport default AnnotationThreadContent;\n"],"mappings":"AACA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,aAAa,MAAM,0BAA0B;AACpD,OAAOC,cAAc,MAAM,iCAAiC;AAC5D,OAAOC,kBAAkB,MAAM,gBAAgB;AAC/C,OAAOC,gBAAgB,MAAM,2DAA2D;AAaxF,OAAO,gCAAgC;AA8BvC,MAAMC,uBAAuB,GAAGA,CAAC;EAC7BC,UAAU;EACVC,WAAW;EACXC,KAAK;EACLC,YAAY;EACZC,mBAAmB;EACnBC,iBAAiB;EACjBC,SAAS;EACTC,uBAAuB;EACvBC,kBAAkB;EAClBC,gBAAgB;EAChBC,wBAAwB;EACxBC,aAAa;EACbC,aAAa;EACbC,WAAW;EACXC,OAAO,GAAG;AACP,CAAC,KAAK;EACT,oBACIpB,KAAA,CAAAqB,aAAA,CAAArB,KAAA,CAAAsB,QAAA,QACKd,KAAK,iBAAIR,KAAA,CAAAqB,aAAA,CAACpB,aAAa,EAAKO,KAAQ,CAAC,EACrCI,SAAS,iBACNZ,KAAA,CAAAqB,aAAA;IAAKE,SAAS,EAAC,iCAAiC;IAAC,eAAY;EAAoB,gBAC7EvB,KAAA,CAAAqB,aAAA,CAACjB,gBAAgB,MAAE,CAClB,CACR,EACAE,UAAU,iBACPN,KAAA,CAAAqB,aAAA,CAACnB,cAAc;IACXO,YAAY,EAAEA,YAAa;IAC3BC,mBAAmB,EAAEA,mBAAoB;IACzCC,iBAAiB,EAAEA,iBAAkB;IACrCa,UAAU;IACVC,gBAAgB;IAChBC,gBAAgB,EAAEd,SAAU;IAC5BC,uBAAuB,EAAEA,uBAAwB;IACjDI,aAAa,EAAEA,aAAc;IAC7BC,aAAa,EAAEA,aAAc;IAC7BC,WAAW,EAAEA,WAAY;IACzBC,OAAO,EAAEA,OAAQ;IACjBO,iBAAiB,EAAEP,OAAO,CAACQ;EAAO,gBAElC5B,KAAA,CAAAqB,aAAA,CAAClB,kBAAkB;IACfI,WAAW,EAAEA,WAAY;IACzBE,YAAY,EAAEA,YAAa;IAC3BC,mBAAmB,EAAEA,mBAAoB;IACzCC,iBAAiB,EAAEA,iBAAkB;IACrCkB,gBAAgB;IAChBC,IAAI,EAAExB,UAAW;IACjBO,uBAAuB,EAAEA,uBAAwB;IACjDkB,QAAQ,EAAEjB,kBAAmB;IAC7BkB,MAAM,EAAEjB,gBAAiB;IACzBkB,cAAc,EAAEjB;EAAyB,CAC5C,CACW,CAEtB,CAAC;AAEX,CAAC;AAED,eAAeX,uBAAuB","ignoreList":[]}