{"version":3,"file":"useAnnotationAPI.js","names":["API","useAnnotationAPI","api","errorCallback","file","id","fileId","file_version","fileVersionId","permissions","filePermissions","handleCreate","payload","successCallback","getAnnotationsAPI","createAnnotation","handleFetch","getAnnotation","handleDelete","deleteAnnotation","handleEdit","text","updateAnnotation","message","handleStatusChange","status"],"sources":["../../../../../src/elements/content-sidebar/activity-feed/annotation-thread/useAnnotationAPI.js"],"sourcesContent":["// @flow\nimport API from '../../../../api/APIFactory';\n\nimport type { Annotation, AnnotationPermission, NewAnnotation } from '../../../../common/types/annotations';\nimport type { BoxItem } from '../../../../common/types/core';\nimport type { FeedItemStatus } from '../../../../common/types/feed';\nimport type { ElementOrigin, ElementsXhrError } from '../../../../common/types/api';\n\ntype Props = {\n    api: API,\n    errorCallback: (\n        error: ElementsXhrError | Error,\n        code: string,\n        contextInfo?: Object,\n        origin?: ElementOrigin,\n    ) => void,\n    file: BoxItem,\n};\n\ntype UseAnnotationAPI = {\n    handleCreate: ({ payload: NewAnnotation, successCallback: (annotation: Annotation) => void }) => void,\n    handleDelete: ({ id: string, permissions: AnnotationPermission, successCallback: () => void }) => void,\n    handleEdit: ({\n        id: string,\n        permissions: AnnotationPermission,\n        successCallback: (annotation: Annotation) => void,\n        text: string,\n    }) => void,\n    handleFetch: ({ id: string, successCallback: (annotation: Annotation) => void }) => void,\n    handleStatusChange: ({\n        id: string,\n        permissions: AnnotationPermission,\n        status: FeedItemStatus,\n        successCallback: (annotation: Annotation) => void,\n    }) => void,\n};\n\nconst useAnnotationAPI = ({\n    api,\n    errorCallback,\n    file: { id: fileId, file_version: { id: fileVersionId } = {}, permissions: filePermissions = {} },\n}: Props): UseAnnotationAPI => {\n    const handleCreate = ({\n        payload,\n        successCallback,\n    }: {\n        payload: NewAnnotation,\n        successCallback: (annotation: Annotation) => void,\n    }): void => {\n        api.getAnnotationsAPI(false).createAnnotation(\n            fileId,\n            fileVersionId,\n            payload,\n            filePermissions,\n            successCallback,\n            errorCallback,\n        );\n    };\n\n    const handleFetch = ({\n        id,\n        successCallback,\n    }: {\n        id: string,\n        successCallback: (annotation: Annotation) => void,\n    }): void => {\n        api.getAnnotationsAPI(false).getAnnotation(\n            fileId,\n            id,\n            filePermissions,\n            successCallback,\n            errorCallback,\n            true, // to fetch aanotation with its replies\n        );\n    };\n\n    const handleDelete = ({\n        id,\n        permissions,\n        successCallback,\n    }: {\n        id: string,\n        permissions: AnnotationPermission,\n        successCallback: () => void,\n    }): void => {\n        api.getAnnotationsAPI(false).deleteAnnotation(fileId, id, permissions, successCallback, errorCallback);\n    };\n\n    const handleEdit = ({\n        id,\n        text,\n        permissions,\n        successCallback,\n    }: {\n        id: string,\n        permissions: AnnotationPermission,\n        successCallback: (annotation: Annotation) => void,\n        text: string,\n    }): void => {\n        api.getAnnotationsAPI(false).updateAnnotation(\n            fileId,\n            id,\n            permissions,\n            { message: text },\n            successCallback,\n            errorCallback,\n        );\n    };\n\n    const handleStatusChange = ({\n        id,\n        status,\n        permissions,\n        successCallback,\n    }: {\n        id: string,\n        permissions: AnnotationPermission,\n        status: FeedItemStatus,\n        successCallback: (annotation: Annotation) => void,\n    }): void => {\n        api.getAnnotationsAPI(false).updateAnnotation(\n            fileId,\n            id,\n            permissions,\n            { status },\n            successCallback,\n            errorCallback,\n        );\n    };\n\n    return {\n        handleCreate,\n        handleFetch,\n        handleDelete,\n        handleEdit,\n        handleStatusChange,\n    };\n};\n\nexport default useAnnotationAPI;\n"],"mappings":"AACA,OAAOA,GAAG,MAAM,4BAA4B;AAoC5C,MAAMC,gBAAgB,GAAGA,CAAC;EACtBC,GAAG;EACHC,aAAa;EACbC,IAAI,EAAE;IAAEC,EAAE,EAAEC,MAAM;IAAEC,YAAY,EAAE;MAAEF,EAAE,EAAEG;IAAc,CAAC,GAAG,CAAC,CAAC;IAAEC,WAAW,EAAEC,eAAe,GAAG,CAAC;EAAE;AAC7F,CAAC,KAAuB;EAC3B,MAAMC,YAAY,GAAGA,CAAC;IAClBC,OAAO;IACPC;EAIJ,CAAC,KAAW;IACRX,GAAG,CAACY,iBAAiB,CAAC,KAAK,CAAC,CAACC,gBAAgB,CACzCT,MAAM,EACNE,aAAa,EACbI,OAAO,EACPF,eAAe,EACfG,eAAe,EACfV,aACJ,CAAC;EACL,CAAC;EAED,MAAMa,WAAW,GAAGA,CAAC;IACjBX,EAAE;IACFQ;EAIJ,CAAC,KAAW;IACRX,GAAG,CAACY,iBAAiB,CAAC,KAAK,CAAC,CAACG,aAAa,CACtCX,MAAM,EACND,EAAE,EACFK,eAAe,EACfG,eAAe,EACfV,aAAa,EACb,IAAI,CAAE;IACV,CAAC;EACL,CAAC;EAED,MAAMe,YAAY,GAAGA,CAAC;IAClBb,EAAE;IACFI,WAAW;IACXI;EAKJ,CAAC,KAAW;IACRX,GAAG,CAACY,iBAAiB,CAAC,KAAK,CAAC,CAACK,gBAAgB,CAACb,MAAM,EAAED,EAAE,EAAEI,WAAW,EAAEI,eAAe,EAAEV,aAAa,CAAC;EAC1G,CAAC;EAED,MAAMiB,UAAU,GAAGA,CAAC;IAChBf,EAAE;IACFgB,IAAI;IACJZ,WAAW;IACXI;EAMJ,CAAC,KAAW;IACRX,GAAG,CAACY,iBAAiB,CAAC,KAAK,CAAC,CAACQ,gBAAgB,CACzChB,MAAM,EACND,EAAE,EACFI,WAAW,EACX;MAAEc,OAAO,EAAEF;IAAK,CAAC,EACjBR,eAAe,EACfV,aACJ,CAAC;EACL,CAAC;EAED,MAAMqB,kBAAkB,GAAGA,CAAC;IACxBnB,EAAE;IACFoB,MAAM;IACNhB,WAAW;IACXI;EAMJ,CAAC,KAAW;IACRX,GAAG,CAACY,iBAAiB,CAAC,KAAK,CAAC,CAACQ,gBAAgB,CACzChB,MAAM,EACND,EAAE,EACFI,WAAW,EACX;MAAEgB;IAAO,CAAC,EACVZ,eAAe,EACfV,aACJ,CAAC;EACL,CAAC;EAED,OAAO;IACHQ,YAAY;IACZK,WAAW;IACXE,YAAY;IACZE,UAAU;IACVI;EACJ,CAAC;AACL,CAAC;AAED,eAAevB,gBAAgB","ignoreList":[]}