{"version":3,"file":"BaseComment.js","names":["React","classNames","noop","BaseCommentMenuWrapper","BaseCommentInfo","COMMENT_STATUS_RESOLVED","ActivityError","ActivityMessage","CommentForm","CreateReply","LoadingIndicator","RepliesToggle","ActivityStatus","BaseComment","annotationActivityLink","created_at","created_by","currentUser","error","file","getAvatarUrl","getMentionWithQuery","getUserProfileUrl","hasReplies","id","isDisabled","isPending","isRepliesLoading","mentionSelectorContacts","modified_at","onAnnotationEdit","onCommentEdit","onDelete","onHideReplies","onReplyCreate","onReplyDelete","onSelect","onShowReplies","onStatusChange","permissions","replies","repliesTotalCount","status","tagged_message","translatedTaggedMessage","translations","isEditing","setIsEditing","useState","isInputOpen","setIsInputOpen","commentFormFocusHandler","commentFormCancelHandler","commentFormSubmitHandler","handleMessageUpdate","messageID","text","hasMention","onEdit","canDelete","can_delete","canEdit","can_edit","canResolve","can_resolve","isEdited","undefined","isMenuVisible","isResolved","commentProps","createElement","className","entityId","isOpen","onCancel","onFocus","shouldFocusOnOpen","updateComment","user","_extends","translationFailed","Replies","isParentPending","onReplySelect","showReplyForm","setShowReplyForm","getReplyPermissions","reply","handleNewReplyButton","handleCancelNewReply","handleSubmitNewReply","replyCreate","index","repliesShownCount","length","map","type","key","onClick","onSubmit"],"sources":["../../../../../src/elements/content-sidebar/activity-feed/comment/BaseComment.js"],"sourcesContent":["// @flow\nimport * as React from 'react';\n\nimport classNames from 'classnames';\nimport noop from 'lodash/noop';\n\nimport { BaseCommentMenuWrapper } from './components/BaseCommentMenuWrapper';\nimport { BaseCommentInfo } from './components/BaseCommentInfo';\nimport { COMMENT_STATUS_RESOLVED } from '../../../../constants';\n\nimport ActivityError from '../common/activity-error';\nimport ActivityMessage from '../common/activity-message';\nimport CommentForm from '../comment-form';\nimport CreateReply from './CreateReply';\nimport LoadingIndicator from '../../../../components/loading-indicator';\nimport RepliesToggle from './RepliesToggle';\n\nimport type {\n    ActionItemError,\n    BoxCommentPermission,\n    FeedItemStatus,\n    Comment as CommentType,\n} from '../../../../common/types/feed';\nimport type { GetAvatarUrlCallback, GetProfileUrlCallback } from '../../../common/flowTypes';\nimport type { OnAnnotationEdit, OnCommentEdit, OnAnnotationStatusChange, OnCommentStatusChange } from './types';\nimport type { SelectorItems, User, BoxItem } from '../../../../common/types/core';\nimport type { Translations } from '../../flowTypes';\n\nimport './BaseComment.scss';\nimport './Replies.scss';\nimport './Comment.scss';\nimport ActivityStatus from '../common/activity-status';\n\nexport type BaseCommentProps = {\n    annotationActivityLink?: React.Element<any>,\n    created_at: string | number,\n    created_by: User,\n    currentUser?: User,\n    error?: ActionItemError,\n    file?: BoxItem,\n    getAvatarUrl: GetAvatarUrlCallback,\n    getMentionWithQuery?: Function,\n    getUserProfileUrl?: GetProfileUrlCallback,\n    hasReplies?: boolean,\n    id: string,\n    isDisabled?: boolean,\n    isPending?: boolean,\n    isRepliesLoading?: boolean,\n    mentionSelectorContacts?: SelectorItems<>,\n    modified_at?: string | number,\n    onAnnotationEdit?: OnAnnotationEdit,\n    onCommentEdit: OnCommentEdit,\n    onDelete: ({ id: string, permissions?: BoxCommentPermission }) => any,\n    onHideReplies?: (shownReplies: CommentType[]) => void,\n    onReplyCreate?: (reply: string) => void,\n    onReplyDelete?: ({ id: string, permissions?: BoxCommentPermission }) => void,\n    onSelect: (isSelected: boolean) => void,\n    onShowReplies?: () => void,\n    onStatusChange?: OnAnnotationStatusChange | OnCommentStatusChange,\n    permissions: BoxCommentPermission,\n    replies?: CommentType[],\n    repliesTotalCount?: number,\n    status?: FeedItemStatus,\n    tagged_message: string,\n    translatedTaggedMessage?: string,\n    translations?: Translations,\n};\n\nexport const BaseComment = ({\n    annotationActivityLink,\n    created_at,\n    created_by,\n    currentUser,\n    error,\n    file,\n    getAvatarUrl,\n    getMentionWithQuery,\n    getUserProfileUrl,\n    hasReplies = false,\n    id,\n    isDisabled,\n    isPending = false,\n    isRepliesLoading = false,\n    mentionSelectorContacts,\n    modified_at,\n    onAnnotationEdit,\n    onCommentEdit,\n    onDelete,\n    onHideReplies,\n    onReplyCreate,\n    onReplyDelete,\n    onSelect,\n    onShowReplies,\n    onStatusChange,\n    permissions = {},\n    replies = [],\n    repliesTotalCount = 0,\n    status,\n    tagged_message = '',\n    translatedTaggedMessage,\n    translations,\n}: BaseCommentProps) => {\n    const [isEditing, setIsEditing] = React.useState<boolean>(false);\n    const [isInputOpen, setIsInputOpen] = React.useState<boolean>(false);\n\n    const commentFormFocusHandler = (): void => {\n        setIsInputOpen(true);\n        onSelect(true);\n    };\n\n    const commentFormCancelHandler = (): void => {\n        setIsInputOpen(false);\n        setIsEditing(false);\n        onSelect(false);\n    };\n\n    const commentFormSubmitHandler = (): void => {\n        setIsInputOpen(false);\n        setIsEditing(false);\n        onSelect(false);\n    };\n\n    const handleMessageUpdate = ({ id: messageID, text, hasMention }) => {\n        // Since we have to pass onCommentEdit through annotations (to Replies), onAnnotationEdit essentially overrides onCommentEdit\n        if (onAnnotationEdit) {\n            onAnnotationEdit({ id: messageID, text, permissions });\n        } else if (onCommentEdit) {\n            onCommentEdit({\n                id: messageID,\n                text,\n                hasMention,\n                permissions,\n            });\n        }\n        commentFormSubmitHandler();\n    };\n\n    // Since we have to pass onCommentEdit through annotations (to Replies), onAnnotationEdit essentially overrides onCommentEdit\n    const onEdit = onAnnotationEdit ?? onCommentEdit;\n\n    const canDelete = !!permissions.can_delete;\n    const canEdit = onEdit !== noop && !!permissions.can_edit;\n    const canResolve = onEdit !== noop && !!permissions.can_resolve;\n\n    const isEdited = modified_at !== undefined && modified_at !== created_at;\n    const isMenuVisible = (canDelete || canEdit || canResolve) && !isPending;\n    const isResolved = status === COMMENT_STATUS_RESOLVED;\n    const commentProps = {\n        currentUser,\n        getUserProfileUrl,\n        getAvatarUrl,\n        getMentionWithQuery,\n        mentionSelectorContacts,\n        translations,\n    };\n\n    return (\n        // TODO: Change className to bcs-Comment once FF is removed\n        <div className=\"bcs-BaseComment\">\n            <div\n                className={classNames('bcs-Comment-media', {\n                    'bcs-is-pending': isPending || error,\n                })}\n            >\n                <div className=\"bcs-BaseComment-header\">\n                    <BaseCommentInfo\n                        annotationActivityLink={annotationActivityLink}\n                        created_at={created_at}\n                        created_by={created_by}\n                        getAvatarUrl={getAvatarUrl}\n                        getUserProfileUrl={getUserProfileUrl}\n                        status={status}\n                    />\n                    {isMenuVisible && (\n                        <BaseCommentMenuWrapper\n                            canDelete={canDelete}\n                            canEdit={canEdit}\n                            canResolve={canResolve}\n                            id={id}\n                            isEditing={isEditing}\n                            isInputOpen={isInputOpen}\n                            isResolved={isResolved}\n                            onDelete={onDelete}\n                            onSelect={onSelect}\n                            onStatusChange={onStatusChange}\n                            permissions={permissions}\n                            setIsEditing={setIsEditing}\n                            setIsInputOpen={setIsInputOpen}\n                        />\n                    )}\n                </div>\n                <ActivityStatus status={status} />\n                <div className=\"bcs-BaseComment-content\">\n                    {isEditing ? (\n                        <CommentForm\n                            className={classNames('bcs-Comment-editor', {\n                                'bcs-is-disabled': isDisabled,\n                            })}\n                            entityId={id}\n                            file={file}\n                            getAvatarUrl={getAvatarUrl}\n                            getMentionWithQuery={getMentionWithQuery}\n                            isDisabled={isDisabled}\n                            isEditing={isEditing}\n                            isOpen={isInputOpen}\n                            mentionSelectorContacts={mentionSelectorContacts}\n                            onCancel={commentFormCancelHandler}\n                            onFocus={commentFormFocusHandler}\n                            shouldFocusOnOpen\n                            tagged_message={tagged_message}\n                            updateComment={handleMessageUpdate}\n                            // $FlowFixMe\n                            user={currentUser}\n                        />\n                    ) : (\n                        <ActivityMessage\n                            id={id}\n                            isEdited={isEdited && !isResolved}\n                            tagged_message={tagged_message}\n                            translatedTaggedMessage={translatedTaggedMessage}\n                            {...translations}\n                            translationFailed={error ? true : null}\n                            getUserProfileUrl={getUserProfileUrl}\n                        />\n                    )}\n                </div>\n            </div>\n            {/* $FlowFixMe */}\n            {error ? <ActivityError {...error} /> : null}\n            {hasReplies && (\n                <Replies\n                    {...commentProps}\n                    isParentPending={isPending}\n                    isRepliesLoading={isRepliesLoading}\n                    onCommentEdit={onCommentEdit}\n                    onHideReplies={onHideReplies}\n                    onReplyCreate={onReplyCreate}\n                    onReplyDelete={onReplyDelete}\n                    onReplySelect={onSelect}\n                    onShowReplies={onShowReplies}\n                    replies={replies}\n                    repliesTotalCount={repliesTotalCount}\n                />\n            )}\n        </div>\n    );\n};\n\n// Added Replies to Comment file to avoid circular dependency warning\ntype RepliesProps = {\n    currentUser?: User,\n    getAvatarUrl: GetAvatarUrlCallback,\n    getMentionWithQuery?: (searchStr: string) => void,\n    getUserProfileUrl?: GetProfileUrlCallback,\n    isParentPending?: boolean,\n    isRepliesLoading?: boolean,\n    mentionSelectorContacts?: SelectorItems<>,\n    onCommentEdit: OnCommentEdit,\n    onHideReplies?: (shownReplies: CommentType[]) => void,\n    onReplyCreate?: (reply: string) => void,\n    onReplyDelete?: ({ id: string, permissions?: BoxCommentPermission }) => void,\n    onReplySelect?: (isSelected: boolean) => void,\n    onShowReplies?: () => void,\n    replies: CommentType[],\n    repliesTotalCount?: number,\n    translations?: Translations,\n};\n\nexport const Replies = ({\n    currentUser,\n    getAvatarUrl,\n    getMentionWithQuery,\n    getUserProfileUrl,\n    isParentPending = false,\n    isRepliesLoading = false,\n    mentionSelectorContacts,\n    onCommentEdit,\n    onReplyCreate,\n    onReplyDelete,\n    onReplySelect = noop,\n    onShowReplies,\n    onHideReplies,\n    replies,\n    repliesTotalCount = 0,\n    translations,\n}: RepliesProps) => {\n    const [showReplyForm, setShowReplyForm] = React.useState(false);\n    const getReplyPermissions = (reply: CommentType): BoxCommentPermission => {\n        const { permissions: { can_delete = false, can_edit = false, can_resolve = false } = {} } = reply;\n        return {\n            can_delete,\n            can_edit,\n            can_resolve,\n        };\n    };\n\n    const handleNewReplyButton = () => {\n        setShowReplyForm(true);\n        onReplySelect(true);\n    };\n\n    const handleCancelNewReply = () => {\n        setShowReplyForm(false);\n        onReplySelect(false);\n    };\n\n    const handleSubmitNewReply = (reply: string, replyCreate: (reply: string) => void) => {\n        setShowReplyForm(false);\n        replyCreate(reply);\n    };\n\n    return (\n        <div className=\"bcs-Replies\">\n            {!!onShowReplies && !!onHideReplies && (\n                <RepliesToggle\n                    onHideReplies={index => onHideReplies([replies[index]])}\n                    onShowReplies={onShowReplies}\n                    repliesShownCount={replies.length}\n                    repliesTotalCount={repliesTotalCount}\n                />\n            )}\n            <div className=\"bcs-Replies-content\">\n                {isRepliesLoading && (\n                    <div className=\"bcs-Replies-loading\" data-testid=\"replies-loading\">\n                        <LoadingIndicator />\n                    </div>\n                )}\n                <ol className=\"bcs-Replies-list\">\n                    {replies.map(reply => {\n                        const { id, type } = reply;\n\n                        return (\n                            <li key={`${type}${id}`}>\n                                <BaseComment\n                                    {...reply}\n                                    currentUser={currentUser}\n                                    getAvatarUrl={getAvatarUrl}\n                                    getMentionWithQuery={getMentionWithQuery}\n                                    getUserProfileUrl={getUserProfileUrl}\n                                    isPending={isParentPending || reply.isPending}\n                                    mentionSelectorContacts={mentionSelectorContacts}\n                                    onCommentEdit={onCommentEdit}\n                                    onSelect={onReplySelect}\n                                    onDelete={onReplyDelete}\n                                    permissions={getReplyPermissions(reply)}\n                                    translations={translations}\n                                />\n                            </li>\n                        );\n                    })}\n                </ol>\n            </div>\n            {!!onReplyCreate && (\n                <CreateReply\n                    getMentionWithQuery={getMentionWithQuery}\n                    isDisabled={isParentPending}\n                    mentionSelectorContacts={mentionSelectorContacts}\n                    onCancel={handleCancelNewReply}\n                    onClick={handleNewReplyButton}\n                    onFocus={() => onReplySelect(true)}\n                    onSubmit={reply => handleSubmitNewReply(reply, onReplyCreate)}\n                    showReplyForm={showReplyForm}\n                />\n            )}\n        </div>\n    );\n};\n"],"mappings":"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","ignoreList":[]}