{"version":3,"file":"Comment.js","names":["React","classNames","noop","FormattedMessage","TetherComponent","Checkmark16","Trash16","Pencil16","X16","Avatar","Media","MenuItem","ACTIVITY_TARGETS","DeleteConfirmation","ActivityTimestamp","UserLink","ActivityCard","ActivityError","ActivityMessage","ActivityStatus","CommentForm","COMMENT_STATUS_OPEN","COMMENT_STATUS_RESOLVED","PLACEHOLDER_USER","messages","Comment","Component","constructor","args","_defineProperty","isConfirmingDelete","isEditing","isInputOpen","isSelected","onSelect","props","id","onDelete","permissions","selectComment","setState","state","text","hasMention","onEdit","commentFormSubmitHandler","status","render","created_by","created_at","isPending","error","file","tagged_message","translatedTaggedMessage","translations","currentUser","isDisabled","getAvatarUrl","getUserProfileUrl","getMentionWithQuery","mentionSelectorContacts","modified_at","canDelete","can_delete","canEdit","can_edit","canResolve","can_resolve","createdAtTimestamp","Date","getTime","createdByUser","isEdited","undefined","isMenuVisible","isResolved","createElement","className","Figure","user","Body","attachment","constraints","to","targetAttachment","renderTarget","ref","Menu","dropdownProps","onMenuOpen","handleMenuOpen","onMenuClose","handleMenuClose","menuProps","COMMENT_OPTIONS","COMMENT_OPTIONS_EDIT","onClick","handleStatusUpdate","commentUnresolveMenuItem","commentResolveMenuItem","handleEditClick","commentEditMenuItem","COMMENT_OPTIONS_DELETE","handleDeleteClick","commentDeleteMenuItem","renderElement","style","display","isOpen","message","commentDeletePrompt","onDeleteCancel","handleDeleteCancel","onDeleteConfirm","handleDeleteConfirm","PROFILE","name","date","updateComment","handleMessageUpdate","onCancel","commentFormCancelHandler","onFocus","commentFormFocusHandler","entityId","_extends","translationFailed"],"sources":["../../../../../src/elements/content-sidebar/activity-feed/comment/Comment.js"],"sourcesContent":["// @flow\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport noop from 'lodash/noop';\nimport { FormattedMessage } from 'react-intl';\nimport TetherComponent from 'react-tether';\nimport Checkmark16 from '../../../../icon/line/Checkmark16';\nimport Trash16 from '../../../../icon/line/Trash16';\nimport Pencil16 from '../../../../icon/line/Pencil16';\nimport X16 from '../../../../icon/fill/X16';\nimport Avatar from '../Avatar';\nimport Media from '../../../../components/media';\nimport { MenuItem } from '../../../../components/menu';\nimport { ACTIVITY_TARGETS } from '../../../common/interactionTargets';\nimport DeleteConfirmation from '../common/delete-confirmation';\nimport ActivityTimestamp from '../common/activity-timestamp';\nimport UserLink from '../common/user-link';\nimport ActivityCard from '../ActivityCard';\nimport ActivityError from '../common/activity-error';\nimport ActivityMessage from '../common/activity-message';\nimport ActivityStatus from '../common/activity-status';\nimport CommentForm from '../comment-form';\nimport { COMMENT_STATUS_OPEN, COMMENT_STATUS_RESOLVED, PLACEHOLDER_USER } from '../../../../constants';\nimport messages from './messages';\nimport type { GetAvatarUrlCallback, GetProfileUrlCallback } from '../../../common/flowTypes';\nimport type { Translations } from '../../flowTypes';\nimport type { SelectorItems, User, BoxItem } from '../../../../common/types/core';\nimport type { ActionItemError, BoxCommentPermission, FeedItemStatus } from '../../../../common/types/feed';\nimport './Comment.scss';\nimport { type OnCommentEdit } from './types';\n\ntype Props = {\n    created_at: string | number,\n    created_by: User,\n    currentUser?: User,\n    error?: ActionItemError,\n    file?: BoxItem,\n    getAvatarUrl: GetAvatarUrlCallback,\n    getMentionWithQuery?: Function,\n    getUserProfileUrl?: GetProfileUrlCallback,\n    id: string,\n    isDisabled?: boolean,\n    isPending?: boolean,\n    mentionSelectorContacts?: SelectorItems<>,\n    modified_at?: string | number,\n    onDelete: ({ id: string, permissions?: BoxCommentPermission }) => any,\n    onEdit: OnCommentEdit,\n    onSelect: (isSelected: boolean) => void,\n    permissions: BoxCommentPermission,\n    status?: FeedItemStatus,\n    tagged_message: string,\n    translatedTaggedMessage?: string,\n    translations?: Translations,\n};\n\ntype State = {\n    isConfirmingDelete: boolean,\n    isEditing: boolean,\n    isInputOpen: boolean,\n};\n\nclass Comment extends React.Component<Props, State> {\n    static defaultProps = {\n        onDelete: noop,\n        onEdit: noop,\n        onSelect: noop,\n    };\n\n    state = {\n        isConfirmingDelete: false,\n        isEditing: false,\n        isInputOpen: false,\n    };\n\n    selectComment = (isSelected: boolean = true) => {\n        const { onSelect } = this.props;\n        onSelect(isSelected);\n    };\n\n    handleDeleteConfirm = (): void => {\n        const { id, onDelete, permissions } = this.props;\n        onDelete({ id, permissions });\n        this.selectComment(false);\n    };\n\n    handleDeleteCancel = (): void => {\n        this.setState({ isConfirmingDelete: false });\n        this.selectComment(false);\n    };\n\n    handleDeleteClick = () => {\n        this.setState({ isConfirmingDelete: true });\n        this.selectComment();\n    };\n\n    handleEditClick = (): void => {\n        this.setState({ isEditing: true, isInputOpen: true });\n        this.selectComment();\n    };\n\n    handleMenuClose = (): void => {\n        const { isConfirmingDelete, isEditing, isInputOpen } = this.state;\n\n        if (isConfirmingDelete || isEditing || isInputOpen) {\n            return;\n        }\n        this.selectComment(false);\n    };\n\n    handleMenuOpen = (): void => {\n        this.selectComment();\n    };\n\n    commentFormFocusHandler = (): void => {\n        this.setState({ isInputOpen: true });\n        this.selectComment();\n    };\n\n    commentFormCancelHandler = (): void => {\n        this.setState({ isInputOpen: false, isEditing: false });\n        this.selectComment(false);\n    };\n\n    commentFormSubmitHandler = (): void => {\n        this.setState({ isInputOpen: false, isEditing: false });\n        this.selectComment(false);\n    };\n\n    handleMessageUpdate = ({ id, text, hasMention }: { hasMention: boolean, id: string, text: string }): void => {\n        const { onEdit, permissions } = this.props;\n        onEdit({ id, text, hasMention, permissions });\n        this.commentFormSubmitHandler();\n    };\n\n    handleStatusUpdate = (status: FeedItemStatus): void => {\n        const { id, onEdit, permissions } = this.props;\n        onEdit({ id, status, hasMention: false, permissions });\n    };\n\n    render(): React.Node {\n        const {\n            created_by,\n            created_at,\n            permissions = {},\n            id,\n            isPending,\n            error,\n            file,\n            tagged_message = '',\n            translatedTaggedMessage,\n            translations,\n            currentUser,\n            isDisabled,\n            getAvatarUrl,\n            getUserProfileUrl,\n            getMentionWithQuery,\n            mentionSelectorContacts,\n            modified_at,\n            onEdit,\n            status,\n        } = this.props;\n        const { isConfirmingDelete, isEditing, isInputOpen } = this.state;\n        const canDelete = permissions.can_delete;\n        const canEdit = onEdit !== noop && permissions.can_edit;\n        const canResolve = onEdit !== noop && permissions.can_resolve;\n        const createdAtTimestamp = new Date(created_at).getTime();\n        const createdByUser = created_by || PLACEHOLDER_USER;\n        const isEdited = modified_at !== undefined && modified_at !== created_at;\n        const isMenuVisible = (canDelete || canEdit || canResolve) && !isPending;\n        const isResolved = status === COMMENT_STATUS_RESOLVED;\n\n        return (\n            <ActivityCard className=\"bcs-Comment\">\n                <Media\n                    className={classNames('bcs-Comment-media', {\n                        'bcs-is-pending': isPending || error,\n                    })}\n                >\n                    <Media.Figure>\n                        <Avatar getAvatarUrl={getAvatarUrl} user={createdByUser} />\n                    </Media.Figure>\n                    <Media.Body>\n                        {isMenuVisible && (\n                            <TetherComponent\n                                attachment=\"top right\"\n                                className=\"bcs-Comment-deleteConfirmationModal\"\n                                constraints={[{ to: 'scrollParent', attachment: 'together' }]}\n                                targetAttachment=\"bottom right\"\n                                renderTarget={ref => (\n                                    <div ref={ref}>\n                                        <Media.Menu\n                                            isDisabled={isConfirmingDelete}\n                                            data-testid=\"comment-actions-menu\"\n                                            dropdownProps={{\n                                                onMenuOpen: this.handleMenuOpen,\n                                                onMenuClose: this.handleMenuClose,\n                                            }}\n                                            menuProps={{\n                                                'data-resin-component': ACTIVITY_TARGETS.COMMENT_OPTIONS,\n                                            }}\n                                        >\n                                            {canResolve && isResolved && (\n                                                <MenuItem\n                                                    className=\"bcs-Comment-unresolveComment\"\n                                                    data-resin-target={ACTIVITY_TARGETS.COMMENT_OPTIONS_EDIT}\n                                                    data-testid=\"unresolve-comment\"\n                                                    onClick={() => this.handleStatusUpdate(COMMENT_STATUS_OPEN)}\n                                                >\n                                                    <X16 />\n                                                    <FormattedMessage {...messages.commentUnresolveMenuItem} />\n                                                </MenuItem>\n                                            )}\n                                            {canResolve && !isResolved && (\n                                                <MenuItem\n                                                    data-resin-target={ACTIVITY_TARGETS.COMMENT_OPTIONS_EDIT}\n                                                    data-testid=\"resolve-comment\"\n                                                    onClick={() => this.handleStatusUpdate(COMMENT_STATUS_RESOLVED)}\n                                                >\n                                                    <Checkmark16 />\n                                                    <FormattedMessage {...messages.commentResolveMenuItem} />\n                                                </MenuItem>\n                                            )}\n                                            {canEdit && (\n                                                <MenuItem\n                                                    data-resin-target={ACTIVITY_TARGETS.COMMENT_OPTIONS_EDIT}\n                                                    data-testid=\"edit-comment\"\n                                                    onClick={this.handleEditClick}\n                                                >\n                                                    <Pencil16 />\n                                                    <FormattedMessage {...messages.commentEditMenuItem} />\n                                                </MenuItem>\n                                            )}\n                                            {canDelete && (\n                                                <MenuItem\n                                                    data-resin-target={ACTIVITY_TARGETS.COMMENT_OPTIONS_DELETE}\n                                                    data-testid=\"delete-comment\"\n                                                    onClick={this.handleDeleteClick}\n                                                >\n                                                    <Trash16 />\n                                                    <FormattedMessage {...messages.commentDeleteMenuItem} />\n                                                </MenuItem>\n                                            )}\n                                        </Media.Menu>\n                                    </div>\n                                )}\n                                renderElement={ref => {\n                                    return isConfirmingDelete ? (\n                                        <div ref={ref} style={{ display: 'inline-block' }}>\n                                            <DeleteConfirmation\n                                                data-resin-component={ACTIVITY_TARGETS.COMMENT_OPTIONS}\n                                                isOpen={isConfirmingDelete}\n                                                message={messages.commentDeletePrompt}\n                                                onDeleteCancel={this.handleDeleteCancel}\n                                                onDeleteConfirm={this.handleDeleteConfirm}\n                                            />\n                                        </div>\n                                    ) : null;\n                                }}\n                            />\n                        )}\n                        <div className=\"bcs-Comment-headline\">\n                            <UserLink\n                                data-resin-target={ACTIVITY_TARGETS.PROFILE}\n                                id={createdByUser.id}\n                                name={createdByUser.name}\n                                getUserProfileUrl={getUserProfileUrl}\n                            />\n                        </div>\n                        <div className=\"bcs-Comment-timestamp\">\n                            <ActivityTimestamp date={createdAtTimestamp} />\n                        </div>\n                        <ActivityStatus status={status} />\n                        {isEditing ? (\n                            <CommentForm\n                                isDisabled={isDisabled}\n                                className={classNames('bcs-Comment-editor', {\n                                    'bcs-is-disabled': isDisabled,\n                                })}\n                                updateComment={this.handleMessageUpdate}\n                                isOpen={isInputOpen}\n                                // $FlowFixMe\n                                user={currentUser}\n                                onCancel={this.commentFormCancelHandler}\n                                onFocus={this.commentFormFocusHandler}\n                                isEditing={isEditing}\n                                entityId={id}\n                                file={file}\n                                tagged_message={tagged_message}\n                                getAvatarUrl={getAvatarUrl}\n                                mentionSelectorContacts={mentionSelectorContacts}\n                                getMentionWithQuery={getMentionWithQuery}\n                            />\n                        ) : (\n                            <ActivityMessage\n                                id={id}\n                                isEdited={isEdited && !isResolved}\n                                tagged_message={tagged_message}\n                                translatedTaggedMessage={translatedTaggedMessage}\n                                {...translations}\n                                translationFailed={error ? true : null}\n                                getUserProfileUrl={getUserProfileUrl}\n                            />\n                        )}\n                    </Media.Body>\n                </Media>\n                {/* $FlowFixMe */}\n                {error ? <ActivityError {...error} /> : null}\n            </ActivityCard>\n        );\n    }\n}\n\nexport default Comment;\n"],"mappings":"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","ignoreList":[]}