{"version":3,"file":"SelectableActivityCard.js","names":["React","classNames","ActivityCard","decode","ALLOWABLE_NODENAMES","isAllowableNode","target","HTMLElement","includes","nodeName","SelectableActivityCard","_ref","children","className","isDisabled","onSelect","rest","_objectWithoutProperties","_excluded","ref","useRef","handleClick","event","preventDefault","stopPropagation","currentTarget","focus","handleKeyDown","key","createElement","_extends","onClick","onKeyDown","role","tabIndex"],"sources":["../../../../src/elements/content-sidebar/activity-feed/SelectableActivityCard.tsx"],"sourcesContent":["import * as React from 'react';\nimport classNames from 'classnames';\nimport ActivityCard, { Props as ActivityCardProps } from './ActivityCard';\n// @ts-ignore flow import\nimport { decode } from '../../../utils/keys';\nimport './SelectableActivityCard.scss';\n\nexport type Props = {\n    isDisabled?: boolean;\n    onSelect: () => void;\n} & ActivityCardProps;\n\nconst ALLOWABLE_NODENAMES = ['A', 'BUTTON'];\n\nfunction isAllowableNode({ target }: React.SyntheticEvent<HTMLDivElement>) {\n    return target instanceof HTMLElement && ALLOWABLE_NODENAMES.includes(target.nodeName);\n}\n\nconst SelectableActivityCard = ({ children, className, isDisabled = false, onSelect, ...rest }: Props): JSX.Element => {\n    const ref = React.useRef<HTMLDivElement | null>(null);\n\n    const handleClick = (event: React.SyntheticEvent<HTMLDivElement>): void => {\n        if (isDisabled || isAllowableNode(event)) {\n            return;\n        }\n\n        event.preventDefault();\n        event.stopPropagation();\n        event.currentTarget.focus(); // Buttons do not receive focus in Firefox and Safari on MacOS\n\n        onSelect();\n    };\n\n    const handleKeyDown = (event: React.KeyboardEvent<HTMLDivElement>): void => {\n        if (isDisabled || isAllowableNode(event)) {\n            return;\n        }\n\n        const key = decode(event);\n\n        if (key === 'Space' || key === 'Enter') {\n            onSelect();\n        }\n    };\n\n    return (\n        <ActivityCard\n            ref={ref}\n            aria-disabled={isDisabled}\n            className={classNames('bcs-SelectableActivityCard', className)}\n            onClick={handleClick}\n            onKeyDown={handleKeyDown}\n            role=\"button\"\n            tabIndex={0}\n            {...rest}\n        >\n            {children}\n        </ActivityCard>\n    );\n};\n\nexport default SelectableActivityCard;\n"],"mappings":";;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,UAAU,MAAM,YAAY;AACnC,OAAOC,YAAY,MAAsC,gBAAgB;AACzE;AACA,SAASC,MAAM,QAAQ,qBAAqB;AAC5C,OAAO,+BAA+B;AAOtC,MAAMC,mBAAmB,GAAG,CAAC,GAAG,EAAE,QAAQ,CAAC;AAE3C,SAASC,eAAeA,CAAC;EAAEC;AAA6C,CAAC,EAAE;EACvE,OAAOA,MAAM,YAAYC,WAAW,IAAIH,mBAAmB,CAACI,QAAQ,CAACF,MAAM,CAACG,QAAQ,CAAC;AACzF;AAEA,MAAMC,sBAAsB,GAAGC,IAAA,IAAwF;EAAA,IAAvF;MAAEC,QAAQ;MAAEC,SAAS;MAAEC,UAAU,GAAG,KAAK;MAAEC;IAAyB,CAAC,GAAAJ,IAAA;IAAbK,IAAI,GAAAC,wBAAA,CAAAN,IAAA,EAAAO,SAAA;EACxF,MAAMC,GAAG,GAAGnB,KAAK,CAACoB,MAAM,CAAwB,IAAI,CAAC;EAErD,MAAMC,WAAW,GAAIC,KAA2C,IAAW;IACvE,IAAIR,UAAU,IAAIT,eAAe,CAACiB,KAAK,CAAC,EAAE;MACtC;IACJ;IAEAA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtBD,KAAK,CAACE,eAAe,CAAC,CAAC;IACvBF,KAAK,CAACG,aAAa,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;;IAE7BX,QAAQ,CAAC,CAAC;EACd,CAAC;EAED,MAAMY,aAAa,GAAIL,KAA0C,IAAW;IACxE,IAAIR,UAAU,IAAIT,eAAe,CAACiB,KAAK,CAAC,EAAE;MACtC;IACJ;IAEA,MAAMM,GAAG,GAAGzB,MAAM,CAACmB,KAAK,CAAC;IAEzB,IAAIM,GAAG,KAAK,OAAO,IAAIA,GAAG,KAAK,OAAO,EAAE;MACpCb,QAAQ,CAAC,CAAC;IACd;EACJ,CAAC;EAED,oBACIf,KAAA,CAAA6B,aAAA,CAAC3B,YAAY,EAAA4B,QAAA;IACTX,GAAG,EAAEA,GAAI;IACT,iBAAeL,UAAW;IAC1BD,SAAS,EAAEZ,UAAU,CAAC,4BAA4B,EAAEY,SAAS,CAAE;IAC/DkB,OAAO,EAAEV,WAAY;IACrBW,SAAS,EAAEL,aAAc;IACzBM,IAAI,EAAC,QAAQ;IACbC,QAAQ,EAAE;EAAE,GACRlB,IAAI,GAEPJ,QACS,CAAC;AAEvB,CAAC;AAED,eAAeF,sBAAsB","ignoreList":[]}