{"version":3,"file":"ActivityThread.js","names":["React","FormattedMessage","noop","PlainButton","ActivityThreadReplies","ActivityThreadReplyForm","messages","ActivityThread","children","currentUser","getAvatarUrl","getMentionWithQuery","getUserProfileUrl","hasNewThreadedReplies","hasReplies","isAlwaysExpanded","isPending","isRepliesLoading","mentionSelectorContacts","onHideReplies","onReplyCreate","onReplyDelete","onReplyEdit","onReplySelect","onShowReplies","replies","repliesTotalCount","translations","length","repliesLength","repliesToLoadCount","Math","max","onHideRepliesHandler","handleFormFocusOrShow","handleFormHide","renderButton","createElement","className","onClick","type","_extends","values","showReplies","hideReplies","onDelete","onEdit","onSelect","isDisabled","onFocus","onHide","onShow"],"sources":["../../../../../src/elements/content-sidebar/activity-feed/activity-feed/ActivityThread.js"],"sourcesContent":["// @flow\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport noop from 'lodash/noop';\n\nimport PlainButton from '../../../../components/plain-button';\nimport ActivityThreadReplies from './ActivityThreadReplies';\nimport ActivityThreadReplyForm from './ActivityThreadReplyForm';\n\nimport type { GetAvatarUrlCallback, GetProfileUrlCallback } from '../../../common/flowTypes';\nimport type { Translations } from '../../flowTypes';\nimport type { SelectorItems, User } from '../../../../common/types/core';\nimport type { BoxCommentPermission, Comment as CommentType, FeedItemStatus } from '../../../../common/types/feed';\n\nimport messages from './messages';\n\nimport './ActivityThread.scss';\n\ntype Props = {\n    children: React.Node,\n    currentUser?: User,\n    getAvatarUrl: GetAvatarUrlCallback,\n    getMentionWithQuery?: Function,\n    getUserProfileUrl?: GetProfileUrlCallback,\n    hasNewThreadedReplies?: boolean,\n    hasReplies: boolean,\n    isAlwaysExpanded?: boolean,\n    isPending?: boolean,\n    isRepliesLoading?: boolean,\n    mentionSelectorContacts?: SelectorItems<>,\n    onHideReplies?: (lastReply: CommentType) => void,\n    onReplyCreate?: (text: string) => void,\n    onReplyDelete?: ({ id: string, permissions: BoxCommentPermission }) => void,\n    onReplyEdit?: (\n        id: string,\n        text: string,\n        status?: FeedItemStatus,\n        hasMention?: boolean,\n        permissions: BoxCommentPermission,\n        onSuccess: ?Function,\n        onError: ?Function,\n    ) => void,\n    onReplySelect?: (isSelected: boolean) => void,\n    onShowReplies?: () => void,\n    replies?: Array<CommentType>,\n    repliesTotalCount?: number,\n    translations?: Translations,\n};\n\nconst ActivityThread = ({\n    children,\n    currentUser,\n    getAvatarUrl,\n    getMentionWithQuery,\n    getUserProfileUrl,\n    hasNewThreadedReplies = false,\n    hasReplies,\n    isAlwaysExpanded = false,\n    isPending,\n    isRepliesLoading,\n    mentionSelectorContacts,\n    onHideReplies = noop,\n    onReplyCreate,\n    onReplyDelete = noop,\n    onReplyEdit = noop,\n    onReplySelect = noop,\n    onShowReplies = noop,\n    replies = [],\n    repliesTotalCount = 0,\n    translations,\n}: Props) => {\n    const { length: repliesLength } = replies;\n    const repliesToLoadCount = Math.max(repliesTotalCount - repliesLength, 0);\n\n    const onHideRepliesHandler = () => {\n        if (repliesLength) {\n            onHideReplies(replies[repliesLength - 1]);\n        }\n    };\n\n    const handleFormFocusOrShow = () => {\n        onReplySelect(true);\n    };\n\n    const handleFormHide = () => {\n        onReplySelect(false);\n    };\n\n    const renderButton = () => {\n        if (isAlwaysExpanded || isRepliesLoading) {\n            return null;\n        }\n\n        if (repliesTotalCount > repliesLength) {\n            return (\n                <PlainButton\n                    className=\"bcs-ActivityThread-toggle\"\n                    onClick={onShowReplies}\n                    type=\"button\"\n                    data-testid=\"activity-thread-button\"\n                >\n                    <FormattedMessage values={{ repliesToLoadCount }} {...messages.showReplies} />\n                </PlainButton>\n            );\n        }\n        if (repliesTotalCount > 1 && repliesTotalCount === repliesLength) {\n            return (\n                <PlainButton\n                    className=\"bcs-ActivityThread-toggle\"\n                    onClick={onHideRepliesHandler}\n                    type=\"button\"\n                    data-testid=\"activity-thread-button\"\n                >\n                    <FormattedMessage {...messages.hideReplies} />\n                </PlainButton>\n            );\n        }\n\n        return null;\n    };\n\n    if (!hasReplies) {\n        return children;\n    }\n    return (\n        <div className=\"bcs-ActivityThread\" data-testid=\"activity-thread\">\n            <div className=\"bcs-ActivityThread-selectWrapper\">\n                <div className=\"bcs-ActivityThread-content\">\n                    {children}\n\n                    {renderButton()}\n\n                    {repliesTotalCount > 0 && repliesLength > 0 && (\n                        <ActivityThreadReplies\n                            currentUser={currentUser}\n                            getAvatarUrl={getAvatarUrl}\n                            getMentionWithQuery={getMentionWithQuery}\n                            getUserProfileUrl={getUserProfileUrl}\n                            hasNewThreadedReplies={hasNewThreadedReplies}\n                            isRepliesLoading={isRepliesLoading}\n                            mentionSelectorContacts={mentionSelectorContacts}\n                            onDelete={onReplyDelete}\n                            onEdit={onReplyEdit}\n                            onSelect={onReplySelect}\n                            replies={replies}\n                            translations={translations}\n                        />\n                    )}\n                </div>\n\n                {onReplyCreate && (\n                    <ActivityThreadReplyForm\n                        getMentionWithQuery={getMentionWithQuery}\n                        isDisabled={isPending}\n                        mentionSelectorContacts={mentionSelectorContacts}\n                        onFocus={handleFormFocusOrShow}\n                        onHide={handleFormHide}\n                        onShow={handleFormFocusOrShow}\n                        onReplyCreate={onReplyCreate}\n                    />\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default ActivityThread;\n"],"mappings":"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","ignoreList":[]}