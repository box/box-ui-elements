{"version":3,"file":"ActivityFeed.js","names":["React","getProp","noop","throttle","FormattedMessage","classNames","ActiveState","CommentForm","EmptyState","InlineError","LoadingIndicator","messages","collapseFeedState","ItemTypes","FEED_ITEM_TYPE_ANNOTATION","FEED_ITEM_TYPE_COMMENT","FEED_ITEM_TYPE_TASK","PERMISSION_CAN_CREATE_ANNOTATIONS","scrollIntoView","ActivityFeed","Component","constructor","args","_defineProperty","isScrolled","isInputOpen","selectedItemId","createRef","feedItems","shouldUseUAA","activityFeedError","props","undefined","length","type","fileVersion","version_start","version_end","prevCurrentUser","prevFeedItems","currentUser","feedContainer","scrollTop","scrollHeight","event","target","Element","setState","handleFeedScroll","nativeEvent","stopImmediatePropagation","resetFeedScroll","text","hasMention","onCommentCreate","commentFormSubmitHandler","assignees","dueAt","onTaskCreate","data","versionInfoHandler","onVersionHistoryClick","itemId","hasReplies","id","activeFeedEntryId","activeFeedEntryType","state","isSelected","item","replies","isActive","isFeedItemActive","some","reply","componentDidMount","componentDidUpdate","prevProps","prevState","prevActiveFeedEntryId","currFeedItems","prevIsInputOpen","currIsInputOpen","hasLoaded","hasMoreItems","didLoadFeedItems","hasInputOpened","hasActiveFeedEntryIdChanged","scrollToActiveFeedItemOrErrorMessage","current","activeFeedItemRef","render","approverSelectorContacts","file","getApproverWithQuery","getAvatarUrl","getMentionWithQuery","getUserProfileUrl","hasNewThreadedReplies","hasVersions","isDisabled","mentionSelectorContacts","contactsLoaded","onAnnotationDelete","onAnnotationEdit","onAnnotationSelect","onAnnotationStatusChange","onAppActivityDelete","onCommentDelete","onCommentUpdate","onHideReplies","onReplyCreate","onReplyDelete","onReplyUpdate","onShowReplies","onTaskAssignmentUpdate","onTaskDelete","onTaskModalClose","onTaskUpdate","onTaskView","translations","currentFileVersionId","hasAnnotationCreatePermission","hasCommentPermission","showCommentForm","isEmpty","isLoading","activeFeedItem","Array","isArray","find","isCommentFeedItemActive","errorMessageByEntryType","annotation","annotationMissingError","comment","commentMissingError","task","taskMissingError","inlineFeedItemErrorMessage","isInlineFeedItemErrorVisible","createElement","className","onKeyDown","ref","onScroll","throttledFeedScroll","showAnnotationMessage","showCommentMessage","_extends","items","onCommentEdit","status","permissions","onSuccess","onError","onCommentSelect","setSelectedItem","onTaskEdit","onVersionInfo","openVersionHistoryPopup","title","feedInlineErrorTitle","onSubmit","createComment","isOpen","user","onCancel","commentFormCancelHandler","onFocus","commentFormFocusHandler"],"sources":["../../../../../src/elements/content-sidebar/activity-feed/activity-feed/ActivityFeed.js"],"sourcesContent":["/**\n * @flow\n * @file Component for Activity feed\n */\n\nimport * as React from 'react';\nimport getProp from 'lodash/get';\nimport noop from 'lodash/noop';\nimport throttle from 'lodash/throttle';\nimport { FormattedMessage } from 'react-intl';\nimport classNames from 'classnames';\nimport ActiveState from './ActiveState';\nimport CommentForm from '../comment-form';\nimport EmptyState from './EmptyState';\nimport InlineError from '../../../../components/inline-error/InlineError';\nimport LoadingIndicator from '../../../../components/loading-indicator/LoadingIndicator';\nimport messages from './messages';\nimport { collapseFeedState, ItemTypes } from './activityFeedUtils';\nimport {\n    FEED_ITEM_TYPE_ANNOTATION,\n    FEED_ITEM_TYPE_COMMENT,\n    FEED_ITEM_TYPE_TASK,\n    PERMISSION_CAN_CREATE_ANNOTATIONS,\n} from '../../../../constants';\nimport { scrollIntoView } from '../../../../utils/dom';\nimport type {\n    Annotation,\n    AnnotationPermission,\n    BoxCommentPermission,\n    Comment,\n    CommentFeedItemType,\n    FeedItemStatus,\n    FeedItems,\n    FocusableFeedItemType,\n    Task,\n} from '../../../../common/types/feed';\nimport type { SelectorItems, User, GroupMini, BoxItem } from '../../../../common/types/core';\nimport type { Errors, GetAvatarUrlCallback, GetProfileUrlCallback } from '../../../common/flowTypes';\nimport type { Translations } from '../../flowTypes';\nimport type { OnAnnotationEdit, OnAnnotationStatusChange } from '../comment/types';\n\nimport './ActivityFeed.scss';\n\nexport type ActivityFeedProps = {\n    activeFeedEntryId?: string,\n    activeFeedEntryType?: FocusableFeedItemType,\n    activityFeedError: ?Errors,\n    approverSelectorContacts?: SelectorItems<User | GroupMini>,\n    contactsLoaded?: boolean,\n    currentUser?: User,\n    feedItems?: FeedItems,\n    // $FlowFixMe file.file_version (BoxItem[BoxItemVersion]) has many apparently long-standing type errors\n    file: BoxItem,\n    getApproverWithQuery?: Function,\n    getAvatarUrl: GetAvatarUrlCallback,\n    getMentionWithQuery?: Function,\n    getUserProfileUrl?: GetProfileUrlCallback,\n    hasNewThreadedReplies?: boolean,\n    hasReplies?: boolean,\n    hasVersions?: boolean,\n    isDisabled?: boolean,\n    mentionSelectorContacts?: SelectorItems<User>,\n    onAnnotationDelete?: ({ id: string, permissions: AnnotationPermission }) => void,\n    onAnnotationEdit?: OnAnnotationEdit,\n    onAnnotationSelect?: (annotation: Annotation) => void,\n    onAnnotationStatusChange: OnAnnotationStatusChange,\n    onAppActivityDelete?: Function,\n    onCommentCreate?: Function,\n    onCommentDelete?: Function,\n    onCommentUpdate?: (\n        id: string,\n        text?: string,\n        status?: FeedItemStatus,\n        hasMention: boolean,\n        permissions: BoxCommentPermission,\n        onSuccess: ?Function,\n        onError: ?Function,\n    ) => void,\n    onHideReplies?: (id: string, replies: Array<Comment>) => void,\n    onReplyCreate?: (parentId: string, parentType: CommentFeedItemType, text: string) => void,\n    onReplyDelete?: ({ id: string, parentId: string, permissions: BoxCommentPermission }) => void,\n    onReplyUpdate?: (\n        id: string,\n        parentId: string,\n        text: string,\n        permissions: BoxCommentPermission,\n        onSuccess: ?Function,\n        onError: ?Function,\n    ) => void,\n    onShowReplies?: (id: string, type: CommentFeedItemType) => void,\n    onTaskAssignmentUpdate?: Function,\n    onTaskCreate?: Function,\n    onTaskDelete?: Function,\n    onTaskModalClose?: Function,\n    onTaskUpdate?: Function,\n    onTaskView?: Function,\n    onVersionHistoryClick?: Function,\n    shouldUseUAA?: boolean,\n    translations?: Translations,\n};\n\ntype State = {\n    isInputOpen: boolean,\n    isScrolled: boolean,\n    selectedItemId: string | null,\n};\n\nclass ActivityFeed extends React.Component<ActivityFeedProps, State> {\n    state = {\n        isScrolled: false,\n        isInputOpen: false,\n        selectedItemId: null,\n    };\n\n    activeFeedItemRef = React.createRef<null | HTMLElement>();\n\n    feedContainer: null | HTMLElement;\n\n    componentDidMount() {\n        this.resetFeedScroll();\n    }\n\n    componentDidUpdate(prevProps: ActivityFeedProps, prevState: State) {\n        const {\n            activeFeedEntryId: prevActiveFeedEntryId,\n            currentUser: prevCurrentUser,\n            feedItems: prevFeedItems,\n        } = prevProps;\n        const { feedItems: currFeedItems, activeFeedEntryId } = this.props;\n        const { isInputOpen: prevIsInputOpen } = prevState;\n        const { isInputOpen: currIsInputOpen } = this.state;\n\n        const hasLoaded = this.hasLoaded(prevCurrentUser, prevFeedItems);\n        const hasMoreItems = prevFeedItems && currFeedItems && prevFeedItems.length < currFeedItems.length;\n        const didLoadFeedItems = prevFeedItems === undefined && currFeedItems !== undefined;\n        const hasInputOpened = currIsInputOpen !== prevIsInputOpen;\n        const hasActiveFeedEntryIdChanged = activeFeedEntryId !== prevActiveFeedEntryId;\n\n        if ((hasLoaded || hasMoreItems || didLoadFeedItems || hasInputOpened) && activeFeedEntryId === undefined) {\n            this.resetFeedScroll();\n        }\n\n        if (didLoadFeedItems || hasActiveFeedEntryIdChanged) {\n            this.scrollToActiveFeedItemOrErrorMessage();\n        }\n    }\n\n    scrollToActiveFeedItemOrErrorMessage() {\n        const { current: activeFeedItemRef } = this.activeFeedItemRef;\n        const { activeFeedEntryId } = this.props;\n\n        // if there is no active item, do not scroll\n        if (!activeFeedEntryId) {\n            return;\n        }\n\n        // if there was supposed to be an active feed item but the feed item does not exist\n        // scroll to the bottom to show the inline error message\n        if (activeFeedItemRef === null) {\n            this.resetFeedScroll();\n            return;\n        }\n\n        scrollIntoView(activeFeedItemRef);\n    }\n\n    /**\n     * Detects whether or not the empty state should be shown.\n     * @param {object} currentUser - The user that is logged into the account\n     * @param {object} feedItems - Items in the activity feed\n     */\n    isEmpty = ({ feedItems, shouldUseUAA, activityFeedError }: ActivityFeedProps = this.props): boolean => {\n        if (feedItems === undefined || (shouldUseUAA && activityFeedError)) {\n            return false;\n        }\n\n        return (\n            feedItems.length === 0 ||\n            (!shouldUseUAA && feedItems.length === 1 && feedItems[0].type === ItemTypes.fileVersion) ||\n            (!!shouldUseUAA &&\n                feedItems.length === 1 &&\n                feedItems[0].type === ItemTypes.fileVersion &&\n                feedItems[0].version_start === 1 &&\n                feedItems[0].version_end === 1)\n        );\n    };\n\n    /**\n     * Determines whether currentUser and feedItems have loaded.\n     * @param prevCurrentUser - The previous value of the currentUser prop\n     * @param prevFeedItems - The previous value of the feedItems prop\n     * @returns {boolean}\n     */\n    hasLoaded = (prevCurrentUser?: User, prevFeedItems?: FeedItems): boolean => {\n        const { currentUser, feedItems } = this.props;\n        return currentUser !== undefined && feedItems !== undefined && (!prevCurrentUser || !prevFeedItems);\n    };\n\n    /**\n     * Scrolls the container to the bottom\n     */\n    resetFeedScroll = () => {\n        if (this.feedContainer) {\n            this.feedContainer.scrollTop = this.feedContainer.scrollHeight;\n        }\n    };\n\n    handleFeedScroll = (event: UIEvent): void => {\n        const { target } = event;\n        if (target instanceof Element) {\n            const { scrollTop } = target;\n            this.setState({ isScrolled: scrollTop > 0 });\n        }\n    };\n\n    throttledFeedScroll = throttle(this.handleFeedScroll, 100);\n\n    onKeyDown = (event: SyntheticKeyboardEvent<>): void => {\n        const { nativeEvent } = event;\n        nativeEvent.stopImmediatePropagation();\n    };\n\n    commentFormFocusHandler = (): void => {\n        this.resetFeedScroll();\n        this.setState({ isInputOpen: true });\n    };\n\n    commentFormCancelHandler = (): void => this.setState({ isInputOpen: false });\n\n    commentFormSubmitHandler = (): void => this.setState({ isInputOpen: false });\n\n    onCommentCreate = ({ text, hasMention }: { hasMention: boolean, text: string }) => {\n        const { onCommentCreate = noop } = this.props;\n        onCommentCreate(text, hasMention);\n        this.commentFormSubmitHandler();\n    };\n\n    /**\n     * Creates a task.\n     *\n     * @param {string} text - Task text\n     * @param {Array} assignees - List of assignees\n     * @param {number} dueAt - Task's due date\n     * @return {void}\n     */\n    onTaskCreate = ({ text, assignees, dueAt }: { assignees: SelectorItems<>, dueAt: string, text: string }): void => {\n        const { onTaskCreate = noop } = this.props;\n        onTaskCreate(text, assignees, dueAt);\n        this.commentFormSubmitHandler();\n    };\n\n    /**\n     * Invokes version history popup handler.\n     *\n     * @param {Object} data - Version history data\n     * @return {void}\n     */\n    openVersionHistoryPopup = (data: any): void => {\n        const versionInfoHandler = this.props.onVersionHistoryClick || noop;\n        versionInfoHandler(data);\n    };\n\n    setSelectedItem = (itemId: string | null) => {\n        const { hasReplies } = this.props;\n        if (!hasReplies) {\n            return;\n        }\n        this.setState({ selectedItemId: itemId });\n    };\n\n    isFeedItemActive = <T, U: { id: string, type: T }>({ id, type }: U): boolean => {\n        const { activeFeedEntryId, activeFeedEntryType } = this.props;\n        const { selectedItemId } = this.state;\n\n        const isSelected = selectedItemId === id;\n\n        return selectedItemId ? isSelected : id === activeFeedEntryId && type === activeFeedEntryType;\n    };\n\n    isCommentFeedItemActive = <T, U: { id: string, replies?: Array<Comment>, type: T }>(item: U): boolean => {\n        const { activeFeedEntryId } = this.props;\n        const { replies } = item;\n\n        const isActive = this.isFeedItemActive<T, U>(item);\n        return isActive || (!!replies && replies.some(reply => reply.id === activeFeedEntryId));\n    };\n\n    render(): React.Node {\n        const {\n            activeFeedEntryType,\n            activityFeedError,\n            approverSelectorContacts,\n            currentUser,\n            feedItems,\n            file,\n            getApproverWithQuery,\n            getAvatarUrl,\n            getMentionWithQuery,\n            getUserProfileUrl,\n            hasNewThreadedReplies,\n            hasReplies,\n            hasVersions,\n            isDisabled,\n            mentionSelectorContacts,\n            contactsLoaded,\n            onAnnotationDelete,\n            onAnnotationEdit,\n            onAnnotationSelect,\n            onAnnotationStatusChange,\n            onAppActivityDelete,\n            onCommentCreate,\n            onCommentDelete,\n            onCommentUpdate,\n            onHideReplies,\n            onReplyCreate,\n            onReplyDelete,\n            onReplyUpdate,\n            onShowReplies,\n            onTaskAssignmentUpdate,\n            onTaskDelete,\n            onTaskModalClose,\n            onTaskUpdate,\n            onTaskView,\n            onVersionHistoryClick,\n            shouldUseUAA,\n            translations,\n        } = this.props;\n        const { isInputOpen, isScrolled } = this.state;\n        const currentFileVersionId = getProp(file, 'file_version.id');\n        const hasAnnotationCreatePermission = getProp(file, ['permissions', PERMISSION_CAN_CREATE_ANNOTATIONS], false);\n        const hasCommentPermission = getProp(file, 'permissions.can_comment', false);\n        const showCommentForm = !!(currentUser && hasCommentPermission && onCommentCreate && feedItems);\n\n        const isEmpty = this.isEmpty(this.props);\n        const isLoading = !this.hasLoaded();\n\n        const activeFeedItem =\n            Array.isArray(feedItems) &&\n            feedItems.find(item => {\n                switch (item.type) {\n                    case FEED_ITEM_TYPE_ANNOTATION:\n                        return this.isCommentFeedItemActive<typeof FEED_ITEM_TYPE_ANNOTATION, Annotation>(item);\n                    case FEED_ITEM_TYPE_COMMENT:\n                        return this.isCommentFeedItemActive<typeof FEED_ITEM_TYPE_COMMENT, Comment>(item);\n                    case FEED_ITEM_TYPE_TASK:\n                        return this.isFeedItemActive<typeof FEED_ITEM_TYPE_TASK, Task>(item);\n                    default:\n                        return false;\n                }\n            });\n\n        const errorMessageByEntryType = {\n            annotation: messages.annotationMissingError,\n            comment: messages.commentMissingError,\n            task: messages.taskMissingError,\n        };\n\n        const inlineFeedItemErrorMessage = activeFeedEntryType\n            ? errorMessageByEntryType[activeFeedEntryType]\n            : undefined;\n\n        const isInlineFeedItemErrorVisible = !isLoading && activeFeedEntryType && !activeFeedItem;\n\n        return (\n            // eslint-disable-next-line jsx-a11y/no-static-element-interactions\n            <div\n                className={classNames('bcs-activity-feed', { 'bcs-is-scrolled': isScrolled })}\n                data-testid={isScrolled ? 'activityfeedscrolled' : 'activityfeed'}\n                onKeyDown={this.onKeyDown}\n            >\n                <div\n                    ref={ref => {\n                        this.feedContainer = ref;\n                    }}\n                    className=\"bcs-activity-feed-items-container\"\n                    onScroll={this.throttledFeedScroll}\n                >\n                    {isLoading && (\n                        <div className=\"bcs-activity-feed-loading-state\">\n                            <LoadingIndicator />\n                        </div>\n                    )}\n\n                    {isEmpty && !isLoading && (\n                        <EmptyState\n                            showAnnotationMessage={hasAnnotationCreatePermission}\n                            showCommentMessage={showCommentForm}\n                        />\n                    )}\n                    {!isEmpty && !isLoading && (\n                        <ActiveState\n                            {...activityFeedError}\n                            activeFeedItem={activeFeedItem}\n                            activeFeedItemRef={this.activeFeedItemRef}\n                            approverSelectorContacts={approverSelectorContacts}\n                            currentFileVersionId={currentFileVersionId}\n                            currentUser={currentUser}\n                            file={file}\n                            getApproverWithQuery={getApproverWithQuery}\n                            getAvatarUrl={getAvatarUrl}\n                            getMentionWithQuery={getMentionWithQuery}\n                            getUserProfileUrl={getUserProfileUrl}\n                            hasNewThreadedReplies={hasNewThreadedReplies}\n                            hasReplies={hasReplies}\n                            hasVersions={hasVersions}\n                            isDisabled={isDisabled}\n                            items={shouldUseUAA ? feedItems : collapseFeedState(feedItems)}\n                            mentionSelectorContacts={mentionSelectorContacts}\n                            onAnnotationDelete={onAnnotationDelete}\n                            onAnnotationEdit={onAnnotationEdit}\n                            onAnnotationSelect={onAnnotationSelect}\n                            onAnnotationStatusChange={onAnnotationStatusChange}\n                            onAppActivityDelete={onAppActivityDelete}\n                            onCommentDelete={hasCommentPermission ? onCommentDelete : noop}\n                            onCommentEdit={\n                                hasCommentPermission && onCommentUpdate\n                                    ? props => {\n                                          onCommentUpdate(\n                                              props.id,\n                                              props.text,\n                                              props.status,\n                                              props.hasMention,\n                                              props.permissions,\n                                              props.onSuccess,\n                                              props.onError,\n                                          );\n                                      }\n                                    : noop\n                            }\n                            onCommentSelect={this.setSelectedItem}\n                            onHideReplies={onHideReplies}\n                            onReplyCreate={hasCommentPermission ? onReplyCreate : noop}\n                            onReplyDelete={hasCommentPermission ? onReplyDelete : noop}\n                            onReplyUpdate={hasCommentPermission ? onReplyUpdate : noop}\n                            onShowReplies={onShowReplies}\n                            onTaskAssignmentUpdate={onTaskAssignmentUpdate}\n                            onTaskDelete={onTaskDelete}\n                            onTaskEdit={onTaskUpdate}\n                            onTaskModalClose={onTaskModalClose}\n                            onTaskView={onTaskView}\n                            onVersionInfo={onVersionHistoryClick ? this.openVersionHistoryPopup : null}\n                            shouldUseUAA={shouldUseUAA}\n                            translations={translations}\n                        />\n                    )}\n                    {isInlineFeedItemErrorVisible && inlineFeedItemErrorMessage && (\n                        <InlineError\n                            title={<FormattedMessage {...messages.feedInlineErrorTitle} />}\n                            className=\"bcs-feedItemInlineError\"\n                        >\n                            <FormattedMessage {...inlineFeedItemErrorMessage} />\n                        </InlineError>\n                    )}\n                </div>\n\n                {showCommentForm ? (\n                    <CommentForm\n                        onSubmit={this.resetFeedScroll}\n                        isDisabled={isDisabled}\n                        mentionSelectorContacts={mentionSelectorContacts}\n                        contactsLoaded={contactsLoaded}\n                        className={classNames('bcs-activity-feed-comment-input', {\n                            'bcs-is-disabled': isDisabled,\n                        })}\n                        createComment={hasCommentPermission ? this.onCommentCreate : noop}\n                        file={file}\n                        getMentionWithQuery={getMentionWithQuery}\n                        isOpen={isInputOpen}\n                        // $FlowFixMe\n                        user={currentUser}\n                        onCancel={this.commentFormCancelHandler}\n                        onFocus={this.commentFormFocusHandler}\n                        getAvatarUrl={getAvatarUrl}\n                    />\n                ) : null}\n            </div>\n        );\n    }\n}\n\nexport default ActivityFeed;\n"],"mappings":"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","ignoreList":[]}