{"version":3,"file":"AssigneeDetails.js","names":["React","FormattedMessage","classNames","ActivityDatestamp","commonMessages","messages","TASK_NEW_APPROVED","TASK_NEW_REJECTED","TASK_NEW_COMPLETED","TASK_NEW_NOT_STARTED","statusMessages","tasksFeedStatusApproved","tasksFeedStatusRejected","tasksFeedStatusCompleted","AssigneeDetails","memo","user","status","completedAt","className","statusMessage","createElement","name","priorCollaborator","_extends","values","dateTime","date"],"sources":["../../../../../src/elements/content-sidebar/activity-feed/task-new/AssigneeDetails.js"],"sourcesContent":["// @flow strict\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport classNames from 'classnames';\nimport ActivityDatestamp from '../common/activity-datestamp';\nimport commonMessages from '../../../common/messages';\nimport messages from './messages';\nimport { TASK_NEW_APPROVED, TASK_NEW_REJECTED, TASK_NEW_COMPLETED, TASK_NEW_NOT_STARTED } from '../../../../constants';\nimport type { ISODate } from '../../../../common/types/core';\n\nimport './AssigneeDetails.scss';\n\nconst statusMessages = {\n    [TASK_NEW_APPROVED]: messages.tasksFeedStatusApproved,\n    [TASK_NEW_REJECTED]: messages.tasksFeedStatusRejected,\n    [TASK_NEW_COMPLETED]: messages.tasksFeedStatusCompleted,\n    [TASK_NEW_NOT_STARTED]: null,\n};\n\ntype Props = {\n    className?: string,\n    completedAt?: ?ISODate | Date,\n    status: $Keys<typeof statusMessages>,\n    user: { name: string },\n};\n\nconst AssigneeDetails = React.memo<Props>(({ user, status, completedAt, className }: Props) => {\n    const statusMessage = statusMessages[status] || null;\n    return (\n        <div className={classNames(className, 'bcs-AssigneeDetails')}>\n            <div className=\"bcs-AssigneeDetails-name\">\n                {user.name ? user.name : <FormattedMessage {...commonMessages.priorCollaborator} />}\n            </div>\n            {statusMessage && completedAt && (\n                <div className=\"bcs-AssigneeDetails-status\">\n                    <FormattedMessage\n                        {...statusMessage}\n                        values={{ dateTime: <ActivityDatestamp date={completedAt} /> }}\n                    />\n                </div>\n            )}\n        </div>\n    );\n});\n\nexport default AssigneeDetails;\n"],"mappings":";AACA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,gBAAgB,QAAQ,YAAY;AAC7C,OAAOC,UAAU,MAAM,YAAY;AACnC,OAAOC,iBAAiB,MAAM,8BAA8B;AAC5D,OAAOC,cAAc,MAAM,0BAA0B;AACrD,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,iBAAiB,EAAEC,iBAAiB,EAAEC,kBAAkB,EAAEC,oBAAoB,QAAQ,uBAAuB;AAGtH,OAAO,wBAAwB;AAE/B,MAAMC,cAAc,GAAG;EACnB,CAACJ,iBAAiB,GAAGD,QAAQ,CAACM,uBAAuB;EACrD,CAACJ,iBAAiB,GAAGF,QAAQ,CAACO,uBAAuB;EACrD,CAACJ,kBAAkB,GAAGH,QAAQ,CAACQ,wBAAwB;EACvD,CAACJ,oBAAoB,GAAG;AAC5B,CAAC;AASD,MAAMK,eAAe,gBAAGd,KAAK,CAACe,IAAI,CAAQ,CAAC;EAAEC,IAAI;EAAEC,MAAM;EAAEC,WAAW;EAAEC;AAAiB,CAAC,KAAK;EAC3F,MAAMC,aAAa,GAAGV,cAAc,CAACO,MAAM,CAAC,IAAI,IAAI;EACpD,oBACIjB,KAAA,CAAAqB,aAAA;IAAKF,SAAS,EAAEjB,UAAU,CAACiB,SAAS,EAAE,qBAAqB;EAAE,gBACzDnB,KAAA,CAAAqB,aAAA;IAAKF,SAAS,EAAC;EAA0B,GACpCH,IAAI,CAACM,IAAI,GAAGN,IAAI,CAACM,IAAI,gBAAGtB,KAAA,CAAAqB,aAAA,CAACpB,gBAAgB,EAAKG,cAAc,CAACmB,iBAAoB,CACjF,CAAC,EACLH,aAAa,IAAIF,WAAW,iBACzBlB,KAAA,CAAAqB,aAAA;IAAKF,SAAS,EAAC;EAA4B,gBACvCnB,KAAA,CAAAqB,aAAA,CAACpB,gBAAgB,EAAAuB,QAAA,KACTJ,aAAa;IACjBK,MAAM,EAAE;MAAEC,QAAQ,eAAE1B,KAAA,CAAAqB,aAAA,CAAClB,iBAAiB;QAACwB,IAAI,EAAET;MAAY,CAAE;IAAE;EAAE,EAClE,CACA,CAER,CAAC;AAEd,CAAC,CAAC;AAEF,eAAeJ,eAAe","ignoreList":[]}