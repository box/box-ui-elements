{"version":3,"file":"TaskDueDate.js","names":["React","FormattedMessage","ActivityDatestamp","messages","LabelPill","TASK_NEW_NOT_STARTED","TaskDueDate","dueDate","status","isOverdue","Date","now","fullDueDate","pillProps","type","createElement","Pill","Text","_extends","taskFeedStatusDue","values","dateTime","date","getTime","uppercase"],"sources":["../../../../../src/elements/content-sidebar/activity-feed/task-new/TaskDueDate.js"],"sourcesContent":["// @flow\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport ActivityDatestamp from '../common/activity-datestamp';\nimport messages from './messages';\n// $FlowFixMe LabelPill is in typescript\nimport LabelPill from '../../../../components/label-pill';\nimport { TASK_NEW_NOT_STARTED } from '../../../../constants';\n\nimport type { TaskStatus } from '../../../../common/types/tasks';\nimport type { ISODate } from '../../../../common/types/core';\n\ntype Props = {\n    dueDate: ISODate,\n    status: TaskStatus,\n};\n\nconst TaskDueDate = ({ dueDate, status }: Props): React.Node => {\n    const isOverdue = dueDate ? status === TASK_NEW_NOT_STARTED && new Date(dueDate) < Date.now() : false;\n    const fullDueDate = new Date(dueDate);\n    const pillProps = isOverdue ? { 'data-testid': 'task-overdue-date', type: 'error' } : { type: 'default' };\n    return (\n        <div data-testid=\"task-due-date\">\n            <LabelPill.Pill {...pillProps}>\n                <LabelPill.Text>\n                    <FormattedMessage\n                        {...messages.taskFeedStatusDue}\n                        values={{\n                            dateTime: <ActivityDatestamp date={fullDueDate.getTime()} uppercase />,\n                        }}\n                    />\n                </LabelPill.Text>\n            </LabelPill.Pill>\n        </div>\n    );\n};\n\nexport default TaskDueDate;\n"],"mappings":";AACA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,gBAAgB,QAAQ,YAAY;AAE7C,OAAOC,iBAAiB,MAAM,8BAA8B;AAC5D,OAAOC,QAAQ,MAAM,YAAY;AACjC;AACA,OAAOC,SAAS,MAAM,mCAAmC;AACzD,SAASC,oBAAoB,QAAQ,uBAAuB;AAU5D,MAAMC,WAAW,GAAGA,CAAC;EAAEC,OAAO;EAAEC;AAAc,CAAC,KAAiB;EAC5D,MAAMC,SAAS,GAAGF,OAAO,GAAGC,MAAM,KAAKH,oBAAoB,IAAI,IAAIK,IAAI,CAACH,OAAO,CAAC,GAAGG,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,KAAK;EACrG,MAAMC,WAAW,GAAG,IAAIF,IAAI,CAACH,OAAO,CAAC;EACrC,MAAMM,SAAS,GAAGJ,SAAS,GAAG;IAAE,aAAa,EAAE,mBAAmB;IAAEK,IAAI,EAAE;EAAQ,CAAC,GAAG;IAAEA,IAAI,EAAE;EAAU,CAAC;EACzG,oBACId,KAAA,CAAAe,aAAA;IAAK,eAAY;EAAe,gBAC5Bf,KAAA,CAAAe,aAAA,CAACX,SAAS,CAACY,IAAI,EAAKH,SAAS,eACzBb,KAAA,CAAAe,aAAA,CAACX,SAAS,CAACa,IAAI,qBACXjB,KAAA,CAAAe,aAAA,CAACd,gBAAgB,EAAAiB,QAAA,KACTf,QAAQ,CAACgB,iBAAiB;IAC9BC,MAAM,EAAE;MACJC,QAAQ,eAAErB,KAAA,CAAAe,aAAA,CAACb,iBAAiB;QAACoB,IAAI,EAAEV,WAAW,CAACW,OAAO,CAAC,CAAE;QAACC,SAAS;MAAA,CAAE;IACzE;EAAE,EACL,CACW,CACJ,CACf,CAAC;AAEd,CAAC;AAED,eAAelB,WAAW","ignoreList":[]}