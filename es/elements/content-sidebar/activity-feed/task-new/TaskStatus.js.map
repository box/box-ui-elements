{"version":3,"file":"TaskStatus.js","names":["React","FormattedMessage","TASK_NEW_APPROVED","TASK_NEW_REJECTED","TASK_NEW_COMPLETED","TASK_NEW_NOT_STARTED","TASK_NEW_IN_PROGRESS","messages","LabelPill","statusMessageKeyMap","taskFeedApprovedUppercaseLabel","taskFeedCompletedUppercaseLabel","taskFeedRejectedUppercaseLabel","taskFeedInProgressUppercaseLabel","typeKeyMap","Status","memo","status","createElement","Pill","type","Text"],"sources":["../../../../../src/elements/content-sidebar/activity-feed/task-new/TaskStatus.js"],"sourcesContent":["// @flow\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport {\n    TASK_NEW_APPROVED,\n    TASK_NEW_REJECTED,\n    TASK_NEW_COMPLETED,\n    TASK_NEW_NOT_STARTED,\n    TASK_NEW_IN_PROGRESS,\n} from '../../../../constants';\nimport messages from './messages';\n// $FlowFixMe LabelPill is in typescript\nimport LabelPill from '../../../../components/label-pill';\nimport type { TaskStatus } from '../../../../common/types/tasks';\n\ntype Props = {|\n    status: TaskStatus,\n|};\n\nconst statusMessageKeyMap = {\n    [TASK_NEW_APPROVED]: messages.taskFeedApprovedUppercaseLabel,\n    [TASK_NEW_COMPLETED]: messages.taskFeedCompletedUppercaseLabel,\n    [TASK_NEW_REJECTED]: messages.taskFeedRejectedUppercaseLabel,\n    [TASK_NEW_NOT_STARTED]: messages.taskFeedInProgressUppercaseLabel,\n    [TASK_NEW_IN_PROGRESS]: messages.taskFeedInProgressUppercaseLabel,\n};\n\nconst typeKeyMap = {\n    [TASK_NEW_APPROVED]: 'success',\n    [TASK_NEW_COMPLETED]: 'success',\n    [TASK_NEW_REJECTED]: 'error',\n    [TASK_NEW_NOT_STARTED]: 'default',\n    [TASK_NEW_IN_PROGRESS]: 'default',\n};\n\nconst Status = React.memo<Props>(({ status }: Props) => (\n    <LabelPill.Pill type={typeKeyMap[status]}>\n        <LabelPill.Text>\n            <FormattedMessage {...statusMessageKeyMap[status]} />\n        </LabelPill.Text>\n    </LabelPill.Pill>\n));\n\nexport default Status;\n"],"mappings":"AACA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,gBAAgB,QAAQ,YAAY;AAC7C,SACIC,iBAAiB,EACjBC,iBAAiB,EACjBC,kBAAkB,EAClBC,oBAAoB,EACpBC,oBAAoB,QACjB,uBAAuB;AAC9B,OAAOC,QAAQ,MAAM,YAAY;AACjC;AACA,OAAOC,SAAS,MAAM,mCAAmC;AAOzD,MAAMC,mBAAmB,GAAG;EACxB,CAACP,iBAAiB,GAAGK,QAAQ,CAACG,8BAA8B;EAC5D,CAACN,kBAAkB,GAAGG,QAAQ,CAACI,+BAA+B;EAC9D,CAACR,iBAAiB,GAAGI,QAAQ,CAACK,8BAA8B;EAC5D,CAACP,oBAAoB,GAAGE,QAAQ,CAACM,gCAAgC;EACjE,CAACP,oBAAoB,GAAGC,QAAQ,CAACM;AACrC,CAAC;AAED,MAAMC,UAAU,GAAG;EACf,CAACZ,iBAAiB,GAAG,SAAS;EAC9B,CAACE,kBAAkB,GAAG,SAAS;EAC/B,CAACD,iBAAiB,GAAG,OAAO;EAC5B,CAACE,oBAAoB,GAAG,SAAS;EACjC,CAACC,oBAAoB,GAAG;AAC5B,CAAC;AAED,MAAMS,MAAM,gBAAGf,KAAK,CAACgB,IAAI,CAAQ,CAAC;EAAEC;AAAc,CAAC,kBAC/CjB,KAAA,CAAAkB,aAAA,CAACV,SAAS,CAACW,IAAI;EAACC,IAAI,EAAEN,UAAU,CAACG,MAAM;AAAE,gBACrCjB,KAAA,CAAAkB,aAAA,CAACV,SAAS,CAACa,IAAI,qBACXrB,KAAA,CAAAkB,aAAA,CAACjB,gBAAgB,EAAKQ,mBAAmB,CAACQ,MAAM,CAAI,CACxC,CACJ,CACnB,CAAC;AAEF,eAAeF,MAAM","ignoreList":[]}