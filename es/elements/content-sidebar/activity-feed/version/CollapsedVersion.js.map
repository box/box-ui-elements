{"version":3,"file":"CollapsedVersion.js","names":["React","FormattedMessage","injectIntl","ActivityCard","IconInfo","PlainButton","messages","selectors","ACTIVITY_TARGETS","ACTION_TYPE_CREATED","ACTION_TYPE_RESTORED","ACTION_TYPE_TRASHED","getMessageForAction","action","collaborators","version_start","version_end","shouldUseUAA","action_by","singleUserMessage","versionUploadCollapsed","multipleUsersMessage","versionMultipleUsersUploaded","versionRestoreCollapsed","versionMultipleUsersRestored","versionTrashCollapsed","versionMultipleUsersTrashed","collaboratorIDs","Object","keys","numberOfCollaborators","length","versionRange","createElement","className","collaborator","_extends","values","name","versions","CollapsedVersion","props","action_type","id","intl","onInfo","getVersionAction","formatMessage","getVersionInfo","VERSION_CARD","onClick","version_number","type","height","width","CollapsedVersionBase"],"sources":["../../../../../src/elements/content-sidebar/activity-feed/version/CollapsedVersion.js"],"sourcesContent":["/**\n * @flow\n * @file Collapsed Version component\n */\n\nimport * as React from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport type { IntlShape } from 'react-intl';\nimport ActivityCard from '../ActivityCard';\nimport IconInfo from '../../../../icons/general/IconInfo';\nimport PlainButton from '../../../../components/plain-button';\nimport messages from '../../../common/messages';\nimport selectors from '../../../common/selectors/version';\nimport { ACTIVITY_TARGETS } from '../../../common/interactionTargets';\nimport type { User, FileVersions } from '../../../../common/types/core';\nimport { ACTION_TYPE_CREATED, ACTION_TYPE_RESTORED, ACTION_TYPE_TRASHED } from '../../../../constants';\nimport './Version.scss';\n\nfunction getMessageForAction(\n    action: string,\n    collaborators: { [collaborator_id: string]: User } = {},\n    version_start: number,\n    version_end: number,\n    shouldUseUAA?: boolean,\n    action_by?: User[],\n): React.Node {\n    if (\n        action !== 'upload' &&\n        action !== ACTION_TYPE_RESTORED &&\n        action !== ACTION_TYPE_TRASHED &&\n        action !== ACTION_TYPE_CREATED\n    ) {\n        return null;\n    }\n\n    let singleUserMessage = messages.versionUploadCollapsed;\n    let multipleUsersMessage = messages.versionMultipleUsersUploaded;\n    switch (action) {\n        case ACTION_TYPE_CREATED:\n            singleUserMessage = messages.versionUploadCollapsed;\n            multipleUsersMessage = messages.versionMultipleUsersUploaded;\n            break;\n        case ACTION_TYPE_RESTORED:\n            singleUserMessage = messages.versionRestoreCollapsed;\n            multipleUsersMessage = messages.versionMultipleUsersRestored;\n            break;\n        case ACTION_TYPE_TRASHED:\n            singleUserMessage = messages.versionTrashCollapsed;\n            multipleUsersMessage = messages.versionMultipleUsersTrashed;\n            break;\n        default:\n            break;\n    }\n\n    const collaboratorIDs = Object.keys(collaborators);\n    const numberOfCollaborators = shouldUseUAA ? action_by?.length : collaboratorIDs.length;\n\n    const versionRange: React.Node = (\n        <span className=\"bcs-Version-range\">\n            {version_start} - {version_end}\n        </span>\n    );\n\n    if (numberOfCollaborators === 1) {\n        const collaborator = shouldUseUAA ? action_by?.[0] : collaborators[collaboratorIDs[0]];\n\n        if (shouldUseUAA) {\n            return (\n                <FormattedMessage\n                    {...singleUserMessage}\n                    values={{\n                        name: <strong>{collaborator?.name}</strong>,\n                        versions: versionRange,\n                    }}\n                />\n            );\n        }\n\n        return (\n            <FormattedMessage\n                {...messages.versionUploadCollapsed}\n                values={{\n                    name: <strong>{collaborator?.name}</strong>,\n                    versions: versionRange,\n                }}\n            />\n        );\n    }\n\n    if (shouldUseUAA) {\n        return (\n            <FormattedMessage\n                {...multipleUsersMessage}\n                values={{\n                    numberOfCollaborators,\n                    versions: versionRange,\n                }}\n            />\n        );\n    }\n\n    return (\n        <FormattedMessage\n            {...messages.versionMultipleUsersUploaded}\n            values={{\n                numberOfCollaborators,\n                versions: versionRange,\n            }}\n        />\n    );\n}\n\ntype Props = {\n    action_by?: User[],\n    action_type?: string,\n    collaborators: { [collaborator_id: string]: User },\n    id: string,\n    intl: IntlShape,\n    onInfo?: Function,\n    shouldUseUAA?: boolean,\n    version_end: number,\n    version_start: number,\n    versions: FileVersions,\n};\n\nconst CollapsedVersion = (props: Props): React.Node => {\n    const {\n        action_by,\n        action_type = ACTION_TYPE_CREATED,\n        collaborators,\n        id,\n        intl,\n        onInfo,\n        shouldUseUAA,\n        versions,\n        version_start,\n        version_end,\n    } = props;\n    // $FlowFixMe\n    const action = shouldUseUAA ? action_type : selectors.getVersionAction(props);\n\n    return (\n        <ActivityCard className=\"bcs-Version\">\n            <span className=\"bcs-Version-message\">\n                {getMessageForAction(action, collaborators, version_start, version_end, shouldUseUAA, action_by)}\n            </span>\n            {onInfo ? (\n                <span className=\"bcs-Version-actions\">\n                    <PlainButton\n                        aria-label={intl.formatMessage(messages.getVersionInfo)}\n                        className=\"bcs-Version-info\"\n                        data-resin-target={ACTIVITY_TARGETS.VERSION_CARD}\n                        onClick={() => {\n                            onInfo(shouldUseUAA ? { id, version_number: version_end } : { versions });\n                        }}\n                        type=\"button\"\n                    >\n                        <IconInfo height={16} width={16} />\n                    </PlainButton>\n                </span>\n            ) : null}\n        </ActivityCard>\n    );\n};\n\nexport { CollapsedVersion as CollapsedVersionBase };\nexport default injectIntl(CollapsedVersion);\n"],"mappings":"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","ignoreList":[]}