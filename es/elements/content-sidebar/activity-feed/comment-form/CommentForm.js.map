{"version":3,"file":"CommentForm.js","names":["React","noop","classNames","EditorState","FormattedMessage","injectIntl","Avatar","CommentFormControls","DraftJSMentionSelector","createMentionTimestampSelectorState","getFormattedCommentText","Form","Media","withFeatureConsumer","getFeatureConfig","FILE_EXTENSIONS","messages","getEditorState","shouldFocusOnOpen","message","moveFocusToEnd","CommentForm","Component","constructor","args","_defineProperty","commentEditorState","props","tagged_message","createComment","updateComment","onSubmit","entityId","text","hasMention","id","setState","nextEditorState","state","componentDidUpdate","isOpen","prevIsOpen","render","className","getMentionWithQuery","intl","formatMessage","isDisabled","mentionSelectorContacts","contactsLoaded","onCancel","onFocus","user","isEditing","getAvatarUrl","showTip","placeholder","commentWrite","features","file","timestampCommentsConfig","istimestampedCommentsEnabled","enabled","isVideo","video","includes","extension","versionId","file_version","allowVideoTimestamps","timestampLabel","commentTimestampLabel","undefined","inputContainerClassNames","createElement","Figure","Body","onValidSubmit","onFormValidSubmitHandler","contacts","editorState","hideLabel","isRequired","name","fileVersionId","label","commentLabel","description","atMentionTipDescription","onChange","onMentionSelectorChangeHandler","onMention","validateOnBlur","atMentionTip","timestampedCommentsEnabled","CommentFormUnwrapped"],"sources":["../../../../../src/elements/content-sidebar/activity-feed/comment-form/CommentForm.js"],"sourcesContent":["/**\n * @flow\n * @file Component for Approval comment form\n */\n\nimport * as React from 'react';\nimport noop from 'lodash/noop';\nimport classNames from 'classnames';\nimport { EditorState } from 'draft-js';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport type { IntlShape } from 'react-intl';\nimport Avatar from '../Avatar';\nimport CommentFormControls from './CommentFormControls';\nimport DraftJSMentionSelector, {\n    createMentionTimestampSelectorState,\n    getFormattedCommentText,\n} from '../../../../components/form-elements/draft-js-mention-selector';\nimport Form from '../../../../components/form-elements/form/Form';\nimport Media from '../../../../components/media';\nimport { withFeatureConsumer, getFeatureConfig } from '../../../common/feature-checking';\n// $FlowFixMe\nimport { FILE_EXTENSIONS } from '../../../common/item/constants';\nimport type { FeatureConfig } from '../../../common/feature-checking/flowTypes';\nimport messages from './messages';\nimport type { GetAvatarUrlCallback } from '../../../common/flowTypes';\nimport type { SelectorItems, User, BoxItem } from '../../../../common/types/core';\nimport './CommentForm.scss';\n\nexport type CommentFormProps = {\n    className: string,\n    contactsLoaded?: boolean,\n    createComment?: Function,\n    entityId?: string,\n    features?: FeatureConfig,\n    file?: BoxItem,\n    getAvatarUrl?: GetAvatarUrlCallback,\n    getMentionWithQuery?: Function,\n    intl: IntlShape,\n    isDisabled?: boolean,\n    isEditing?: boolean,\n    isOpen: boolean,\n    mentionSelectorContacts?: SelectorItems<>,\n    onCancel: Function,\n    onFocus?: Function,\n    onSubmit?: Function,\n    placeholder?: string,\n    shouldFocusOnOpen: boolean,\n    showTip?: boolean,\n    tagged_message?: string,\n    updateComment?: Function,\n    user?: User,\n};\n\nconst getEditorState = (shouldFocusOnOpen: boolean, message?: string): EditorState =>\n    shouldFocusOnOpen\n        ? EditorState.moveFocusToEnd(createMentionTimestampSelectorState(message))\n        : createMentionTimestampSelectorState(message);\n\ntype State = {\n    commentEditorState: any,\n};\n\nclass CommentForm extends React.Component<CommentFormProps, State> {\n    static defaultProps = {\n        isOpen: false,\n        shouldFocusOnOpen: false,\n        timestampedCommentsEnabled: false,\n    };\n\n    state = {\n        commentEditorState: getEditorState(this.props.shouldFocusOnOpen, this.props.tagged_message),\n    };\n\n    componentDidUpdate({ isOpen: prevIsOpen }: CommentFormProps): void {\n        const { isOpen } = this.props;\n\n        if (isOpen !== prevIsOpen && !isOpen) {\n            this.setState({\n                commentEditorState: getEditorState(false),\n            });\n        }\n    }\n\n    onFormValidSubmitHandler = (): void => {\n        const { createComment = noop, updateComment = noop, onSubmit, entityId } = this.props;\n\n        const { text, hasMention } = this.getFormattedCommentText();\n\n        if (!text) {\n            return;\n        }\n\n        if (entityId) {\n            updateComment({ id: entityId, text, hasMention });\n        } else {\n            createComment({ text, hasMention });\n        }\n\n        if (onSubmit) {\n            onSubmit();\n        }\n\n        this.setState({\n            commentEditorState: getEditorState(false),\n        });\n    };\n\n    onMentionSelectorChangeHandler = (nextEditorState: any): void =>\n        this.setState({ commentEditorState: nextEditorState });\n\n    /**\n     * Formats the comment editor's text such that it will be accepted by the server.\n     *\n     * @returns {Object}\n     */\n    getFormattedCommentText = (): { hasMention: boolean, text: string } => {\n        const { commentEditorState } = this.state;\n        return getFormattedCommentText(commentEditorState);\n    };\n\n    render(): React.Node {\n        const {\n            className,\n            getMentionWithQuery,\n            intl: { formatMessage },\n            isDisabled,\n            isOpen,\n            mentionSelectorContacts = [],\n            contactsLoaded,\n            onCancel,\n            onFocus,\n            user,\n            isEditing,\n            tagged_message,\n            getAvatarUrl,\n            showTip = true,\n            placeholder = formatMessage(messages.commentWrite),\n            features = {},\n            file,\n        } = this.props;\n        // Get feature configuration from context\n        const timestampCommentsConfig = getFeatureConfig(features, 'activityFeed.timestampedComments');\n        // Use feature config to determine if time stamped comments are enabled\n        const istimestampedCommentsEnabled = timestampCommentsConfig?.enabled === true;\n        const isVideo = FILE_EXTENSIONS.video.includes(file?.extension);\n        const versionId = file?.file_version?.id;\n        const allowVideoTimestamps = isVideo && istimestampedCommentsEnabled;\n        const timestampLabel = allowVideoTimestamps ? formatMessage(messages.commentTimestampLabel) : undefined;\n        const { commentEditorState } = this.state;\n        const inputContainerClassNames = classNames('bcs-CommentForm', className, {\n            'bcs-is-open': isOpen,\n        });\n\n        return (\n            <Media className={inputContainerClassNames}>\n                {!isEditing && !!user && (\n                    <Media.Figure className=\"bcs-CommentForm-avatar\">\n                        <Avatar getAvatarUrl={getAvatarUrl} user={user} />\n                    </Media.Figure>\n                )}\n\n                <Media.Body className=\"bcs-CommentForm-body\" data-testid=\"bcs-CommentForm-body\">\n                    <Form onValidSubmit={this.onFormValidSubmitHandler}>\n                        <DraftJSMentionSelector\n                            className=\"bcs-CommentForm-input\"\n                            contacts={isOpen ? mentionSelectorContacts : []}\n                            contactsLoaded={contactsLoaded}\n                            editorState={commentEditorState}\n                            hideLabel\n                            isDisabled={isDisabled}\n                            isRequired={isOpen}\n                            name=\"commentText\"\n                            fileVersionId={versionId}\n                            label={formatMessage(messages.commentLabel)}\n                            timestampLabel={timestampLabel}\n                            description={formatMessage(messages.atMentionTipDescription)}\n                            onChange={this.onMentionSelectorChangeHandler}\n                            onFocus={onFocus}\n                            onMention={getMentionWithQuery}\n                            placeholder={tagged_message ? undefined : placeholder}\n                            validateOnBlur={false}\n                        />\n                        {showTip && (\n                            <div className=\"bcs-CommentForm-tip\">\n                                <FormattedMessage {...messages.atMentionTip} />\n                            </div>\n                        )}\n\n                        {isOpen && <CommentFormControls onCancel={onCancel} />}\n                    </Form>\n                </Media.Body>\n            </Media>\n        );\n    }\n}\n\n// For testing only\nexport { CommentForm as CommentFormUnwrapped };\nexport default withFeatureConsumer(injectIntl(CommentForm));\n"],"mappings":"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","ignoreList":[]}