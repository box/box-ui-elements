{"version":3,"file":"SidebarUtils.js","names":["React","FormattedMessage","AsyncLoad","messages","SidebarLoading","SidebarLoadingError","hasSkills","hasSkillsData","mark","SIDEBAR_VIEW_SKILLS","SIDEBAR_VIEW_ACTIVITY","SIDEBAR_VIEW_METADATA","SIDEBAR_VIEW_DETAILS","SIDEBAR_VIEW_VERSIONS","SIDEBAR_VIEW_DOCGEN","SIDEBAR_VIEW_METADATA_REDESIGN","SIDEBAR_VIEW_BOXAI","isFeatureEnabled","SidebarUtils","canHaveDetailsSidebar","detailsSidebarProps","hasProperties","hasAccessStats","hasClassification","hasVersions","hasNotices","canHaveMetadataSidebar","props","hasMetadata","canHaveBoxAISidebar","features","canHaveActivitySidebar","hasActivityFeed","canHaveSkillsSidebar","canHaveSidebar","shouldRenderSkillsSidebar","file","shouldRenderMetadataSidebar","editors","metadataSidebarProps","isFeatureEnabledMetadataSidebarProp","Array","isArray","length","shouldRenderSidebar","getTitleForView","view","createElement","sidebarSkillsTitle","sidebarDetailsTitle","sidebarMetadataTitle","sidebarActivityTitle","sidebarDocGenTitle","getLoaderForView","markName","importFn","Promise","resolve","getAsyncSidebarContent","_objectSpread","errorComponent","fallback","title","loader"],"sources":["../../../src/elements/content-sidebar/SidebarUtils.js"],"sourcesContent":["/**\n * @flow\n * @file Utility for sidebar\n * @author Box\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport AsyncLoad from '../common/async-load';\nimport messages from '../common/messages';\nimport SidebarLoading from './SidebarLoading';\nimport SidebarLoadingError from './SidebarLoadingError';\nimport { hasSkills as hasSkillsData } from './skills/skillUtils';\nimport { mark } from '../../utils/performance';\nimport {\n    SIDEBAR_VIEW_SKILLS,\n    SIDEBAR_VIEW_ACTIVITY,\n    SIDEBAR_VIEW_METADATA,\n    SIDEBAR_VIEW_DETAILS,\n    SIDEBAR_VIEW_VERSIONS,\n    SIDEBAR_VIEW_DOCGEN,\n    SIDEBAR_VIEW_METADATA_REDESIGN,\n    SIDEBAR_VIEW_BOXAI,\n} from '../../constants';\nimport { isFeatureEnabled } from '../common/feature-checking';\nimport type { MetadataSidebarProps } from './MetadataSidebar';\nimport type { MetadataEditor } from '../../common/types/metadata';\nimport type { BoxItem } from '../../common/types/core';\n\nclass SidebarUtils {\n    /**\n     * Determines if we can render the details sidebar.\n     * Only relies on props.\n     *\n     * @param {ContentSidebarProps} props - User passed in props\n     * @return {Boolean} true if we should render\n     */\n    static canHaveDetailsSidebar({ detailsSidebarProps = {} }: ContentSidebarProps): boolean {\n        const { hasProperties, hasAccessStats, hasClassification, hasVersions, hasNotices } = detailsSidebarProps;\n        return !!hasProperties || !!hasAccessStats || !!hasClassification || !!hasVersions || !!hasNotices;\n    }\n\n    /**\n     * Determines if we can render the metadata sidebar.\n     * Only relies on props.\n     *\n     * @param {ContentSidebarProps} props - User passed in props\n     * @return {Boolean} true if we should render\n     */\n    static canHaveMetadataSidebar(props: ContentSidebarProps): boolean {\n        return !!props.hasMetadata;\n    }\n\n    /**\n     * Determines if we can render the Box AI sidebar.\n     * Only relies on props.\n     *\n     * @param {ContentSidebarProps} props - User passed in props\n     * @return {Boolean} true if we should render\n     */\n    static canHaveBoxAISidebar(props: ContentSidebarProps): boolean {\n        return isFeatureEnabled(props.features, 'boxai.sidebar.enabled');\n    }\n\n    /**\n     * Determines if we can render the activity sidebar.\n     * Only relies on props.\n     *\n     * @param {ContentSidebarProps} props - User passed in props\n     * @return {Boolean} true if we should render\n     */\n    static canHaveActivitySidebar(props: ContentSidebarProps): boolean {\n        return !!props.hasActivityFeed;\n    }\n\n    /**\n     * Determines if we can render the skills sidebar.\n     * Only relies on props.\n     *\n     * @param {ContentSidebarProps} props - User passed in props\n     * @return {Boolean} true if we should render\n     */\n    static canHaveSkillsSidebar(props: ContentSidebarProps): boolean {\n        return !!props.hasSkills;\n    }\n\n    /**\n     * Determines if we can render the sidebar.\n     * Only relies on props.\n     *\n     * @param {ContentSidebarProps} props - User passed in props\n     * @return {Boolean} true if we should have a sidebar\n     */\n    static canHaveSidebar(props: ContentSidebarProps): boolean {\n        return (\n            SidebarUtils.canHaveDetailsSidebar(props) ||\n            SidebarUtils.canHaveActivitySidebar(props) ||\n            SidebarUtils.canHaveBoxAISidebar(props) ||\n            SidebarUtils.canHaveSkillsSidebar(props) ||\n            SidebarUtils.canHaveMetadataSidebar(props)\n        );\n    }\n\n    /**\n     * Determines if we should bother rendering the skills sidebar.\n     * Relies on props and file data.\n     *\n     * @private\n     * @param {ContentSidebarProps} props - User passed in props\n     * @param {BoxItem} file - box file\n     * @return {Boolean} true if we should render\n     */\n    static shouldRenderSkillsSidebar(props: ContentSidebarProps, file?: BoxItem): boolean {\n        return !!file && SidebarUtils.canHaveSkillsSidebar(props) && hasSkillsData(file);\n    }\n\n    /**\n     * Determines if we should bother rendering the metadata sidebar.\n     * Relies on props and metadata data and feature enabled or not.\n     *\n     * @private\n     * @param {ContentSidebarProps} props - User passed in props\n     * @param {Array<MetadataEditor>} editors - metadata editors\n     * @return {Boolean} true if we should render\n     */\n    static shouldRenderMetadataSidebar(props: ContentSidebarProps, editors?: Array<MetadataEditor>): boolean {\n        const { metadataSidebarProps = {} }: ContentSidebarProps = props;\n        const { isFeatureEnabled: isFeatureEnabledMetadataSidebarProp = true }: MetadataSidebarProps =\n            metadataSidebarProps;\n\n        return (\n            SidebarUtils.canHaveMetadataSidebar(props) &&\n            (isFeatureEnabledMetadataSidebarProp || (Array.isArray(editors) && editors.length > 0))\n        );\n    }\n\n    /**\n     * Determines if we should bother rendering the sidebar.\n     * Relies on props and file data.\n     *\n     * @param {ContentSidebarProps} props - User passed in props\n     * @param {BoxItem} file - box file\n     * @param {Array<MetadataEditor>} editors - metadata editors\n     * @return {Boolean} true if we should fetch or render\n     */\n    static shouldRenderSidebar(props: ContentSidebarProps, file?: BoxItem, editors?: Array<MetadataEditor>): boolean {\n        return (\n            !!file &&\n            (SidebarUtils.canHaveDetailsSidebar(props) ||\n                SidebarUtils.shouldRenderSkillsSidebar(props, file) ||\n                SidebarUtils.canHaveActivitySidebar(props) ||\n                SidebarUtils.canHaveBoxAISidebar(props) ||\n                SidebarUtils.shouldRenderMetadataSidebar(props, editors))\n        );\n    }\n\n    /**\n     * Gets the title for a given sidebar view\n     *\n     * @param {string} view - the view name\n     * @return {React.Node} - the node to render\n     */\n    static getTitleForView(view: string): React.Node {\n        switch (view) {\n            case SIDEBAR_VIEW_SKILLS:\n                return <FormattedMessage {...messages.sidebarSkillsTitle} />;\n            case SIDEBAR_VIEW_DETAILS:\n                return <FormattedMessage {...messages.sidebarDetailsTitle} />;\n            case SIDEBAR_VIEW_METADATA:\n                return <FormattedMessage {...messages.sidebarMetadataTitle} />;\n            case SIDEBAR_VIEW_BOXAI:\n                // Box AI Sidebar title is not displayed in the BoxAISidebar component,\n                // and it also should not be visible as fallback before panel is loaded\n                // as that results in title flickering. So, returning empty string here.\n                return '';\n            case SIDEBAR_VIEW_ACTIVITY:\n                return <FormattedMessage {...messages.sidebarActivityTitle} />;\n            case SIDEBAR_VIEW_DOCGEN:\n                return <FormattedMessage {...messages.sidebarDocGenTitle} />;\n            default:\n                return null;\n        }\n    }\n\n    /**\n     * Marks and gets the loader for a given sidebar view\n     *\n     * @param {String} view - the view name\n     * @param {String} markName -  the name to be used by performance.mark\n     * @return {Function} - a function which will resolve the module to load\n     */\n    static getLoaderForView(view: string, markName: string): Promise<any> {\n        mark(markName);\n        let importFn;\n        switch (view) {\n            case SIDEBAR_VIEW_SKILLS:\n                importFn = import(/* webpackMode: \"lazy\", webpackChunkName: \"skills-sidebar\" */ './SkillsSidebar');\n                break;\n            case SIDEBAR_VIEW_DETAILS:\n                importFn = import(/* webpackMode: \"lazy\", webpackChunkName: \"details-sidebar\" */ './DetailsSidebar');\n                break;\n            case SIDEBAR_VIEW_METADATA:\n                importFn = import(/* webpackMode: \"lazy\", webpackChunkName: \"metadata-sidebar\" */ './MetadataSidebar');\n                break;\n            case SIDEBAR_VIEW_METADATA_REDESIGN:\n                importFn = import(\n                    /* webpackMode: \"lazy\", webpackChunkName: \"metadata-sidebar-redesigned\" */ './MetadataSidebarRedesign'\n                );\n                break;\n            case SIDEBAR_VIEW_ACTIVITY:\n                importFn = import(/* webpackMode: \"lazy\", webpackChunkName: \"activity-sidebar\" */ './ActivitySidebar');\n                break;\n            case SIDEBAR_VIEW_BOXAI:\n                importFn = import(/* webpackMode: \"lazy\", webpackChunkName: \"boxai-sidebar\" */ './BoxAISidebar');\n                break;\n            case SIDEBAR_VIEW_VERSIONS:\n                importFn = import(/* webpackMode: \"lazy\", webpackChunkName: \"versions-sidebar\" */ './versions');\n                break;\n            case SIDEBAR_VIEW_DOCGEN:\n                importFn = import(\n                    /* webpackMode: \"lazy\", webpackChunkName: \"docgen-sidebar\" */ './DocGenSidebar/DocGenSidebar'\n                );\n                break;\n            default:\n                return Promise.resolve(null);\n        }\n\n        return importFn;\n    }\n\n    /**\n     * Gets the component which async loads a given sidebar view\n     *\n     * @param {String} view - the view name\n     * @param {String} markName -  the name to be used by performance.mark\n     * @param {Object} props - additional props\n     * @return {React.Node} - the node to render\n     */\n    static getAsyncSidebarContent(view: string, markName: string, props: Object = {}) {\n        return AsyncLoad({\n            errorComponent: SidebarLoadingError,\n            fallback: <SidebarLoading title={this.getTitleForView(view)} />,\n            loader: () => this.getLoaderForView(view, markName),\n            ...props,\n        });\n    }\n}\n\nexport default SidebarUtils;\n"],"mappings":"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","ignoreList":[]}