{"version":3,"file":"SidebarToggle.js","names":["React","withRouterIfEnabled","SidebarToggleButton","SIDEBAR_NAV_TARGETS","SidebarToggle","history","internalSidebarNavigation","internalSidebarNavigationHandler","isOpen","routerDisabled","handleToggleClick","event","preventDefault","_objectSpread","open","replace","state","createElement","TOGGLE","onClick","SidebarToggleComponent"],"sources":["../../../src/elements/content-sidebar/SidebarToggle.js"],"sourcesContent":["/**\n * @flow strict\n * @file Sidebar Toggle component\n * @author Box\n */\n\nimport * as React from 'react';\nimport { type RouterHistory } from 'react-router-dom';\nimport { withRouterIfEnabled } from '../common/routing';\nimport SidebarToggleButton from '../../components/sidebar-toggle-button/SidebarToggleButton';\nimport { SIDEBAR_NAV_TARGETS } from '../common/interactionTargets';\nimport type { InternalSidebarNavigation, InternalSidebarNavigationHandler } from '../common/types/SidebarNavigation';\n\ntype Props = {\n    history?: RouterHistory,\n    internalSidebarNavigation?: InternalSidebarNavigation,\n    internalSidebarNavigationHandler?: InternalSidebarNavigationHandler,\n    isOpen?: boolean,\n    routerDisabled?: boolean,\n};\n\nconst SidebarToggle = ({ \n    history, \n    internalSidebarNavigation,\n    internalSidebarNavigationHandler,\n    isOpen,\n    routerDisabled = false,\n}: Props) => {\n    const handleToggleClick = event => {\n        event.preventDefault();\n        \n        if (routerDisabled) {\n            // Use internal navigation handler when router is disabled\n            if (internalSidebarNavigationHandler && internalSidebarNavigation) {\n                internalSidebarNavigationHandler({\n                    ...internalSidebarNavigation,\n                    open: !isOpen,\n                }, true); // Always use replace for toggle\n            }\n        } else if (history) {\n            history.replace({ state: { open: !isOpen } });\n        }\n    };\n\n    return (\n        <SidebarToggleButton\n            data-resin-target={SIDEBAR_NAV_TARGETS.TOGGLE}\n            data-testid=\"sidebartoggle\"\n            // $FlowFixMe\n            isOpen={isOpen}\n            onClick={handleToggleClick}\n        />\n    );\n};\n\nexport { SidebarToggle as SidebarToggleComponent };\nexport default withRouterIfEnabled(SidebarToggle);\n"],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;;AAEA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAE9B,SAASC,mBAAmB,QAAQ,mBAAmB;AACvD,OAAOC,mBAAmB,MAAM,4DAA4D;AAC5F,SAASC,mBAAmB,QAAQ,8BAA8B;AAWlE,MAAMC,aAAa,GAAGA,CAAC;EACnBC,OAAO;EACPC,yBAAyB;EACzBC,gCAAgC;EAChCC,MAAM;EACNC,cAAc,GAAG;AACd,CAAC,KAAK;EACT,MAAMC,iBAAiB,GAAGC,KAAK,IAAI;IAC/BA,KAAK,CAACC,cAAc,CAAC,CAAC;IAEtB,IAAIH,cAAc,EAAE;MAChB;MACA,IAAIF,gCAAgC,IAAID,yBAAyB,EAAE;QAC/DC,gCAAgC,CAAAM,aAAA,CAAAA,aAAA,KACzBP,yBAAyB;UAC5BQ,IAAI,EAAE,CAACN;QAAM,IACd,IAAI,CAAC,CAAC,CAAC;MACd;IACJ,CAAC,MAAM,IAAIH,OAAO,EAAE;MAChBA,OAAO,CAACU,OAAO,CAAC;QAAEC,KAAK,EAAE;UAAEF,IAAI,EAAE,CAACN;QAAO;MAAE,CAAC,CAAC;IACjD;EACJ,CAAC;EAED,oBACIR,KAAA,CAAAiB,aAAA,CAACf,mBAAmB;IAChB,qBAAmBC,mBAAmB,CAACe,MAAO;IAC9C,eAAY;IACZ;IAAA;IACAV,MAAM,EAAEA,MAAO;IACfW,OAAO,EAAET;EAAkB,CAC9B,CAAC;AAEV,CAAC;AAED,SAASN,aAAa,IAAIgB,sBAAsB;AAChD,eAAenB,mBAAmB,CAACG,aAAa,CAAC","ignoreList":[]}