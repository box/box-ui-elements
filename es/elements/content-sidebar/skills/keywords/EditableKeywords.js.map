{"version":3,"file":"EditableKeywords.js","names":["React","FormattedMessage","PillSelector","PrimaryButton","Button","messages","SKILLS_TARGETS","getPills","EditableKeywords","PureComponent","constructor","props","_defineProperty","option","index","onDelete","keywords","key","state","isInCompositionMode","onBlur","onAdd","keyword","type","text","setState","event","currentTarget","value","pills","componentDidUpdate","prevKeywords","render","onSave","onCancel","createElement","className","onCompositionEnd","onCompositionStart","onInput","onKeyDown","onPaste","onRemove","selectedOptions","KEYWORDS","EDIT_CANCEL","onClick","cancel","EDIT_SAVE","save"],"sources":["../../../../../src/elements/content-sidebar/skills/keywords/EditableKeywords.js"],"sourcesContent":["/**\n * @flow\n * @file Editable Skill Keywords card component\n * @author Box\n */\n\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport PillSelector from '../../../../components/pill-selector-dropdown/PillSelector';\nimport PrimaryButton from '../../../../components/primary-button/PrimaryButton';\nimport Button from '../../../../components/button/Button';\nimport messages from '../../../common/messages';\nimport { SKILLS_TARGETS } from '../../../common/interactionTargets';\nimport getPills from './keywordUtils';\nimport type { Pill, Pills } from './flowTypes';\nimport type { SkillCardEntry } from '../../../../common/types/skills';\nimport './EditableKeywords.scss';\n\ntype Props = {\n    keywords: Array<SkillCardEntry>,\n    onAdd: Function,\n    onCancel: Function,\n    onDelete: Function,\n    onSave: Function,\n};\n\ntype State = {\n    isInCompositionMode: boolean,\n    keyword: string,\n    pills: Pills,\n};\n\nclass EditableKeywords extends React.PureComponent<Props, State> {\n    props: Props;\n\n    state: State;\n\n    /**\n     * [constructor]\n     *\n     * @public\n     * @return {EditableKeywords}\n     */\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            pills: getPills(props.keywords),\n            keyword: '',\n            isInCompositionMode: false,\n        };\n    }\n\n    /**\n     * Called when keywords gets new properties.\n     * Should reset to original state.\n     *\n     * @private\n     * @param {Object} nextProps - component props\n     * @return {void}\n     */\n    componentDidUpdate({ keywords: prevKeywords }: Props): void {\n        const { keywords } = this.props;\n\n        if (prevKeywords !== keywords) {\n            this.setState({ pills: getPills(keywords), keyword: '' });\n        }\n    }\n\n    /**\n     * Called when keywords gets new properties.\n     * Should reset to original state.\n     *\n     * @private\n     * @param {Object} option - pill\n     * @param {number} index - pill index\n     * @return {void}\n     */\n    onRemove = (option: Pill, index: number): void => {\n        // eslint-disable-line\n        const { onDelete, keywords }: Props = this.props;\n        onDelete(keywords[index]);\n    };\n\n    /**\n     * When pressing enter in the pill input box\n     *\n     * @private\n     * @param {Event} event - keyboard event\n     * @return {void}\n     */\n    onKeyDown = ({ key }: SyntheticKeyboardEvent<HTMLInputElement>): void => {\n        if (key === 'Enter' && !this.state.isInCompositionMode) {\n            this.onBlur();\n        }\n    };\n\n    /**\n     * Called when pill selector is blurred.\n     * Adds a new pill if needed.\n     *\n     * @private\n     * @return {void}\n     */\n    onBlur = () => {\n        const { onAdd }: Props = this.props;\n        const { keyword } = this.state;\n\n        if (keyword) {\n            onAdd({\n                type: 'text',\n                text: keyword,\n            });\n        }\n    };\n\n    /**\n     * Enables composition mode.\n     *\n     * @private\n     * @return {void}\n     */\n    onCompositionStart = () => {\n        this.setState({ isInCompositionMode: true });\n    };\n\n    /**\n     * Disables composition mode.\n     *\n     * @private\n     * @return {void}\n     */\n    onCompositionEnd = () => {\n        this.setState({ isInCompositionMode: false });\n    };\n\n    /**\n     * Called when pill selector gets new input value.\n     *\n     * @private\n     * @return {void}\n     */\n    onInput = (event: SyntheticKeyboardEvent<HTMLInputElement>) => {\n        const currentTarget = (event.currentTarget: HTMLInputElement);\n        this.setState({\n            keyword: currentTarget.value,\n        });\n    };\n\n    /**\n     * Renders the keywords\n     *\n     * @private\n     * @return {void}\n     */\n    render() {\n        const { onSave, onCancel }: Props = this.props;\n        const { pills, keyword }: State = this.state;\n        return (\n            <span className=\"bdl-EditableKeywords\">\n                <PillSelector\n                    onBlur={this.onBlur}\n                    onCompositionEnd={this.onCompositionEnd}\n                    onCompositionStart={this.onCompositionStart}\n                    onInput={this.onInput}\n                    onKeyDown={this.onKeyDown}\n                    onPaste={this.onInput}\n                    onRemove={this.onRemove}\n                    selectedOptions={pills}\n                    value={keyword}\n                />\n                <div className=\"be-keywords-buttons\">\n                    <Button data-resin-target={SKILLS_TARGETS.KEYWORDS.EDIT_CANCEL} onClick={onCancel} type=\"button\">\n                        <FormattedMessage {...messages.cancel} />\n                    </Button>\n                    <PrimaryButton data-resin-target={SKILLS_TARGETS.KEYWORDS.EDIT_SAVE} onClick={onSave} type=\"button\">\n                        <FormattedMessage {...messages.save} />\n                    </PrimaryButton>\n                </div>\n            </span>\n        );\n    }\n}\n\nexport default EditableKeywords;\n"],"mappings":"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","ignoreList":[]}