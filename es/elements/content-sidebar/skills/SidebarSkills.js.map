{"version":3,"file":"SidebarSkills.js","names":["React","FormattedMessage","uniqueId","messages","SKILLS_TARGETS","SidebarSection","isValidSkillsCard","SidebarSkillsCard","SKILLS_TRANSCRIPT","SKILLS_KEYWORD","SKILLS_TIMELINE","SKILLS_FACE","SKILLS_STATUS","SKILLS_ERROR_UNKNOWN","getCardInteractionTarget","skill_card_type","KEYWORDS","CARD","FACES","TRANSCRIPTS","getCardTitle","skill_card_title","code","message","defaultKey","defaultMessage","defaultSkill","createElement","faceSkill","transcriptSkill","topicsSkill","statusSkill","error","SidebarSkills","file","cards","errors","getViewer","onSkillChange","permissions","isSkillEditable","can_upload","map","card","index","status","id","cardId","isValid","interactionTarget","title","hasEntries","Array","isArray","entries","length","key","isOpen","hasError","isEditable","args"],"sources":["../../../../src/elements/content-sidebar/skills/SidebarSkills.js"],"sourcesContent":["/**\n * @flow\n * @file Details sidebar component\n * @author Box\n */\n\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport uniqueId from 'lodash/uniqueId';\nimport messages from '../../common/messages';\nimport { SKILLS_TARGETS } from '../../common/interactionTargets';\nimport SidebarSection from '../SidebarSection';\nimport { isValidSkillsCard } from './skillUtils';\nimport SidebarSkillsCard from './SidebarSkillsCard';\nimport {\n    SKILLS_TRANSCRIPT,\n    SKILLS_KEYWORD,\n    SKILLS_TIMELINE,\n    SKILLS_FACE,\n    SKILLS_STATUS,\n    SKILLS_ERROR_UNKNOWN,\n} from '../../../constants';\nimport type { SkillCard, SkillCardLocalizableType } from '../../../common/types/skills';\nimport type { NumberBooleanMap, BoxItem } from '../../../common/types/core';\n\ntype Props = {\n    cards: Array<SkillCard>,\n    errors: NumberBooleanMap,\n    file: BoxItem,\n    getViewer: Function,\n    onSkillChange: Function,\n};\n\n/**\n * Get ths skill interaction target based on card type\n *\n * @param {Object} card - skill card\n * @return {string} - interaction target\n */\nconst getCardInteractionTarget = ({ skill_card_type }: SkillCard): string => {\n    switch (skill_card_type) {\n        case SKILLS_KEYWORD:\n            return SKILLS_TARGETS.KEYWORDS.CARD;\n        case SKILLS_FACE:\n        case SKILLS_TIMELINE:\n            return SKILLS_TARGETS.FACES.CARD;\n        case SKILLS_TRANSCRIPT:\n            return SKILLS_TARGETS.TRANSCRIPTS.CARD;\n        default:\n            return '';\n    }\n};\n\n/**\n * Get ths string skill title based on card title\n *\n * @param {Object} card - skill card\n * @return {string} - skill title\n */\nconst getCardTitle = ({ skill_card_type, skill_card_title = {} }: SkillCard): string | React.Node => {\n    const { code, message }: SkillCardLocalizableType = skill_card_title;\n    const defaultKey = `${skill_card_type}Skill`;\n    const defaultMessage = messages[defaultKey] || messages.defaultSkill;\n\n    switch (code) {\n        case 'skills_faces':\n            return <FormattedMessage {...messages.faceSkill} />;\n        case 'skills_transcript':\n            return <FormattedMessage {...messages.transcriptSkill} />;\n        case 'skills_topics':\n            return <FormattedMessage {...messages.topicsSkill} />;\n        case 'skills_status':\n            return <FormattedMessage {...messages.statusSkill} />;\n        case 'skills_error':\n            return <FormattedMessage {...messages.error} />;\n        default:\n            return message || <FormattedMessage {...defaultMessage} />;\n    }\n};\n\nconst SidebarSkills = ({ file, cards, errors, getViewer, onSkillChange }: Props): Array<React.Node> => {\n    const { permissions = {} }: BoxItem = file;\n    const isSkillEditable = !!permissions.can_upload;\n\n    return cards.map((card: SkillCard, index: number) => {\n        if (card.error && !card.status) {\n            card.skill_card_type = SKILLS_STATUS;\n            card.status = {\n                code: SKILLS_ERROR_UNKNOWN,\n            };\n            delete card.error;\n        }\n\n        const { id } = card;\n        const cardId = id || uniqueId('card_');\n        const isValid = isValidSkillsCard(file, card);\n        const interactionTarget = getCardInteractionTarget(card);\n        const title = getCardTitle(card);\n        const hasEntries = Array.isArray(card.entries) ? card.entries.length > 0 : isValid;\n\n        return isValid ? (\n            <SidebarSection key={cardId} interactionTarget={interactionTarget} isOpen={hasEntries} title={title}>\n                <SidebarSkillsCard\n                    card={card}\n                    cards={cards}\n                    getViewer={getViewer}\n                    hasError={!!errors[index]}\n                    isEditable={isSkillEditable}\n                    onSkillChange={(...args) => onSkillChange(index, ...args)}\n                />\n            </SidebarSection>\n        ) : null;\n    });\n};\n\nexport default SidebarSkills;\n"],"mappings":"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","ignoreList":[]}