{"version":3,"file":"SidebarSkillsCard.js","names":["React","Status","Transcript","Keywords","Faces","SKILLS_TRANSCRIPT","SKILLS_KEYWORD","SKILLS_TIMELINE","SKILLS_FACE","SKILLS_STATUS","SidebarSkillsCard","card","cards","hasError","isEditable","onSkillChange","getViewer","skill_card_type","createElement","transcript","find","undefined"],"sources":["../../../../src/elements/content-sidebar/skills/SidebarSkillsCard.js"],"sourcesContent":["/**\n * @flow\n * @file Skills card component\n * @author Box\n */\n\nimport * as React from 'react';\nimport Status from './status';\nimport Transcript from './transcript';\nimport Keywords from './keywords';\nimport Faces from './faces';\nimport { SKILLS_TRANSCRIPT, SKILLS_KEYWORD, SKILLS_TIMELINE, SKILLS_FACE, SKILLS_STATUS } from '../../../constants';\nimport type { SkillCard } from '../../../common/types/skills';\n\ntype Props = {\n    card: SkillCard,\n    cards: Array<SkillCard>,\n    getViewer: Function,\n    hasError: boolean,\n    isEditable: boolean,\n    onSkillChange: Function,\n};\n\nconst SidebarSkillsCard = ({ card, cards, hasError, isEditable, onSkillChange, getViewer }: Props) => {\n    switch (card.skill_card_type) {\n        case SKILLS_KEYWORD:\n            return (\n                <Keywords\n                    card={card}\n                    getViewer={getViewer}\n                    hasError={hasError}\n                    isEditable={isEditable}\n                    onSkillChange={onSkillChange}\n                    transcript={\n                        isEditable\n                            ? cards.find(({ skill_card_type }) => skill_card_type === SKILLS_TRANSCRIPT)\n                            : undefined\n                    }\n                />\n            );\n        case SKILLS_TIMELINE:\n        case SKILLS_FACE:\n            return (\n                <Faces\n                    card={card}\n                    getViewer={getViewer}\n                    hasError={hasError}\n                    isEditable={isEditable}\n                    onSkillChange={onSkillChange}\n                />\n            );\n        case SKILLS_TRANSCRIPT:\n            return (\n                <Transcript\n                    card={card}\n                    getViewer={getViewer}\n                    hasError={hasError}\n                    isEditable={isEditable}\n                    onSkillChange={onSkillChange}\n                />\n            );\n        case SKILLS_STATUS:\n            return <Status card={card} />;\n        default:\n            return null;\n    }\n};\n\nexport default SidebarSkillsCard;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,KAAK,MAAM,SAAS;AAC3B,SAASC,iBAAiB,EAAEC,cAAc,EAAEC,eAAe,EAAEC,WAAW,EAAEC,aAAa,QAAQ,oBAAoB;AAYnH,MAAMC,iBAAiB,GAAGA,CAAC;EAAEC,IAAI;EAAEC,KAAK;EAAEC,QAAQ;EAAEC,UAAU;EAAEC,aAAa;EAAEC;AAAiB,CAAC,KAAK;EAClG,QAAQL,IAAI,CAACM,eAAe;IACxB,KAAKX,cAAc;MACf,oBACIN,KAAA,CAAAkB,aAAA,CAACf,QAAQ;QACLQ,IAAI,EAAEA,IAAK;QACXK,SAAS,EAAEA,SAAU;QACrBH,QAAQ,EAAEA,QAAS;QACnBC,UAAU,EAAEA,UAAW;QACvBC,aAAa,EAAEA,aAAc;QAC7BI,UAAU,EACNL,UAAU,GACJF,KAAK,CAACQ,IAAI,CAAC,CAAC;UAAEH;QAAgB,CAAC,KAAKA,eAAe,KAAKZ,iBAAiB,CAAC,GAC1EgB;MACT,CACJ,CAAC;IAEV,KAAKd,eAAe;IACpB,KAAKC,WAAW;MACZ,oBACIR,KAAA,CAAAkB,aAAA,CAACd,KAAK;QACFO,IAAI,EAAEA,IAAK;QACXK,SAAS,EAAEA,SAAU;QACrBH,QAAQ,EAAEA,QAAS;QACnBC,UAAU,EAAEA,UAAW;QACvBC,aAAa,EAAEA;MAAc,CAChC,CAAC;IAEV,KAAKV,iBAAiB;MAClB,oBACIL,KAAA,CAAAkB,aAAA,CAAChB,UAAU;QACPS,IAAI,EAAEA,IAAK;QACXK,SAAS,EAAEA,SAAU;QACrBH,QAAQ,EAAEA,QAAS;QACnBC,UAAU,EAAEA,UAAW;QACvBC,aAAa,EAAEA;MAAc,CAChC,CAAC;IAEV,KAAKN,aAAa;MACd,oBAAOT,KAAA,CAAAkB,aAAA,CAACjB,MAAM;QAACU,IAAI,EAAEA;MAAK,CAAE,CAAC;IACjC;MACI,OAAO,IAAI;EACnB;AACJ,CAAC;AAED,eAAeD,iBAAiB","ignoreList":[]}