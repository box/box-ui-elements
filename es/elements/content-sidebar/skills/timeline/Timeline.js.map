{"version":3,"file":"Timeline.js","names":["React","FormattedMessage","PlainButton","IconTrackNext","IconTrackPrevious","messages","SKILLS_TARGETS","Timeslice","isValidStartTime","Timeline","text","duration","timeslices","getViewer","interactionTarget","timeSliceIndex","playSegment","index","incr","newIndex","Math","min","length","max","viewer","timeslice","validTime","play","start","createElement","className","map","end","key","onClick","TIMELINE","PREVIOUS","type","title","previousSegment","NEXT","nextSegment"],"sources":["../../../../../src/elements/content-sidebar/skills/timeline/Timeline.js"],"sourcesContent":["/**\n * @flow\n * @file Timeline component\n * @author Box\n */\n\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport PlainButton from '../../../../components/plain-button/PlainButton';\nimport IconTrackNext from '../../../../icons/general/IconTrackNext';\nimport IconTrackPrevious from '../../../../icons/general/IconTrackPrevious';\nimport messages from '../../../common/messages';\nimport { SKILLS_TARGETS } from '../../../common/interactionTargets';\nimport Timeslice from './Timeslice';\nimport { isValidStartTime } from '../transcript/timeSliceUtils';\nimport type { SkillCardEntryTimeSlice, SkillCardEntryType } from '../../../../common/types/skills';\n\nimport './Timeline.scss';\n\ntype Props = {\n    duration?: number,\n    getViewer?: Function,\n    interactionTarget: string,\n    text?: string,\n    timeslices?: SkillCardEntryTimeSlice[],\n    type?: SkillCardEntryType,\n    url?: string,\n};\n\nconst Timeline = ({ text = '', duration = 0, timeslices = [], getViewer, interactionTarget }: Props) => {\n    let timeSliceIndex = -1;\n\n    const playSegment = (index: number, incr: number = 0) => {\n        const newIndex = incr > 0 ? Math.min(timeslices.length - 1, index + incr) : Math.max(0, index + incr);\n        const viewer = getViewer ? getViewer() : null;\n        const timeslice = timeslices[newIndex];\n        const validTime = isValidStartTime(timeslice);\n\n        if (validTime && viewer && typeof viewer.play === 'function') {\n            viewer.play(timeslice.start);\n            timeSliceIndex = newIndex;\n        }\n    };\n\n    return (\n        <div className=\"be-timeline\">\n            {text && <div className=\"be-timeline-label\">{text}</div>}\n            <div className=\"be-timeline-line-wrapper\">\n                <div className=\"be-timeline-line\" />\n                {timeslices.map(\n                    ({ start, end }: SkillCardEntryTimeSlice, index) => (\n                        /* eslint-disable react/no-array-index-key */\n                        <Timeslice\n                            key={index}\n                            duration={duration}\n                            end={end}\n                            index={index}\n                            interactionTarget={interactionTarget}\n                            onClick={playSegment}\n                            start={start}\n                        />\n                    ),\n                    /* eslint-enable react/no-array-index-key */\n                )}\n            </div>\n            <div className=\"be-timeline-btns\">\n                <PlainButton\n                    data-resin-target={SKILLS_TARGETS.TIMELINE.PREVIOUS}\n                    onClick={() => playSegment(timeSliceIndex, -1)}\n                    type=\"button\"\n                >\n                    <IconTrackPrevious title={<FormattedMessage {...messages.previousSegment} />} />\n                </PlainButton>\n                <PlainButton\n                    data-resin-target={SKILLS_TARGETS.TIMELINE.NEXT}\n                    onClick={() => playSegment(timeSliceIndex, 1)}\n                    type=\"button\"\n                >\n                    <IconTrackNext title={<FormattedMessage {...messages.nextSegment} />} />\n                </PlainButton>\n            </div>\n        </div>\n    );\n};\n\nexport default Timeline;\n"],"mappings":"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","ignoreList":[]}