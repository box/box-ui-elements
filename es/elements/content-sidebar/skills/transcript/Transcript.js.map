{"version":3,"file":"Transcript.js","names":["React","FormattedMessage","classNames","bdlGray50","PlainButton","IconEdit","IconCopy","IconExpand","IconCollapse","formatTime","LoadingIndicatorWrapper","Tooltip","copy","SKILLS_TARGETS","messages","isValidTimeSlice","TranscriptRow","Transcript","PureComponent","constructor","args","_defineProperty","isEditingIndex","undefined","newTranscriptText","isCollapsed","isLoading","accumulator","appears","text","start","Array","isArray","index","state","isEditingRow","transcriptText","interactionTarget","TRANSCRIPTS","EDIT_TEXT","TRANSCRIPT","createElement","key","isEditing","onCancel","onChange","onClick","onSave","setState","prevState","card","entries","onSkillChange","props","entry","replacement","_objectSpread","replaced","event","currentTarget","value","previewSegment","copiedClass","reduce","transcriptReducer","copyBtn","classList","add","setTimeout","remove","btn","componentDidUpdate","prevProps","wasEditing","getViewer","viewer","isValid","length","timeSlice","play","render","isEditable","hasEntries","hasManyEntries","editBtnClassName","contentClassName","expandCollapseMessage","expand","collapse","className","COPY","getDOMRef","copyBtnRef","copyTranscript","type","color","EXPAND","toggleExpandCollapse","editLabel","EDIT","toggleIsEditing","transcriptEdit","map","transcriptMapper","skillNoInfoFoundError"],"sources":["../../../../../src/elements/content-sidebar/skills/transcript/Transcript.js"],"sourcesContent":["/**\n * @flow\n * @file Transcript component\n * @author Box\n */\n\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport classNames from 'classnames';\nimport { bdlGray50 } from '../../../../styles/variables';\nimport PlainButton from '../../../../components/plain-button/PlainButton';\nimport IconEdit from '../../../../icons/general/IconEdit';\nimport IconCopy from '../../../../icons/general/IconCopy';\nimport IconExpand from '../../../../icons/general/IconExpand';\nimport IconCollapse from '../../../../icons/general/IconCollapse';\nimport { formatTime } from '../../../../utils/datetime';\nimport LoadingIndicatorWrapper from '../../../../components/loading-indicator/LoadingIndicatorWrapper';\nimport Tooltip from '../../../../components/tooltip/Tooltip';\nimport { copy } from '../../../../utils/download';\nimport { SKILLS_TARGETS } from '../../../common/interactionTargets';\nimport messages from '../../../common/messages';\nimport { isValidTimeSlice } from './timeSliceUtils';\nimport TranscriptRow from './TranscriptRow';\nimport type { SkillCardEntry, SkillCard, SkillCardEntryTimeSlice } from '../../../../common/types/skills';\nimport './Transcript.scss';\n\ntype Props = {\n    card: SkillCard,\n    getViewer?: Function,\n    isEditable: boolean,\n    onSkillChange: Function,\n};\n\ntype State = {\n    isCollapsed: boolean,\n    isEditingIndex?: number,\n    isLoading: boolean,\n    newTranscriptText: string,\n};\n\nclass Transcript extends React.PureComponent<Props, State> {\n    props: Props;\n\n    state: State = {\n        isEditingIndex: undefined,\n        newTranscriptText: '',\n        isCollapsed: true,\n        isLoading: false,\n    };\n\n    copyBtn: HTMLButtonElement;\n\n    /**\n     * Called when transcripts gets new properties\n     *\n     * @private\n     * @return {void}\n     */\n    componentDidUpdate(prevProps: Props): void {\n        if (prevProps === this.props) {\n            return;\n        }\n\n        const wasEditing = typeof this.state.isEditingIndex === 'number';\n        this.setState({\n            isEditingIndex: wasEditing ? -1 : undefined,\n            newTranscriptText: '',\n            isLoading: false,\n        });\n    }\n\n    /**\n     * Reducer to accumulate all transcript entries for copying\n     *\n     * @param {Object} accumulator - reducer accumulator\n     * @return {string} accumulated transcript entries\n     */\n    transcriptReducer = (accumulator: string, { appears, text }: SkillCardEntry): string => {\n        const start: string =\n            isValidTimeSlice(appears) && Array.isArray(appears) ? `${formatTime(appears[0].start)}:` : '';\n        return `${accumulator}${start} ${text || ''}\\r\\n`;\n    };\n\n    /**\n     * Mapper to accumulate all transcript entries for displaying\n     *\n     * @param {Object} accumulator - reducer accumulator\n     * @param {number} index - mapper index\n     * @return {string} accumulated transcript entries\n     */\n    transcriptMapper = ({ appears, text }: SkillCardEntry, index: number): React.Node => {\n        const { isEditingIndex, newTranscriptText }: State = this.state;\n        const isEditingRow = isEditingIndex === index;\n        const transcriptText = isEditingRow ? newTranscriptText : text;\n        const interactionTarget = isEditingRow\n            ? SKILLS_TARGETS.TRANSCRIPTS.EDIT_TEXT\n            : SKILLS_TARGETS.TRANSCRIPTS.TRANSCRIPT;\n        return (\n            <TranscriptRow\n                key={index}\n                appears={appears}\n                interactionTarget={interactionTarget}\n                isEditing={isEditingRow}\n                onCancel={this.onCancel}\n                onChange={this.onChange}\n                onClick={() => this.onClick(index)}\n                onSave={this.onSave}\n                text={transcriptText}\n            />\n        );\n    };\n\n    /**\n     * Toggles the edit mode\n     *\n     * @private\n     * @return {void}\n     */\n    toggleIsEditing = (): void => {\n        this.setState(prevState => ({\n            isEditingIndex: typeof prevState.isEditingIndex === 'number' ? undefined : -1,\n        }));\n    };\n\n    /**\n     * Previews a transcript segment\n     *\n     * @private\n     * @param {number|void} [index] - row index to edit\n     * @return {void}\n     */\n    previewSegment(index: number) {\n        const {\n            card: { entries },\n            getViewer,\n        }: Props = this.props;\n        const { appears } = entries[index];\n        const viewer = getViewer ? getViewer() : null;\n        const isValid = isValidTimeSlice(appears) && Array.isArray(appears) && appears.length === 1;\n        const timeSlice = ((appears: any): Array<SkillCardEntryTimeSlice>);\n        const start = isValid ? timeSlice[0].start : 0;\n\n        if (isValid && viewer && typeof viewer.play === 'function') {\n            viewer.play(start);\n        }\n    }\n\n    /**\n     * Saves the new card data\n     *\n     * @private\n     * @return {void}\n     */\n    onSave = (): void => {\n        const {\n            card: { entries },\n            onSkillChange,\n        }: Props = this.props;\n        const { isEditingIndex, newTranscriptText }: State = this.state;\n\n        if (typeof isEditingIndex !== 'number') {\n            return;\n        }\n\n        const entry = entries[isEditingIndex];\n        if (entry.text === newTranscriptText) {\n            this.onCancel();\n        } else {\n            this.setState({ isLoading: true, isEditingIndex: -1 });\n            onSkillChange(null, null, [\n                {\n                    replacement: { ...entry, text: newTranscriptText },\n                    replaced: entry,\n                },\n            ]);\n        }\n    };\n\n    /**\n     * Cancels editing\n     *\n     * @private\n     * @return {void}\n     */\n    onCancel = (): void => {\n        this.setState({ isEditingIndex: -1, newTranscriptText: '' });\n    };\n\n    /**\n     * Reflects changes of editing\n     *\n     * @private\n     * @param {Event} event - keyboard event\n     * @return {void}\n     */\n    onChange = (event: SyntheticKeyboardEvent<HTMLTextAreaElement>): void => {\n        const currentTarget = (event.currentTarget: HTMLTextAreaElement);\n        this.setState({\n            newTranscriptText: currentTarget.value,\n        });\n    };\n\n    /**\n     * Click handler for transcript\n     *\n     * @private\n     * @return {void}\n     */\n    onClick = (index: number): void => {\n        const {\n            card: { entries },\n        }: Props = this.props;\n        const { isEditingIndex }: State = this.state;\n        if (typeof isEditingIndex === 'number') {\n            this.setState({\n                isEditingIndex: index,\n                newTranscriptText: entries[index].text,\n            });\n        } else {\n            this.previewSegment(index);\n        }\n    };\n\n    /**\n     * Copies the transcript.\n     * Also animates the copy button.\n     *\n     * @private\n     * @return {void}\n     */\n    copyTranscript = () => {\n        const {\n            card: { entries },\n        }: Props = this.props;\n        const copiedClass = 'be-transcript-copied';\n        copy(entries.reduce(this.transcriptReducer, ''));\n\n        // Animate the button by adding a class\n        if (this.copyBtn) {\n            this.copyBtn.classList.add(copiedClass);\n        }\n\n        // Remove the animation class\n        setTimeout(() => {\n            if (this.copyBtn) {\n                this.copyBtn.classList.remove(copiedClass);\n            }\n        }, 1000);\n    };\n\n    /**\n     * Copy button reference\n     *\n     * @private\n     * @return {void}\n     */\n    copyBtnRef = (btn: HTMLButtonElement): void => {\n        this.copyBtn = btn;\n    };\n\n    /**\n     * Toggles transcript exapand and collapse\n     *\n     * @private\n     * @return {void}\n     */\n    toggleExpandCollapse = (): void => {\n        this.setState(prevState => ({\n            isCollapsed: !prevState.isCollapsed,\n        }));\n    };\n\n    /**\n     * Renders the transcript\n     *\n     * @private\n     * @return {Object}\n     */\n    render() {\n        const {\n            card: { entries },\n            isEditable,\n        }: Props = this.props;\n        const { isEditingIndex, isCollapsed, isLoading }: State = this.state;\n        const hasEntries = entries.length > 0;\n        const hasManyEntries = entries.length > 5;\n        const isEditing = typeof isEditingIndex === 'number';\n        const editBtnClassName = classNames('be-transcript-edit', {\n            'be-transcript-is-editing': isEditing,\n        });\n        const contentClassName = classNames({\n            'be-transcript-content-collapsed': isCollapsed,\n        });\n        const expandCollapseMessage = isCollapsed ? messages.expand : messages.collapse;\n\n        return (\n            <LoadingIndicatorWrapper className=\"be-transcript\" isLoading={isLoading}>\n                {hasEntries && !isLoading && (\n                    <div className=\"be-transcript-actions\">\n                        <Tooltip text={<FormattedMessage {...messages.copy} />}>\n                            <PlainButton\n                                className=\"be-transcript-copy\"\n                                data-resin-target={SKILLS_TARGETS.TRANSCRIPTS.COPY}\n                                getDOMRef={this.copyBtnRef}\n                                onClick={this.copyTranscript}\n                                type=\"button\"\n                            >\n                                <IconCopy color={bdlGray50} />\n                            </PlainButton>\n                        </Tooltip>\n                        {hasManyEntries && (\n                            <Tooltip text={<FormattedMessage {...expandCollapseMessage} />}>\n                                <PlainButton\n                                    className=\"be-transcript-expand\"\n                                    data-resin-target={SKILLS_TARGETS.TRANSCRIPTS.EXPAND}\n                                    onClick={this.toggleExpandCollapse}\n                                    type=\"button\"\n                                >\n                                    {isCollapsed ? (\n                                        <IconExpand color={bdlGray50} />\n                                    ) : (\n                                        <IconCollapse color={bdlGray50} />\n                                    )}\n                                </PlainButton>\n                            </Tooltip>\n                        )}\n                        {isEditable && (\n                            <Tooltip text={<FormattedMessage {...messages.editLabel} />}>\n                                <PlainButton\n                                    className={editBtnClassName}\n                                    data-resin-target={SKILLS_TARGETS.TRANSCRIPTS.EDIT}\n                                    onClick={this.toggleIsEditing}\n                                    type=\"button\"\n                                >\n                                    <IconEdit />\n                                </PlainButton>\n                            </Tooltip>\n                        )}\n                    </div>\n                )}\n                {isEditing ? (\n                    <div className=\"be-transcript-edit-message\">\n                        <FormattedMessage {...messages.transcriptEdit} />\n                    </div>\n                ) : null}\n                {hasEntries ? (\n                    <div className={contentClassName}>{entries.map(this.transcriptMapper)}</div>\n                ) : (\n                    <FormattedMessage {...messages.skillNoInfoFoundError} />\n                )}\n            </LoadingIndicatorWrapper>\n        );\n    }\n}\n\nexport default Transcript;\n"],"mappings":"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","ignoreList":[]}