{"version":3,"file":"DetailsSidebar.js","names":["React","flow","getProp","noop","FormattedMessage","API","messages","SidebarAccessStats","SidebarClassification","SidebarContentInsights","SidebarContent","SidebarFileProperties","SidebarNotices","SidebarSection","SidebarVersions","EVENT_JS_READY","getBadItemError","isFeatureEnabled","withFeatureConsumer","mark","SECTION_TARGETS","SIDEBAR_FIELDS_TO_FETCH","SIDEBAR_FIELDS_TO_FETCH_ARCHIVE","withAPIContext","withErrorBoundary","withLogger","HTTP_STATUS_CODE_FORBIDDEN","ORIGIN_DETAILS_SIDEBAR","IS_ERROR_DISPLAYED","SIDEBAR_VIEW_DETAILS","MARK_NAME_JS_READY","DetailsSidebar","PureComponent","constructor","props","_defineProperty","file","setState","fileError","undefined","e","code","onError","inlineError","title","fileDescriptionInlineErrorTitleMessage","content","defaultInlineErrorContentMessage","newDescription","api","state","description","getFileAPI","setFileDescription","descriptionChangeSuccessCallback","descriptionChangeErrorCallback","hasAccessStats","isForbidden","accessStatsError","error","fileAccessStatsPermissionsError","maskError","errorHeader","fileAccessStatsErrorHeaderMessage","errorSubHeader","defaultErrorMaskSubHeaderMessage","isLoadingAccessStats","accessStats","logger","onReadyMetric","endMarkName","componentDidMount","hasContentInsights","fetchContentInsights","fetchFile","fetchAccessStats","componentDidUpdate","prevHasAccessStats","prevHasContentInsights","hasAccessStatsChanged","hasContentInsightsChanged","successCallback","fetchFileSuccessCallback","errorCallback","fetchFileErrorCallback","features","fileId","archiveEnabled","fields","getFile","getFileAccessStatsAPI","getFileAccessStats","fetchAccessStatsSuccessCallback","fetchAccessStatsErrorCallback","refresh","render","classification","contentInsights","elementId","hasProperties","hasNotices","hasClassification","hasRetentionPolicy","hasVersions","onAccessStatsClick","onVersionHistoryClick","onClassificationClick","onContentInsightsClick","onRetentionPolicyExtendClick","retentionPolicy","createElement","className","sidebarView","sidebarDetailsTitle","onEdit","_extends","interactionTarget","FILE_PROPERTIES","sidebarProperties","onDescriptionChange","isLoading","DetailsSidebarComponent"],"sources":["../../../src/elements/content-sidebar/DetailsSidebar.js"],"sourcesContent":["/**\n * @flow\n * @file Details sidebar component\n * @author Box\n */\n\nimport * as React from 'react';\nimport flow from 'lodash/flow';\nimport getProp from 'lodash/get';\nimport noop from 'lodash/noop';\nimport { FormattedMessage } from 'react-intl';\nimport API from '../../api';\nimport messages from '../common/messages';\nimport SidebarAccessStats from './SidebarAccessStats';\nimport SidebarClassification from './SidebarClassification';\n// $FlowFixMe typescript component\nimport SidebarContentInsights from './SidebarContentInsights';\nimport SidebarContent from './SidebarContent';\nimport SidebarFileProperties from './SidebarFileProperties';\nimport SidebarNotices from './SidebarNotices';\nimport SidebarSection from './SidebarSection';\nimport SidebarVersions from './SidebarVersions';\nimport { EVENT_JS_READY } from '../common/logger/constants';\nimport { getBadItemError } from '../../utils/error';\nimport { isFeatureEnabled, withFeatureConsumer } from '../common/feature-checking';\nimport { mark } from '../../utils/performance';\nimport { SECTION_TARGETS } from '../common/interactionTargets';\nimport { SIDEBAR_FIELDS_TO_FETCH, SIDEBAR_FIELDS_TO_FETCH_ARCHIVE } from '../../utils/fields';\nimport { withAPIContext } from '../common/api-context';\nimport { withErrorBoundary } from '../common/error-boundary';\nimport { withLogger } from '../common/logger';\nimport {\n    HTTP_STATUS_CODE_FORBIDDEN,\n    ORIGIN_DETAILS_SIDEBAR,\n    IS_ERROR_DISPLAYED,\n    SIDEBAR_VIEW_DETAILS,\n} from '../../constants';\nimport type { Errors } from '../common/flowTypes';\nimport type { ClassificationInfo, ContentInsights, FileAccessStats } from './flowTypes';\nimport type { WithLoggerProps } from '../../common/types/logging';\nimport type { ElementsErrorCallback, ErrorContextProps, ElementsXhrError } from '../../common/types/api';\nimport type { BoxItem } from '../../common/types/core';\nimport type { FeatureConfig } from '../common/feature-checking';\nimport './DetailsSidebar.scss';\n\ntype ExternalProps = {\n    classification?: ClassificationInfo,\n    contentInsights?: ContentInsights,\n    elementId: string,\n    fetchContentInsights?: () => void,\n    fileId: string,\n    hasAccessStats?: boolean,\n    hasClassification?: boolean,\n    hasContentInsights?: boolean,\n    hasNotices?: boolean,\n    hasProperties?: boolean,\n    hasRetentionPolicy?: boolean,\n    hasSidebarInitialized?: boolean,\n    hasVersions?: boolean,\n    onAccessStatsClick?: Function,\n    onClassificationClick?: (e: SyntheticEvent<HTMLButtonElement>) => void,\n    onContentInsightsClick?: () => void,\n    onRetentionPolicyExtendClick?: Function,\n    onVersionHistoryClick?: Function,\n    retentionPolicy?: Object,\n} & ErrorContextProps &\n    WithLoggerProps;\ntype Props = {\n    api: API,\n    features: FeatureConfig,\n} & ExternalProps &\n    ErrorContextProps &\n    WithLoggerProps;\n\ntype State = {\n    accessStats?: FileAccessStats,\n    accessStatsError?: Errors,\n    file?: BoxItem,\n    fileError?: Errors,\n    isLoadingAccessStats: boolean,\n};\n\nconst MARK_NAME_JS_READY = `${ORIGIN_DETAILS_SIDEBAR}_${EVENT_JS_READY}`;\n\nmark(MARK_NAME_JS_READY);\n\nclass DetailsSidebar extends React.PureComponent<Props, State> {\n    static defaultProps = {\n        hasNotices: false,\n        hasProperties: false,\n        hasAccessStats: false,\n        hasClassification: false,\n        hasRetentionPolicy: false,\n        hasVersions: false,\n        onError: noop,\n    };\n\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            isLoadingAccessStats: false,\n        };\n        const { logger } = this.props;\n        logger.onReadyMetric({\n            endMarkName: MARK_NAME_JS_READY,\n        });\n    }\n\n    componentDidMount() {\n        const { hasAccessStats, hasContentInsights, fetchContentInsights } = this.props;\n\n        this.fetchFile();\n        if (hasAccessStats) {\n            this.fetchAccessStats();\n        }\n\n        if (hasContentInsights && fetchContentInsights) {\n            fetchContentInsights();\n        }\n    }\n\n    componentDidUpdate({ hasAccessStats: prevHasAccessStats, hasContentInsights: prevHasContentInsights }: Props) {\n        const { hasAccessStats, hasContentInsights, fetchContentInsights } = this.props;\n        // Component visibility props such as hasAccessStats can sometimes be flipped after an async call\n        const hasAccessStatsChanged = prevHasAccessStats !== hasAccessStats;\n        const hasContentInsightsChanged = prevHasContentInsights !== hasContentInsights;\n\n        if (hasAccessStatsChanged) {\n            if (hasAccessStats) {\n                this.fetchAccessStats();\n            } else {\n                this.setState({\n                    isLoadingAccessStats: false,\n                    accessStats: undefined,\n                    accessStatsError: undefined,\n                });\n            }\n        }\n\n        if (hasContentInsightsChanged && hasContentInsights && fetchContentInsights) {\n            fetchContentInsights();\n        }\n    }\n\n    /**\n     * File description update callback\n     *\n     * @private\n     * @param {BoxItem} file - Updated file object\n     * @return {void}\n     */\n    descriptionChangeSuccessCallback = (file: BoxItem): void => {\n        this.setState({ file, fileError: undefined });\n    };\n\n    /**\n     * Fetches a file with the fields needed for details sidebar\n     *\n     * @param {Function} successCallback - the success callback\n     * @param {Function} errorCallback - the error callback\n     * @return {void}\n     */\n    fetchFile(\n        successCallback: (file: BoxItem) => void = this.fetchFileSuccessCallback,\n        errorCallback: ElementsErrorCallback = this.fetchFileErrorCallback,\n    ): void {\n        const { api, features, fileId }: Props = this.props;\n        const archiveEnabled = isFeatureEnabled(features, 'contentSidebar.archive.enabled');\n\n        // TODO: replace this with DETAILS_SIDEBAR_FIELDS_TO_FETCH as we do not need all the sidebar fields\n        const fields = archiveEnabled ? SIDEBAR_FIELDS_TO_FETCH_ARCHIVE : SIDEBAR_FIELDS_TO_FETCH;\n\n        api.getFileAPI().getFile(fileId, successCallback, errorCallback, {\n            fields,\n        });\n    }\n\n    /**\n     * Handles a successful file fetch\n     *\n     * @param {Object} file - the box file\n     * @return {void}\n     */\n    fetchFileSuccessCallback = (file: BoxItem) => {\n        this.setState({\n            file,\n            fileError: undefined,\n        });\n    };\n\n    /**\n     * Handles a failed file fetch\n     *\n     * @private\n     * @param {Error} e - API error\n     * @param {string} code - error code\n     * @return {void}\n     */\n    fetchFileErrorCallback = (e: ElementsXhrError, code: string) => {\n        // TODO: handle the error properly (probably with maskError) once files call split out\n        this.setState({\n            file: undefined,\n        });\n\n        this.props.onError(e, code, {\n            e,\n        });\n    };\n\n    /**\n     * Handles a failed file description update\n     *\n     * @private\n     * @param {BoxItem} file - Original file object\n     * @return {void}\n     */\n    descriptionChangeErrorCallback = (file: BoxItem): void => {\n        // Reset the state back to the original description since the API call failed\n        this.setState({\n            file,\n            fileError: {\n                inlineError: {\n                    title: messages.fileDescriptionInlineErrorTitleMessage,\n                    content: messages.defaultInlineErrorContentMessage,\n                },\n            },\n        });\n    };\n\n    /**\n     * Function to update file description\n     *\n     * @private\n     * @param {string} newDescription - New file description\n     * @return {void}\n     */\n    onDescriptionChange = (newDescription: string): void => {\n        const { api }: Props = this.props;\n        const { file }: State = this.state;\n        if (!file) {\n            throw getBadItemError();\n        }\n\n        const { description }: BoxItem = file;\n        if (newDescription === description) {\n            return;\n        }\n\n        api.getFileAPI().setFileDescription(\n            file,\n            newDescription,\n            this.descriptionChangeSuccessCallback,\n            this.descriptionChangeErrorCallback,\n        );\n    };\n\n    /**\n     * Handles a failed file access stats fetch\n     *\n     * @private\n     * @param {Error} e - API error\n     * @param {string} code - error code\n     * @return {void}\n     */\n    fetchAccessStatsErrorCallback = (e: ElementsXhrError, code: string) => {\n        if (!this.props.hasAccessStats) {\n            return;\n        }\n\n        const isForbidden = getProp(e, 'status') === HTTP_STATUS_CODE_FORBIDDEN;\n        let accessStatsError;\n\n        if (isForbidden) {\n            accessStatsError = {\n                error: messages.fileAccessStatsPermissionsError,\n            };\n        } else {\n            accessStatsError = {\n                maskError: {\n                    errorHeader: messages.fileAccessStatsErrorHeaderMessage,\n                    errorSubHeader: messages.defaultErrorMaskSubHeaderMessage,\n                },\n            };\n        }\n\n        this.setState({\n            isLoadingAccessStats: false,\n            accessStats: undefined,\n            accessStatsError,\n        });\n\n        this.props.onError(e, code, {\n            e,\n            [IS_ERROR_DISPLAYED]: !isForbidden,\n        });\n    };\n\n    /**\n     * File access stats fetch success callback\n     *\n     * @private\n     * @param {Object} accessStats - access stats for a file\n     * @return {void}\n     */\n    fetchAccessStatsSuccessCallback = (accessStats: FileAccessStats): void => {\n        if (!this.props.hasAccessStats) {\n            return;\n        }\n\n        this.setState({\n            accessStats,\n            accessStatsError: undefined,\n            isLoadingAccessStats: false,\n        });\n    };\n\n    /**\n     * Fetches the access stats for a file\n     *\n     * @private\n     * @return {void}\n     */\n    fetchAccessStats(): void {\n        const { api, fileId }: Props = this.props;\n        const { isLoadingAccessStats } = this.state;\n\n        if (isLoadingAccessStats) {\n            return;\n        }\n\n        this.setState({ isLoadingAccessStats: true });\n        api.getFileAccessStatsAPI(false).getFileAccessStats(\n            fileId,\n            this.fetchAccessStatsSuccessCallback,\n            this.fetchAccessStatsErrorCallback,\n        );\n    }\n\n    refresh(): void {\n        this.fetchAccessStats();\n    }\n\n    render() {\n        const {\n            classification,\n            contentInsights,\n            elementId,\n            hasProperties,\n            hasNotices,\n            hasAccessStats,\n            hasClassification,\n            hasContentInsights,\n            hasRetentionPolicy,\n            hasVersions,\n            onAccessStatsClick,\n            onVersionHistoryClick,\n            onClassificationClick,\n            onContentInsightsClick,\n            onRetentionPolicyExtendClick,\n            retentionPolicy,\n        }: Props = this.props;\n\n        const { accessStats, accessStatsError, file, fileError, isLoadingAccessStats }: State = this.state;\n\n        // TODO: Add loading indicator and handle errors once file call is split out\n        return (\n            <SidebarContent\n                className=\"bcs-details\"\n                elementId={elementId}\n                sidebarView={SIDEBAR_VIEW_DETAILS}\n                title={<FormattedMessage {...messages.sidebarDetailsTitle} />}\n            >\n                {file && hasNotices && (\n                    <div className=\"bcs-DetailsSidebar-notices\">\n                        <SidebarNotices file={file} />\n                    </div>\n                )}\n                {file && hasClassification && (\n                    <SidebarClassification classification={classification} file={file} onEdit={onClassificationClick} />\n                )}\n                {file && hasAccessStats && (\n                    <SidebarAccessStats\n                        accessStats={accessStats}\n                        file={file}\n                        onAccessStatsClick={onAccessStatsClick}\n                        {...accessStatsError}\n                    />\n                )}\n                {file && hasContentInsights && (\n                    <SidebarContentInsights\n                        contentInsights={contentInsights}\n                        onContentInsightsClick={onContentInsightsClick}\n                    />\n                )}\n                {file && hasProperties && (\n                    <SidebarSection\n                        interactionTarget={SECTION_TARGETS.FILE_PROPERTIES}\n                        title={<FormattedMessage {...messages.sidebarProperties} />}\n                    >\n                        {hasVersions && <SidebarVersions file={file} onVersionHistoryClick={onVersionHistoryClick} />}\n                        <SidebarFileProperties\n                            file={file}\n                            onDescriptionChange={this.onDescriptionChange}\n                            {...fileError}\n                            hasRetentionPolicy={hasRetentionPolicy}\n                            isLoading={isLoadingAccessStats}\n                            onRetentionPolicyExtendClick={onRetentionPolicyExtendClick}\n                            retentionPolicy={retentionPolicy}\n                        />\n                    </SidebarSection>\n                )}\n            </SidebarContent>\n        );\n    }\n}\n\nexport type DetailsSidebarProps = ExternalProps;\nexport { DetailsSidebar as DetailsSidebarComponent };\nexport default flow([\n    withLogger(ORIGIN_DETAILS_SIDEBAR),\n    withErrorBoundary(ORIGIN_DETAILS_SIDEBAR),\n    withAPIContext,\n    withFeatureConsumer,\n])(DetailsSidebar);\n"],"mappings":"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","ignoreList":[]}