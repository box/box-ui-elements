{"version":3,"file":"Sidebar.js","names":["React","classNames","flow","getProp","noop","uniqueid","withRouter","LoadingIndicator","LocalStore","SidebarNav","SidebarPanels","SidebarUtils","ThemingStyles","withCurrentUser","isFeatureEnabled","withFeatureConsumer","SIDEBAR_VIEW_DOCGEN","API","SIDEBAR_FORCE_KEY","SIDEBAR_FORCE_VALUE_CLOSED","SIDEBAR_FORCE_VALUE_OPEN","SIDEBAR_SELECTED_PANEL_KEY","Sidebar","Component","constructor","props","_defineProperty","createRef","prevProps","history","location","file","api","metadataSidebarProps","docGenSidebarProps","prevFile","prevDocGenSidebarProps","id","enabled","checkDocGenTemplate","isDocGenTemplate","push","pathname","basePath","substring","split","event","file_version","currentVersion","fileVersionSlug","urlPrefix","getUrlPrefix","preventDefault","name","isInitialState","features","onPanelChange","store","setItem","state","isDirty","getLocationState","setForcedByLocation","componentDidMount","onOpenChange","isOpen","componentDidUpdate","fileId","prevFileId","prevLocation","replace","silent","setState","openState","open","handleDocgenTemplateOnUpdate","key","locationState","isForced","undefined","getItem","isForcedOpen","isForcedSet","isDefaultOpen","refresh","shouldRefreshCache","current","sidebarPanels","isLocationOpen","getDefaultPanel","render","activitySidebarProps","additionalTabs","boxAISidebarProps","className","currentUser","currentUserError","detailsSidebarProps","getPreview","getViewer","hasAdditionalTabs","hasNav","hasVersions","isLoading","metadataEditors","onAnnotationSelect","onVersionChange","signSidebarProps","theme","versionsSidebarProps","hasBoxAI","canHaveBoxAISidebar","hasActivity","canHaveActivitySidebar","hasDetails","canHaveDetailsSidebar","hasMetadata","shouldRenderMetadataSidebar","hasSkills","shouldRenderSkillsSidebar","onVersionHistoryClick","handleVersionHistoryClick","styleClassName","defaultPanel","createElement","Fragment","elementId","hasDocGen","handlePanelChange","ref","annotatorState","getAnnotationsMatchPath","getAnnotationsPath","SidebarComponent"],"sources":["../../../src/elements/content-sidebar/Sidebar.js"],"sourcesContent":["/**\n * @flow\n * @file Content Sidebar Component\n * @author Box\n */\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport flow from 'lodash/flow';\nimport getProp from 'lodash/get';\nimport noop from 'lodash/noop';\nimport uniqueid from 'lodash/uniqueId';\nimport { withRouter } from 'react-router-dom';\nimport type { Location, RouterHistory } from 'react-router-dom';\nimport LoadingIndicator from '../../components/loading-indicator/LoadingIndicator';\nimport LocalStore from '../../utils/LocalStore';\nimport SidebarNav from './SidebarNav';\nimport SidebarPanels from './SidebarPanels';\nimport SidebarUtils from './SidebarUtils';\n// $FlowFixMe TypeScript file\nimport ThemingStyles from '../common/theming';\nimport { withCurrentUser } from '../common/current-user';\nimport { isFeatureEnabled, withFeatureConsumer } from '../common/feature-checking';\nimport type { FeatureConfig } from '../common/feature-checking';\nimport type { ActivitySidebarProps } from './ActivitySidebar';\nimport type { DetailsSidebarProps } from './DetailsSidebar';\nimport type { DocGenSidebarProps } from './DocGenSidebar/DocGenSidebar';\nimport type { MetadataSidebarProps } from './MetadataSidebar';\nimport type { BoxAISidebarProps } from './BoxAISidebar';\nimport type { VersionsSidebarProps } from './versions';\nimport type { AdditionalSidebarTab } from './flowTypes';\nimport type { MetadataEditor } from '../../common/types/metadata';\nimport type { BoxItem, User } from '../../common/types/core';\nimport type { SignSidebarProps } from './SidebarNavSign';\nimport type { Errors } from '../common/flowTypes';\n// $FlowFixMe TypeScript file\nimport type { Theme } from '../common/theming';\nimport { SIDEBAR_VIEW_DOCGEN } from '../../constants';\nimport API from '../../api';\n\ntype Props = {\n    activitySidebarProps: ActivitySidebarProps,\n    additionalTabs?: Array<AdditionalSidebarTab>,\n    api: API,\n    boxAISidebarProps: BoxAISidebarProps,\n    className: string,\n    currentUser?: User,\n    currentUserError?: Errors,\n    detailsSidebarProps: DetailsSidebarProps,\n    docGenSidebarProps: DocGenSidebarProps,\n    features: FeatureConfig,\n    file: BoxItem,\n    fileId: string,\n    getPreview: Function,\n    getViewer: Function,\n    hasActivityFeed: boolean,\n    hasAdditionalTabs: boolean,\n    hasMetadata: boolean,\n    hasNav: boolean,\n    hasSkills: boolean,\n    hasVersions: boolean,\n    history: RouterHistory,\n    isDefaultOpen?: boolean,\n    isLoading?: boolean,\n    location: Location,\n    metadataEditors?: Array<MetadataEditor>,\n    metadataSidebarProps: MetadataSidebarProps,\n    onAnnotationSelect?: Function,\n    onOpenChange?: (isOpen: boolean, isInitialState: boolean) => void,\n    onPanelChange?: (name: string, isInitialState: boolean) => void,\n    onVersionChange?: Function,\n    onVersionHistoryClick?: Function,\n    signSidebarProps: SignSidebarProps,\n    theme?: Theme,\n    versionsSidebarProps: VersionsSidebarProps,\n};\n\ntype State = {\n    isDirty: boolean,\n};\n\nexport const SIDEBAR_FORCE_KEY: 'bcs.force' = 'bcs.force';\nexport const SIDEBAR_FORCE_VALUE_CLOSED: 'closed' = 'closed';\nexport const SIDEBAR_FORCE_VALUE_OPEN: 'open' = 'open';\nexport const SIDEBAR_SELECTED_PANEL_KEY: 'sidebar-selected-panel' = 'sidebar-selected-panel';\n\nclass Sidebar extends React.Component<Props, State> {\n    static defaultProps = {\n        annotatorState: {},\n        isDefaultOpen: true,\n        isLoading: false,\n        getAnnotationsMatchPath: noop,\n        getAnnotationsPath: noop,\n    };\n\n    id: string = uniqueid('bcs_');\n\n    props: Props;\n\n    sidebarPanels: { current: null | SidebarPanels } = React.createRef();\n\n    state: State;\n\n    store: LocalStore = new LocalStore();\n\n    constructor(props: Props) {\n        super(props);\n\n        this.state = {\n            isDirty: this.getLocationState('open') || false,\n        };\n\n        this.setForcedByLocation();\n    }\n\n    componentDidMount() {\n        const { file, api, metadataSidebarProps, docGenSidebarProps, onOpenChange = noop }: Props = this.props;\n        // if docgen feature is enabled, load metadata to check whether file is a docgen template\n        if (docGenSidebarProps.enabled) {\n            docGenSidebarProps.checkDocGenTemplate(api, file, metadataSidebarProps.isFeatureEnabled);\n        }\n        onOpenChange(this.isOpen(), true);\n    }\n\n    componentDidUpdate(prevProps: Props): void {\n        const { fileId, history, location, onOpenChange = noop }: Props = this.props;\n        const { fileId: prevFileId, location: prevLocation }: Props = prevProps;\n        const { isDirty }: State = this.state;\n\n        // User navigated to a different file without ever navigating the sidebar\n        if (!isDirty && fileId !== prevFileId && location.pathname !== '/') {\n            history.replace({ pathname: '/', state: { silent: true } });\n        }\n\n        // User navigated or toggled the sidebar intentionally, internally or externally\n        if (location !== prevLocation && !this.getLocationState('silent')) {\n            this.setForcedByLocation();\n            this.setState({ isDirty: true });\n            const openState = this.getLocationState('open');\n            // Check if the sidebar was expanded / collapsed\n            if (prevLocation.state?.open !== openState) {\n                onOpenChange(openState, false);\n            }\n        }\n\n        this.handleDocgenTemplateOnUpdate(prevProps);\n    }\n\n    handleDocgenTemplateOnUpdate = (prevProps: Props) => {\n        const { history, location, file, api, metadataSidebarProps, docGenSidebarProps } = this.props;\n        const { file: prevFile, docGenSidebarProps: prevDocGenSidebarProps }: Props = prevProps;\n        // need to re-check if file is a docgen-template on file change\n        if (file.id !== prevFile.id && docGenSidebarProps.enabled && docGenSidebarProps.checkDocGenTemplate) {\n            docGenSidebarProps.checkDocGenTemplate(api, file, metadataSidebarProps.isFeatureEnabled);\n        }\n        // if file turns out to be a docgen template\n        if (\n            docGenSidebarProps.enabled &&\n            prevDocGenSidebarProps.isDocGenTemplate !== docGenSidebarProps.isDocGenTemplate\n        ) {\n            if (docGenSidebarProps.isDocGenTemplate) {\n                // navigate to docgen tab\n                history.push(`/${SIDEBAR_VIEW_DOCGEN}`);\n            } else if (location.pathname === `/${SIDEBAR_VIEW_DOCGEN}`) {\n                history.push('/');\n            }\n        }\n    };\n\n    getUrlPrefix = (pathname: string) => {\n        const basePath = pathname.substring(1).split('/')[0];\n        return basePath;\n    };\n\n    /**\n     * Handle version history click\n     *\n     * @param {SyntheticEvent} event - The event\n     * @return {void}\n     */\n    handleVersionHistoryClick = (event: SyntheticEvent<>): void => {\n        const { file, history } = this.props;\n        const { file_version: currentVersion } = file;\n        const fileVersionSlug = currentVersion ? `/${currentVersion.id}` : '';\n\n        const urlPrefix = this.getUrlPrefix(history.location.pathname);\n\n        if (event.preventDefault) {\n            event.preventDefault();\n        }\n\n        history.push(`/${urlPrefix}/versions${fileVersionSlug}`);\n    };\n\n    /**\n     * Getter for location state properties.\n     *\n     * NOTE: Each location on the history stack has its own optional state object that is wholly separate from\n     * this component's internal state. Values on the location state object can persist even between refreshes\n     * when using certain history contexts, such as BrowserHistory.\n     *\n     * @param key - Optionally get a specific key value from state\n     * @returns {any} - The location state or state key value\n     */\n    getLocationState(key?: string): any {\n        const { location } = this.props;\n        const { state: locationState = {} } = location;\n        return getProp(locationState, key);\n    }\n\n    /**\n     * Getter/setter for sidebar forced state\n     *\n     * @param isOpen - Optionally set the sidebar to open/closed\n     * @returns {string|null} - The sidebar open/closed state\n     */\n    isForced(isOpen?: boolean): ?(typeof SIDEBAR_FORCE_VALUE_CLOSED | typeof SIDEBAR_FORCE_VALUE_OPEN) {\n        if (isOpen !== undefined) {\n            this.store.setItem(SIDEBAR_FORCE_KEY, isOpen ? SIDEBAR_FORCE_VALUE_OPEN : SIDEBAR_FORCE_VALUE_CLOSED);\n        }\n\n        return this.store.getItem(SIDEBAR_FORCE_KEY);\n    }\n\n    /**\n     * Getter for whether the sidebar has been forced open\n     * @returns {boolean} - True if the sidebar has been forced open\n     */\n    isForcedOpen(): boolean {\n        return this.isForced() === SIDEBAR_FORCE_VALUE_OPEN;\n    }\n\n    /**\n     * Getter for whether the sidebar has been forced open/closed previously\n     * @returns {boolean} - True if the sidebar has been forced open/closed previously\n     */\n    isForcedSet(): boolean {\n        return this.isForced() !== null;\n    }\n\n    /**\n     * Getter for sidebar current open state\n     * @returns {boolean} - True if the sidebar is open\n     */\n    isOpen(): boolean {\n        const { isDefaultOpen } = this.props;\n        return this.isForcedSet() ? this.isForcedOpen() : !!isDefaultOpen;\n    }\n\n    /**\n     * Refreshes the sidebar panel\n     * @returns {void}\n     */\n    refresh(shouldRefreshCache: boolean = true): void {\n        const { current: sidebarPanels } = this.sidebarPanels;\n\n        if (sidebarPanels) {\n            sidebarPanels.refresh(shouldRefreshCache);\n        }\n    }\n\n    /**\n     * Helper to set the local store open state based on the location open state, if defined\n     */\n    setForcedByLocation(): void {\n        const isLocationOpen: ?boolean = this.getLocationState('open');\n\n        if (isLocationOpen !== undefined && isLocationOpen !== null) {\n            this.isForced(isLocationOpen);\n        }\n    }\n\n    getDefaultPanel(): string | typeof undefined {\n        const { features } = this.props;\n\n        if (!isFeatureEnabled(features, 'panelSelectionPreservation')) {\n            return undefined;\n        }\n\n        return this.store.getItem(SIDEBAR_SELECTED_PANEL_KEY) || undefined;\n    }\n\n    handlePanelChange = (name: string, isInitialState: boolean) => {\n        const { features, onPanelChange = noop } = this.props;\n        // We don't need to preserve panel if it's the initial state\n        if (isFeatureEnabled(features, 'panelSelectionPreservation') && !isInitialState) {\n            this.store.setItem(SIDEBAR_SELECTED_PANEL_KEY, name);\n        }\n        onPanelChange(name, isInitialState);\n    };\n\n    render() {\n        const {\n            activitySidebarProps,\n            additionalTabs,\n            boxAISidebarProps,\n            className,\n            currentUser,\n            currentUserError,\n            detailsSidebarProps,\n            docGenSidebarProps,\n            file,\n            fileId,\n            getPreview,\n            getViewer,\n            hasAdditionalTabs,\n            hasNav,\n            hasVersions,\n            isLoading,\n            metadataEditors,\n            metadataSidebarProps,\n            onAnnotationSelect,\n            onVersionChange,\n            signSidebarProps,\n            theme,\n            versionsSidebarProps,\n        }: Props = this.props;\n        const isOpen = this.isOpen();\n        const hasBoxAI = SidebarUtils.canHaveBoxAISidebar(this.props);\n        const hasActivity = SidebarUtils.canHaveActivitySidebar(this.props);\n        const hasDetails = SidebarUtils.canHaveDetailsSidebar(this.props);\n        const hasMetadata = SidebarUtils.shouldRenderMetadataSidebar(this.props, metadataEditors);\n        const hasSkills = SidebarUtils.shouldRenderSkillsSidebar(this.props, file);\n        const onVersionHistoryClick = hasVersions ? this.handleVersionHistoryClick : this.props.onVersionHistoryClick;\n        const styleClassName = classNames('be bcs', className, {\n            'bcs-is-open': isOpen,\n            'bcs-is-wider': hasBoxAI,\n        });\n        const defaultPanel = this.getDefaultPanel();\n\n        return (\n            <aside id={this.id} className={styleClassName} data-testid=\"preview-sidebar\">\n                <ThemingStyles theme={theme} />\n                {isLoading ? (\n                    <div className=\"bcs-loading\">\n                        <LoadingIndicator />\n                    </div>\n                ) : (\n                    <>\n                        {hasNav && (\n                            <SidebarNav\n                                additionalTabs={additionalTabs}\n                                elementId={this.id}\n                                fileId={fileId}\n                                hasActivity={hasActivity}\n                                hasAdditionalTabs={hasAdditionalTabs}\n                                hasBoxAI={hasBoxAI}\n                                hasDetails={hasDetails}\n                                hasMetadata={hasMetadata}\n                                hasSkills={hasSkills}\n                                hasDocGen={docGenSidebarProps.isDocGenTemplate}\n                                isOpen={isOpen}\n                                onPanelChange={this.handlePanelChange}\n                                signSidebarProps={signSidebarProps}\n                            />\n                        )}\n                        <SidebarPanels\n                            activitySidebarProps={activitySidebarProps}\n                            boxAISidebarProps={boxAISidebarProps}\n                            currentUser={currentUser}\n                            currentUserError={currentUserError}\n                            elementId={this.id}\n                            defaultPanel={defaultPanel}\n                            detailsSidebarProps={detailsSidebarProps}\n                            docGenSidebarProps={docGenSidebarProps}\n                            file={file}\n                            fileId={fileId}\n                            getPreview={getPreview}\n                            getViewer={getViewer}\n                            hasActivity={hasActivity}\n                            hasBoxAI={hasBoxAI}\n                            hasDetails={hasDetails}\n                            hasDocGen={docGenSidebarProps.isDocGenTemplate}\n                            hasMetadata={hasMetadata}\n                            hasSkills={hasSkills}\n                            hasVersions={hasVersions}\n                            isOpen={isOpen}\n                            key={file.id}\n                            metadataSidebarProps={metadataSidebarProps}\n                            onAnnotationSelect={onAnnotationSelect}\n                            onPanelChange={this.handlePanelChange}\n                            onVersionChange={onVersionChange}\n                            onVersionHistoryClick={onVersionHistoryClick}\n                            ref={this.sidebarPanels}\n                            versionsSidebarProps={versionsSidebarProps}\n                        />\n                    </>\n                )}\n            </aside>\n        );\n    }\n}\n\nexport { Sidebar as SidebarComponent };\nexport default flow([withCurrentUser, withFeatureConsumer, withRouter])(Sidebar);\n"],"mappings":"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","ignoreList":[]}