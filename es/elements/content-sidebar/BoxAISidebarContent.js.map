{"version":3,"file":"BoxAISidebarContent.js","names":["React","flow","useIntl","classNames","BoxAiAgentSelectorWithApi","useAgents","IconButton","Tooltip","ArrowsExpand","BoxAiContentAnswers","ClearConversationButton","IntelligenceModal","withApiWrapper","SidebarContent","withAPIContext","withErrorBoundary","withLogger","ORIGIN_BOXAI_SIDEBAR","SIDEBAR_VIEW_BOXAI","EVENT_JS_READY","mark","BoxAISidebarContext","BoxAISidebarTitle","messages","MARK_NAME_JS_READY","BoxAISidebarContent","props","createSession","encodedSession","onClearAction","onSelectedAgentCallback","getAIStudioAgents","hasRequestInProgress","hostAppName","isAIStudioAgentSelectorEnabled","isLoading","onSelectAgent","questions","shouldShowLandingPage","sendQuestion","stopQuestion","rest","_objectWithoutProperties","_excluded","formatMessage","isSessionInitiated","useRef","isModalOpen","setIsModalOpen","useState","cache","contentName","elementId","fileExtension","isFeedbackEnabled","isFeedbackFormEnabled","isStopResponseEnabled","items","itemSize","onFeedbackFormSubmit","onUserInteraction","recordAction","setCacheValue","shouldFeedbackFormIncludeFeedbackText","shouldPreinitSession","useContext","agents","requestState","selectedAgent","cacheQuestions","handleUserIntentToUseAI","userHasInteracted","handleModalClose","handleSwitchToModalClick","useEffect","length","isCompleted","prompt","action","component","feature","target","data","map","item","status","fileType","lastQuestion","current","id","renderBoxAISidebarTitle","createElement","className","disabled","fetcher","onAgentsListOpen","shouldHideAgentSelectorOnLoad","variant","renderActions","Fragment","onClick","content","sidebarBoxAISwitchToModalView","icon","size","actions","sidebarView","_extends","contentType","sidebarBoxAIContent","onUserIntentToUseAI","showLoadingIndicator","submitQuestion","extension","onOpenChange","open","undefined","stopPropagationOnEsc","shouldRenderProviders","BoxAISidebarComponent","BoxAISidebarContentDefaultExport"],"sources":["../../../src/elements/content-sidebar/BoxAISidebarContent.tsx"],"sourcesContent":["/**\n * @file Box AI sidebar component\n * @author Box\n */\nimport * as React from 'react';\nimport flow from 'lodash/flow';\nimport { useIntl } from 'react-intl';\nimport classNames from 'classnames';\nimport { BoxAiAgentSelectorWithApi, useAgents, type AgentType } from '@box/box-ai-agent-selector';\nimport { IconButton, Tooltip } from '@box/blueprint-web';\nimport { ArrowsExpand } from '@box/blueprint-web-assets/icons/Fill';\nimport {\n    BoxAiContentAnswers,\n    ClearConversationButton,\n    IntelligenceModal,\n    withApiWrapper,\n    type ApiWrapperWithInjectedProps,\n} from '@box/box-ai-content-answers';\nimport SidebarContent from './SidebarContent';\nimport { withAPIContext } from '../common/api-context';\nimport { withErrorBoundary } from '../common/error-boundary';\nimport { withLogger } from '../common/logger';\nimport { ORIGIN_BOXAI_SIDEBAR, SIDEBAR_VIEW_BOXAI } from '../../constants';\nimport { EVENT_JS_READY } from '../common/logger/constants';\nimport { mark } from '../../utils/performance';\nimport { BoxAISidebarContext } from './context/BoxAISidebarContext';\nimport BoxAISidebarTitle from './BoxAISidebarTitle';\n\nimport messages from '../common/messages';\n\nimport './BoxAISidebar.scss';\n\nconst MARK_NAME_JS_READY: string = `${ORIGIN_BOXAI_SIDEBAR}_${EVENT_JS_READY}`;\n\nmark(MARK_NAME_JS_READY);\n\nfunction BoxAISidebarContent(\n    props: ApiWrapperWithInjectedProps & {\n        onSelectedAgentCallback: (selectedAgent: AgentType) => void;\n        shouldShowLandingPage: boolean;\n    },\n) {\n    const {\n        createSession,\n        encodedSession,\n        onClearAction,\n        onSelectedAgentCallback,\n        getAIStudioAgents,\n        hasRequestInProgress,\n        hostAppName,\n        isAIStudioAgentSelectorEnabled,\n        isLoading,\n        onSelectAgent,\n        questions,\n        shouldShowLandingPage,\n        sendQuestion,\n        stopQuestion,\n        ...rest\n    } = props;\n    const { formatMessage } = useIntl();\n    const isSessionInitiated = React.useRef<boolean>(false);\n    const [isModalOpen, setIsModalOpen] = React.useState(false);\n    const {\n        cache,\n        contentName,\n        elementId,\n        fileExtension,\n        isFeedbackEnabled,\n        isFeedbackFormEnabled,\n        isStopResponseEnabled,\n        items,\n        itemSize,\n        onFeedbackFormSubmit,\n        onUserInteraction,\n        recordAction,\n        setCacheValue,\n        shouldFeedbackFormIncludeFeedbackText,\n        shouldPreinitSession,\n    } = React.useContext(BoxAISidebarContext);\n    const { agents, requestState, selectedAgent } = useAgents();\n    const { questions: cacheQuestions } = cache;\n\n    if (cache.shouldShowLandingPage !== shouldShowLandingPage) {\n        setCacheValue('shouldShowLandingPage', shouldShowLandingPage);\n    }\n\n    if (cache.encodedSession !== encodedSession) {\n        setCacheValue('encodedSession', encodedSession);\n    }\n\n    if (cache.questions !== questions) {\n        setCacheValue('questions', questions);\n    }\n\n    if (cache.agents.selectedAgent !== selectedAgent) {\n        setCacheValue('agents', { agents, requestState, selectedAgent });\n    }\n\n    const handleUserIntentToUseAI = (userHasInteracted: boolean = false) => {\n        // Create session if not already created or loading\n        if (!shouldPreinitSession && !encodedSession && !isLoading && createSession) {\n            createSession(true, false);\n        }\n        if (userHasInteracted && onUserInteraction) {\n            onUserInteraction();\n        }\n    };\n\n    const handleModalClose = () => {\n        setIsModalOpen(false);\n    };\n\n    const handleSwitchToModalClick = () => {\n        handleUserIntentToUseAI();\n        setIsModalOpen(true);\n    };\n\n    React.useEffect(() => {\n        if (shouldPreinitSession && !encodedSession && createSession) {\n            createSession(true, true);\n        }\n\n        if (\n            encodedSession &&\n            cacheQuestions.length > 0 &&\n            cacheQuestions[cacheQuestions.length - 1].isCompleted === false\n        ) {\n            // if we have cache with question that is not completed resend it to trigger an API\n            sendQuestion({ prompt: cacheQuestions[cacheQuestions.length - 1].prompt });\n        }\n\n        if (recordAction) {\n            recordAction({\n                action: 'programmatic',\n                component: 'sidebar',\n                feature: 'answers',\n                target: 'loaded',\n                data: {\n                    items: items.map(item => {\n                        return { status: item.status, fileType: item.fileType };\n                    }),\n                },\n            });\n        }\n\n        return () => {\n            // stop API request on unmount (e.g. during switching to another tab)\n            stopQuestion();\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    // Resend the last question (if it was sent before session loaded) after (re-)initializing session\n    React.useEffect(() => {\n        const lastQuestion = cacheQuestions[cacheQuestions.length - 1];\n        if (!shouldPreinitSession && !isSessionInitiated.current && encodedSession && lastQuestion?.isLoading) {\n            sendQuestion(lastQuestion, selectedAgent, false);\n            isSessionInitiated.current = true;\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [encodedSession]);\n\n    React.useEffect(() => {\n        onSelectedAgentCallback?.(selectedAgent);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [selectedAgent?.id]);\n\n    const renderBoxAISidebarTitle = () => {\n        return (\n            <div className=\"bcs-BoxAISidebar-title-part\">\n                <BoxAISidebarTitle isAIStudioAgentSelectorEnabled={isAIStudioAgentSelectorEnabled} />\n                {isAIStudioAgentSelectorEnabled && (\n                    <div className=\"bcs-BoxAISidebar-agentSelector\">\n                        <BoxAiAgentSelectorWithApi\n                            disabled={hasRequestInProgress}\n                            fetcher={getAIStudioAgents}\n                            hostAppName={hostAppName}\n                            onAgentsListOpen={handleUserIntentToUseAI}\n                            onSelectAgent={onSelectAgent}\n                            recordAction={recordAction}\n                            shouldHideAgentSelectorOnLoad\n                            variant=\"sidebar\"\n                        />\n                    </div>\n                )}\n            </div>\n        );\n    };\n\n    const renderActions = () => (\n        <>\n            {renderBoxAISidebarTitle()}\n            <ClearConversationButton onClick={onClearAction} />\n            <Tooltip content={formatMessage(messages.sidebarBoxAISwitchToModalView)} variant=\"standard\">\n                <IconButton\n                    aria-label={formatMessage(messages.sidebarBoxAISwitchToModalView)}\n                    className=\"bcs-BoxAISidebar-expand\"\n                    data-target-id=\"IconButton-expandBoxAISidebar\"\n                    icon={ArrowsExpand}\n                    onClick={handleSwitchToModalClick}\n                    size=\"small\"\n                />\n            </Tooltip>\n        </>\n    );\n\n    return (\n        <>\n            <SidebarContent\n                actions={renderActions()}\n                className={classNames('bcs-BoxAISidebar', { 'with-modal-open': isModalOpen })}\n                elementId={elementId}\n                sidebarView={SIDEBAR_VIEW_BOXAI}\n            >\n                <div className=\"bcs-BoxAISidebar-content\">\n                    <BoxAiContentAnswers\n                        className=\"bcs-BoxAISidebar-contentAnswers\"\n                        contentName={contentName}\n                        contentType={formatMessage(messages.sidebarBoxAIContent)}\n                        hostAppName={hostAppName}\n                        isAIStudioAgentSelectorEnabled={isAIStudioAgentSelectorEnabled}\n                        isFeedbackEnabled={isFeedbackEnabled}\n                        isFeedbackFormEnabled={isFeedbackFormEnabled}\n                        isStopResponseEnabled={isStopResponseEnabled}\n                        items={items}\n                        questions={questions}\n                        onFeedbackFormSubmit={onFeedbackFormSubmit}\n                        onUserIntentToUseAI={handleUserIntentToUseAI}\n                        shouldFeedbackFormIncludeFeedbackText={shouldFeedbackFormIncludeFeedbackText}\n                        shouldShowLandingPage={cache.shouldShowLandingPage}\n                        showLoadingIndicator={isLoading && shouldPreinitSession}\n                        stopQuestion={stopQuestion}\n                        submitQuestion={sendQuestion}\n                        variant=\"sidebar\"\n                        recordAction={recordAction}\n                        {...rest}\n                    />\n                </div>\n            </SidebarContent>\n            <IntelligenceModal\n                contentName={contentName}\n                contentType={formatMessage(messages.sidebarBoxAIContent)}\n                extension={fileExtension}\n                getAIStudioAgents={getAIStudioAgents}\n                hasRequestInProgress={hasRequestInProgress}\n                hostAppName={hostAppName}\n                isAIStudioAgentSelectorEnabled={isAIStudioAgentSelectorEnabled}\n                isFeedbackEnabled={isFeedbackEnabled}\n                isFeedbackFormEnabled={isFeedbackFormEnabled}\n                isStopResponseEnabled={isStopResponseEnabled}\n                items={items}\n                itemSize={itemSize}\n                onClearAction={onClearAction}\n                onFeedbackFormSubmit={onFeedbackFormSubmit}\n                onOpenChange={handleModalClose}\n                onSelectAgent={onSelectAgent}\n                onUserIntentToUseAI={handleUserIntentToUseAI}\n                open={isModalOpen}\n                questions={questions}\n                recordAction={isModalOpen ? recordAction : undefined}\n                shouldFeedbackFormIncludeFeedbackText={shouldFeedbackFormIncludeFeedbackText}\n                shouldShowLandingPage={cache.shouldShowLandingPage}\n                showLoadingIndicator={false}\n                stopPropagationOnEsc\n                stopQuestion={stopQuestion}\n                submitQuestion={sendQuestion}\n                variant=\"collapsible\"\n                {...rest}\n                shouldRenderProviders={false}\n            />\n        </>\n    );\n}\n\nexport { BoxAISidebarContent as BoxAISidebarComponent };\n\nconst BoxAISidebarContentDefaultExport: typeof withAPIContext = flow([\n    withLogger(ORIGIN_BOXAI_SIDEBAR),\n    withErrorBoundary(ORIGIN_BOXAI_SIDEBAR),\n    withAPIContext,\n    withApiWrapper, // returns only props for Box AI, keep it at the end\n])(BoxAISidebarContent);\n\nexport default BoxAISidebarContentDefaultExport;\n"],"mappings":"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","ignoreList":[]}