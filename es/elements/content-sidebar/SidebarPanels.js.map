{"version":3,"file":"SidebarPanels.js","names":["React","flow","noop","matchPath","Redirect","Route","Switch","SidebarUtils","withSidebarAnnotations","withAnnotatorContext","withAPIContext","getFeatureConfig","withFeatureConsumer","isFeatureEnabled","withRouterAndRef","ORIGIN_ACTIVITY_SIDEBAR","ORIGIN_DETAILS_SIDEBAR","ORIGIN_DOCGEN_SIDEBAR","ORIGIN_METADATA_SIDEBAR","ORIGIN_METADATA_SIDEBAR_REDESIGN","ORIGIN_SKILLS_SIDEBAR","ORIGIN_VERSIONS_SIDEBAR","SIDEBAR_VIEW_ACTIVITY","SIDEBAR_VIEW_DETAILS","SIDEBAR_VIEW_METADATA","SIDEBAR_VIEW_SKILLS","SIDEBAR_VIEW_VERSIONS","SIDEBAR_VIEW_DOCGEN","SIDEBAR_VIEW_METADATA_REDESIGN","SIDEBAR_VIEW_BOXAI","ORIGIN_BOXAI_SIDEBAR","BASE_EVENT_NAME","MARK_NAME_JS_LOADING_DETAILS","MARK_NAME_JS_LOADING_ACTIVITY","MARK_NAME_JS_LOADING_BOXAI","MARK_NAME_JS_LOADING_SKILLS","MARK_NAME_JS_LOADING_METADATA","MARK_NAME_JS_LOADING_METADATA_REDESIGNED","MARK_NAME_JS_LOADING_DOCGEN","MARK_NAME_JS_LOADING_VERSIONS","URL_TO_FEED_ITEM_TYPE","annotations","comments","tasks","LoadableDetailsSidebar","getAsyncSidebarContent","LoadableActivitySidebar","LoadableBoxAISidebar","LoadableSkillsSidebar","LoadableMetadataSidebar","LoadableMetadataSidebarRedesigned","LoadableDocGenSidebar","LoadableVersionsSidebar","SIDEBAR_PATH_VERSIONS","SidebarPanels","Component","constructor","args","_defineProperty","createRef","isInitialized","agents","selectedAgent","requestState","encodedSession","questions","shouldShowLandingPage","suggestedQuestions","location","pathname","panel","onPanelChange","props","initialPanel","current","key","value","boxAiSidebarCache","componentDidMount","setState","componentDidUpdate","prevProps","onVersionChange","prevLocation","getVersionsMatchPath","refresh","shouldRefreshCache","boxAISidebar","activitySidebar","detailsSidebar","metadataSidebar","versionsSidebar","render","activitySidebarProps","boxAISidebarProps","currentUser","currentUserError","defaultPanel","detailsSidebarProps","docGenSidebarProps","elementId","features","file","fileId","getPreview","getViewer","hasActivity","hasBoxAI","hasDetails","hasDocGen","hasMetadata","hasSkills","hasVersions","isOpen","metadataSidebarProps","onAnnotationSelect","onVersionHistoryClick","versionsSidebarProps","state","isMetadataSidebarRedesignEnabled","isMetadataAiSuggestionsEnabled","shouldBeDefaultPanel","shouldBoxAIBeDefaultPanel","showOnlyNavButton","showOnlyBoxAINavButton","canShowBoxAISidebarPanel","panelsEligibility","showDefaultPanel","createElement","exact","path","handlePanelRender","_extends","contentName","name","fileExtension","extension","fileID","id","hasSidebarInitialized","ref","startMarkName","cache","setCacheValue","setBoxAiSidebarCacheValue","match","matchEntryType","params","activeFeedEntryType","undefined","activeFeedEntryId","filteredTemplateIds","split","isBoxAiSuggestionsEnabled","sidebar","parentName","versionId","redirect","to","silent","SidebarPanelsComponent"],"sources":["../../../src/elements/content-sidebar/SidebarPanels.js"],"sourcesContent":["/**\n * @flow\n * @file Content Sidebar Panels component\n * @author Box\n */\n\nimport * as React from 'react';\nimport flow from 'lodash/flow';\nimport noop from 'lodash/noop';\nimport { matchPath, Redirect, Route, Switch, type Location } from 'react-router-dom';\nimport SidebarUtils from './SidebarUtils';\nimport withSidebarAnnotations from './withSidebarAnnotations';\nimport { withAnnotatorContext } from '../common/annotator-context';\nimport { withAPIContext } from '../common/api-context';\nimport { getFeatureConfig, withFeatureConsumer, isFeatureEnabled } from '../common/feature-checking';\nimport { withRouterAndRef } from '../common/routing';\nimport {\n    ORIGIN_ACTIVITY_SIDEBAR,\n    ORIGIN_DETAILS_SIDEBAR,\n    ORIGIN_DOCGEN_SIDEBAR,\n    ORIGIN_METADATA_SIDEBAR,\n    ORIGIN_METADATA_SIDEBAR_REDESIGN,\n    ORIGIN_SKILLS_SIDEBAR,\n    ORIGIN_VERSIONS_SIDEBAR,\n    SIDEBAR_VIEW_ACTIVITY,\n    SIDEBAR_VIEW_DETAILS,\n    SIDEBAR_VIEW_METADATA,\n    SIDEBAR_VIEW_SKILLS,\n    SIDEBAR_VIEW_VERSIONS,\n    SIDEBAR_VIEW_DOCGEN,\n    SIDEBAR_VIEW_METADATA_REDESIGN,\n    SIDEBAR_VIEW_BOXAI,\n    ORIGIN_BOXAI_SIDEBAR,\n} from '../../constants';\nimport type { DetailsSidebarProps } from './DetailsSidebar';\nimport type { DocGenSidebarProps } from './DocGenSidebar/DocGenSidebar';\nimport type { ActivitySidebarProps } from './ActivitySidebar';\nimport type { BoxAISidebarProps } from './BoxAISidebar';\nimport type { MetadataSidebarProps } from './MetadataSidebar';\nimport type { VersionsSidebarProps } from './versions';\nimport type { User, BoxItem } from '../../common/types/core';\nimport type { Errors } from '../common/flowTypes';\nimport type { FeatureConfig } from '../common/feature-checking';\nimport type { BoxAISidebarCache } from './types/BoxAISidebarTypes';\n\ntype Props = {\n    activitySidebarProps: ActivitySidebarProps,\n    boxAISidebarProps: BoxAISidebarProps,\n    currentUser?: User,\n    currentUserError?: Errors,\n    defaultPanel?: string,\n    detailsSidebarProps: DetailsSidebarProps,\n    docGenSidebarProps: DocGenSidebarProps,\n    elementId: string,\n    features: FeatureConfig,\n    file: BoxItem,\n    fileId: string,\n    getPreview: Function,\n    getViewer: Function,\n    hasActivity: boolean,\n    hasBoxAI: boolean,\n    hasDetails: boolean,\n    hasDocGen: boolean,\n    hasMetadata: boolean,\n    hasSkills: boolean,\n    hasVersions: boolean,\n    isOpen: boolean,\n    location: Location,\n    metadataSidebarProps: MetadataSidebarProps,\n    onAnnotationSelect?: Function,\n    onPanelChange?: (name: string, isInitialState?: boolean) => void,\n    onVersionChange?: Function,\n    onVersionHistoryClick?: Function,\n    versionsSidebarProps: VersionsSidebarProps,\n};\n\ntype State = {\n    isInitialized: boolean,\n};\n\ntype ElementRefType = {\n    current: null | Object,\n};\n\n// TODO: place into code splitting logic\nconst BASE_EVENT_NAME = '_JS_LOADING';\nconst MARK_NAME_JS_LOADING_DETAILS = `${ORIGIN_DETAILS_SIDEBAR}${BASE_EVENT_NAME}`;\nconst MARK_NAME_JS_LOADING_ACTIVITY = `${ORIGIN_ACTIVITY_SIDEBAR}${BASE_EVENT_NAME}`;\nconst MARK_NAME_JS_LOADING_BOXAI = `${ORIGIN_BOXAI_SIDEBAR}${BASE_EVENT_NAME}`;\nconst MARK_NAME_JS_LOADING_SKILLS = `${ORIGIN_SKILLS_SIDEBAR}${BASE_EVENT_NAME}`;\nconst MARK_NAME_JS_LOADING_METADATA = `${ORIGIN_METADATA_SIDEBAR}${BASE_EVENT_NAME}`;\nconst MARK_NAME_JS_LOADING_METADATA_REDESIGNED = `${ORIGIN_METADATA_SIDEBAR_REDESIGN}${BASE_EVENT_NAME}`;\nconst MARK_NAME_JS_LOADING_DOCGEN = `${ORIGIN_DOCGEN_SIDEBAR}${BASE_EVENT_NAME}`;\nconst MARK_NAME_JS_LOADING_VERSIONS = `${ORIGIN_VERSIONS_SIDEBAR}${BASE_EVENT_NAME}`;\n\nconst URL_TO_FEED_ITEM_TYPE = { annotations: 'annotation', comments: 'comment', tasks: 'task' };\n\nconst LoadableDetailsSidebar = SidebarUtils.getAsyncSidebarContent(SIDEBAR_VIEW_DETAILS, MARK_NAME_JS_LOADING_DETAILS);\nconst LoadableActivitySidebar = SidebarUtils.getAsyncSidebarContent(\n    SIDEBAR_VIEW_ACTIVITY,\n    MARK_NAME_JS_LOADING_ACTIVITY,\n);\nconst LoadableBoxAISidebar = SidebarUtils.getAsyncSidebarContent(SIDEBAR_VIEW_BOXAI, MARK_NAME_JS_LOADING_BOXAI);\nconst LoadableSkillsSidebar = SidebarUtils.getAsyncSidebarContent(SIDEBAR_VIEW_SKILLS, MARK_NAME_JS_LOADING_SKILLS);\nconst LoadableMetadataSidebar = SidebarUtils.getAsyncSidebarContent(\n    SIDEBAR_VIEW_METADATA,\n    MARK_NAME_JS_LOADING_METADATA,\n);\nconst LoadableMetadataSidebarRedesigned = SidebarUtils.getAsyncSidebarContent(\n    SIDEBAR_VIEW_METADATA_REDESIGN,\n    MARK_NAME_JS_LOADING_METADATA,\n);\nconst LoadableDocGenSidebar = SidebarUtils.getAsyncSidebarContent(SIDEBAR_VIEW_DOCGEN, MARK_NAME_JS_LOADING_DOCGEN);\nconst LoadableVersionsSidebar = SidebarUtils.getAsyncSidebarContent(\n    SIDEBAR_VIEW_VERSIONS,\n    MARK_NAME_JS_LOADING_VERSIONS,\n);\n\nconst SIDEBAR_PATH_VERSIONS = '/:sidebar(activity|details)/versions/:versionId?';\n\nclass SidebarPanels extends React.Component<Props, State> {\n    boxAISidebar: ElementRefType = React.createRef();\n\n    activitySidebar: ElementRefType = React.createRef();\n\n    detailsSidebar: ElementRefType = React.createRef();\n\n    initialPanel: { current: null | string } = React.createRef();\n\n    metadataSidebar: ElementRefType = React.createRef();\n\n    state: State = { isInitialized: false };\n\n    versionsSidebar: ElementRefType = React.createRef();\n\n    boxAiSidebarCache: BoxAISidebarCache = {\n        agents: {\n            agents: [],\n            selectedAgent: null,\n            requestState: 'not_started',\n        },\n        encodedSession: null,\n        questions: [],\n        shouldShowLandingPage: true,\n        suggestedQuestions: [],\n    };\n\n    componentDidMount() {\n        this.setState({ isInitialized: true });\n    }\n\n    componentDidUpdate(prevProps: Props): void {\n        const { location, onVersionChange } = this.props;\n        const { location: prevLocation } = prevProps;\n\n        // Reset the current version id if the wrapping versions route is no longer active\n        if (onVersionChange && this.getVersionsMatchPath(prevLocation) && !this.getVersionsMatchPath(location)) {\n            onVersionChange(null);\n        }\n    }\n\n    getVersionsMatchPath = (location: Location) => {\n        const { pathname } = location;\n        return matchPath(pathname, SIDEBAR_PATH_VERSIONS);\n    };\n\n    handlePanelRender = (panel: string): void => {\n        const { onPanelChange = noop } = this.props;\n        // Call onPanelChange only once with the initial panel\n        if (!this.initialPanel.current) {\n            this.initialPanel.current = panel;\n            onPanelChange(panel, true);\n        }\n    };\n\n    setBoxAiSidebarCacheValue = (key: 'agents' | 'encodedSession' | 'questions' | 'shouldShowLandingPage' | 'suggestedQuestions', value: any) => {\n        this.boxAiSidebarCache[key] = value;\n    };\n\n    /**\n     * Refreshes the contents of the active sidebar\n     * @returns {void}\n     */\n    refresh(shouldRefreshCache: boolean = true): void {\n        const { current: boxAISidebar } = this.boxAISidebar;\n        const { current: activitySidebar } = this.activitySidebar;\n        const { current: detailsSidebar } = this.detailsSidebar;\n        const { current: metadataSidebar } = this.metadataSidebar;\n        const { current: versionsSidebar } = this.versionsSidebar;\n\n        if (boxAISidebar) {\n            boxAISidebar.refresh();\n        }\n\n        if (activitySidebar) {\n            activitySidebar.refresh(shouldRefreshCache);\n        }\n\n        if (detailsSidebar) {\n            detailsSidebar.refresh();\n        }\n\n        if (metadataSidebar) {\n            metadataSidebar.refresh();\n        }\n\n        if (versionsSidebar) {\n            versionsSidebar.refresh();\n        }\n    }\n\n    render() {\n        const {\n            activitySidebarProps,\n            boxAISidebarProps,\n            currentUser,\n            currentUserError,\n            defaultPanel = '',\n            detailsSidebarProps,\n            docGenSidebarProps,\n            elementId,\n            features,\n            file,\n            fileId,\n            getPreview,\n            getViewer,\n            hasActivity,\n            hasBoxAI,\n            hasDetails,\n            hasDocGen,\n            hasMetadata,\n            hasSkills,\n            hasVersions,\n            isOpen,\n            metadataSidebarProps,\n            onAnnotationSelect,\n            onVersionChange,\n            onVersionHistoryClick,\n            versionsSidebarProps,\n        }: Props = this.props;\n\n        const { isInitialized } = this.state;\n\n        const isMetadataSidebarRedesignEnabled = isFeatureEnabled(features, 'metadata.redesign.enabled');\n        const isMetadataAiSuggestionsEnabled = isFeatureEnabled(features, 'metadata.aiSuggestions.enabled');\n        const { shouldBeDefaultPanel: shouldBoxAIBeDefaultPanel, showOnlyNavButton: showOnlyBoxAINavButton } =\n            getFeatureConfig(features, 'boxai.sidebar');\n\n        const canShowBoxAISidebarPanel = hasBoxAI && !showOnlyBoxAINavButton;\n\n        const panelsEligibility = {\n            [SIDEBAR_VIEW_BOXAI]: canShowBoxAISidebarPanel,\n            [SIDEBAR_VIEW_DOCGEN]: hasDocGen,\n            [SIDEBAR_VIEW_SKILLS]: hasSkills,\n            [SIDEBAR_VIEW_ACTIVITY]: hasActivity,\n            [SIDEBAR_VIEW_DETAILS]: hasDetails,\n            [SIDEBAR_VIEW_METADATA]: hasMetadata,\n        };\n\n        const showDefaultPanel: boolean = !!(defaultPanel && panelsEligibility[defaultPanel]);\n\n        if (!isOpen || (!hasBoxAI && !hasActivity && !hasDetails && !hasMetadata && !hasSkills && !hasVersions)) {\n            return null;\n        }\n\n        return (\n            <Switch>\n                {canShowBoxAISidebarPanel && (\n                    <Route\n                        exact\n                        path={`/${SIDEBAR_VIEW_BOXAI}`}\n                        render={() => {\n                            this.handlePanelRender(SIDEBAR_VIEW_BOXAI);\n                            return (\n                                <LoadableBoxAISidebar\n                                    contentName={file.name}\n                                    elementId={elementId}\n                                    fileExtension={file.extension}\n                                    fileID={file.id}\n                                    hasSidebarInitialized={isInitialized}\n                                    ref={this.boxAISidebar}\n                                    startMarkName={MARK_NAME_JS_LOADING_BOXAI}\n                                    cache={this.boxAiSidebarCache}\n                                    setCacheValue={this.setBoxAiSidebarCacheValue}\n                                    {...boxAISidebarProps}\n                                />\n                            );\n                        }}\n                    />\n                )}\n                {hasSkills && (\n                    <Route\n                        exact\n                        path={`/${SIDEBAR_VIEW_SKILLS}`}\n                        render={() => {\n                            this.handlePanelRender(SIDEBAR_VIEW_SKILLS);\n                            return (\n                                <LoadableSkillsSidebar\n                                    elementId={elementId}\n                                    key={file.id}\n                                    file={file}\n                                    getPreview={getPreview}\n                                    getViewer={getViewer}\n                                    hasSidebarInitialized={isInitialized}\n                                    startMarkName={MARK_NAME_JS_LOADING_SKILLS}\n                                />\n                            );\n                        }}\n                    />\n                )}\n                {/* This handles both the default activity sidebar and the activity sidebar with a\n                comment or task deeplink.  */}\n                {hasActivity && (\n                    <Route\n                        exact\n                        path={[\n                            `/${SIDEBAR_VIEW_ACTIVITY}`,\n                            `/${SIDEBAR_VIEW_ACTIVITY}/:activeFeedEntryType(annotations)/:fileVersionId/:activeFeedEntryId?`,\n                            `/${SIDEBAR_VIEW_ACTIVITY}/:activeFeedEntryType(comments|tasks)/:activeFeedEntryId?`,\n                        ]}\n                        render={({ match }) => {\n                            const matchEntryType = match.params.activeFeedEntryType;\n                            const activeFeedEntryType = matchEntryType\n                                ? URL_TO_FEED_ITEM_TYPE[matchEntryType]\n                                : undefined;\n                            this.handlePanelRender(SIDEBAR_VIEW_ACTIVITY);\n                            return (\n                                <LoadableActivitySidebar\n                                    elementId={elementId}\n                                    currentUser={currentUser}\n                                    currentUserError={currentUserError}\n                                    file={file}\n                                    hasSidebarInitialized={isInitialized}\n                                    onAnnotationSelect={onAnnotationSelect}\n                                    onVersionChange={onVersionChange}\n                                    onVersionHistoryClick={onVersionHistoryClick}\n                                    ref={this.activitySidebar}\n                                    startMarkName={MARK_NAME_JS_LOADING_ACTIVITY}\n                                    activeFeedEntryId={match.params.activeFeedEntryId}\n                                    activeFeedEntryType={match.params.activeFeedEntryId && activeFeedEntryType}\n                                    {...activitySidebarProps}\n                                />\n                            );\n                        }}\n                    />\n                )}\n                {hasDetails && (\n                    <Route\n                        exact\n                        path={`/${SIDEBAR_VIEW_DETAILS}`}\n                        render={() => {\n                            this.handlePanelRender(SIDEBAR_VIEW_DETAILS);\n                            return (\n                                <LoadableDetailsSidebar\n                                    elementId={elementId}\n                                    fileId={fileId}\n                                    hasSidebarInitialized={isInitialized}\n                                    key={fileId}\n                                    hasVersions={hasVersions}\n                                    onVersionHistoryClick={onVersionHistoryClick}\n                                    ref={this.detailsSidebar}\n                                    startMarkName={MARK_NAME_JS_LOADING_DETAILS}\n                                    {...detailsSidebarProps}\n                                />\n                            );\n                        }}\n                    />\n                )}\n                {hasMetadata && (\n                    <Route\n                        exact\n                        path={[\n                            `/${SIDEBAR_VIEW_METADATA}`,\n                            `/${SIDEBAR_VIEW_METADATA}/filteredTemplates/:filteredTemplateIds?`,\n                        ]}\n                        render={({ match }) => {\n                            this.handlePanelRender(SIDEBAR_VIEW_METADATA);\n                            return isMetadataSidebarRedesignEnabled ? (\n                                <LoadableMetadataSidebarRedesigned\n                                    elementId={elementId}\n                                    fileExtension={file.extension}\n                                    fileId={fileId}\n                                    filteredTemplateIds={\n                                        match.params.filteredTemplateIds\n                                            ? match.params.filteredTemplateIds.split(',')\n                                            : []\n                                    }\n                                    hasSidebarInitialized={isInitialized}\n                                    isBoxAiSuggestionsEnabled={isMetadataAiSuggestionsEnabled}\n                                    ref={this.metadataSidebar}\n                                    startMarkName={MARK_NAME_JS_LOADING_METADATA_REDESIGNED}\n                                    {...metadataSidebarProps}\n                                />\n                            ) : (\n                                <LoadableMetadataSidebar\n                                    elementId={elementId}\n                                    fileId={fileId}\n                                    hasSidebarInitialized={isInitialized}\n                                    ref={this.metadataSidebar}\n                                    startMarkName={MARK_NAME_JS_LOADING_METADATA}\n                                    {...metadataSidebarProps}\n                                />\n                            );\n                        }}\n                    />\n                )}\n                {hasDocGen && (\n                    <Route\n                        exact\n                        path={`/${SIDEBAR_VIEW_DOCGEN}`}\n                        render={() => {\n                            this.handlePanelRender(SIDEBAR_VIEW_DOCGEN);\n                            return (\n                                <LoadableDocGenSidebar\n                                    hasSidebarInitialized={isInitialized}\n                                    startMarkName={MARK_NAME_JS_LOADING_DOCGEN}\n                                    {...docGenSidebarProps}\n                                />\n                            );\n                        }}\n                    />\n                )}\n                {hasVersions && (\n                    <Route\n                        path={SIDEBAR_PATH_VERSIONS}\n                        render={({ match }) => {\n                            if (match.params.sidebar) {\n                                this.handlePanelRender(match.params.sidebar);\n                            }\n                            return (\n                                <LoadableVersionsSidebar\n                                    fileId={fileId}\n                                    hasSidebarInitialized={isInitialized}\n                                    key={fileId}\n                                    onVersionChange={onVersionChange}\n                                    parentName={match.params.sidebar}\n                                    ref={this.versionsSidebar}\n                                    versionId={match.params.versionId}\n                                    {...versionsSidebarProps}\n                                />\n                            );\n                        }}\n                    />\n                )}\n                <Route\n                    render={() => {\n                        let redirect = '';\n\n                        if (showDefaultPanel) {\n                            redirect = defaultPanel;\n                        } else if (canShowBoxAISidebarPanel && shouldBoxAIBeDefaultPanel) {\n                            redirect = SIDEBAR_VIEW_BOXAI;\n                        } else if (hasDocGen) {\n                            redirect = SIDEBAR_VIEW_DOCGEN;\n                        } else if (hasSkills) {\n                            redirect = SIDEBAR_VIEW_SKILLS;\n                        } else if (hasActivity) {\n                            redirect = SIDEBAR_VIEW_ACTIVITY;\n                        } else if (hasDetails) {\n                            redirect = SIDEBAR_VIEW_DETAILS;\n                        } else if (hasMetadata) {\n                            redirect = SIDEBAR_VIEW_METADATA;\n                        } else if (canShowBoxAISidebarPanel && !shouldBoxAIBeDefaultPanel) {\n                            redirect = SIDEBAR_VIEW_BOXAI;\n                        }\n\n                        return <Redirect to={{ pathname: `/${redirect}`, state: { silent: true } }} />;\n                    }}\n                />\n            </Switch>\n        );\n    }\n}\n\nexport { SidebarPanels as SidebarPanelsComponent };\nexport default flow([\n    withFeatureConsumer,\n    withSidebarAnnotations,\n    withAPIContext,\n    withAnnotatorContext,\n    withRouterAndRef,\n])(SidebarPanels);\n"],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;;AAEA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,IAAI,MAAM,aAAa;AAC9B,OAAOC,IAAI,MAAM,aAAa;AAC9B,SAASC,SAAS,EAAEC,QAAQ,EAAEC,KAAK,EAAEC,MAAM,QAAuB,kBAAkB;AACpF,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,sBAAsB,MAAM,0BAA0B;AAC7D,SAASC,oBAAoB,QAAQ,6BAA6B;AAClE,SAASC,cAAc,QAAQ,uBAAuB;AACtD,SAASC,gBAAgB,EAAEC,mBAAmB,EAAEC,gBAAgB,QAAQ,4BAA4B;AACpG,SAASC,gBAAgB,QAAQ,mBAAmB;AACpD,SACIC,uBAAuB,EACvBC,sBAAsB,EACtBC,qBAAqB,EACrBC,uBAAuB,EACvBC,gCAAgC,EAChCC,qBAAqB,EACrBC,uBAAuB,EACvBC,qBAAqB,EACrBC,oBAAoB,EACpBC,qBAAqB,EACrBC,mBAAmB,EACnBC,qBAAqB,EACrBC,mBAAmB,EACnBC,8BAA8B,EAC9BC,kBAAkB,EAClBC,oBAAoB,QACjB,iBAAiB;AAmDxB;AACA,MAAMC,eAAe,GAAG,aAAa;AACrC,MAAMC,4BAA4B,GAAG,GAAGhB,sBAAsB,GAAGe,eAAe,EAAE;AAClF,MAAME,6BAA6B,GAAG,GAAGlB,uBAAuB,GAAGgB,eAAe,EAAE;AACpF,MAAMG,0BAA0B,GAAG,GAAGJ,oBAAoB,GAAGC,eAAe,EAAE;AAC9E,MAAMI,2BAA2B,GAAG,GAAGf,qBAAqB,GAAGW,eAAe,EAAE;AAChF,MAAMK,6BAA6B,GAAG,GAAGlB,uBAAuB,GAAGa,eAAe,EAAE;AACpF,MAAMM,wCAAwC,GAAG,GAAGlB,gCAAgC,GAAGY,eAAe,EAAE;AACxG,MAAMO,2BAA2B,GAAG,GAAGrB,qBAAqB,GAAGc,eAAe,EAAE;AAChF,MAAMQ,6BAA6B,GAAG,GAAGlB,uBAAuB,GAAGU,eAAe,EAAE;AAEpF,MAAMS,qBAAqB,GAAG;EAAEC,WAAW,EAAE,YAAY;EAAEC,QAAQ,EAAE,SAAS;EAAEC,KAAK,EAAE;AAAO,CAAC;AAE/F,MAAMC,sBAAsB,GAAGrC,YAAY,CAACsC,sBAAsB,CAACtB,oBAAoB,EAAES,4BAA4B,CAAC;AACtH,MAAMc,uBAAuB,GAAGvC,YAAY,CAACsC,sBAAsB,CAC/DvB,qBAAqB,EACrBW,6BACJ,CAAC;AACD,MAAMc,oBAAoB,GAAGxC,YAAY,CAACsC,sBAAsB,CAAChB,kBAAkB,EAAEK,0BAA0B,CAAC;AAChH,MAAMc,qBAAqB,GAAGzC,YAAY,CAACsC,sBAAsB,CAACpB,mBAAmB,EAAEU,2BAA2B,CAAC;AACnH,MAAMc,uBAAuB,GAAG1C,YAAY,CAACsC,sBAAsB,CAC/DrB,qBAAqB,EACrBY,6BACJ,CAAC;AACD,MAAMc,iCAAiC,GAAG3C,YAAY,CAACsC,sBAAsB,CACzEjB,8BAA8B,EAC9BQ,6BACJ,CAAC;AACD,MAAMe,qBAAqB,GAAG5C,YAAY,CAACsC,sBAAsB,CAAClB,mBAAmB,EAAEW,2BAA2B,CAAC;AACnH,MAAMc,uBAAuB,GAAG7C,YAAY,CAACsC,sBAAsB,CAC/DnB,qBAAqB,EACrBa,6BACJ,CAAC;AAED,MAAMc,qBAAqB,GAAG,kDAAkD;AAEhF,MAAMC,aAAa,SAAStD,KAAK,CAACuD,SAAS,CAAe;EAAAC,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAAC,eAAA,oCACvB1D,KAAK,CAAC2D,SAAS,CAAC,CAAC;IAAAD,eAAA,uCAEd1D,KAAK,CAAC2D,SAAS,CAAC,CAAC;IAAAD,eAAA,sCAElB1D,KAAK,CAAC2D,SAAS,CAAC,CAAC;IAAAD,eAAA,oCAEP1D,KAAK,CAAC2D,SAAS,CAAC,CAAC;IAAAD,eAAA,uCAE1B1D,KAAK,CAAC2D,SAAS,CAAC,CAAC;IAAAD,eAAA,gBAEpC;MAAEE,aAAa,EAAE;IAAM,CAAC;IAAAF,eAAA,uCAEL1D,KAAK,CAAC2D,SAAS,CAAC,CAAC;IAAAD,eAAA,4BAEZ;MACnCG,MAAM,EAAE;QACJA,MAAM,EAAE,EAAE;QACVC,aAAa,EAAE,IAAI;QACnBC,YAAY,EAAE;MAClB,CAAC;MACDC,cAAc,EAAE,IAAI;MACpBC,SAAS,EAAE,EAAE;MACbC,qBAAqB,EAAE,IAAI;MAC3BC,kBAAkB,EAAE;IACxB,CAAC;IAAAT,eAAA,+BAgBuBU,QAAkB,IAAK;MAC3C,MAAM;QAAEC;MAAS,CAAC,GAAGD,QAAQ;MAC7B,OAAOjE,SAAS,CAACkE,QAAQ,EAAEhB,qBAAqB,CAAC;IACrD,CAAC;IAAAK,eAAA,4BAEoBY,KAAa,IAAW;MACzC,MAAM;QAAEC,aAAa,GAAGrE;MAAK,CAAC,GAAG,IAAI,CAACsE,KAAK;MAC3C;MACA,IAAI,CAAC,IAAI,CAACC,YAAY,CAACC,OAAO,EAAE;QAC5B,IAAI,CAACD,YAAY,CAACC,OAAO,GAAGJ,KAAK;QACjCC,aAAa,CAACD,KAAK,EAAE,IAAI,CAAC;MAC9B;IACJ,CAAC;IAAAZ,eAAA,oCAE2B,CAACiB,GAA+F,EAAEC,KAAU,KAAK;MACzI,IAAI,CAACC,iBAAiB,CAACF,GAAG,CAAC,GAAGC,KAAK;IACvC,CAAC;EAAA;EA9BDE,iBAAiBA,CAAA,EAAG;IAChB,IAAI,CAACC,QAAQ,CAAC;MAAEnB,aAAa,EAAE;IAAK,CAAC,CAAC;EAC1C;EAEAoB,kBAAkBA,CAACC,SAAgB,EAAQ;IACvC,MAAM;MAAEb,QAAQ;MAAEc;IAAgB,CAAC,GAAG,IAAI,CAACV,KAAK;IAChD,MAAM;MAAEJ,QAAQ,EAAEe;IAAa,CAAC,GAAGF,SAAS;;IAE5C;IACA,IAAIC,eAAe,IAAI,IAAI,CAACE,oBAAoB,CAACD,YAAY,CAAC,IAAI,CAAC,IAAI,CAACC,oBAAoB,CAAChB,QAAQ,CAAC,EAAE;MACpGc,eAAe,CAAC,IAAI,CAAC;IACzB;EACJ;EAoBA;AACJ;AACA;AACA;EACIG,OAAOA,CAACC,kBAA2B,GAAG,IAAI,EAAQ;IAC9C,MAAM;MAAEZ,OAAO,EAAEa;IAAa,CAAC,GAAG,IAAI,CAACA,YAAY;IACnD,MAAM;MAAEb,OAAO,EAAEc;IAAgB,CAAC,GAAG,IAAI,CAACA,eAAe;IACzD,MAAM;MAAEd,OAAO,EAAEe;IAAe,CAAC,GAAG,IAAI,CAACA,cAAc;IACvD,MAAM;MAAEf,OAAO,EAAEgB;IAAgB,CAAC,GAAG,IAAI,CAACA,eAAe;IACzD,MAAM;MAAEhB,OAAO,EAAEiB;IAAgB,CAAC,GAAG,IAAI,CAACA,eAAe;IAEzD,IAAIJ,YAAY,EAAE;MACdA,YAAY,CAACF,OAAO,CAAC,CAAC;IAC1B;IAEA,IAAIG,eAAe,EAAE;MACjBA,eAAe,CAACH,OAAO,CAACC,kBAAkB,CAAC;IAC/C;IAEA,IAAIG,cAAc,EAAE;MAChBA,cAAc,CAACJ,OAAO,CAAC,CAAC;IAC5B;IAEA,IAAIK,eAAe,EAAE;MACjBA,eAAe,CAACL,OAAO,CAAC,CAAC;IAC7B;IAEA,IAAIM,eAAe,EAAE;MACjBA,eAAe,CAACN,OAAO,CAAC,CAAC;IAC7B;EACJ;EAEAO,MAAMA,CAAA,EAAG;IACL,MAAM;MACFC,oBAAoB;MACpBC,iBAAiB;MACjBC,WAAW;MACXC,gBAAgB;MAChBC,YAAY,GAAG,EAAE;MACjBC,mBAAmB;MACnBC,kBAAkB;MAClBC,SAAS;MACTC,QAAQ;MACRC,IAAI;MACJC,MAAM;MACNC,UAAU;MACVC,SAAS;MACTC,WAAW;MACXC,QAAQ;MACRC,UAAU;MACVC,SAAS;MACTC,WAAW;MACXC,SAAS;MACTC,WAAW;MACXC,MAAM;MACNC,oBAAoB;MACpBC,kBAAkB;MAClBjC,eAAe;MACfkC,qBAAqB;MACrBC;IACG,CAAC,GAAG,IAAI,CAAC7C,KAAK;IAErB,MAAM;MAAEZ;IAAc,CAAC,GAAG,IAAI,CAAC0D,KAAK;IAEpC,MAAMC,gCAAgC,GAAG1G,gBAAgB,CAACwF,QAAQ,EAAE,2BAA2B,CAAC;IAChG,MAAMmB,8BAA8B,GAAG3G,gBAAgB,CAACwF,QAAQ,EAAE,gCAAgC,CAAC;IACnG,MAAM;MAAEoB,oBAAoB,EAAEC,yBAAyB;MAAEC,iBAAiB,EAAEC;IAAuB,CAAC,GAChGjH,gBAAgB,CAAC0F,QAAQ,EAAE,eAAe,CAAC;IAE/C,MAAMwB,wBAAwB,GAAGlB,QAAQ,IAAI,CAACiB,sBAAsB;IAEpE,MAAME,iBAAiB,GAAG;MACtB,CAACjG,kBAAkB,GAAGgG,wBAAwB;MAC9C,CAAClG,mBAAmB,GAAGkF,SAAS;MAChC,CAACpF,mBAAmB,GAAGsF,SAAS;MAChC,CAACzF,qBAAqB,GAAGoF,WAAW;MACpC,CAACnF,oBAAoB,GAAGqF,UAAU;MAClC,CAACpF,qBAAqB,GAAGsF;IAC7B,CAAC;IAED,MAAMiB,gBAAyB,GAAG,CAAC,EAAE9B,YAAY,IAAI6B,iBAAiB,CAAC7B,YAAY,CAAC,CAAC;IAErF,IAAI,CAACgB,MAAM,IAAK,CAACN,QAAQ,IAAI,CAACD,WAAW,IAAI,CAACE,UAAU,IAAI,CAACE,WAAW,IAAI,CAACC,SAAS,IAAI,CAACC,WAAY,EAAE;MACrG,OAAO,IAAI;IACf;IAEA,oBACIhH,KAAA,CAAAgI,aAAA,CAAC1H,MAAM,QACFuH,wBAAwB,iBACrB7H,KAAA,CAAAgI,aAAA,CAAC3H,KAAK;MACF4H,KAAK;MACLC,IAAI,EAAE,IAAIrG,kBAAkB,EAAG;MAC/B+D,MAAM,EAAEA,CAAA,KAAM;QACV,IAAI,CAACuC,iBAAiB,CAACtG,kBAAkB,CAAC;QAC1C,oBACI7B,KAAA,CAAAgI,aAAA,CAACjF,oBAAoB,EAAAqF,QAAA;UACjBC,WAAW,EAAE/B,IAAI,CAACgC,IAAK;UACvBlC,SAAS,EAAEA,SAAU;UACrBmC,aAAa,EAAEjC,IAAI,CAACkC,SAAU;UAC9BC,MAAM,EAAEnC,IAAI,CAACoC,EAAG;UAChBC,qBAAqB,EAAE/E,aAAc;UACrCgF,GAAG,EAAE,IAAI,CAACrD,YAAa;UACvBsD,aAAa,EAAE3G,0BAA2B;UAC1C4G,KAAK,EAAE,IAAI,CAACjE,iBAAkB;UAC9BkE,aAAa,EAAE,IAAI,CAACC;QAA0B,GAC1ClD,iBAAiB,CACxB,CAAC;MAEV;IAAE,CACL,CACJ,EACAiB,SAAS,iBACN/G,KAAA,CAAAgI,aAAA,CAAC3H,KAAK;MACF4H,KAAK;MACLC,IAAI,EAAE,IAAIzG,mBAAmB,EAAG;MAChCmE,MAAM,EAAEA,CAAA,KAAM;QACV,IAAI,CAACuC,iBAAiB,CAAC1G,mBAAmB,CAAC;QAC3C,oBACIzB,KAAA,CAAAgI,aAAA,CAAChF,qBAAqB;UAClBoD,SAAS,EAAEA,SAAU;UACrBzB,GAAG,EAAE2B,IAAI,CAACoC,EAAG;UACbpC,IAAI,EAAEA,IAAK;UACXE,UAAU,EAAEA,UAAW;UACvBC,SAAS,EAAEA,SAAU;UACrBkC,qBAAqB,EAAE/E,aAAc;UACrCiF,aAAa,EAAE1G;QAA4B,CAC9C,CAAC;MAEV;IAAE,CACL,CACJ,EAGAuE,WAAW,iBACR1G,KAAA,CAAAgI,aAAA,CAAC3H,KAAK;MACF4H,KAAK;MACLC,IAAI,EAAE,CACF,IAAI5G,qBAAqB,EAAE,EAC3B,IAAIA,qBAAqB,uEAAuE,EAChG,IAAIA,qBAAqB,2DAA2D,CACtF;MACFsE,MAAM,EAAEA,CAAC;QAAEqD;MAAM,CAAC,KAAK;QACnB,MAAMC,cAAc,GAAGD,KAAK,CAACE,MAAM,CAACC,mBAAmB;QACvD,MAAMA,mBAAmB,GAAGF,cAAc,GACpC1G,qBAAqB,CAAC0G,cAAc,CAAC,GACrCG,SAAS;QACf,IAAI,CAAClB,iBAAiB,CAAC7G,qBAAqB,CAAC;QAC7C,oBACItB,KAAA,CAAAgI,aAAA,CAAClF,uBAAuB,EAAAsF,QAAA;UACpBhC,SAAS,EAAEA,SAAU;UACrBL,WAAW,EAAEA,WAAY;UACzBC,gBAAgB,EAAEA,gBAAiB;UACnCM,IAAI,EAAEA,IAAK;UACXqC,qBAAqB,EAAE/E,aAAc;UACrCuD,kBAAkB,EAAEA,kBAAmB;UACvCjC,eAAe,EAAEA,eAAgB;UACjCkC,qBAAqB,EAAEA,qBAAsB;UAC7CwB,GAAG,EAAE,IAAI,CAACpD,eAAgB;UAC1BqD,aAAa,EAAE5G,6BAA8B;UAC7CqH,iBAAiB,EAAEL,KAAK,CAACE,MAAM,CAACG,iBAAkB;UAClDF,mBAAmB,EAAEH,KAAK,CAACE,MAAM,CAACG,iBAAiB,IAAIF;QAAoB,GACvEvD,oBAAoB,CAC3B,CAAC;MAEV;IAAE,CACL,CACJ,EACAe,UAAU,iBACP5G,KAAA,CAAAgI,aAAA,CAAC3H,KAAK;MACF4H,KAAK;MACLC,IAAI,EAAE,IAAI3G,oBAAoB,EAAG;MACjCqE,MAAM,EAAEA,CAAA,KAAM;QACV,IAAI,CAACuC,iBAAiB,CAAC5G,oBAAoB,CAAC;QAC5C,oBACIvB,KAAA,CAAAgI,aAAA,CAACpF,sBAAsB,EAAAwF,QAAA;UACnBhC,SAAS,EAAEA,SAAU;UACrBG,MAAM,EAAEA,MAAO;UACfoC,qBAAqB,EAAE/E,aAAc;UACrCe,GAAG,EAAE4B,MAAO;UACZS,WAAW,EAAEA,WAAY;UACzBI,qBAAqB,EAAEA,qBAAsB;UAC7CwB,GAAG,EAAE,IAAI,CAACnD,cAAe;UACzBoD,aAAa,EAAE7G;QAA6B,GACxCkE,mBAAmB,CAC1B,CAAC;MAEV;IAAE,CACL,CACJ,EACAY,WAAW,iBACR9G,KAAA,CAAAgI,aAAA,CAAC3H,KAAK;MACF4H,KAAK;MACLC,IAAI,EAAE,CACF,IAAI1G,qBAAqB,EAAE,EAC3B,IAAIA,qBAAqB,0CAA0C,CACrE;MACFoE,MAAM,EAAEA,CAAC;QAAEqD;MAAM,CAAC,KAAK;QACnB,IAAI,CAACd,iBAAiB,CAAC3G,qBAAqB,CAAC;QAC7C,OAAO+F,gCAAgC,gBACnCvH,KAAA,CAAAgI,aAAA,CAAC9E,iCAAiC,EAAAkF,QAAA;UAC9BhC,SAAS,EAAEA,SAAU;UACrBmC,aAAa,EAAEjC,IAAI,CAACkC,SAAU;UAC9BjC,MAAM,EAAEA,MAAO;UACfgD,mBAAmB,EACfN,KAAK,CAACE,MAAM,CAACI,mBAAmB,GAC1BN,KAAK,CAACE,MAAM,CAACI,mBAAmB,CAACC,KAAK,CAAC,GAAG,CAAC,GAC3C,EACT;UACDb,qBAAqB,EAAE/E,aAAc;UACrC6F,yBAAyB,EAAEjC,8BAA+B;UAC1DoB,GAAG,EAAE,IAAI,CAAClD,eAAgB;UAC1BmD,aAAa,EAAExG;QAAyC,GACpD6E,oBAAoB,CAC3B,CAAC,gBAEFlH,KAAA,CAAAgI,aAAA,CAAC/E,uBAAuB,EAAAmF,QAAA;UACpBhC,SAAS,EAAEA,SAAU;UACrBG,MAAM,EAAEA,MAAO;UACfoC,qBAAqB,EAAE/E,aAAc;UACrCgF,GAAG,EAAE,IAAI,CAAClD,eAAgB;UAC1BmD,aAAa,EAAEzG;QAA8B,GACzC8E,oBAAoB,CAC3B,CACJ;MACL;IAAE,CACL,CACJ,EACAL,SAAS,iBACN7G,KAAA,CAAAgI,aAAA,CAAC3H,KAAK;MACF4H,KAAK;MACLC,IAAI,EAAE,IAAIvG,mBAAmB,EAAG;MAChCiE,MAAM,EAAEA,CAAA,KAAM;QACV,IAAI,CAACuC,iBAAiB,CAACxG,mBAAmB,CAAC;QAC3C,oBACI3B,KAAA,CAAAgI,aAAA,CAAC7E,qBAAqB,EAAAiF,QAAA;UAClBO,qBAAqB,EAAE/E,aAAc;UACrCiF,aAAa,EAAEvG;QAA4B,GACvC6D,kBAAkB,CACzB,CAAC;MAEV;IAAE,CACL,CACJ,EACAa,WAAW,iBACRhH,KAAA,CAAAgI,aAAA,CAAC3H,KAAK;MACF6H,IAAI,EAAE7E,qBAAsB;MAC5BuC,MAAM,EAAEA,CAAC;QAAEqD;MAAM,CAAC,KAAK;QACnB,IAAIA,KAAK,CAACE,MAAM,CAACO,OAAO,EAAE;UACtB,IAAI,CAACvB,iBAAiB,CAACc,KAAK,CAACE,MAAM,CAACO,OAAO,CAAC;QAChD;QACA,oBACI1J,KAAA,CAAAgI,aAAA,CAAC5E,uBAAuB,EAAAgF,QAAA;UACpB7B,MAAM,EAAEA,MAAO;UACfoC,qBAAqB,EAAE/E,aAAc;UACrCe,GAAG,EAAE4B,MAAO;UACZrB,eAAe,EAAEA,eAAgB;UACjCyE,UAAU,EAAEV,KAAK,CAACE,MAAM,CAACO,OAAQ;UACjCd,GAAG,EAAE,IAAI,CAACjD,eAAgB;UAC1BiE,SAAS,EAAEX,KAAK,CAACE,MAAM,CAACS;QAAU,GAC9BvC,oBAAoB,CAC3B,CAAC;MAEV;IAAE,CACL,CACJ,eACDrH,KAAA,CAAAgI,aAAA,CAAC3H,KAAK;MACFuF,MAAM,EAAEA,CAAA,KAAM;QACV,IAAIiE,QAAQ,GAAG,EAAE;QAEjB,IAAI9B,gBAAgB,EAAE;UAClB8B,QAAQ,GAAG5D,YAAY;QAC3B,CAAC,MAAM,IAAI4B,wBAAwB,IAAIH,yBAAyB,EAAE;UAC9DmC,QAAQ,GAAGhI,kBAAkB;QACjC,CAAC,MAAM,IAAIgF,SAAS,EAAE;UAClBgD,QAAQ,GAAGlI,mBAAmB;QAClC,CAAC,MAAM,IAAIoF,SAAS,EAAE;UAClB8C,QAAQ,GAAGpI,mBAAmB;QAClC,CAAC,MAAM,IAAIiF,WAAW,EAAE;UACpBmD,QAAQ,GAAGvI,qBAAqB;QACpC,CAAC,MAAM,IAAIsF,UAAU,EAAE;UACnBiD,QAAQ,GAAGtI,oBAAoB;QACnC,CAAC,MAAM,IAAIuF,WAAW,EAAE;UACpB+C,QAAQ,GAAGrI,qBAAqB;QACpC,CAAC,MAAM,IAAIqG,wBAAwB,IAAI,CAACH,yBAAyB,EAAE;UAC/DmC,QAAQ,GAAGhI,kBAAkB;QACjC;QAEA,oBAAO7B,KAAA,CAAAgI,aAAA,CAAC5H,QAAQ;UAAC0J,EAAE,EAAE;YAAEzF,QAAQ,EAAE,IAAIwF,QAAQ,EAAE;YAAEvC,KAAK,EAAE;cAAEyC,MAAM,EAAE;YAAK;UAAE;QAAE,CAAE,CAAC;MAClF;IAAE,CACL,CACG,CAAC;EAEjB;AACJ;AAEA,SAASzG,aAAa,IAAI0G,sBAAsB;AAChD,eAAe/J,IAAI,CAAC,CAChBW,mBAAmB,EACnBJ,sBAAsB,EACtBE,cAAc,EACdD,oBAAoB,EACpBK,gBAAgB,CACnB,CAAC,CAACwC,aAAa,CAAC","ignoreList":[]}