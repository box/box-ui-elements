{"version":3,"file":"MetadataInstanceEditor.js","names":["MetadataInstanceForm","React","useContext","PreviewContext","MetadataInstanceEditor","areAiSuggestionsAvailable","errorCode","isBetaLanguageEnabled","isBoxAiSuggestionsEnabled","isDeleteButtonDisabled","isDeleteConfirmationModalCheckboxEnabled","isLargeFile","isMetadataMultiLevelTaxonomyFieldEnabled","isUnsavedChangesModalOpen","onCancel","onDelete","onDiscardUnsavedChanges","onSubmit","setIsUnsavedChangesModalOpen","taxonomyOptionsFetcher","template","isAdvancedExtractAgentEnabled","previewContext","customRef","previewBodyRef","current","createElement","isMultilevelTaxonomyFieldEnabled","isAiSuggestionsFeatureEnabled","selectedTemplateInstance"],"sources":["../../../src/elements/content-sidebar/MetadataInstanceEditor.tsx"],"sourcesContent":["import {\n    MetadataInstanceForm,\n    type FormValues,\n    type JSONPatchOperations,\n    type MetadataTemplateInstance,\n} from '@box/metadata-editor';\nimport { TaxonomyOptionsFetcher } from '@box/metadata-editor/lib/components/metadata-editor-fields/components/metadata-taxonomy-field/types.js';\nimport React, { useContext } from 'react';\nimport PreviewContext, { type PreviewContextType } from '../content-preview/PreviewContext';\nimport {\n    ERROR_CODE_METADATA_AUTOFILL_TIMEOUT,\n    ERROR_CODE_UNKNOWN,\n    ERROR_CODE_METADATA_PRECONDITION_FAILED,\n} from '../../constants';\n\nexport interface MetadataInstanceEditorProps {\n    areAiSuggestionsAvailable: boolean;\n    errorCode?: ERROR_CODE_METADATA_AUTOFILL_TIMEOUT | ERROR_CODE_METADATA_PRECONDITION_FAILED | ERROR_CODE_UNKNOWN;\n    isBetaLanguageEnabled: boolean;\n    isBoxAiSuggestionsEnabled: boolean;\n    isDeleteButtonDisabled: boolean;\n    isDeleteConfirmationModalCheckboxEnabled: boolean;\n    isLargeFile: boolean;\n    isMetadataMultiLevelTaxonomyFieldEnabled: boolean;\n    isUnsavedChangesModalOpen: boolean;\n    onCancel: () => void;\n    onDelete: (metadataInstance: MetadataTemplateInstance) => void;\n    onDiscardUnsavedChanges: () => void;\n    onSubmit: (values: FormValues, operations: JSONPatchOperations) => Promise<void>;\n    setIsUnsavedChangesModalOpen: (isUnsavedChangesModalOpen: boolean) => void;\n    taxonomyOptionsFetcher: TaxonomyOptionsFetcher;\n    template: MetadataTemplateInstance;\n    isAdvancedExtractAgentEnabled?: boolean;\n}\n\nconst MetadataInstanceEditor: React.FC<MetadataInstanceEditorProps> = ({\n    areAiSuggestionsAvailable,\n    errorCode,\n    isBetaLanguageEnabled,\n    isBoxAiSuggestionsEnabled,\n    isDeleteButtonDisabled,\n    isDeleteConfirmationModalCheckboxEnabled,\n    isLargeFile,\n    isMetadataMultiLevelTaxonomyFieldEnabled,\n    isUnsavedChangesModalOpen,\n    onCancel,\n    onDelete,\n    onDiscardUnsavedChanges,\n    onSubmit,\n    setIsUnsavedChangesModalOpen,\n    taxonomyOptionsFetcher,\n    template,\n    isAdvancedExtractAgentEnabled = false,\n}) => {\n    const previewContext: PreviewContextType | null = useContext(PreviewContext);\n    const customRef = previewContext?.previewBodyRef?.current;\n\n    return (\n        <MetadataInstanceForm\n            // TODO investigate if this property should be optional and by default false\n            isMultilevelTaxonomyFieldEnabled={isMetadataMultiLevelTaxonomyFieldEnabled}\n            areAiSuggestionsAvailable={areAiSuggestionsAvailable}\n            errorCode={errorCode}\n            isAiSuggestionsFeatureEnabled={isBoxAiSuggestionsEnabled}\n            isBetaLanguageEnabled={isBetaLanguageEnabled}\n            isDeleteButtonDisabled={isDeleteButtonDisabled}\n            isDeleteConfirmationModalCheckboxEnabled={isDeleteConfirmationModalCheckboxEnabled}\n            isLargeFile={isLargeFile}\n            isUnsavedChangesModalOpen={isUnsavedChangesModalOpen}\n            onCancel={onCancel}\n            onDelete={onDelete}\n            onDiscardUnsavedChanges={onDiscardUnsavedChanges}\n            onSubmit={onSubmit}\n            selectedTemplateInstance={template}\n            setIsUnsavedChangesModalOpen={setIsUnsavedChangesModalOpen}\n            taxonomyOptionsFetcher={taxonomyOptionsFetcher}\n            isAdvancedExtractAgentEnabled={isAdvancedExtractAgentEnabled}\n            customRef={customRef}\n        />\n    );\n};\n\nexport default MetadataInstanceEditor;\n"],"mappings":"AAAA,SACIA,oBAAoB,QAIjB,sBAAsB;AAE7B,OAAOC,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,OAAOC,cAAc,MAAmC,mCAAmC;AA2B3F,MAAMC,sBAA6D,GAAGA,CAAC;EACnEC,yBAAyB;EACzBC,SAAS;EACTC,qBAAqB;EACrBC,yBAAyB;EACzBC,sBAAsB;EACtBC,wCAAwC;EACxCC,WAAW;EACXC,wCAAwC;EACxCC,yBAAyB;EACzBC,QAAQ;EACRC,QAAQ;EACRC,uBAAuB;EACvBC,QAAQ;EACRC,4BAA4B;EAC5BC,sBAAsB;EACtBC,QAAQ;EACRC,6BAA6B,GAAG;AACpC,CAAC,KAAK;EACF,MAAMC,cAAyC,GAAGpB,UAAU,CAACC,cAAc,CAAC;EAC5E,MAAMoB,SAAS,GAAGD,cAAc,EAAEE,cAAc,EAAEC,OAAO;EAEzD,oBACIxB,KAAA,CAAAyB,aAAA,CAAC1B;EACG;EAAA;IACA2B,gCAAgC,EAAEf,wCAAyC;IAC3EP,yBAAyB,EAAEA,yBAA0B;IACrDC,SAAS,EAAEA,SAAU;IACrBsB,6BAA6B,EAAEpB,yBAA0B;IACzDD,qBAAqB,EAAEA,qBAAsB;IAC7CE,sBAAsB,EAAEA,sBAAuB;IAC/CC,wCAAwC,EAAEA,wCAAyC;IACnFC,WAAW,EAAEA,WAAY;IACzBE,yBAAyB,EAAEA,yBAA0B;IACrDC,QAAQ,EAAEA,QAAS;IACnBC,QAAQ,EAAEA,QAAS;IACnBC,uBAAuB,EAAEA,uBAAwB;IACjDC,QAAQ,EAAEA,QAAS;IACnBY,wBAAwB,EAAET,QAAS;IACnCF,4BAA4B,EAAEA,4BAA6B;IAC3DC,sBAAsB,EAAEA,sBAAuB;IAC/CE,6BAA6B,EAAEA,6BAA8B;IAC7DE,SAAS,EAAEA;EAAU,CACxB,CAAC;AAEV,CAAC;AAED,eAAenB,sBAAsB","ignoreList":[]}