{"version":3,"file":"MetadataSidebarRedesign.stories.js","names":["React","fn","userEvent","within","http","HttpResponse","ContentSidebar","fileIdWithMetadata","mockEnterpriseMetadataTemplates","mockFileRequest","mockMetadataInstances","mockGlobalMetadataTemplates","mockFeatures","mockLogger","onReadyMetric","endMarkName","console","log","defaultMetadataSidebarProps","isBoxAiSuggestionsEnabled","isBetaLanguageEnabled","isDeleteConfirmationModalCheckboxEnabled","isMetadataMultiLevelTaxonomyFieldEnabled","isFeatureEnabled","onError","onSuccess","meta","title","component","args","fileId","features","logger","hasMetadata","token","global","TOKEN","metadataSidebarProps","parameters","msw","handlers","get","url","json","response","render","createElement","Basic","play","canvasElement","canvas","addTemplateButton","findByRole","name","container","click"],"sources":["../../../../src/elements/content-sidebar/stories/MetadataSidebarRedesign.stories.tsx"],"sourcesContent":["import React, { type ComponentProps } from 'react';\nimport { type StoryObj, Meta } from '@storybook/react';\nimport { fn, userEvent, within } from 'storybook/test';\nimport { http, HttpResponse } from 'msw';\nimport type { HttpHandler } from 'msw';\nimport MetadataSidebarRedesign from '../MetadataSidebarRedesign';\nimport ContentSidebar from '../ContentSidebar';\nimport {\n    fileIdWithMetadata,\n    mockEnterpriseMetadataTemplates,\n    mockFileRequest,\n    mockMetadataInstances,\n    mockGlobalMetadataTemplates,\n} from './__mocks__/MetadataSidebarRedesignedMocks';\n\nconst mockFeatures = {\n    'metadata.redesign.enabled': true,\n};\nconst mockLogger = {\n    onReadyMetric: ({ endMarkName }) => {\n        // eslint-disable-next-line no-console\n        console.log(`Logger: onReadyMetric called with endMarkName: ${endMarkName}`);\n    },\n};\n\nconst defaultMetadataSidebarProps: ComponentProps<typeof MetadataSidebarRedesign> = {\n    isBoxAiSuggestionsEnabled: true,\n    isBetaLanguageEnabled: false,\n    isDeleteConfirmationModalCheckboxEnabled: false,\n    isMetadataMultiLevelTaxonomyFieldEnabled: false,\n    isFeatureEnabled: true,\n    onError: fn(),\n    onSuccess: fn(),\n};\n\nconst meta: Meta<typeof ContentSidebar> & { parameters: { msw: { handlers: HttpHandler[] } } } = {\n    title: 'Elements/ContentSidebar/MetadataSidebarRedesign',\n    component: ContentSidebar,\n    args: {\n        fileId: fileIdWithMetadata,\n        features: mockFeatures,\n        logger: mockLogger,\n        hasMetadata: true,\n        token: global.TOKEN,\n        metadataSidebarProps: defaultMetadataSidebarProps,\n    },\n    parameters: {\n        msw: {\n            handlers: [\n                http.get(mockFileRequest.url, () => {\n                    return HttpResponse.json(mockFileRequest.response);\n                }),\n                http.get(mockMetadataInstances.url, () => {\n                    return HttpResponse.json(mockMetadataInstances.response);\n                }),\n                http.get(mockEnterpriseMetadataTemplates.url, () => {\n                    return HttpResponse.json(mockEnterpriseMetadataTemplates.response);\n                }),\n                http.get(mockGlobalMetadataTemplates.url, () => {\n                    return HttpResponse.json(mockGlobalMetadataTemplates.response);\n                }),\n            ],\n        },\n    },\n    render: args => {\n        return <ContentSidebar {...args} />;\n    },\n};\n\nexport default meta;\n\nexport const Basic: StoryObj<typeof MetadataSidebarRedesign> = {\n    play: async ({ canvasElement }) => {\n        const canvas = within(canvasElement);\n\n        const addTemplateButton = await canvas.findByRole(\n            'button',\n            { name: 'Add template' },\n            { container: await canvas.findByRole('tabpanel') },\n        );\n        await userEvent.click(addTemplateButton);\n    },\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAA+B,OAAO;AAElD,SAASC,EAAE,EAAEC,SAAS,EAAEC,MAAM,QAAQ,gBAAgB;AACtD,SAASC,IAAI,EAAEC,YAAY,QAAQ,KAAK;AAGxC,OAAOC,cAAc,MAAM,mBAAmB;AAC9C,SACIC,kBAAkB,EAClBC,+BAA+B,EAC/BC,eAAe,EACfC,qBAAqB,EACrBC,2BAA2B,QACxB,4CAA4C;AAEnD,MAAMC,YAAY,GAAG;EACjB,2BAA2B,EAAE;AACjC,CAAC;AACD,MAAMC,UAAU,GAAG;EACfC,aAAa,EAAEA,CAAC;IAAEC;EAAY,CAAC,KAAK;IAChC;IACAC,OAAO,CAACC,GAAG,CAAC,kDAAkDF,WAAW,EAAE,CAAC;EAChF;AACJ,CAAC;AAED,MAAMG,2BAA2E,GAAG;EAChFC,yBAAyB,EAAE,IAAI;EAC/BC,qBAAqB,EAAE,KAAK;EAC5BC,wCAAwC,EAAE,KAAK;EAC/CC,wCAAwC,EAAE,KAAK;EAC/CC,gBAAgB,EAAE,IAAI;EACtBC,OAAO,EAAEvB,EAAE,CAAC,CAAC;EACbwB,SAAS,EAAExB,EAAE,CAAC;AAClB,CAAC;AAED,MAAMyB,IAAwF,GAAG;EAC7FC,KAAK,EAAE,iDAAiD;EACxDC,SAAS,EAAEtB,cAAc;EACzBuB,IAAI,EAAE;IACFC,MAAM,EAAEvB,kBAAkB;IAC1BwB,QAAQ,EAAEnB,YAAY;IACtBoB,MAAM,EAAEnB,UAAU;IAClBoB,WAAW,EAAE,IAAI;IACjBC,KAAK,EAAEC,MAAM,CAACC,KAAK;IACnBC,oBAAoB,EAAEnB;EAC1B,CAAC;EACDoB,UAAU,EAAE;IACRC,GAAG,EAAE;MACDC,QAAQ,EAAE,CACNpC,IAAI,CAACqC,GAAG,CAAChC,eAAe,CAACiC,GAAG,EAAE,MAAM;QAChC,OAAOrC,YAAY,CAACsC,IAAI,CAAClC,eAAe,CAACmC,QAAQ,CAAC;MACtD,CAAC,CAAC,EACFxC,IAAI,CAACqC,GAAG,CAAC/B,qBAAqB,CAACgC,GAAG,EAAE,MAAM;QACtC,OAAOrC,YAAY,CAACsC,IAAI,CAACjC,qBAAqB,CAACkC,QAAQ,CAAC;MAC5D,CAAC,CAAC,EACFxC,IAAI,CAACqC,GAAG,CAACjC,+BAA+B,CAACkC,GAAG,EAAE,MAAM;QAChD,OAAOrC,YAAY,CAACsC,IAAI,CAACnC,+BAA+B,CAACoC,QAAQ,CAAC;MACtE,CAAC,CAAC,EACFxC,IAAI,CAACqC,GAAG,CAAC9B,2BAA2B,CAAC+B,GAAG,EAAE,MAAM;QAC5C,OAAOrC,YAAY,CAACsC,IAAI,CAAChC,2BAA2B,CAACiC,QAAQ,CAAC;MAClE,CAAC,CAAC;IAEV;EACJ,CAAC;EACDC,MAAM,EAAEhB,IAAI,IAAI;IACZ,oBAAO7B,KAAA,CAAA8C,aAAA,CAACxC,cAAc,EAAKuB,IAAO,CAAC;EACvC;AACJ,CAAC;AAED,eAAeH,IAAI;AAEnB,OAAO,MAAMqB,KAA+C,GAAG;EAC3DC,IAAI,EAAE,MAAAA,CAAO;IAAEC;EAAc,CAAC,KAAK;IAC/B,MAAMC,MAAM,GAAG/C,MAAM,CAAC8C,aAAa,CAAC;IAEpC,MAAME,iBAAiB,GAAG,MAAMD,MAAM,CAACE,UAAU,CAC7C,QAAQ,EACR;MAAEC,IAAI,EAAE;IAAe,CAAC,EACxB;MAAEC,SAAS,EAAE,MAAMJ,MAAM,CAACE,UAAU,CAAC,UAAU;IAAE,CACrD,CAAC;IACD,MAAMlD,SAAS,CAACqD,KAAK,CAACJ,iBAAiB,CAAC;EAC5C;AACJ,CAAC","ignoreList":[]}