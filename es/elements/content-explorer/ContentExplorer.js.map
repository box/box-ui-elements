{"version":3,"file":"ContentExplorer.js","names":["React","Component","classNames","cloneDeep","debounce","flow","getProp","isEqual","noop","throttle","uniqueid","CreateFolderDialog","UploadDialog","Header","Pagination","SubHeader","makeResponsive","openUrlInsideIframe","Internationalize","ThemingStyles","API","MetadataQueryAPIHelperV2","MetadataQueryAPIHelper","MetadataSidePanel","Footer","PreviewDialog","ShareDialog","RenameDialog","DeleteConfirmationDialog","Content","isThumbnailAvailable","isFocusableElement","isInputElement","focus","FILE_SHARED_LINK_FIELDS_TO_FETCH","CONTENT_EXPLORER_FOLDER_FIELDS_TO_FETCH","LocalStore","withFeatureConsumer","withFeatureProvider","isFeatureEnabled","DEFAULT_HOSTNAME_UPLOAD","DEFAULT_HOSTNAME_API","DEFAULT_HOSTNAME_APP","DEFAULT_HOSTNAME_STATIC","DEFAULT_SEARCH_DEBOUNCE","SORT_ASC","FIELD_ITEM_NAME","FIELD_NAME","FIELD_PERMISSIONS_CAN_SHARE","FIELD_SHARED_LINK","DEFAULT_ROOT","VIEW_SEARCH","VIEW_FOLDER","VIEW_ERROR","VIEW_RECENTS","VIEW_METADATA","VIEW_MODE_LIST","TYPE_FILE","TYPE_WEBLINK","TYPE_FOLDER","CLIENT_NAME_CONTENT_EXPLORER","CLIENT_VERSION","DEFAULT_PAGE_NUMBER","DEFAULT_PAGE_SIZE","DEFAULT_VIEW_FILES","DEFAULT_VIEW_RECENTS","DEFAULT_VIEW_METADATA","ERROR_CODE_ITEM_NAME_INVALID","ERROR_CODE_ITEM_NAME_TOO_LONG","TYPED_ID_FOLDER_PREFIX","VIEW_MODE_GRID","withBlueprintModernization","Providers","GRID_VIEW_MAX_COLUMNS","GRID_VIEW_MIN_COLUMNS","localStoreViewMode","ContentExplorer","constructor","props","_defineProperty","metadataQueryCollection","metadataTemplate","nextMarker","metadataQuery","features","currentCollection","currentPageNumber","markers","state","cloneMarkers","nextState","_objectSpread","percentLoaded","validateSelectedItemIds","items","ancestor_folder_id","api","getFolderAPI","getFolderFields","name","setState","rootName","errorCallback","fields","operations","templateOldFields","templateNewFields","successCallback","length","metadataQueryAPIHelper","updateMetadataWithOperations","bulkUpdateMetadata","error","view","console","id","searchQuery","fetchFolder","showRecents","search","showMetadataQueryResults","Error","triggerNavigationEvent","rootFolderId","currentId","currentOffset","currentPageSize","limit","sortBy","sortDirection","folderId","hasFolderChanged","hasSearchQuery","trim","offset","firstLoad","rootElement","currentUnloadedCollection","getFolder","collection","fetchFolderSuccessCallback","forceFetch","item","type","isTouch","preview","selected","closeModals","updateCollection","query","getSearchAPI","searchSuccessCallback","trimmedQuery","debouncedSearch","cancel","undefined","permissions","canUpload","can_upload","isUploadModalOpen","access","canSetShareAccess","can_set_share_access","isLoading","getAPI","share","updatedItem","select","refreshCollection","selectedItemIds","size","validSelectedIds","Set","forEach","has","add","entries","representation","updatedRepresentation","getFileAPI","generateRepresentation","updateItemInCollection","representations","slice","newItem","newCollection","map","callback","onSelect","selectedItem","focusedRow","findIndex","i","url","window","open","previewCallback","canPreview","can_preview","isPreviewModalOpen","downloadCallback","canDownload","onDownload","can_download","openUrl","getDownloadUrl","deleteCallback","isDeleteModalOpen","canDelete","onDelete","parent","parentId","can_delete","deleteItem","renameCallback","nameWithoutExt","extension","isRenameModalOpen","canRename","onRename","can_rename","errorCode","rename","code","throttledCreateFolderCallback","isCreateFolderModalOpen","canCreateNewFolder","onCreate","create","createFolderCallback","trailing","shareCallback","handleSharedLinkSuccess","getFile","getWebLinkAPI","getWeblink","sharedItem","isShareModalOpen","canShare","can_share","fetchSharedLinkInfo","event","target","key","toLowerCase","preventDefault","getViewMode","document","activeElement","closest","globalModifier","upload","createFolder","newOffset","store","getItem","isSmall","isMedium","isLarge","maxWidthColumns","metadataViewProps","onSelectionChange","hasNextMarker","hasPrevMarker","selectedKeys","ids","isSelectionEmpty","isMetadataSidePanelOpen","paginationProps","onMarkerBasedPageChange","markerBasedPaginate","viewMode","setItem","forceUpdate","sliderValue","gridColumnCount","field","oldValue","newValue","updateMetadata","updateMetadataSuccessCallback","updatedItems","collectionItem","clonedItem","itemField","split","pop","value","prevState","metadataFilters","apiHost","initialPage","initialPageSize","language","requestInterceptor","responseInterceptor","sharedLink","sharedLinkPassword","token","uploadHost","clientName","version","clearCache","destroy","componentWillUnmount","componentDidMount","currentFolderId","defaultView","getElementById","appElement","firstElementChild","componentDidUpdate","prevFolderId","metadataQueryClone","marker","order_by","field_key","direction","fetchMetadataQueryResults","showMetadataQueryResultsSuccessCallback","_extends","finishNavigation","autoFocus","onNavigate","boxItem","recentsSuccessCallback","getRecentsAPI","recents","fileAPI","selectedId","newSelectedItem","itemThumbnails","Promise","all","getThumbnailUrl","index","isSelected","currentItem","thumbnailUrl","attemptThumbnailGeneration","render","appHost","bulkItemActions","className","contentPreviewProps","contentUploaderProps","hasProviders","itemActions","logoUrl","measureRef","messages","fieldsToShow","onPreview","onUpload","staticHost","staticPath","previewLibraryVersion","theme","title","totalCount","styleClassName","allowUpload","allowCreate","isDefaultViewMetadata","isMetadataViewV2Feature","isErrorView","maxGridColumnCount","getMaxNumberOfGridViewColumnsForWidth","hasPreviousMarker","getMetadataViewProps","createElement","ref","selector","onKeyDown","tabIndex","onSearch","rootId","gridMaxColumns","gridMinColumns","maxGridColumnCountForWidth","onClearSelectedItemIds","clearSelectedItemIds","onGridViewSliderChange","onItemClick","onSortChange","sort","onMetadataSidePanelToggle","onViewModeChange","changeViewMode","portalElement","Math","min","onItemDelete","delete","onItemDownload","download","onItemPreview","onItemRename","onItemSelect","onItemShare","onMetadataFilter","filterMetadata","onMetadataUpdate","onOffsetChange","paginate","pageSize","onClose","closeMetadataSidePanel","onUpdate","updateMetadataV2","isOpen","uploadSuccessHandler","parentElement","onCancel","onShareAccessChange","changeShareAccess","cache","getCache","contentSidebarProps","ContentExplorerComponent"],"sources":["../../../src/elements/content-explorer/ContentExplorer.tsx"],"sourcesContent":["import 'regenerator-runtime/runtime';\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport cloneDeep from 'lodash/cloneDeep';\nimport debounce from 'lodash/debounce';\nimport flow from 'lodash/flow';\nimport getProp from 'lodash/get';\nimport isEqual from 'lodash/isEqual';\nimport noop from 'lodash/noop';\nimport throttle from 'lodash/throttle';\nimport uniqueid from 'lodash/uniqueId';\nimport { AxiosRequestConfig, AxiosResponse } from 'axios';\nimport type { Key, Selection } from 'react-aria-components';\nimport type { MetadataTemplateField } from '@box/metadata-editor';\n\nimport CreateFolderDialog from '../common/create-folder-dialog';\nimport UploadDialog from '../common/upload-dialog';\nimport Header from '../common/header';\nimport Pagination from '../common/pagination';\nimport SubHeader from '../common/sub-header/SubHeader';\nimport makeResponsive from '../common/makeResponsive';\nimport openUrlInsideIframe from '../../utils/iframe';\nimport Internationalize from '../common/Internationalize';\nimport ThemingStyles from '../common/theming';\nimport API from '../../api';\nimport MetadataQueryAPIHelperV2 from './MetadataQueryAPIHelper';\nimport MetadataQueryAPIHelper from '../../features/metadata-based-view/MetadataQueryAPIHelper';\nimport MetadataSidePanel from './MetadataSidePanel';\nimport Footer from './Footer';\nimport PreviewDialog from '../common/preview-dialog/PreviewDialog';\nimport ShareDialog from './ShareDialog';\nimport RenameDialog from './RenameDialog';\nimport DeleteConfirmationDialog from './DeleteConfirmationDialog';\nimport Content from './Content';\nimport { isThumbnailAvailable } from '../common/utils';\nimport { isFocusableElement, isInputElement, focus } from '../../utils/dom';\nimport { FILE_SHARED_LINK_FIELDS_TO_FETCH } from '../../utils/fields';\nimport { CONTENT_EXPLORER_FOLDER_FIELDS_TO_FETCH } from './constants';\nimport LocalStore from '../../utils/LocalStore';\nimport {\n    withFeatureConsumer,\n    withFeatureProvider,\n    isFeatureEnabled,\n    type FeatureConfig,\n} from '../common/feature-checking';\nimport {\n    DEFAULT_HOSTNAME_UPLOAD,\n    DEFAULT_HOSTNAME_API,\n    DEFAULT_HOSTNAME_APP,\n    DEFAULT_HOSTNAME_STATIC,\n    DEFAULT_SEARCH_DEBOUNCE,\n    SORT_ASC,\n    FIELD_ITEM_NAME,\n    FIELD_NAME,\n    FIELD_PERMISSIONS_CAN_SHARE,\n    FIELD_SHARED_LINK,\n    DEFAULT_ROOT,\n    VIEW_SEARCH,\n    VIEW_FOLDER,\n    VIEW_ERROR,\n    VIEW_RECENTS,\n    VIEW_METADATA,\n    VIEW_MODE_LIST,\n    TYPE_FILE,\n    TYPE_WEBLINK,\n    TYPE_FOLDER,\n    CLIENT_NAME_CONTENT_EXPLORER,\n    CLIENT_VERSION,\n    DEFAULT_PAGE_NUMBER,\n    DEFAULT_PAGE_SIZE,\n    DEFAULT_VIEW_FILES,\n    DEFAULT_VIEW_RECENTS,\n    DEFAULT_VIEW_METADATA,\n    ERROR_CODE_ITEM_NAME_INVALID,\n    ERROR_CODE_ITEM_NAME_TOO_LONG,\n    TYPED_ID_FOLDER_PREFIX,\n    VIEW_MODE_GRID,\n} from '../../constants';\nimport type { ViewMode } from '../common/flowTypes';\nimport type { ItemAction } from '../common/item';\nimport type { Theme } from '../common/theming';\nimport type { JSONPatchOperations } from '../../common/types/api';\nimport type { MetadataQuery, FieldsToShow } from '../../common/types/metadataQueries';\nimport type { MetadataFieldValue, MetadataTemplate } from '../../common/types/metadata';\nimport type {\n    View,\n    DefaultView,\n    StringMap,\n    SortBy,\n    SortDirection,\n    Token,\n    Access,\n    Collection,\n    BoxItemPermission,\n    BoxItem,\n} from '../../common/types/core';\nimport type { BulkItemAction } from '../common/sub-header/BulkItemActionMenu';\nimport type { ContentPreviewProps } from '../content-preview';\nimport type { ContentUploaderProps } from '../content-uploader';\nimport type { ExternalFilterValues, MetadataViewContainerProps } from './MetadataViewContainer';\n\nimport '../common/fonts.scss';\nimport '../common/base.scss';\nimport '../common/modal.scss';\nimport './ContentExplorer.scss';\nimport { withBlueprintModernization } from '../common/withBlueprintModernization';\nimport Providers from '../common/Providers';\n\nconst GRID_VIEW_MAX_COLUMNS = 7;\nconst GRID_VIEW_MIN_COLUMNS = 1;\n\nexport interface ContentExplorerProps {\n    apiHost?: string;\n    appHost?: string;\n    autoFocus?: boolean;\n    bulkItemActions?: BulkItemAction[];\n    canCreateNewFolder?: boolean;\n    canDelete?: boolean;\n    canDownload?: boolean;\n    canPreview?: boolean;\n    canRename?: boolean;\n    canSetShareAccess?: boolean;\n    canShare?: boolean;\n    canUpload?: boolean;\n    className?: string;\n    contentPreviewProps?: ContentPreviewProps;\n    contentUploaderProps?: ContentUploaderProps;\n    currentFolderId?: string;\n    defaultView?: DefaultView;\n    features?: FeatureConfig;\n    fieldsToShow?: FieldsToShow;\n    hasProviders?: boolean;\n    initialPage?: number;\n    initialPageSize?: number;\n    isLarge?: boolean;\n    isMedium?: boolean;\n    isSmall?: boolean;\n    isTouch?: boolean;\n    isVeryLarge?: boolean;\n    itemActions?: ItemAction[];\n    language?: string;\n    logoUrl?: string;\n    measureRef?: (ref: Element | null) => void;\n    messages?: StringMap;\n    metadataQuery?: MetadataQuery;\n    metadataViewProps?: Omit<\n        MetadataViewContainerProps,\n        'hasError' | 'currentCollection' | 'metadataTemplate' | 'selectedKeys'\n    >;\n    onCreate?: (item: BoxItem) => void;\n    onDelete?: (item: BoxItem) => void;\n    onDownload?: (item: BoxItem) => void;\n    onNavigate?: (item: BoxItem) => void;\n    onPreview?: (data: unknown) => void;\n    onRename?: (item: BoxItem) => void;\n    onSelect?: (item: BoxItem) => void;\n    onUpload?: (item: BoxItem) => void;\n    previewLibraryVersion?: string;\n    requestInterceptor?: (response: AxiosResponse) => void;\n    responseInterceptor?: (config: AxiosRequestConfig) => void;\n    rootFolderId?: string;\n    sharedLink?: string;\n    sharedLinkPassword?: string;\n    sortBy?: SortBy | Key;\n    sortDirection?: SortDirection;\n    staticHost?: string;\n    staticPath?: string;\n    theme?: Theme;\n    title?: string;\n    token: Token;\n    uploadHost?: string;\n}\n\ntype State = {\n    currentCollection: Collection;\n    currentOffset: number;\n    currentPageNumber: number;\n    currentPageSize: number;\n    errorCode: string;\n    focusedRow: number;\n    gridColumnCount: number;\n    isCreateFolderModalOpen: boolean;\n    isDeleteModalOpen: boolean;\n    isLoading: boolean;\n    isMetadataSidePanelOpen: boolean;\n    isPreviewModalOpen: boolean;\n    isRenameModalOpen: boolean;\n    isShareModalOpen: boolean;\n    isUploadModalOpen: boolean;\n    markers: Array<string | null | undefined>;\n    metadataTemplate: MetadataTemplate;\n    metadataFilters: ExternalFilterValues;\n    rootName: string;\n    searchQuery: string;\n    selected?: BoxItem;\n    selectedItemIds: Selection;\n    sortBy: SortBy | string;\n    sortDirection: SortDirection;\n    view: View;\n};\n\nconst localStoreViewMode = 'bce.defaultViewMode';\n\nclass ContentExplorer extends Component<ContentExplorerProps, State> {\n    id: string;\n\n    api: API;\n\n    state: State;\n\n    props: ContentExplorerProps;\n\n    rootElement: HTMLElement;\n\n    appElement: HTMLElement;\n\n    globalModifier: boolean;\n\n    firstLoad: boolean = true; // Keeps track of very 1st load\n\n    store: LocalStore = new LocalStore();\n\n    metadataQueryAPIHelper: MetadataQueryAPIHelper | MetadataQueryAPIHelperV2;\n\n    static defaultProps = {\n        rootFolderId: DEFAULT_ROOT,\n        sortBy: FIELD_NAME,\n        sortDirection: SORT_ASC,\n        canDownload: true,\n        canDelete: true,\n        canUpload: true,\n        canRename: true,\n        canShare: true,\n        canPreview: true,\n        canSetShareAccess: true,\n        canCreateNewFolder: true,\n        autoFocus: false,\n        apiHost: DEFAULT_HOSTNAME_API,\n        appHost: DEFAULT_HOSTNAME_APP,\n        staticHost: DEFAULT_HOSTNAME_STATIC,\n        uploadHost: DEFAULT_HOSTNAME_UPLOAD,\n        className: '',\n        onDelete: noop,\n        onDownload: noop,\n        onPreview: noop,\n        onRename: noop,\n        onCreate: noop,\n        onSelect: noop,\n        onUpload: noop,\n        onNavigate: noop,\n        defaultView: DEFAULT_VIEW_FILES,\n        initialPage: DEFAULT_PAGE_NUMBER,\n        initialPageSize: DEFAULT_PAGE_SIZE,\n        contentPreviewProps: {\n            contentSidebarProps: {},\n        },\n        contentUploaderProps: {},\n        metadataViewProps: {},\n    };\n\n    /**\n     * [constructor]\n     *\n     * @private\n     * @return {ContentExplorer}\n     */\n    constructor(props: ContentExplorerProps) {\n        super(props);\n\n        const {\n            apiHost,\n            initialPage,\n            initialPageSize,\n            language,\n            requestInterceptor,\n            responseInterceptor,\n            rootFolderId,\n            sharedLink,\n            sharedLinkPassword,\n            sortBy,\n            sortDirection,\n            token,\n            uploadHost,\n        }: ContentExplorerProps = props;\n\n        this.api = new API({\n            apiHost,\n            clientName: CLIENT_NAME_CONTENT_EXPLORER,\n            id: `${TYPED_ID_FOLDER_PREFIX}${rootFolderId}`,\n            language,\n            requestInterceptor,\n            responseInterceptor,\n            sharedLink,\n            sharedLinkPassword,\n            token,\n            uploadHost,\n            version: CLIENT_VERSION,\n        });\n\n        this.id = uniqueid('bce_');\n\n        this.state = {\n            currentCollection: {},\n            currentOffset: initialPageSize * (initialPage - 1),\n            currentPageSize: initialPageSize,\n            currentPageNumber: 0,\n            errorCode: '',\n            focusedRow: 0,\n            gridColumnCount: 4,\n            isCreateFolderModalOpen: false,\n            isDeleteModalOpen: false,\n            isLoading: false,\n            isMetadataSidePanelOpen: false,\n            isPreviewModalOpen: false,\n            isRenameModalOpen: false,\n            isShareModalOpen: false,\n            isUploadModalOpen: false,\n            markers: [],\n            metadataFilters: {},\n            metadataTemplate: {},\n            rootName: '',\n            selectedItemIds: new Set(),\n            searchQuery: '',\n            sortBy,\n            sortDirection,\n            view: VIEW_FOLDER,\n        };\n    }\n\n    /**\n     * Destroys api instances\n     *\n     * @private\n     * @return {void}\n     */\n    clearCache(): void {\n        this.api.destroy(true);\n    }\n\n    /**\n     * Cleanup\n     *\n     * @private\n     * @inheritdoc\n     * @return {void}\n     */\n    componentWillUnmount() {\n        this.clearCache();\n    }\n\n    /**\n     * Fetches the root folder on load\n     *\n     * @private\n     * @inheritdoc\n     * @return {void}\n     */\n    componentDidMount() {\n        const { currentFolderId, defaultView }: ContentExplorerProps = this.props;\n        this.rootElement = document.getElementById(this.id) as HTMLElement;\n        this.appElement = this.rootElement.firstElementChild as HTMLElement;\n\n        switch (defaultView) {\n            case DEFAULT_VIEW_RECENTS:\n                this.showRecents();\n                break;\n            case DEFAULT_VIEW_METADATA:\n                this.showMetadataQueryResults();\n                break;\n            default:\n                this.fetchFolder(currentFolderId);\n        }\n    }\n\n    /**\n     * Fetches the current folder if different\n     * from what was already fetched before.\n     *\n     * @private\n     * @inheritdoc\n     * @return {void}\n     */\n    componentDidUpdate({ currentFolderId: prevFolderId }: ContentExplorerProps, prevState: State): void {\n        const { currentFolderId }: ContentExplorerProps = this.props;\n        const {\n            currentCollection: { id },\n        }: State = prevState;\n\n        if (prevFolderId === currentFolderId) {\n            return;\n        }\n\n        if (typeof currentFolderId === 'string' && id !== currentFolderId) {\n            this.fetchFolder(currentFolderId);\n        }\n    }\n\n    /**\n     * Metadata queries success callback\n     *\n     * @private\n     * @param {Object} metadataQueryCollection - Metadata query response collection\n     * @param {Object} metadataTemplate - Metadata template object\n     * @return {void}\n     */\n    showMetadataQueryResultsSuccessCallback = (\n        metadataQueryCollection: Collection,\n        metadataTemplate: MetadataTemplate,\n    ): void => {\n        const { nextMarker } = metadataQueryCollection;\n        const { metadataQuery, features } = this.props;\n        const { currentCollection, currentPageNumber, markers }: State = this.state;\n        const cloneMarkers = [...markers];\n        if (nextMarker) {\n            cloneMarkers[currentPageNumber + 1] = nextMarker;\n        }\n\n        const nextState = {\n            currentCollection: {\n                ...currentCollection,\n                ...metadataQueryCollection,\n                percentLoaded: 100,\n            },\n            markers: cloneMarkers,\n            metadataTemplate,\n        };\n\n        this.validateSelectedItemIds(metadataQueryCollection.items || []);\n\n        // if v2, fetch folder name and add to state\n        if (metadataQuery?.ancestor_folder_id && isFeatureEnabled(features, 'contentExplorer.metadataViewV2')) {\n            this.api.getFolderAPI().getFolderFields(\n                metadataQuery.ancestor_folder_id,\n                ({ name }) => {\n                    this.setState({\n                        ...nextState,\n                        rootName: name || '',\n                    });\n                },\n                this.errorCallback,\n                { fields: [FIELD_NAME] },\n            );\n        } else {\n            // No folder name to fetch, update state immediately with just metadata\n            this.setState(nextState);\n        }\n    };\n\n    /**\n     * Queries metadata_queries/execute API and fetches the result\n     *\n     * @private\n     * @return {void}\n     */\n    showMetadataQueryResults() {\n        const { features, metadataQuery = {} }: ContentExplorerProps = this.props;\n        const { currentPageNumber, markers, metadataFilters, sortBy, sortDirection }: State = this.state;\n        const metadataQueryClone = cloneDeep(metadataQuery);\n\n        if (currentPageNumber === 0) {\n            // Preserve the marker as part of the original query\n            markers[currentPageNumber] = metadataQueryClone.marker;\n        }\n\n        if (typeof markers[currentPageNumber] === 'string') {\n            // Set marker to the query to get next set of results\n            metadataQueryClone.marker = markers[currentPageNumber];\n        }\n\n        if (typeof metadataQueryClone.limit !== 'number') {\n            // Set limit to the query for pagination support\n            metadataQueryClone.limit = DEFAULT_PAGE_SIZE;\n        }\n\n        // Reset search state, the view and show busy indicator\n        this.setState({\n            searchQuery: '',\n            currentCollection: this.currentUnloadedCollection(),\n            view: VIEW_METADATA,\n        });\n\n        if (isFeatureEnabled(features, 'contentExplorer.metadataViewV2')) {\n            metadataQueryClone.order_by = [\n                {\n                    // Default to the prefixed name field for metadata view v2 only, while not touching the default sortBy for other views.\n                    field_key: sortBy === FIELD_NAME ? FIELD_ITEM_NAME : sortBy,\n                    direction: sortDirection,\n                },\n            ];\n\n            this.metadataQueryAPIHelper = new MetadataQueryAPIHelperV2(this.api);\n            this.metadataQueryAPIHelper.fetchMetadataQueryResults(\n                metadataQueryClone,\n                this.showMetadataQueryResultsSuccessCallback,\n                this.errorCallback,\n                metadataFilters,\n            );\n        } else {\n            metadataQueryClone.order_by = [\n                {\n                    field_key: sortBy,\n                    direction: sortDirection,\n                },\n            ];\n            this.metadataQueryAPIHelper = new MetadataQueryAPIHelper(this.api);\n            this.metadataQueryAPIHelper.fetchMetadataQueryResults(\n                metadataQueryClone,\n                this.showMetadataQueryResultsSuccessCallback,\n                this.errorCallback,\n            );\n        }\n    }\n\n    /**\n     * Update selected items' metadata instances based on original and new field values in the metadata instance form\n     *\n     * @private\n     * @return {void}\n     */\n    updateMetadataV2 = async (\n        items: BoxItem[],\n        operations: JSONPatchOperations,\n        templateOldFields: MetadataTemplateField[],\n        templateNewFields: MetadataTemplateField[],\n        successCallback: () => void,\n        errorCallback: ErrorCallback,\n    ) => {\n        if (items.length === 1) {\n            await this.metadataQueryAPIHelper.updateMetadataWithOperations(\n                items[0],\n                operations,\n                successCallback,\n                errorCallback,\n            );\n        } else {\n            await this.metadataQueryAPIHelper.bulkUpdateMetadata(\n                items,\n                templateOldFields,\n                templateNewFields,\n                successCallback,\n                errorCallback,\n            );\n        }\n    };\n\n    /**\n     * Resets the collection so that the loading bar starts showing\n     *\n     * @private\n     * @return {Collection}\n     */\n    currentUnloadedCollection(): Collection {\n        const { currentCollection }: State = this.state;\n        return Object.assign(currentCollection, {\n            percentLoaded: 0,\n        });\n    }\n\n    /**\n     * Network error callback\n     *\n     * @private\n     * @param {Error} error error object\n     * @return {void}\n     */\n    errorCallback = (error: unknown) => {\n        this.setState({\n            view: VIEW_ERROR,\n        });\n        /* eslint-disable no-console */\n        console.error(error);\n        /* eslint-enable no-console */\n    };\n\n    /**\n     * Focuses the grid and fires navigate event\n     *\n     * @private\n     * @return {void}\n     */\n    finishNavigation() {\n        const { autoFocus }: ContentExplorerProps = this.props;\n        const {\n            currentCollection: { percentLoaded },\n        }: State = this.state;\n\n        // If loading for the very first time, only allow focus if autoFocus is true\n        if (this.firstLoad && !autoFocus) {\n            this.firstLoad = false;\n            return;\n        }\n\n        // Don't focus the grid until its loaded and user is not already on an interactable element\n        if (percentLoaded === 100 && !isFocusableElement(document.activeElement)) {\n            focus(this.rootElement, '.bce-item-row');\n            this.setState({ focusedRow: 0 });\n        }\n\n        this.firstLoad = false;\n    }\n\n    /**\n     * Refreshing the item collection depending upon the view.\n     * Navigation event is prevented.\n     *\n     * @private\n     * @return {void}\n     */\n    refreshCollection = () => {\n        const {\n            currentCollection: { id },\n            view,\n            searchQuery,\n        }: State = this.state;\n        if (view === VIEW_FOLDER && id) {\n            this.fetchFolder(id, false);\n        } else if (view === VIEW_RECENTS) {\n            this.showRecents(false);\n        } else if (view === VIEW_SEARCH && searchQuery) {\n            this.search(searchQuery);\n        } else if (view === VIEW_METADATA) {\n            this.showMetadataQueryResults();\n        } else {\n            throw new Error('Cannot refresh incompatible view!');\n        }\n    };\n\n    /**\n     * Folder fetch success callback\n     *\n     * @private\n     * @param {Object} collection - item collection object\n     * @param {Boolean|void} triggerNavigationEvent - To trigger navigate event and focus grid\n     * @return {void}\n     */\n    fetchFolderSuccessCallback(collection: Collection, triggerNavigationEvent: boolean): void {\n        const { onNavigate, rootFolderId }: ContentExplorerProps = this.props;\n        const { boxItem, id, name }: Collection = collection;\n        const { selected }: State = this.state;\n        const rootName = id === rootFolderId ? name : '';\n\n        // Close any open modals\n        this.closeModals();\n\n        this.updateCollection(collection, selected, () => {\n            if (triggerNavigationEvent) {\n                // Fire folder navigation event\n                this.setState({ rootName }, this.finishNavigation);\n                if (boxItem) {\n                    onNavigate(cloneDeep(boxItem));\n                }\n            } else {\n                this.setState({ rootName });\n            }\n        });\n    }\n\n    /**\n     * Fetches a folder, defaults to fetching root folder\n     *\n     * @private\n     * @param {string|void} [id] folder id\n     * @param {Boolean|void} [triggerNavigationEvent] To trigger navigate event\n     * @return {void}\n     */\n    fetchFolder = (id?: string, triggerNavigationEvent: boolean = true) => {\n        const { rootFolderId }: ContentExplorerProps = this.props;\n        const {\n            currentCollection: { id: currentId },\n            currentOffset,\n            currentPageSize: limit,\n            searchQuery = '',\n            sortBy,\n            sortDirection,\n        }: State = this.state;\n        const folderId: string = typeof id === 'string' ? id : rootFolderId;\n        const hasFolderChanged = currentId && currentId !== folderId;\n        const hasSearchQuery = !!searchQuery.trim().length;\n        const offset = hasFolderChanged || hasSearchQuery ? 0 : currentOffset; // Reset offset on folder or mode change\n\n        // If we are navigating around, aka not first load\n        // then reset the focus to the root so that after\n        // the collection loads the activeElement is not the\n        // button that was clicked to fetch the folder\n        if (!this.firstLoad) {\n            this.rootElement.focus();\n        }\n\n        // Reset search state, the view and show busy indicator\n        this.setState({\n            searchQuery: '',\n            view: VIEW_FOLDER,\n            currentCollection: this.currentUnloadedCollection(),\n            currentOffset: offset,\n        });\n\n        // Fetch the folder using folder API\n        this.api.getFolderAPI().getFolder(\n            folderId,\n            limit,\n            offset,\n            sortBy,\n            sortDirection,\n            (collection: Collection) => {\n                this.fetchFolderSuccessCallback(collection, triggerNavigationEvent);\n            },\n            this.errorCallback,\n            { fields: CONTENT_EXPLORER_FOLDER_FIELDS_TO_FETCH, forceFetch: true },\n        );\n    };\n\n    /**\n     * Action performed when clicking on an item\n     *\n     * @private\n     * @param {Object|string} item - the clicked box item\n     * @return {void}\n     */\n    onItemClick = (item: BoxItem | string) => {\n        // If the id was passed in, just use that\n        if (typeof item === 'string') {\n            this.fetchFolder(item);\n            return;\n        }\n\n        const { id, type }: BoxItem = item;\n        const { isTouch }: ContentExplorerProps = this.props;\n\n        if (type === TYPE_FOLDER) {\n            this.fetchFolder(id);\n            return;\n        }\n\n        if (isTouch) {\n            return;\n        }\n\n        this.preview(item);\n    };\n\n    /**\n     * Search success callback\n     *\n     * @private\n     * @param {Object} collection item collection object\n     * @return {void}\n     */\n    searchSuccessCallback = (collection: Collection) => {\n        const { selected }: State = this.state;\n\n        // Close any open modals\n        this.closeModals();\n\n        this.updateCollection(collection, selected);\n    };\n\n    /**\n     * Debounced searching\n     *\n     * @private\n     * @param {string} id folder id\n     * @param {string} query search string\n     * @return {void}\n     */\n    debouncedSearch = debounce((id: string, query: string) => {\n        const { currentOffset, currentPageSize }: State = this.state;\n\n        this.api\n            .getSearchAPI()\n            .search(id, query, currentPageSize, currentOffset, this.searchSuccessCallback, this.errorCallback, {\n                fields: CONTENT_EXPLORER_FOLDER_FIELDS_TO_FETCH,\n                forceFetch: true,\n            });\n    }, DEFAULT_SEARCH_DEBOUNCE);\n\n    /**\n     * Searches\n     *\n     * @private\n     * @param {string} query search string\n     * @return {void}\n     */\n    search = (query: string) => {\n        const { rootFolderId }: ContentExplorerProps = this.props;\n        const {\n            currentCollection: { id },\n            currentOffset,\n            searchQuery,\n        }: State = this.state;\n        const folderId = typeof id === 'string' ? id : rootFolderId;\n        const trimmedQuery: string = query.trim();\n\n        if (!query) {\n            // Cancel the debounce so we don't search on a previous query\n            this.debouncedSearch.cancel();\n\n            // Query was cleared out, load the prior folder\n            // The prior folder is always the parent folder for search\n            this.setState({ currentOffset: 0 }, () => {\n                this.fetchFolder(folderId, false);\n            });\n\n            return;\n        }\n\n        if (!trimmedQuery) {\n            // Query now only has bunch of spaces\n            // do nothing and but update prior state\n            this.setState({\n                searchQuery: query,\n            });\n            return;\n        }\n\n        this.setState({\n            currentCollection: this.currentUnloadedCollection(),\n            currentOffset: trimmedQuery === searchQuery ? currentOffset : 0,\n            searchQuery: query,\n            selected: undefined,\n            view: VIEW_SEARCH,\n        });\n\n        this.debouncedSearch(folderId, query);\n    };\n\n    /**\n     * Recents fetch success callback\n     *\n     * @private\n     * @param {Object} collection item collection object\n     * @param {Boolean} triggerNavigationEvent - To trigger navigate event\n     * @return {void}\n     */\n    recentsSuccessCallback(collection: Collection, triggerNavigationEvent: boolean) {\n        if (triggerNavigationEvent) {\n            this.updateCollection(collection, undefined, this.finishNavigation);\n        } else {\n            this.updateCollection(collection);\n        }\n    }\n\n    /**\n     * Shows recents.\n     *\n     * @private\n     * @param {Boolean|void} [triggerNavigationEvent] To trigger navigate event\n     * @return {void}\n     */\n    showRecents(triggerNavigationEvent: boolean = true): void {\n        const { rootFolderId }: ContentExplorerProps = this.props;\n\n        // Reset search state, the view and show busy indicator\n        this.setState({\n            searchQuery: '',\n            view: VIEW_RECENTS,\n            currentCollection: this.currentUnloadedCollection(),\n            currentOffset: 0,\n        });\n\n        // Fetch the folder using folder API\n        this.api.getRecentsAPI().recents(\n            rootFolderId,\n            (collection: Collection) => {\n                this.recentsSuccessCallback(collection, triggerNavigationEvent);\n            },\n            this.errorCallback,\n            { fields: CONTENT_EXPLORER_FOLDER_FIELDS_TO_FETCH, forceFetch: true },\n        );\n    }\n\n    /**\n     * Uploads\n     *\n     * @private\n     * @param {File} file dom file object\n     * @return {void}\n     */\n    upload = () => {\n        const {\n            currentCollection: { id, permissions },\n        }: State = this.state;\n        const { canUpload }: ContentExplorerProps = this.props;\n        if (!canUpload || !id || !permissions) {\n            return;\n        }\n\n        const { can_upload }: BoxItemPermission = permissions;\n        if (!can_upload) {\n            return;\n        }\n\n        this.setState({\n            isUploadModalOpen: true,\n        });\n    };\n\n    /**\n     * Upload success handler\n     *\n     * @private\n     * @param {File} file dom file object\n     * @return {void}\n     */\n    uploadSuccessHandler = () => {\n        const {\n            currentCollection: { id },\n        }: State = this.state;\n        this.fetchFolder(id, false);\n    };\n\n    /**\n     * Changes the share access of an item\n     *\n     * @private\n     * @param {string} access share access\n     * @return {void}\n     */\n    changeShareAccess = (access: Access) => {\n        const { selected }: State = this.state;\n        const { canSetShareAccess }: ContentExplorerProps = this.props;\n        if (!selected || !canSetShareAccess) {\n            return;\n        }\n\n        const { permissions, type }: BoxItem = selected;\n        if (!permissions || !type) {\n            return;\n        }\n\n        const { can_set_share_access }: BoxItemPermission = permissions;\n        if (!can_set_share_access) {\n            return;\n        }\n\n        this.setState({ isLoading: true });\n        this.api.getAPI(type).share(selected, access, (updatedItem: BoxItem) => {\n            this.setState({ isLoading: false });\n            this.select(updatedItem);\n        });\n    };\n\n    /**\n     * Changes the sort by and sort direction\n     *\n     * @private\n     * @param {string} sortBy - field to sort by\n     * @param {string} sortDirection - sort direction\n     * @return {void}\n     */\n    sort = (sortBy: SortBy | Key, sortDirection: SortDirection) => {\n        const {\n            currentCollection: { id },\n            view,\n        }: State = this.state;\n\n        if (id || view === VIEW_METADATA) {\n            this.setState({ sortBy, sortDirection }, this.refreshCollection);\n        }\n    };\n\n    /**\n     * Sets state with currentCollection updated to have `items.selected` properties\n     * set according to the given selected param. Also updates the selected item in the\n     * currentCollection. selectedItem will be set to the selected state\n     * item if it is in currentCollection, otherwise it will be set to undefined.\n     *\n     * @private\n     * @param {Collection} collection - collection that needs to be updated\n     * @param {Object} [selectedItem] - The item that should be selected in that collection (if present)\n     * @param {Function} [callback] - callback function that should be called after setState occurs\n     * @return {void}\n     */\n    async updateCollection(\n        collection: Collection,\n        selectedItem?: BoxItem | null,\n        callback: () => void = noop,\n    ): Promise<void> {\n        const newCollection: Collection = cloneDeep(collection);\n        const { items = [] } = newCollection;\n\n        const fileAPI = this.api.getFileAPI(false);\n        const selectedId = selectedItem ? selectedItem.id : null;\n        let newSelectedItem: BoxItem | null | undefined;\n\n        const itemThumbnails = await Promise.all(\n            items.map(item => {\n                return item.type === TYPE_FILE ? fileAPI.getThumbnailUrl(item) : null;\n            }),\n        );\n\n        newCollection.items = items.map((item, index) => {\n            const isSelected = item.id === selectedId;\n            const currentItem = isSelected ? selectedItem : item;\n            const thumbnailUrl = itemThumbnails[index];\n\n            const newItem = {\n                ...currentItem,\n                selected: isSelected,\n                thumbnailUrl,\n            } as const;\n\n            if (item.type === TYPE_FILE && thumbnailUrl && !isThumbnailAvailable(newItem)) {\n                this.attemptThumbnailGeneration(newItem);\n            }\n\n            // Only if selectedItem is in the current collection do we want to set selected state\n            if (isSelected) {\n                newSelectedItem = newItem;\n            }\n\n            return newItem;\n        });\n        this.setState({ currentCollection: newCollection, selected: newSelectedItem }, callback);\n    }\n\n    /**\n     * Validates selectedItemIds to ensure all selected IDs exist in current items\n     * This should be called whenever currentCollection changes\n     *\n     * @private\n     * @param {BoxItem[]} items - current items in the collection\n     * @return {void}\n     */\n    validateSelectedItemIds = (items: BoxItem[]): void => {\n        const { selectedItemIds } = this.state;\n\n        if (selectedItemIds === 'all' || selectedItemIds.size === 0) {\n            // If all/none items are selected, no need to change anything\n            return;\n        }\n\n        const validSelectedIds = new Set<string>();\n\n        items.forEach(item => {\n            if (selectedItemIds.has(item.id)) {\n                validSelectedIds.add(item.id);\n            }\n        });\n\n        if (!isEqual(validSelectedIds, selectedItemIds)) {\n            this.setState({ selectedItemIds: validSelectedIds });\n        }\n    };\n\n    /**\n     * Attempts to generate a thumbnail for the given item and assigns the\n     * item its thumbnail url if successful\n     *\n     * @param {BoxItem} item - item to generate thumbnail for\n     * @return {Promise<void>}\n     */\n    attemptThumbnailGeneration = async (item: BoxItem): Promise<void> => {\n        const entries = getProp(item, 'representations.entries');\n        const representation = getProp(entries, '[0]');\n\n        if (representation) {\n            const updatedRepresentation = await this.api.getFileAPI(false).generateRepresentation(representation);\n            if (updatedRepresentation !== representation) {\n                this.updateItemInCollection({\n                    ...cloneDeep(item),\n                    representations: {\n                        entries: [updatedRepresentation, ...entries.slice(1)],\n                    },\n                });\n            }\n        }\n    };\n\n    /**\n     * Update item in this.state.currentCollection\n     *\n     * @param {BoxItem} newItem - item with updated properties\n     * @return {void}\n     */\n    updateItemInCollection = (newItem: BoxItem): void => {\n        const { currentCollection } = this.state;\n        const { items = [] } = currentCollection;\n        const newCollection = { ...currentCollection } as const;\n\n        newCollection.items = items.map(item => (item.id === newItem.id ? newItem : item));\n\n        this.validateSelectedItemIds(newCollection.items);\n\n        this.setState({ currentCollection: newCollection });\n    };\n\n    /**\n     * Selects or unselects an item\n     *\n     * @private\n     * @param {Object} item - file or folder object\n     * @param {Function|void} [onSelect] - optional on select callback\n     * @return {void}\n     */\n    select = (item: BoxItem, callback: (item: BoxItem) => void = noop): void => {\n        const { selected, currentCollection }: State = this.state;\n        const { items = [] } = currentCollection;\n        const { onSelect }: ContentExplorerProps = this.props;\n\n        if (item === selected) {\n            callback(item);\n            return;\n        }\n\n        const selectedItem: BoxItem = { ...item, selected: true };\n\n        this.updateCollection(currentCollection, selectedItem, () => {\n            onSelect(cloneDeep([selectedItem]));\n            callback(selectedItem);\n        });\n\n        const focusedRow: number = items.findIndex((i: BoxItem) => i.id === item.id);\n\n        this.setState({ focusedRow });\n    };\n\n    /**\n     * Selects the clicked file and then previews it\n     * or opens it, if it was a web link\n     *\n     * @private\n     * @param {Object} item - file or folder object\n     * @return {void}\n     */\n    preview = (item: BoxItem): void => {\n        const { type, url }: BoxItem = item;\n        if (type === TYPE_WEBLINK) {\n            window.open(url);\n            return;\n        }\n\n        this.select(item, this.previewCallback);\n    };\n\n    /**\n     * Previews a file\n     *\n     * @private\n     * @param {Object} item - file or folder object\n     * @return {void}\n     */\n    previewCallback = (): void => {\n        const { selected }: State = this.state;\n        const { canPreview }: ContentExplorerProps = this.props;\n        if (!selected || !canPreview) {\n            return;\n        }\n\n        const { permissions } = selected;\n        if (!permissions) {\n            return;\n        }\n\n        const { can_preview }: BoxItemPermission = permissions;\n        if (!can_preview) {\n            return;\n        }\n\n        this.setState({ isPreviewModalOpen: true });\n    };\n\n    /**\n     * Selects the clicked file and then downloads it\n     *\n     * @private\n     * @param {Object} item - file or folder object\n     * @return {void}\n     */\n    download = (item: BoxItem): void => {\n        this.select(item, this.downloadCallback);\n    };\n\n    /**\n     * Downloads a file\n     *\n     * @private\n     * @return {void}\n     */\n    downloadCallback = (): void => {\n        const { selected }: State = this.state;\n        const { canDownload, onDownload }: ContentExplorerProps = this.props;\n        if (!selected || !canDownload) {\n            return;\n        }\n\n        const { id, permissions } = selected;\n        if (!id || !permissions) {\n            return;\n        }\n\n        const { can_download }: BoxItemPermission = permissions;\n        if (!can_download) {\n            return;\n        }\n\n        const openUrl = (url: string) => {\n            openUrlInsideIframe(url);\n            onDownload(cloneDeep([selected]));\n        };\n\n        const { type }: BoxItem = selected;\n        if (type === TYPE_FILE) {\n            this.api.getFileAPI().getDownloadUrl(id, selected, openUrl, noop);\n        }\n    };\n\n    /**\n     * Selects the clicked file and then deletes it\n     *\n     * @private\n     * @param {Object} item - file or folder object\n     * @return {void}\n     */\n    delete = (item: BoxItem): void => {\n        this.select(item, this.deleteCallback);\n    };\n\n    /**\n     * Deletes a file\n     *\n     * @private\n     * @return {void}\n     */\n    deleteCallback = (): void => {\n        const { selected, isDeleteModalOpen }: State = this.state;\n        const { canDelete, onDelete }: ContentExplorerProps = this.props;\n        if (!selected || !canDelete) {\n            return;\n        }\n\n        const { id, permissions, parent, type }: BoxItem = selected;\n        if (!id || !permissions || !parent || !type) {\n            return;\n        }\n\n        const { id: parentId } = parent;\n        const { can_delete }: BoxItemPermission = permissions;\n        if (!can_delete || !parentId) {\n            return;\n        }\n\n        if (!isDeleteModalOpen) {\n            this.setState({ isDeleteModalOpen: true });\n            return;\n        }\n\n        this.setState({ isLoading: true });\n        this.api.getAPI(type).deleteItem(\n            selected,\n            () => {\n                onDelete(cloneDeep([selected]));\n                this.refreshCollection();\n            },\n            () => {\n                this.refreshCollection();\n            },\n        );\n    };\n\n    /**\n     * Selects the clicked file and then renames it\n     *\n     * @private\n     * @param {Object} item - file or folder object\n     * @return {void}\n     */\n    rename = (item: BoxItem): void => {\n        this.select(item, this.renameCallback);\n    };\n\n    /**\n     * Callback for renaming an item\n     *\n     * @private\n     * @param {string} value new item name\n     * @return {void}\n     */\n    renameCallback = (nameWithoutExt?: string, extension?: string): void => {\n        const { selected, isRenameModalOpen }: State = this.state;\n        const { canRename, onRename }: ContentExplorerProps = this.props;\n\n        if (!selected || !canRename) {\n            return;\n        }\n\n        const { id, permissions, type }: BoxItem = selected;\n        if (!id || !permissions || !type) {\n            return;\n        }\n\n        const { can_rename }: BoxItemPermission = permissions;\n\n        if (!can_rename) {\n            return;\n        }\n\n        if (!isRenameModalOpen || !nameWithoutExt) {\n            this.setState({ isRenameModalOpen: true, errorCode: '' });\n            return;\n        }\n\n        const name = `${nameWithoutExt}${extension}`;\n        if (!nameWithoutExt.trim()) {\n            this.setState({\n                errorCode: ERROR_CODE_ITEM_NAME_INVALID,\n                isLoading: false,\n            });\n            return;\n        }\n\n        this.setState({ isLoading: true });\n        this.api.getAPI(type).rename(\n            selected,\n            name.trim(),\n            (updatedItem: BoxItem) => {\n                this.setState({ isRenameModalOpen: false });\n                this.refreshCollection();\n                this.select(updatedItem);\n                onRename(cloneDeep(selected));\n            },\n            ({ code }) => {\n                this.setState({ errorCode: code, isLoading: false });\n            },\n        );\n    };\n\n    /**\n     * Creates a new folder\n     *\n     * @private\n     * @return {void}\n     */\n    createFolder = (): void => {\n        this.throttledCreateFolderCallback();\n    };\n\n    /**\n     * New folder callback\n     *\n     * @private\n     * @param {string} name - folder name\n     * @return {void}\n     */\n    createFolderCallback = (name?: string): void => {\n        const { isCreateFolderModalOpen, currentCollection }: State = this.state;\n        const { canCreateNewFolder, onCreate }: ContentExplorerProps = this.props;\n        if (!canCreateNewFolder) {\n            return;\n        }\n\n        const { id, permissions }: Collection = currentCollection;\n        if (!id || !permissions) {\n            return;\n        }\n\n        const { can_upload }: BoxItemPermission = permissions;\n        if (!can_upload) {\n            return;\n        }\n\n        if (!isCreateFolderModalOpen || !name) {\n            this.setState({ isCreateFolderModalOpen: true, errorCode: '' });\n            return;\n        }\n\n        if (!name.trim()) {\n            this.setState({\n                errorCode: ERROR_CODE_ITEM_NAME_INVALID,\n                isLoading: false,\n            });\n            return;\n        }\n\n        if (name.length > 255) {\n            this.setState({\n                errorCode: ERROR_CODE_ITEM_NAME_TOO_LONG,\n                isLoading: false,\n            });\n            return;\n        }\n\n        this.setState({ isLoading: true });\n        this.api.getFolderAPI().create(\n            id,\n            name.trim(),\n            (item: BoxItem) => {\n                this.refreshCollection();\n                this.select(item);\n                onCreate(cloneDeep(item));\n            },\n            ({ code }) => {\n                this.setState({\n                    errorCode: code,\n                    isLoading: false,\n                });\n            },\n        );\n    };\n\n    /**\n     * Throttled version of createFolderCallback to prevent errors from rapid clicking.\n     *\n     * @private\n     * @param {string} [name] - folder name\n     * @return {void}\n     */\n    throttledCreateFolderCallback = throttle(this.createFolderCallback, 500, { trailing: false });\n\n    /**\n     * Selects the clicked file and then shares it\n     *\n     * @private\n     * @param {Object} item - file or folder object\n     * @return {void}\n     */\n    share = (item: BoxItem): void => {\n        this.select(item, this.shareCallback);\n    };\n\n    /**\n     * Fetch the shared link info\n     * @param {BoxItem} item - The item (folder, file, weblink)\n     * @returns {void}\n     */\n    fetchSharedLinkInfo = (item: BoxItem): void => {\n        const { id, type }: BoxItem = item;\n\n        switch (type) {\n            case TYPE_FOLDER:\n                this.api.getFolderAPI().getFolderFields(id, this.handleSharedLinkSuccess, noop, {\n                    fields: FILE_SHARED_LINK_FIELDS_TO_FETCH,\n                });\n                break;\n            case TYPE_FILE:\n                this.api\n                    .getFileAPI()\n                    .getFile(id, this.handleSharedLinkSuccess, noop, { fields: FILE_SHARED_LINK_FIELDS_TO_FETCH });\n                break;\n            case TYPE_WEBLINK:\n                this.api\n                    .getWebLinkAPI()\n                    .getWeblink(id, this.handleSharedLinkSuccess, noop, { fields: FILE_SHARED_LINK_FIELDS_TO_FETCH });\n                break;\n            default:\n                throw new Error('Unknown Type');\n        }\n    };\n\n    /**\n     * Handles the shared link info by either creating a share link using enterprise defaults if\n     * it does not already exist, otherwise update the item in the state currentCollection.\n     *\n     * @param {Object} item file or folder\n     * @returns {void}\n     */\n    handleSharedLinkSuccess = async (item: BoxItem) => {\n        const { currentCollection } = this.state;\n        let updatedItem = item;\n\n        // if there is no shared link, create one with enterprise default access\n        if (!item[FIELD_SHARED_LINK] && getProp(item, FIELD_PERMISSIONS_CAN_SHARE, false)) {\n            await this.api.getAPI(item.type).share(item, undefined, (sharedItem: BoxItem) => {\n                updatedItem = sharedItem;\n            });\n        }\n\n        this.updateCollection(currentCollection, updatedItem, () => this.setState({ isShareModalOpen: true }));\n    };\n\n    /**\n     * Callback for sharing an item\n     *\n     * @private\n     * @return {void}\n     */\n    shareCallback = (): void => {\n        const { selected }: State = this.state;\n        const { canShare }: ContentExplorerProps = this.props;\n\n        if (!selected || !canShare) {\n            return;\n        }\n\n        const { permissions, type } = selected;\n        if (!permissions || !type) {\n            return;\n        }\n\n        const { can_share }: BoxItemPermission = permissions;\n        if (!can_share) {\n            return;\n        }\n\n        this.fetchSharedLinkInfo(selected);\n    };\n\n    /**\n     * Closes the modal dialogs that may be open\n     *\n     * @private\n     * @return {void}\n     */\n    closeModals = (): void => {\n        const { focusedRow }: State = this.state;\n\n        this.setState({\n            isLoading: false,\n            isDeleteModalOpen: false,\n            isRenameModalOpen: false,\n            isCreateFolderModalOpen: false,\n            isShareModalOpen: false,\n            isUploadModalOpen: false,\n            isPreviewModalOpen: false,\n        });\n\n        const {\n            selected,\n            currentCollection: { items = [] },\n        }: State = this.state;\n        if (selected && items.length > 0) {\n            focus(this.rootElement, `.bce-item-row-${focusedRow}`);\n        }\n    };\n\n    /**\n     * Keyboard events\n     *\n     * @private\n     * @return {void}\n     */\n    onKeyDown = (event: React.KeyboardEvent<HTMLElement>) => {\n        if (isInputElement(event.target)) {\n            return;\n        }\n\n        const { rootFolderId }: ContentExplorerProps = this.props;\n        const key = event.key.toLowerCase();\n\n        switch (key) {\n            case '/':\n                focus(this.rootElement, '.be-search input[type=\"search\"]', false);\n                event.preventDefault();\n                break;\n            case 'arrowdown':\n                if (this.getViewMode() === VIEW_MODE_GRID) {\n                    if (document.activeElement && !document.activeElement.closest('.be-ItemGrid')) {\n                        focus(this.rootElement, '.be-ItemGrid-item', false);\n                        event.preventDefault();\n                    }\n                } else if (document.activeElement && !document.activeElement.closest('.be-ItemList')) {\n                    focus(this.rootElement, '.be-ItemList-item', false);\n                    this.setState({ focusedRow: 0 });\n                    event.preventDefault();\n                }\n                break;\n            case 'g':\n                break;\n            case 'b':\n                if (this.globalModifier) {\n                    focus(this.rootElement, '.be-breadcrumb button', false);\n                    event.preventDefault();\n                }\n\n                break;\n            case 'f':\n                if (this.globalModifier) {\n                    this.fetchFolder(rootFolderId);\n                    event.preventDefault();\n                }\n\n                break;\n            case 'u':\n                if (this.globalModifier) {\n                    this.upload();\n                    event.preventDefault();\n                }\n\n                break;\n            case 'r':\n                if (this.globalModifier) {\n                    this.showRecents();\n                    event.preventDefault();\n                }\n\n                break;\n            case 'n':\n                if (this.globalModifier) {\n                    this.createFolder();\n                    event.preventDefault();\n                }\n\n                break;\n            default:\n                this.globalModifier = false;\n                return;\n        }\n\n        this.globalModifier = key === 'g';\n    };\n\n    /**\n     * Handle pagination changes for offset based pagination\n     *\n     * @param {number} newOffset - the new page offset value\n     */\n    paginate = (newOffset: number) => {\n        this.setState({ currentOffset: newOffset }, this.refreshCollection);\n    };\n\n    /**\n     * Handle pagination changes for marker based pagination\n     * @param {number} newOffset - the new page offset value\n     */\n    markerBasedPaginate = (newOffset: number) => {\n        const { currentPageNumber } = this.state;\n        this.setState(\n            {\n                currentPageNumber: currentPageNumber + newOffset, // newOffset could be negative\n            },\n            this.refreshCollection,\n        );\n    };\n\n    /**\n     * Get the current viewMode, checking local store if applicable\n     *\n     * @return {ViewMode}\n     */\n    getViewMode = (): ViewMode => this.store.getItem(localStoreViewMode) || VIEW_MODE_LIST;\n\n    /**\n     * Get the maximum number of grid view columns based on the current width of the\n     * content explorer.\n     *\n     * @return {number}\n     */\n    getMaxNumberOfGridViewColumnsForWidth = (): number => {\n        const { isSmall, isMedium, isLarge } = this.props;\n        let maxWidthColumns = GRID_VIEW_MAX_COLUMNS;\n        if (isSmall) {\n            maxWidthColumns = 1;\n        } else if (isMedium) {\n            maxWidthColumns = 3;\n        } else if (isLarge) {\n            maxWidthColumns = 5;\n        }\n        return maxWidthColumns;\n    };\n\n    getMetadataViewProps = (): Omit<\n        MetadataViewContainerProps,\n        'hasError' | 'currentCollection' | 'metadataTemplate'\n    > => {\n        const { metadataViewProps } = this.props;\n        const { onSelectionChange } = metadataViewProps ?? {};\n        const { currentPageNumber, markers, selectedItemIds } = this.state;\n        const hasNextMarker: boolean = !!markers[currentPageNumber + 1];\n        const hasPrevMarker: boolean = currentPageNumber === 1 || !!markers[currentPageNumber - 1];\n\n        return {\n            ...metadataViewProps,\n            selectedKeys: selectedItemIds,\n            onSelectionChange: (ids: Selection) => {\n                onSelectionChange?.(ids);\n                const isSelectionEmpty = ids !== 'all' && ids.size === 0;\n                this.setState({\n                    selectedItemIds: ids,\n                    ...(isSelectionEmpty && { isMetadataSidePanelOpen: false }),\n                });\n            },\n            paginationProps: {\n                onMarkerBasedPageChange: this.markerBasedPaginate,\n                hasNextMarker,\n                hasPrevMarker,\n                type: 'marker',\n            },\n        };\n    };\n\n    /**\n     * Change the current view mode\n     *\n     * @param {ViewMode} viewMode - the new view mode\n     * @return {void}\n     */\n    changeViewMode = (viewMode: ViewMode): void => {\n        this.store.setItem(localStoreViewMode, viewMode);\n        this.forceUpdate();\n    };\n\n    /**\n     * Callback for when value of GridViewSlider changes\n     *\n     * @param {number} sliderValue - value of slider\n     * @return {void}\n     */\n    onGridViewSliderChange = (sliderValue: number): void => {\n        // need to do this calculation since lowest value of grid view slider\n        // means highest number of columns\n        const gridColumnCount = GRID_VIEW_MAX_COLUMNS - sliderValue + 1;\n        this.setState({ gridColumnCount });\n    };\n\n    /**\n     * Function to update metadata field value in metadata based view\n     * @param {BoxItem} item - file item whose metadata is being changed\n     * @param {string} field - metadata template field name\n     * @param {MetadataFieldValue} oldValue - current value\n     * @param {MetadataFieldValue} newVlaue - new value the field to be updated to\n     */\n\n    updateMetadata = (\n        item: BoxItem,\n        field: string,\n        oldValue?: MetadataFieldValue | null,\n        newValue?: MetadataFieldValue | null,\n    ): void => {\n        this.metadataQueryAPIHelper.updateMetadata(\n            item,\n            field,\n            oldValue,\n            newValue,\n            () => {\n                this.updateMetadataSuccessCallback(item, field, newValue);\n            },\n            this.errorCallback,\n        );\n    };\n\n    updateMetadataSuccessCallback = (item: BoxItem, field: string, newValue?: MetadataFieldValue | null): void => {\n        const { currentCollection }: State = this.state;\n        const { items = [], nextMarker } = currentCollection;\n        const updatedItems = items.map(collectionItem => {\n            const clonedItem = cloneDeep(collectionItem);\n            if (item.id === clonedItem.id) {\n                const fields = getProp(clonedItem, 'metadata.enterprise.fields', []);\n                fields.forEach(itemField => {\n                    if (itemField.key.split('.').pop() === field) {\n                        itemField.value = newValue; // set updated metadata value to correct item in currentCollection\n                    }\n                });\n            }\n            return clonedItem;\n        });\n\n        this.validateSelectedItemIds(updatedItems);\n\n        this.setState({\n            currentCollection: {\n                items: updatedItems,\n                nextMarker,\n                percentLoaded: 100,\n            },\n        });\n    };\n\n    clearSelectedItemIds = () => {\n        this.setState({\n            selectedItemIds: new Set(),\n            isMetadataSidePanelOpen: false,\n        });\n    };\n\n    /**\n     * Toggle metadata side panel visibility\n     *\n     * @private\n     * @return {void}\n     */\n    onMetadataSidePanelToggle = () => {\n        this.setState(prevState => ({\n            isMetadataSidePanelOpen: !prevState.isMetadataSidePanelOpen,\n        }));\n    };\n\n    /**\n     * Close metadata side panel\n     *\n     * @private\n     * @return {void}\n     */\n    closeMetadataSidePanel = () => {\n        this.setState({ isMetadataSidePanelOpen: false });\n    };\n\n    filterMetadata = (fields: ExternalFilterValues) => {\n        this.setState({ metadataFilters: fields }, this.refreshCollection);\n    };\n\n    /**\n     * Renders the file picker\n     *\n     * @private\n     * @inheritdoc\n     * @return {Element}\n     */\n    render() {\n        const {\n            apiHost,\n            appHost,\n            bulkItemActions,\n            canCreateNewFolder,\n            canDelete,\n            canDownload,\n            canPreview,\n            canRename,\n            canSetShareAccess,\n            canShare,\n            canUpload,\n            className,\n            contentPreviewProps,\n            contentUploaderProps,\n            defaultView,\n            features,\n            hasProviders,\n            isMedium,\n            isSmall,\n            isTouch,\n            itemActions,\n            language,\n            logoUrl,\n            measureRef,\n            messages,\n            fieldsToShow,\n            onDownload,\n            onPreview,\n            onUpload,\n            requestInterceptor,\n            responseInterceptor,\n            rootFolderId,\n            sharedLink,\n            sharedLinkPassword,\n            staticHost,\n            staticPath,\n            previewLibraryVersion,\n            theme,\n            title,\n            token,\n            uploadHost,\n        }: ContentExplorerProps = this.props;\n\n        const {\n            currentCollection,\n            currentPageNumber,\n            currentPageSize,\n            errorCode,\n            gridColumnCount,\n            isCreateFolderModalOpen,\n            isDeleteModalOpen,\n            isLoading,\n            isMetadataSidePanelOpen,\n            isPreviewModalOpen,\n            isRenameModalOpen,\n            isShareModalOpen,\n            isUploadModalOpen,\n            markers,\n            metadataTemplate,\n            rootName,\n            selected,\n            selectedItemIds,\n            view,\n        }: State = this.state;\n\n        const { id, offset, permissions, totalCount }: Collection = currentCollection;\n        const { can_upload }: BoxItemPermission = permissions || {};\n        const styleClassName = classNames('be bce', className);\n        const allowUpload: boolean = canUpload && !!can_upload;\n        const allowCreate: boolean = canCreateNewFolder && !!can_upload;\n        const isDefaultViewMetadata: boolean = defaultView === DEFAULT_VIEW_METADATA;\n        const isMetadataViewV2Feature = isFeatureEnabled(features, 'contentExplorer.metadataViewV2');\n        const isErrorView: boolean = view === VIEW_ERROR;\n\n        const viewMode = this.getViewMode();\n        const maxGridColumnCount = this.getMaxNumberOfGridViewColumnsForWidth();\n\n        const hasNextMarker: boolean = !!markers[currentPageNumber + 1];\n        const hasPreviousMarker: boolean = currentPageNumber === 1 || !!markers[currentPageNumber - 1];\n\n        const metadataViewProps = this.getMetadataViewProps();\n\n        /* eslint-disable jsx-a11y/no-static-element-interactions */\n        /* eslint-disable jsx-a11y/no-noninteractive-tabindex */\n        return (\n            <Internationalize language={language} messages={messages}>\n                <Providers hasProviders={hasProviders}>\n                    <div id={this.id} className={styleClassName} ref={measureRef} data-testid=\"content-explorer\">\n                        <ThemingStyles selector={`#${this.id}`} theme={theme} />\n                        <div className=\"be-app-element\" onKeyDown={this.onKeyDown} tabIndex={0}>\n                            <div className=\"bce-ContentExplorer-main\">\n                                {!isDefaultViewMetadata && (\n                                    <Header view={view} logoUrl={logoUrl} onSearch={this.search} />\n                                )}\n\n                                <SubHeader\n                                    bulkItemActions={bulkItemActions}\n                                    view={view}\n                                    viewMode={viewMode}\n                                    rootId={rootFolderId}\n                                    isSmall={isSmall}\n                                    rootName={rootName}\n                                    currentCollection={currentCollection}\n                                    canUpload={allowUpload}\n                                    canCreateNewFolder={allowCreate}\n                                    gridColumnCount={gridColumnCount}\n                                    gridMaxColumns={GRID_VIEW_MAX_COLUMNS}\n                                    gridMinColumns={GRID_VIEW_MIN_COLUMNS}\n                                    maxGridColumnCountForWidth={maxGridColumnCount}\n                                    onUpload={this.upload}\n                                    onClearSelectedItemIds={this.clearSelectedItemIds}\n                                    onCreate={this.createFolder}\n                                    onGridViewSliderChange={this.onGridViewSliderChange}\n                                    onItemClick={this.fetchFolder}\n                                    onSortChange={this.sort}\n                                    onMetadataSidePanelToggle={this.onMetadataSidePanelToggle}\n                                    onViewModeChange={this.changeViewMode}\n                                    portalElement={this.rootElement}\n                                    selectedItemIds={selectedItemIds}\n                                    title={title}\n                                />\n\n                                <Content\n                                    canDelete={canDelete}\n                                    canDownload={canDownload}\n                                    canPreview={canPreview}\n                                    canRename={canRename}\n                                    canShare={canShare}\n                                    currentCollection={currentCollection}\n                                    features={features}\n                                    gridColumnCount={Math.min(gridColumnCount, maxGridColumnCount)}\n                                    isMedium={isMedium}\n                                    isSmall={isSmall}\n                                    isTouch={isTouch}\n                                    itemActions={itemActions}\n                                    fieldsToShow={fieldsToShow}\n                                    metadataTemplate={metadataTemplate}\n                                    metadataViewProps={metadataViewProps}\n                                    onItemClick={this.onItemClick}\n                                    onItemDelete={this.delete}\n                                    onItemDownload={this.download}\n                                    onItemPreview={this.preview}\n                                    onItemRename={this.rename}\n                                    onItemSelect={this.select}\n                                    onItemShare={this.share}\n                                    onMetadataFilter={this.filterMetadata}\n                                    onMetadataUpdate={this.updateMetadata}\n                                    onSortChange={this.sort}\n                                    portalElement={this.rootElement}\n                                    view={view}\n                                    viewMode={viewMode}\n                                />\n\n                                {!isErrorView && !isMetadataViewV2Feature && (\n                                    <Footer>\n                                        <Pagination\n                                            hasNextMarker={hasNextMarker}\n                                            hasPrevMarker={hasPreviousMarker}\n                                            isSmall={isSmall}\n                                            offset={offset}\n                                            onOffsetChange={this.paginate}\n                                            pageSize={currentPageSize}\n                                            totalCount={totalCount}\n                                            onMarkerBasedPageChange={this.markerBasedPaginate}\n                                        />\n                                    </Footer>\n                                )}\n                            </div>\n                            {isDefaultViewMetadata && isMetadataViewV2Feature && isMetadataSidePanelOpen && (\n                                <MetadataSidePanel\n                                    currentCollection={currentCollection}\n                                    metadataTemplate={metadataTemplate}\n                                    onClose={this.closeMetadataSidePanel}\n                                    onUpdate={this.updateMetadataV2}\n                                    refreshCollection={this.refreshCollection}\n                                    selectedItemIds={selectedItemIds}\n                                />\n                            )}\n                        </div>\n                        {allowUpload && !!this.appElement ? (\n                            <UploadDialog\n                                isOpen={isUploadModalOpen}\n                                currentFolderId={id}\n                                token={token}\n                                sharedLink={sharedLink}\n                                sharedLinkPassword={sharedLinkPassword}\n                                apiHost={apiHost}\n                                uploadHost={uploadHost}\n                                onClose={this.uploadSuccessHandler}\n                                parentElement={this.rootElement}\n                                appElement={this.appElement}\n                                onUpload={onUpload}\n                                contentUploaderProps={contentUploaderProps}\n                                requestInterceptor={requestInterceptor}\n                                responseInterceptor={responseInterceptor}\n                            />\n                        ) : null}\n                        {allowCreate && !!this.appElement ? (\n                            <CreateFolderDialog\n                                isOpen={isCreateFolderModalOpen}\n                                onCreate={this.throttledCreateFolderCallback}\n                                onCancel={this.closeModals}\n                                isLoading={isLoading}\n                                errorCode={errorCode}\n                                parentElement={this.rootElement}\n                                appElement={this.appElement}\n                            />\n                        ) : null}\n                        {canDelete && selected && !!this.appElement ? (\n                            <DeleteConfirmationDialog\n                                isOpen={isDeleteModalOpen}\n                                onDelete={this.deleteCallback}\n                                onCancel={this.closeModals}\n                                item={selected}\n                                isLoading={isLoading}\n                                parentElement={this.rootElement}\n                                appElement={this.appElement}\n                            />\n                        ) : null}\n                        {canRename && selected && !!this.appElement ? (\n                            <RenameDialog\n                                isOpen={isRenameModalOpen}\n                                onRename={this.renameCallback}\n                                onCancel={this.closeModals}\n                                item={selected}\n                                isLoading={isLoading}\n                                errorCode={errorCode}\n                                parentElement={this.rootElement}\n                                appElement={this.appElement}\n                            />\n                        ) : null}\n                        {canShare && selected && !!this.appElement ? (\n                            <ShareDialog\n                                isOpen={isShareModalOpen}\n                                canSetShareAccess={canSetShareAccess}\n                                onShareAccessChange={this.changeShareAccess}\n                                onCancel={this.refreshCollection}\n                                item={selected}\n                                isLoading={isLoading}\n                                parentElement={this.rootElement}\n                                appElement={this.appElement}\n                            />\n                        ) : null}\n                        {canPreview && selected && !!this.appElement ? (\n                            <PreviewDialog\n                                isOpen={isPreviewModalOpen}\n                                isTouch={isTouch}\n                                onCancel={this.closeModals}\n                                item={selected}\n                                currentCollection={cloneDeep(currentCollection)}\n                                token={token}\n                                parentElement={this.rootElement}\n                                appElement={this.appElement}\n                                onPreview={onPreview}\n                                onDownload={onDownload}\n                                canDownload={canDownload}\n                                cache={this.api.getCache()}\n                                apiHost={apiHost}\n                                appHost={appHost}\n                                staticHost={staticHost}\n                                staticPath={staticPath}\n                                previewLibraryVersion={previewLibraryVersion}\n                                sharedLink={sharedLink}\n                                sharedLinkPassword={sharedLinkPassword}\n                                contentPreviewProps={contentPreviewProps}\n                                requestInterceptor={requestInterceptor}\n                                responseInterceptor={responseInterceptor}\n                            />\n                        ) : null}\n                    </div>\n                </Providers>\n            </Internationalize>\n        );\n        /* eslint-enable jsx-a11y/no-static-element-interactions */\n        /* eslint-enable jsx-a11y/no-noninteractive-tabindex */\n    }\n}\n\nexport { ContentExplorer as ContentExplorerComponent };\nexport default flow([makeResponsive, withFeatureConsumer, withFeatureProvider, withBlueprintModernization])(\n    ContentExplorer,\n);\n"],"mappings":";;;;;;AAAA,OAAO,6BAA6B;AACpC,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,UAAU,MAAM,YAAY;AACnC,OAAOC,SAAS,MAAM,kBAAkB;AACxC,OAAOC,QAAQ,MAAM,iBAAiB;AACtC,OAAOC,IAAI,MAAM,aAAa;AAC9B,OAAOC,OAAO,MAAM,YAAY;AAChC,OAAOC,OAAO,MAAM,gBAAgB;AACpC,OAAOC,IAAI,MAAM,aAAa;AAC9B,OAAOC,QAAQ,MAAM,iBAAiB;AACtC,OAAOC,QAAQ,MAAM,iBAAiB;AAKtC,OAAOC,kBAAkB,MAAM,gCAAgC;AAC/D,OAAOC,YAAY,MAAM,yBAAyB;AAClD,OAAOC,MAAM,MAAM,kBAAkB;AACrC,OAAOC,UAAU,MAAM,sBAAsB;AAC7C,OAAOC,SAAS,MAAM,gCAAgC;AACtD,OAAOC,cAAc,MAAM,0BAA0B;AACrD,OAAOC,mBAAmB,MAAM,oBAAoB;AACpD,OAAOC,gBAAgB,MAAM,4BAA4B;AACzD,OAAOC,aAAa,MAAM,mBAAmB;AAC7C,OAAOC,GAAG,MAAM,WAAW;AAC3B,OAAOC,wBAAwB,MAAM,0BAA0B;AAC/D,OAAOC,sBAAsB,MAAM,2DAA2D;AAC9F,OAAOC,iBAAiB,MAAM,qBAAqB;AACnD,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,aAAa,MAAM,wCAAwC;AAClE,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,wBAAwB,MAAM,4BAA4B;AACjE,OAAOC,OAAO,MAAM,WAAW;AAC/B,SAASC,oBAAoB,QAAQ,iBAAiB;AACtD,SAASC,kBAAkB,EAAEC,cAAc,EAAEC,KAAK,QAAQ,iBAAiB;AAC3E,SAASC,gCAAgC,QAAQ,oBAAoB;AACrE,SAASC,uCAAuC,QAAQ,aAAa;AACrE,OAAOC,UAAU,MAAM,wBAAwB;AAC/C,SACIC,mBAAmB,EACnBC,mBAAmB,EACnBC,gBAAgB,QAEb,4BAA4B;AACnC,SACIC,uBAAuB,EACvBC,oBAAoB,EACpBC,oBAAoB,EACpBC,uBAAuB,EACvBC,uBAAuB,EACvBC,QAAQ,EACRC,eAAe,EACfC,UAAU,EACVC,2BAA2B,EAC3BC,iBAAiB,EACjBC,YAAY,EACZC,WAAW,EACXC,WAAW,EACXC,UAAU,EACVC,YAAY,EACZC,aAAa,EACbC,cAAc,EACdC,SAAS,EACTC,YAAY,EACZC,WAAW,EACXC,4BAA4B,EAC5BC,cAAc,EACdC,mBAAmB,EACnBC,iBAAiB,EACjBC,kBAAkB,EAClBC,oBAAoB,EACpBC,qBAAqB,EACrBC,4BAA4B,EAC5BC,6BAA6B,EAC7BC,sBAAsB,EACtBC,cAAc,QACX,iBAAiB;AAwBxB,OAAO,sBAAsB;AAC7B,OAAO,qBAAqB;AAC5B,OAAO,sBAAsB;AAC7B,OAAO,wBAAwB;AAC/B,SAASC,0BAA0B,QAAQ,sCAAsC;AACjF,OAAOC,SAAS,MAAM,qBAAqB;AAE3C,MAAMC,qBAAqB,GAAG,CAAC;AAC/B,MAAMC,qBAAqB,GAAG,CAAC;AA4F/B,MAAMC,kBAAkB,GAAG,qBAAqB;AAEhD,MAAMC,eAAe,SAAS3E,SAAS,CAA8B;EAyDjE;AACJ;AACA;AACA;AACA;AACA;EACI4E,WAAWA,CAACC,KAA2B,EAAE;IACrC,KAAK,CAACA,KAAK,CAAC;IAACC,eAAA,oBAjDI,IAAI;IAAE;IAAAA,eAAA,gBAEP,IAAI3C,UAAU,CAAC,CAAC;IAiLpC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;IAPI2C,eAAA,kDAQ0C,CACtCC,uBAAmC,EACnCC,gBAAkC,KAC3B;MACP,MAAM;QAAEC;MAAW,CAAC,GAAGF,uBAAuB;MAC9C,MAAM;QAAEG,aAAa;QAAEC;MAAS,CAAC,GAAG,IAAI,CAACN,KAAK;MAC9C,MAAM;QAAEO,iBAAiB;QAAEC,iBAAiB;QAAEC;MAAe,CAAC,GAAG,IAAI,CAACC,KAAK;MAC3E,MAAMC,YAAY,GAAG,CAAC,GAAGF,OAAO,CAAC;MACjC,IAAIL,UAAU,EAAE;QACZO,YAAY,CAACH,iBAAiB,GAAG,CAAC,CAAC,GAAGJ,UAAU;MACpD;MAEA,MAAMQ,SAAS,GAAG;QACdL,iBAAiB,EAAAM,aAAA,CAAAA,aAAA,CAAAA,aAAA,KACVN,iBAAiB,GACjBL,uBAAuB;UAC1BY,aAAa,EAAE;QAAG,EACrB;QACDL,OAAO,EAAEE,YAAY;QACrBR;MACJ,CAAC;MAED,IAAI,CAACY,uBAAuB,CAACb,uBAAuB,CAACc,KAAK,IAAI,EAAE,CAAC;;MAEjE;MACA,IAAIX,aAAa,EAAEY,kBAAkB,IAAIxD,gBAAgB,CAAC6C,QAAQ,EAAE,gCAAgC,CAAC,EAAE;QACnG,IAAI,CAACY,GAAG,CAACC,YAAY,CAAC,CAAC,CAACC,eAAe,CACnCf,aAAa,CAACY,kBAAkB,EAChC,CAAC;UAAEI;QAAK,CAAC,KAAK;UACV,IAAI,CAACC,QAAQ,CAAAT,aAAA,CAAAA,aAAA,KACND,SAAS;YACZW,QAAQ,EAAEF,IAAI,IAAI;UAAE,EACvB,CAAC;QACN,CAAC,EACD,IAAI,CAACG,aAAa,EAClB;UAAEC,MAAM,EAAE,CAACxD,UAAU;QAAE,CAC3B,CAAC;MACL,CAAC,MAAM;QACH;QACA,IAAI,CAACqD,QAAQ,CAACV,SAAS,CAAC;MAC5B;IACJ,CAAC;IAmED;AACJ;AACA;AACA;AACA;AACA;IALIX,eAAA,2BAMmB,OACfe,KAAgB,EAChBU,UAA+B,EAC/BC,iBAA0C,EAC1CC,iBAA0C,EAC1CC,eAA2B,EAC3BL,aAA4B,KAC3B;MACD,IAAIR,KAAK,CAACc,MAAM,KAAK,CAAC,EAAE;QACpB,MAAM,IAAI,CAACC,sBAAsB,CAACC,4BAA4B,CAC1DhB,KAAK,CAAC,CAAC,CAAC,EACRU,UAAU,EACVG,eAAe,EACfL,aACJ,CAAC;MACL,CAAC,MAAM;QACH,MAAM,IAAI,CAACO,sBAAsB,CAACE,kBAAkB,CAChDjB,KAAK,EACLW,iBAAiB,EACjBC,iBAAiB,EACjBC,eAAe,EACfL,aACJ,CAAC;MACL;IACJ,CAAC;IAeD;AACJ;AACA;AACA;AACA;AACA;AACA;IANIvB,eAAA,wBAOiBiC,KAAc,IAAK;MAChC,IAAI,CAACZ,QAAQ,CAAC;QACVa,IAAI,EAAE5D;MACV,CAAC,CAAC;MACF;MACA6D,OAAO,CAACF,KAAK,CAACA,KAAK,CAAC;MACpB;IACJ,CAAC;IA6BD;AACJ;AACA;AACA;AACA;AACA;AACA;IANIjC,eAAA,4BAOoB,MAAM;MACtB,MAAM;QACFM,iBAAiB,EAAE;UAAE8B;QAAG,CAAC;QACzBF,IAAI;QACJG;MACG,CAAC,GAAG,IAAI,CAAC5B,KAAK;MACrB,IAAIyB,IAAI,KAAK7D,WAAW,IAAI+D,EAAE,EAAE;QAC5B,IAAI,CAACE,WAAW,CAACF,EAAE,EAAE,KAAK,CAAC;MAC/B,CAAC,MAAM,IAAIF,IAAI,KAAK3D,YAAY,EAAE;QAC9B,IAAI,CAACgE,WAAW,CAAC,KAAK,CAAC;MAC3B,CAAC,MAAM,IAAIL,IAAI,KAAK9D,WAAW,IAAIiE,WAAW,EAAE;QAC5C,IAAI,CAACG,MAAM,CAACH,WAAW,CAAC;MAC5B,CAAC,MAAM,IAAIH,IAAI,KAAK1D,aAAa,EAAE;QAC/B,IAAI,CAACiE,wBAAwB,CAAC,CAAC;MACnC,CAAC,MAAM;QACH,MAAM,IAAIC,KAAK,CAAC,mCAAmC,CAAC;MACxD;IACJ,CAAC;IAgCD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;IAPI1C,eAAA,sBAQc,CAACoC,EAAW,EAAEO,sBAA+B,GAAG,IAAI,KAAK;MACnE,MAAM;QAAEC;MAAmC,CAAC,GAAG,IAAI,CAAC7C,KAAK;MACzD,MAAM;QACFO,iBAAiB,EAAE;UAAE8B,EAAE,EAAES;QAAU,CAAC;QACpCC,aAAa;QACbC,eAAe,EAAEC,KAAK;QACtBX,WAAW,GAAG,EAAE;QAChBY,MAAM;QACNC;MACG,CAAC,GAAG,IAAI,CAACzC,KAAK;MACrB,MAAM0C,QAAgB,GAAG,OAAOf,EAAE,KAAK,QAAQ,GAAGA,EAAE,GAAGQ,YAAY;MACnE,MAAMQ,gBAAgB,GAAGP,SAAS,IAAIA,SAAS,KAAKM,QAAQ;MAC5D,MAAME,cAAc,GAAG,CAAC,CAAChB,WAAW,CAACiB,IAAI,CAAC,CAAC,CAACzB,MAAM;MAClD,MAAM0B,MAAM,GAAGH,gBAAgB,IAAIC,cAAc,GAAG,CAAC,GAAGP,aAAa,CAAC,CAAC;;MAEvE;MACA;MACA;MACA;MACA,IAAI,CAAC,IAAI,CAACU,SAAS,EAAE;QACjB,IAAI,CAACC,WAAW,CAACvG,KAAK,CAAC,CAAC;MAC5B;;MAEA;MACA,IAAI,CAACmE,QAAQ,CAAC;QACVgB,WAAW,EAAE,EAAE;QACfH,IAAI,EAAE7D,WAAW;QACjBiC,iBAAiB,EAAE,IAAI,CAACoD,yBAAyB,CAAC,CAAC;QACnDZ,aAAa,EAAES;MACnB,CAAC,CAAC;;MAEF;MACA,IAAI,CAACtC,GAAG,CAACC,YAAY,CAAC,CAAC,CAACyC,SAAS,CAC7BR,QAAQ,EACRH,KAAK,EACLO,MAAM,EACNN,MAAM,EACNC,aAAa,EACZU,UAAsB,IAAK;QACxB,IAAI,CAACC,0BAA0B,CAACD,UAAU,EAAEjB,sBAAsB,CAAC;MACvE,CAAC,EACD,IAAI,CAACpB,aAAa,EAClB;QAAEC,MAAM,EAAEpE,uCAAuC;QAAE0G,UAAU,EAAE;MAAK,CACxE,CAAC;IACL,CAAC;IAED;AACJ;AACA;AACA;AACA;AACA;AACA;IANI9D,eAAA,sBAOe+D,IAAsB,IAAK;MACtC;MACA,IAAI,OAAOA,IAAI,KAAK,QAAQ,EAAE;QAC1B,IAAI,CAACzB,WAAW,CAACyB,IAAI,CAAC;QACtB;MACJ;MAEA,MAAM;QAAE3B,EAAE;QAAE4B;MAAc,CAAC,GAAGD,IAAI;MAClC,MAAM;QAAEE;MAA8B,CAAC,GAAG,IAAI,CAAClE,KAAK;MAEpD,IAAIiE,IAAI,KAAKpF,WAAW,EAAE;QACtB,IAAI,CAAC0D,WAAW,CAACF,EAAE,CAAC;QACpB;MACJ;MAEA,IAAI6B,OAAO,EAAE;QACT;MACJ;MAEA,IAAI,CAACC,OAAO,CAACH,IAAI,CAAC;IACtB,CAAC;IAED;AACJ;AACA;AACA;AACA;AACA;AACA;IANI/D,eAAA,gCAOyB4D,UAAsB,IAAK;MAChD,MAAM;QAAEO;MAAgB,CAAC,GAAG,IAAI,CAAC1D,KAAK;;MAEtC;MACA,IAAI,CAAC2D,WAAW,CAAC,CAAC;MAElB,IAAI,CAACC,gBAAgB,CAACT,UAAU,EAAEO,QAAQ,CAAC;IAC/C,CAAC;IAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;IAPInE,eAAA,0BAQkB3E,QAAQ,CAAC,CAAC+G,EAAU,EAAEkC,KAAa,KAAK;MACtD,MAAM;QAAExB,aAAa;QAAEC;MAAuB,CAAC,GAAG,IAAI,CAACtC,KAAK;MAE5D,IAAI,CAACQ,GAAG,CACHsD,YAAY,CAAC,CAAC,CACd/B,MAAM,CAACJ,EAAE,EAAEkC,KAAK,EAAEvB,eAAe,EAAED,aAAa,EAAE,IAAI,CAAC0B,qBAAqB,EAAE,IAAI,CAACjD,aAAa,EAAE;QAC/FC,MAAM,EAAEpE,uCAAuC;QAC/C0G,UAAU,EAAE;MAChB,CAAC,CAAC;IACV,CAAC,EAAEjG,uBAAuB,CAAC;IAE3B;AACJ;AACA;AACA;AACA;AACA;AACA;IANImC,eAAA,iBAOUsE,KAAa,IAAK;MACxB,MAAM;QAAE1B;MAAmC,CAAC,GAAG,IAAI,CAAC7C,KAAK;MACzD,MAAM;QACFO,iBAAiB,EAAE;UAAE8B;QAAG,CAAC;QACzBU,aAAa;QACbT;MACG,CAAC,GAAG,IAAI,CAAC5B,KAAK;MACrB,MAAM0C,QAAQ,GAAG,OAAOf,EAAE,KAAK,QAAQ,GAAGA,EAAE,GAAGQ,YAAY;MAC3D,MAAM6B,YAAoB,GAAGH,KAAK,CAAChB,IAAI,CAAC,CAAC;MAEzC,IAAI,CAACgB,KAAK,EAAE;QACR;QACA,IAAI,CAACI,eAAe,CAACC,MAAM,CAAC,CAAC;;QAE7B;QACA;QACA,IAAI,CAACtD,QAAQ,CAAC;UAAEyB,aAAa,EAAE;QAAE,CAAC,EAAE,MAAM;UACtC,IAAI,CAACR,WAAW,CAACa,QAAQ,EAAE,KAAK,CAAC;QACrC,CAAC,CAAC;QAEF;MACJ;MAEA,IAAI,CAACsB,YAAY,EAAE;QACf;QACA;QACA,IAAI,CAACpD,QAAQ,CAAC;UACVgB,WAAW,EAAEiC;QACjB,CAAC,CAAC;QACF;MACJ;MAEA,IAAI,CAACjD,QAAQ,CAAC;QACVf,iBAAiB,EAAE,IAAI,CAACoD,yBAAyB,CAAC,CAAC;QACnDZ,aAAa,EAAE2B,YAAY,KAAKpC,WAAW,GAAGS,aAAa,GAAG,CAAC;QAC/DT,WAAW,EAAEiC,KAAK;QAClBH,QAAQ,EAAES,SAAS;QACnB1C,IAAI,EAAE9D;MACV,CAAC,CAAC;MAEF,IAAI,CAACsG,eAAe,CAACvB,QAAQ,EAAEmB,KAAK,CAAC;IACzC,CAAC;IA+CD;AACJ;AACA;AACA;AACA;AACA;AACA;IANItE,eAAA,iBAOS,MAAM;MACX,MAAM;QACFM,iBAAiB,EAAE;UAAE8B,EAAE;UAAEyC;QAAY;MAClC,CAAC,GAAG,IAAI,CAACpE,KAAK;MACrB,MAAM;QAAEqE;MAAgC,CAAC,GAAG,IAAI,CAAC/E,KAAK;MACtD,IAAI,CAAC+E,SAAS,IAAI,CAAC1C,EAAE,IAAI,CAACyC,WAAW,EAAE;QACnC;MACJ;MAEA,MAAM;QAAEE;MAA8B,CAAC,GAAGF,WAAW;MACrD,IAAI,CAACE,UAAU,EAAE;QACb;MACJ;MAEA,IAAI,CAAC1D,QAAQ,CAAC;QACV2D,iBAAiB,EAAE;MACvB,CAAC,CAAC;IACN,CAAC;IAED;AACJ;AACA;AACA;AACA;AACA;AACA;IANIhF,eAAA,+BAOuB,MAAM;MACzB,MAAM;QACFM,iBAAiB,EAAE;UAAE8B;QAAG;MACrB,CAAC,GAAG,IAAI,CAAC3B,KAAK;MACrB,IAAI,CAAC6B,WAAW,CAACF,EAAE,EAAE,KAAK,CAAC;IAC/B,CAAC;IAED;AACJ;AACA;AACA;AACA;AACA;AACA;IANIpC,eAAA,4BAOqBiF,MAAc,IAAK;MACpC,MAAM;QAAEd;MAAgB,CAAC,GAAG,IAAI,CAAC1D,KAAK;MACtC,MAAM;QAAEyE;MAAwC,CAAC,GAAG,IAAI,CAACnF,KAAK;MAC9D,IAAI,CAACoE,QAAQ,IAAI,CAACe,iBAAiB,EAAE;QACjC;MACJ;MAEA,MAAM;QAAEL,WAAW;QAAEb;MAAc,CAAC,GAAGG,QAAQ;MAC/C,IAAI,CAACU,WAAW,IAAI,CAACb,IAAI,EAAE;QACvB;MACJ;MAEA,MAAM;QAAEmB;MAAwC,CAAC,GAAGN,WAAW;MAC/D,IAAI,CAACM,oBAAoB,EAAE;QACvB;MACJ;MAEA,IAAI,CAAC9D,QAAQ,CAAC;QAAE+D,SAAS,EAAE;MAAK,CAAC,CAAC;MAClC,IAAI,CAACnE,GAAG,CAACoE,MAAM,CAACrB,IAAI,CAAC,CAACsB,KAAK,CAACnB,QAAQ,EAAEc,MAAM,EAAGM,WAAoB,IAAK;QACpE,IAAI,CAAClE,QAAQ,CAAC;UAAE+D,SAAS,EAAE;QAAM,CAAC,CAAC;QACnC,IAAI,CAACI,MAAM,CAACD,WAAW,CAAC;MAC5B,CAAC,CAAC;IACN,CAAC;IAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;IAPIvF,eAAA,eAQO,CAACiD,MAAoB,EAAEC,aAA4B,KAAK;MAC3D,MAAM;QACF5C,iBAAiB,EAAE;UAAE8B;QAAG,CAAC;QACzBF;MACG,CAAC,GAAG,IAAI,CAACzB,KAAK;MAErB,IAAI2B,EAAE,IAAIF,IAAI,KAAK1D,aAAa,EAAE;QAC9B,IAAI,CAAC6C,QAAQ,CAAC;UAAE4B,MAAM;UAAEC;QAAc,CAAC,EAAE,IAAI,CAACuC,iBAAiB,CAAC;MACpE;IACJ,CAAC;IAyDD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;IAPIzF,eAAA,kCAQ2Be,KAAgB,IAAW;MAClD,MAAM;QAAE2E;MAAgB,CAAC,GAAG,IAAI,CAACjF,KAAK;MAEtC,IAAIiF,eAAe,KAAK,KAAK,IAAIA,eAAe,CAACC,IAAI,KAAK,CAAC,EAAE;QACzD;QACA;MACJ;MAEA,MAAMC,gBAAgB,GAAG,IAAIC,GAAG,CAAS,CAAC;MAE1C9E,KAAK,CAAC+E,OAAO,CAAC/B,IAAI,IAAI;QAClB,IAAI2B,eAAe,CAACK,GAAG,CAAChC,IAAI,CAAC3B,EAAE,CAAC,EAAE;UAC9BwD,gBAAgB,CAACI,GAAG,CAACjC,IAAI,CAAC3B,EAAE,CAAC;QACjC;MACJ,CAAC,CAAC;MAEF,IAAI,CAAC5G,OAAO,CAACoK,gBAAgB,EAAEF,eAAe,CAAC,EAAE;QAC7C,IAAI,CAACrE,QAAQ,CAAC;UAAEqE,eAAe,EAAEE;QAAiB,CAAC,CAAC;MACxD;IACJ,CAAC;IAED;AACJ;AACA;AACA;AACA;AACA;AACA;IANI5F,eAAA,qCAO6B,MAAO+D,IAAa,IAAoB;MACjE,MAAMkC,OAAO,GAAG1K,OAAO,CAACwI,IAAI,EAAE,yBAAyB,CAAC;MACxD,MAAMmC,cAAc,GAAG3K,OAAO,CAAC0K,OAAO,EAAE,KAAK,CAAC;MAE9C,IAAIC,cAAc,EAAE;QAChB,MAAMC,qBAAqB,GAAG,MAAM,IAAI,CAAClF,GAAG,CAACmF,UAAU,CAAC,KAAK,CAAC,CAACC,sBAAsB,CAACH,cAAc,CAAC;QACrG,IAAIC,qBAAqB,KAAKD,cAAc,EAAE;UAC1C,IAAI,CAACI,sBAAsB,CAAA1F,aAAA,CAAAA,aAAA,KACpBxF,SAAS,CAAC2I,IAAI,CAAC;YAClBwC,eAAe,EAAE;cACbN,OAAO,EAAE,CAACE,qBAAqB,EAAE,GAAGF,OAAO,CAACO,KAAK,CAAC,CAAC,CAAC;YACxD;UAAC,EACJ,CAAC;QACN;MACJ;IACJ,CAAC;IAED;AACJ;AACA;AACA;AACA;AACA;IALIxG,eAAA,iCAM0ByG,OAAgB,IAAW;MACjD,MAAM;QAAEnG;MAAkB,CAAC,GAAG,IAAI,CAACG,KAAK;MACxC,MAAM;QAAEM,KAAK,GAAG;MAAG,CAAC,GAAGT,iBAAiB;MACxC,MAAMoG,aAAa,GAAA9F,aAAA,KAAQN,iBAAiB,CAAW;MAEvDoG,aAAa,CAAC3F,KAAK,GAAGA,KAAK,CAAC4F,GAAG,CAAC5C,IAAI,IAAKA,IAAI,CAAC3B,EAAE,KAAKqE,OAAO,CAACrE,EAAE,GAAGqE,OAAO,GAAG1C,IAAK,CAAC;MAElF,IAAI,CAACjD,uBAAuB,CAAC4F,aAAa,CAAC3F,KAAK,CAAC;MAEjD,IAAI,CAACM,QAAQ,CAAC;QAAEf,iBAAiB,EAAEoG;MAAc,CAAC,CAAC;IACvD,CAAC;IAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;IAPI1G,eAAA,iBAQS,CAAC+D,IAAa,EAAE6C,QAAiC,GAAGnL,IAAI,KAAW;MACxE,MAAM;QAAE0I,QAAQ;QAAE7D;MAAyB,CAAC,GAAG,IAAI,CAACG,KAAK;MACzD,MAAM;QAAEM,KAAK,GAAG;MAAG,CAAC,GAAGT,iBAAiB;MACxC,MAAM;QAAEuG;MAA+B,CAAC,GAAG,IAAI,CAAC9G,KAAK;MAErD,IAAIgE,IAAI,KAAKI,QAAQ,EAAE;QACnByC,QAAQ,CAAC7C,IAAI,CAAC;QACd;MACJ;MAEA,MAAM+C,YAAqB,GAAAlG,aAAA,CAAAA,aAAA,KAAQmD,IAAI;QAAEI,QAAQ,EAAE;MAAI,EAAE;MAEzD,IAAI,CAACE,gBAAgB,CAAC/D,iBAAiB,EAAEwG,YAAY,EAAE,MAAM;QACzDD,QAAQ,CAACzL,SAAS,CAAC,CAAC0L,YAAY,CAAC,CAAC,CAAC;QACnCF,QAAQ,CAACE,YAAY,CAAC;MAC1B,CAAC,CAAC;MAEF,MAAMC,UAAkB,GAAGhG,KAAK,CAACiG,SAAS,CAAEC,CAAU,IAAKA,CAAC,CAAC7E,EAAE,KAAK2B,IAAI,CAAC3B,EAAE,CAAC;MAE5E,IAAI,CAACf,QAAQ,CAAC;QAAE0F;MAAW,CAAC,CAAC;IACjC,CAAC;IAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;IAPI/G,eAAA,kBAQW+D,IAAa,IAAW;MAC/B,MAAM;QAAEC,IAAI;QAAEkD;MAAa,CAAC,GAAGnD,IAAI;MACnC,IAAIC,IAAI,KAAKrF,YAAY,EAAE;QACvBwI,MAAM,CAACC,IAAI,CAACF,GAAG,CAAC;QAChB;MACJ;MAEA,IAAI,CAAC1B,MAAM,CAACzB,IAAI,EAAE,IAAI,CAACsD,eAAe,CAAC;IAC3C,CAAC;IAED;AACJ;AACA;AACA;AACA;AACA;AACA;IANIrH,eAAA,0BAOkB,MAAY;MAC1B,MAAM;QAAEmE;MAAgB,CAAC,GAAG,IAAI,CAAC1D,KAAK;MACtC,MAAM;QAAE6G;MAAiC,CAAC,GAAG,IAAI,CAACvH,KAAK;MACvD,IAAI,CAACoE,QAAQ,IAAI,CAACmD,UAAU,EAAE;QAC1B;MACJ;MAEA,MAAM;QAAEzC;MAAY,CAAC,GAAGV,QAAQ;MAChC,IAAI,CAACU,WAAW,EAAE;QACd;MACJ;MAEA,MAAM;QAAE0C;MAA+B,CAAC,GAAG1C,WAAW;MACtD,IAAI,CAAC0C,WAAW,EAAE;QACd;MACJ;MAEA,IAAI,CAAClG,QAAQ,CAAC;QAAEmG,kBAAkB,EAAE;MAAK,CAAC,CAAC;IAC/C,CAAC;IAED;AACJ;AACA;AACA;AACA;AACA;AACA;IANIxH,eAAA,mBAOY+D,IAAa,IAAW;MAChC,IAAI,CAACyB,MAAM,CAACzB,IAAI,EAAE,IAAI,CAAC0D,gBAAgB,CAAC;IAC5C,CAAC;IAED;AACJ;AACA;AACA;AACA;AACA;IALIzH,eAAA,2BAMmB,MAAY;MAC3B,MAAM;QAAEmE;MAAgB,CAAC,GAAG,IAAI,CAAC1D,KAAK;MACtC,MAAM;QAAEiH,WAAW;QAAEC;MAAiC,CAAC,GAAG,IAAI,CAAC5H,KAAK;MACpE,IAAI,CAACoE,QAAQ,IAAI,CAACuD,WAAW,EAAE;QAC3B;MACJ;MAEA,MAAM;QAAEtF,EAAE;QAAEyC;MAAY,CAAC,GAAGV,QAAQ;MACpC,IAAI,CAAC/B,EAAE,IAAI,CAACyC,WAAW,EAAE;QACrB;MACJ;MAEA,MAAM;QAAE+C;MAAgC,CAAC,GAAG/C,WAAW;MACvD,IAAI,CAAC+C,YAAY,EAAE;QACf;MACJ;MAEA,MAAMC,OAAO,GAAIX,GAAW,IAAK;QAC7BhL,mBAAmB,CAACgL,GAAG,CAAC;QACxBS,UAAU,CAACvM,SAAS,CAAC,CAAC+I,QAAQ,CAAC,CAAC,CAAC;MACrC,CAAC;MAED,MAAM;QAAEH;MAAc,CAAC,GAAGG,QAAQ;MAClC,IAAIH,IAAI,KAAKtF,SAAS,EAAE;QACpB,IAAI,CAACuC,GAAG,CAACmF,UAAU,CAAC,CAAC,CAAC0B,cAAc,CAAC1F,EAAE,EAAE+B,QAAQ,EAAE0D,OAAO,EAAEpM,IAAI,CAAC;MACrE;IACJ,CAAC;IAED;AACJ;AACA;AACA;AACA;AACA;AACA;IANIuE,eAAA,iBAOU+D,IAAa,IAAW;MAC9B,IAAI,CAACyB,MAAM,CAACzB,IAAI,EAAE,IAAI,CAACgE,cAAc,CAAC;IAC1C,CAAC;IAED;AACJ;AACA;AACA;AACA;AACA;IALI/H,eAAA,yBAMiB,MAAY;MACzB,MAAM;QAAEmE,QAAQ;QAAE6D;MAAyB,CAAC,GAAG,IAAI,CAACvH,KAAK;MACzD,MAAM;QAAEwH,SAAS;QAAEC;MAA+B,CAAC,GAAG,IAAI,CAACnI,KAAK;MAChE,IAAI,CAACoE,QAAQ,IAAI,CAAC8D,SAAS,EAAE;QACzB;MACJ;MAEA,MAAM;QAAE7F,EAAE;QAAEyC,WAAW;QAAEsD,MAAM;QAAEnE;MAAc,CAAC,GAAGG,QAAQ;MAC3D,IAAI,CAAC/B,EAAE,IAAI,CAACyC,WAAW,IAAI,CAACsD,MAAM,IAAI,CAACnE,IAAI,EAAE;QACzC;MACJ;MAEA,MAAM;QAAE5B,EAAE,EAAEgG;MAAS,CAAC,GAAGD,MAAM;MAC/B,MAAM;QAAEE;MAA8B,CAAC,GAAGxD,WAAW;MACrD,IAAI,CAACwD,UAAU,IAAI,CAACD,QAAQ,EAAE;QAC1B;MACJ;MAEA,IAAI,CAACJ,iBAAiB,EAAE;QACpB,IAAI,CAAC3G,QAAQ,CAAC;UAAE2G,iBAAiB,EAAE;QAAK,CAAC,CAAC;QAC1C;MACJ;MAEA,IAAI,CAAC3G,QAAQ,CAAC;QAAE+D,SAAS,EAAE;MAAK,CAAC,CAAC;MAClC,IAAI,CAACnE,GAAG,CAACoE,MAAM,CAACrB,IAAI,CAAC,CAACsE,UAAU,CAC5BnE,QAAQ,EACR,MAAM;QACF+D,QAAQ,CAAC9M,SAAS,CAAC,CAAC+I,QAAQ,CAAC,CAAC,CAAC;QAC/B,IAAI,CAACsB,iBAAiB,CAAC,CAAC;MAC5B,CAAC,EACD,MAAM;QACF,IAAI,CAACA,iBAAiB,CAAC,CAAC;MAC5B,CACJ,CAAC;IACL,CAAC;IAED;AACJ;AACA;AACA;AACA;AACA;AACA;IANIzF,eAAA,iBAOU+D,IAAa,IAAW;MAC9B,IAAI,CAACyB,MAAM,CAACzB,IAAI,EAAE,IAAI,CAACwE,cAAc,CAAC;IAC1C,CAAC;IAED;AACJ;AACA;AACA;AACA;AACA;AACA;IANIvI,eAAA,yBAOiB,CAACwI,cAAuB,EAAEC,SAAkB,KAAW;MACpE,MAAM;QAAEtE,QAAQ;QAAEuE;MAAyB,CAAC,GAAG,IAAI,CAACjI,KAAK;MACzD,MAAM;QAAEkI,SAAS;QAAEC;MAA+B,CAAC,GAAG,IAAI,CAAC7I,KAAK;MAEhE,IAAI,CAACoE,QAAQ,IAAI,CAACwE,SAAS,EAAE;QACzB;MACJ;MAEA,MAAM;QAAEvG,EAAE;QAAEyC,WAAW;QAAEb;MAAc,CAAC,GAAGG,QAAQ;MACnD,IAAI,CAAC/B,EAAE,IAAI,CAACyC,WAAW,IAAI,CAACb,IAAI,EAAE;QAC9B;MACJ;MAEA,MAAM;QAAE6E;MAA8B,CAAC,GAAGhE,WAAW;MAErD,IAAI,CAACgE,UAAU,EAAE;QACb;MACJ;MAEA,IAAI,CAACH,iBAAiB,IAAI,CAACF,cAAc,EAAE;QACvC,IAAI,CAACnH,QAAQ,CAAC;UAAEqH,iBAAiB,EAAE,IAAI;UAAEI,SAAS,EAAE;QAAG,CAAC,CAAC;QACzD;MACJ;MAEA,MAAM1H,IAAI,GAAG,GAAGoH,cAAc,GAAGC,SAAS,EAAE;MAC5C,IAAI,CAACD,cAAc,CAAClF,IAAI,CAAC,CAAC,EAAE;QACxB,IAAI,CAACjC,QAAQ,CAAC;UACVyH,SAAS,EAAE1J,4BAA4B;UACvCgG,SAAS,EAAE;QACf,CAAC,CAAC;QACF;MACJ;MAEA,IAAI,CAAC/D,QAAQ,CAAC;QAAE+D,SAAS,EAAE;MAAK,CAAC,CAAC;MAClC,IAAI,CAACnE,GAAG,CAACoE,MAAM,CAACrB,IAAI,CAAC,CAAC+E,MAAM,CACxB5E,QAAQ,EACR/C,IAAI,CAACkC,IAAI,CAAC,CAAC,EACViC,WAAoB,IAAK;QACtB,IAAI,CAAClE,QAAQ,CAAC;UAAEqH,iBAAiB,EAAE;QAAM,CAAC,CAAC;QAC3C,IAAI,CAACjD,iBAAiB,CAAC,CAAC;QACxB,IAAI,CAACD,MAAM,CAACD,WAAW,CAAC;QACxBqD,QAAQ,CAACxN,SAAS,CAAC+I,QAAQ,CAAC,CAAC;MACjC,CAAC,EACD,CAAC;QAAE6E;MAAK,CAAC,KAAK;QACV,IAAI,CAAC3H,QAAQ,CAAC;UAAEyH,SAAS,EAAEE,IAAI;UAAE5D,SAAS,EAAE;QAAM,CAAC,CAAC;MACxD,CACJ,CAAC;IACL,CAAC;IAED;AACJ;AACA;AACA;AACA;AACA;IALIpF,eAAA,uBAMe,MAAY;MACvB,IAAI,CAACiJ,6BAA6B,CAAC,CAAC;IACxC,CAAC;IAED;AACJ;AACA;AACA;AACA;AACA;AACA;IANIjJ,eAAA,+BAOwBoB,IAAa,IAAW;MAC5C,MAAM;QAAE8H,uBAAuB;QAAE5I;MAAyB,CAAC,GAAG,IAAI,CAACG,KAAK;MACxE,MAAM;QAAE0I,kBAAkB;QAAEC;MAA+B,CAAC,GAAG,IAAI,CAACrJ,KAAK;MACzE,IAAI,CAACoJ,kBAAkB,EAAE;QACrB;MACJ;MAEA,MAAM;QAAE/G,EAAE;QAAEyC;MAAwB,CAAC,GAAGvE,iBAAiB;MACzD,IAAI,CAAC8B,EAAE,IAAI,CAACyC,WAAW,EAAE;QACrB;MACJ;MAEA,MAAM;QAAEE;MAA8B,CAAC,GAAGF,WAAW;MACrD,IAAI,CAACE,UAAU,EAAE;QACb;MACJ;MAEA,IAAI,CAACmE,uBAAuB,IAAI,CAAC9H,IAAI,EAAE;QACnC,IAAI,CAACC,QAAQ,CAAC;UAAE6H,uBAAuB,EAAE,IAAI;UAAEJ,SAAS,EAAE;QAAG,CAAC,CAAC;QAC/D;MACJ;MAEA,IAAI,CAAC1H,IAAI,CAACkC,IAAI,CAAC,CAAC,EAAE;QACd,IAAI,CAACjC,QAAQ,CAAC;UACVyH,SAAS,EAAE1J,4BAA4B;UACvCgG,SAAS,EAAE;QACf,CAAC,CAAC;QACF;MACJ;MAEA,IAAIhE,IAAI,CAACS,MAAM,GAAG,GAAG,EAAE;QACnB,IAAI,CAACR,QAAQ,CAAC;UACVyH,SAAS,EAAEzJ,6BAA6B;UACxC+F,SAAS,EAAE;QACf,CAAC,CAAC;QACF;MACJ;MAEA,IAAI,CAAC/D,QAAQ,CAAC;QAAE+D,SAAS,EAAE;MAAK,CAAC,CAAC;MAClC,IAAI,CAACnE,GAAG,CAACC,YAAY,CAAC,CAAC,CAACmI,MAAM,CAC1BjH,EAAE,EACFhB,IAAI,CAACkC,IAAI,CAAC,CAAC,EACVS,IAAa,IAAK;QACf,IAAI,CAAC0B,iBAAiB,CAAC,CAAC;QACxB,IAAI,CAACD,MAAM,CAACzB,IAAI,CAAC;QACjBqF,QAAQ,CAAChO,SAAS,CAAC2I,IAAI,CAAC,CAAC;MAC7B,CAAC,EACD,CAAC;QAAEiF;MAAK,CAAC,KAAK;QACV,IAAI,CAAC3H,QAAQ,CAAC;UACVyH,SAAS,EAAEE,IAAI;UACf5D,SAAS,EAAE;QACf,CAAC,CAAC;MACN,CACJ,CAAC;IACL,CAAC;IAED;AACJ;AACA;AACA;AACA;AACA;AACA;IANIpF,eAAA,wCAOgCtE,QAAQ,CAAC,IAAI,CAAC4N,oBAAoB,EAAE,GAAG,EAAE;MAAEC,QAAQ,EAAE;IAAM,CAAC,CAAC;IAE7F;AACJ;AACA;AACA;AACA;AACA;AACA;IANIvJ,eAAA,gBAOS+D,IAAa,IAAW;MAC7B,IAAI,CAACyB,MAAM,CAACzB,IAAI,EAAE,IAAI,CAACyF,aAAa,CAAC;IACzC,CAAC;IAED;AACJ;AACA;AACA;AACA;IAJIxJ,eAAA,8BAKuB+D,IAAa,IAAW;MAC3C,MAAM;QAAE3B,EAAE;QAAE4B;MAAc,CAAC,GAAGD,IAAI;MAElC,QAAQC,IAAI;QACR,KAAKpF,WAAW;UACZ,IAAI,CAACqC,GAAG,CAACC,YAAY,CAAC,CAAC,CAACC,eAAe,CAACiB,EAAE,EAAE,IAAI,CAACqH,uBAAuB,EAAEhO,IAAI,EAAE;YAC5E+F,MAAM,EAAErE;UACZ,CAAC,CAAC;UACF;QACJ,KAAKuB,SAAS;UACV,IAAI,CAACuC,GAAG,CACHmF,UAAU,CAAC,CAAC,CACZsD,OAAO,CAACtH,EAAE,EAAE,IAAI,CAACqH,uBAAuB,EAAEhO,IAAI,EAAE;YAAE+F,MAAM,EAAErE;UAAiC,CAAC,CAAC;UAClG;QACJ,KAAKwB,YAAY;UACb,IAAI,CAACsC,GAAG,CACH0I,aAAa,CAAC,CAAC,CACfC,UAAU,CAACxH,EAAE,EAAE,IAAI,CAACqH,uBAAuB,EAAEhO,IAAI,EAAE;YAAE+F,MAAM,EAAErE;UAAiC,CAAC,CAAC;UACrG;QACJ;UACI,MAAM,IAAIuF,KAAK,CAAC,cAAc,CAAC;MACvC;IACJ,CAAC;IAED;AACJ;AACA;AACA;AACA;AACA;AACA;IANI1C,eAAA,kCAO0B,MAAO+D,IAAa,IAAK;MAC/C,MAAM;QAAEzD;MAAkB,CAAC,GAAG,IAAI,CAACG,KAAK;MACxC,IAAI8E,WAAW,GAAGxB,IAAI;;MAEtB;MACA,IAAI,CAACA,IAAI,CAAC7F,iBAAiB,CAAC,IAAI3C,OAAO,CAACwI,IAAI,EAAE9F,2BAA2B,EAAE,KAAK,CAAC,EAAE;QAC/E,MAAM,IAAI,CAACgD,GAAG,CAACoE,MAAM,CAACtB,IAAI,CAACC,IAAI,CAAC,CAACsB,KAAK,CAACvB,IAAI,EAAEa,SAAS,EAAGiF,UAAmB,IAAK;UAC7EtE,WAAW,GAAGsE,UAAU;QAC5B,CAAC,CAAC;MACN;MAEA,IAAI,CAACxF,gBAAgB,CAAC/D,iBAAiB,EAAEiF,WAAW,EAAE,MAAM,IAAI,CAAClE,QAAQ,CAAC;QAAEyI,gBAAgB,EAAE;MAAK,CAAC,CAAC,CAAC;IAC1G,CAAC;IAED;AACJ;AACA;AACA;AACA;AACA;IALI9J,eAAA,wBAMgB,MAAY;MACxB,MAAM;QAAEmE;MAAgB,CAAC,GAAG,IAAI,CAAC1D,KAAK;MACtC,MAAM;QAAEsJ;MAA+B,CAAC,GAAG,IAAI,CAAChK,KAAK;MAErD,IAAI,CAACoE,QAAQ,IAAI,CAAC4F,QAAQ,EAAE;QACxB;MACJ;MAEA,MAAM;QAAElF,WAAW;QAAEb;MAAK,CAAC,GAAGG,QAAQ;MACtC,IAAI,CAACU,WAAW,IAAI,CAACb,IAAI,EAAE;QACvB;MACJ;MAEA,MAAM;QAAEgG;MAA6B,CAAC,GAAGnF,WAAW;MACpD,IAAI,CAACmF,SAAS,EAAE;QACZ;MACJ;MAEA,IAAI,CAACC,mBAAmB,CAAC9F,QAAQ,CAAC;IACtC,CAAC;IAED;AACJ;AACA;AACA;AACA;AACA;IALInE,eAAA,sBAMc,MAAY;MACtB,MAAM;QAAE+G;MAAkB,CAAC,GAAG,IAAI,CAACtG,KAAK;MAExC,IAAI,CAACY,QAAQ,CAAC;QACV+D,SAAS,EAAE,KAAK;QAChB4C,iBAAiB,EAAE,KAAK;QACxBU,iBAAiB,EAAE,KAAK;QACxBQ,uBAAuB,EAAE,KAAK;QAC9BY,gBAAgB,EAAE,KAAK;QACvB9E,iBAAiB,EAAE,KAAK;QACxBwC,kBAAkB,EAAE;MACxB,CAAC,CAAC;MAEF,MAAM;QACFrD,QAAQ;QACR7D,iBAAiB,EAAE;UAAES,KAAK,GAAG;QAAG;MAC7B,CAAC,GAAG,IAAI,CAACN,KAAK;MACrB,IAAI0D,QAAQ,IAAIpD,KAAK,CAACc,MAAM,GAAG,CAAC,EAAE;QAC9B3E,KAAK,CAAC,IAAI,CAACuG,WAAW,EAAE,iBAAiBsD,UAAU,EAAE,CAAC;MAC1D;IACJ,CAAC;IAED;AACJ;AACA;AACA;AACA;AACA;IALI/G,eAAA,oBAMakK,KAAuC,IAAK;MACrD,IAAIjN,cAAc,CAACiN,KAAK,CAACC,MAAM,CAAC,EAAE;QAC9B;MACJ;MAEA,MAAM;QAAEvH;MAAmC,CAAC,GAAG,IAAI,CAAC7C,KAAK;MACzD,MAAMqK,GAAG,GAAGF,KAAK,CAACE,GAAG,CAACC,WAAW,CAAC,CAAC;MAEnC,QAAQD,GAAG;QACP,KAAK,GAAG;UACJlN,KAAK,CAAC,IAAI,CAACuG,WAAW,EAAE,iCAAiC,EAAE,KAAK,CAAC;UACjEyG,KAAK,CAACI,cAAc,CAAC,CAAC;UACtB;QACJ,KAAK,WAAW;UACZ,IAAI,IAAI,CAACC,WAAW,CAAC,CAAC,KAAKhL,cAAc,EAAE;YACvC,IAAIiL,QAAQ,CAACC,aAAa,IAAI,CAACD,QAAQ,CAACC,aAAa,CAACC,OAAO,CAAC,cAAc,CAAC,EAAE;cAC3ExN,KAAK,CAAC,IAAI,CAACuG,WAAW,EAAE,mBAAmB,EAAE,KAAK,CAAC;cACnDyG,KAAK,CAACI,cAAc,CAAC,CAAC;YAC1B;UACJ,CAAC,MAAM,IAAIE,QAAQ,CAACC,aAAa,IAAI,CAACD,QAAQ,CAACC,aAAa,CAACC,OAAO,CAAC,cAAc,CAAC,EAAE;YAClFxN,KAAK,CAAC,IAAI,CAACuG,WAAW,EAAE,mBAAmB,EAAE,KAAK,CAAC;YACnD,IAAI,CAACpC,QAAQ,CAAC;cAAE0F,UAAU,EAAE;YAAE,CAAC,CAAC;YAChCmD,KAAK,CAACI,cAAc,CAAC,CAAC;UAC1B;UACA;QACJ,KAAK,GAAG;UACJ;QACJ,KAAK,GAAG;UACJ,IAAI,IAAI,CAACK,cAAc,EAAE;YACrBzN,KAAK,CAAC,IAAI,CAACuG,WAAW,EAAE,uBAAuB,EAAE,KAAK,CAAC;YACvDyG,KAAK,CAACI,cAAc,CAAC,CAAC;UAC1B;UAEA;QACJ,KAAK,GAAG;UACJ,IAAI,IAAI,CAACK,cAAc,EAAE;YACrB,IAAI,CAACrI,WAAW,CAACM,YAAY,CAAC;YAC9BsH,KAAK,CAACI,cAAc,CAAC,CAAC;UAC1B;UAEA;QACJ,KAAK,GAAG;UACJ,IAAI,IAAI,CAACK,cAAc,EAAE;YACrB,IAAI,CAACC,MAAM,CAAC,CAAC;YACbV,KAAK,CAACI,cAAc,CAAC,CAAC;UAC1B;UAEA;QACJ,KAAK,GAAG;UACJ,IAAI,IAAI,CAACK,cAAc,EAAE;YACrB,IAAI,CAACpI,WAAW,CAAC,CAAC;YAClB2H,KAAK,CAACI,cAAc,CAAC,CAAC;UAC1B;UAEA;QACJ,KAAK,GAAG;UACJ,IAAI,IAAI,CAACK,cAAc,EAAE;YACrB,IAAI,CAACE,YAAY,CAAC,CAAC;YACnBX,KAAK,CAACI,cAAc,CAAC,CAAC;UAC1B;UAEA;QACJ;UACI,IAAI,CAACK,cAAc,GAAG,KAAK;UAC3B;MACR;MAEA,IAAI,CAACA,cAAc,GAAGP,GAAG,KAAK,GAAG;IACrC,CAAC;IAED;AACJ;AACA;AACA;AACA;IAJIpK,eAAA,mBAKY8K,SAAiB,IAAK;MAC9B,IAAI,CAACzJ,QAAQ,CAAC;QAAEyB,aAAa,EAAEgI;MAAU,CAAC,EAAE,IAAI,CAACrF,iBAAiB,CAAC;IACvE,CAAC;IAED;AACJ;AACA;AACA;IAHIzF,eAAA,8BAIuB8K,SAAiB,IAAK;MACzC,MAAM;QAAEvK;MAAkB,CAAC,GAAG,IAAI,CAACE,KAAK;MACxC,IAAI,CAACY,QAAQ,CACT;QACId,iBAAiB,EAAEA,iBAAiB,GAAGuK,SAAS,CAAE;MACtD,CAAC,EACD,IAAI,CAACrF,iBACT,CAAC;IACL,CAAC;IAED;AACJ;AACA;AACA;AACA;IAJIzF,eAAA,sBAKc,MAAgB,IAAI,CAAC+K,KAAK,CAACC,OAAO,CAACpL,kBAAkB,CAAC,IAAInB,cAAc;IAEtF;AACJ;AACA;AACA;AACA;AACA;IALIuB,eAAA,gDAMwC,MAAc;MAClD,MAAM;QAAEiL,OAAO;QAAEC,QAAQ;QAAEC;MAAQ,CAAC,GAAG,IAAI,CAACpL,KAAK;MACjD,IAAIqL,eAAe,GAAG1L,qBAAqB;MAC3C,IAAIuL,OAAO,EAAE;QACTG,eAAe,GAAG,CAAC;MACvB,CAAC,MAAM,IAAIF,QAAQ,EAAE;QACjBE,eAAe,GAAG,CAAC;MACvB,CAAC,MAAM,IAAID,OAAO,EAAE;QAChBC,eAAe,GAAG,CAAC;MACvB;MACA,OAAOA,eAAe;IAC1B,CAAC;IAAApL,eAAA,+BAEsB,MAGlB;MACD,MAAM;QAAEqL;MAAkB,CAAC,GAAG,IAAI,CAACtL,KAAK;MACxC,MAAM;QAAEuL;MAAkB,CAAC,GAAGD,iBAAiB,IAAI,CAAC,CAAC;MACrD,MAAM;QAAE9K,iBAAiB;QAAEC,OAAO;QAAEkF;MAAgB,CAAC,GAAG,IAAI,CAACjF,KAAK;MAClE,MAAM8K,aAAsB,GAAG,CAAC,CAAC/K,OAAO,CAACD,iBAAiB,GAAG,CAAC,CAAC;MAC/D,MAAMiL,aAAsB,GAAGjL,iBAAiB,KAAK,CAAC,IAAI,CAAC,CAACC,OAAO,CAACD,iBAAiB,GAAG,CAAC,CAAC;MAE1F,OAAAK,aAAA,CAAAA,aAAA,KACOyK,iBAAiB;QACpBI,YAAY,EAAE/F,eAAe;QAC7B4F,iBAAiB,EAAGI,GAAc,IAAK;UACnCJ,iBAAiB,GAAGI,GAAG,CAAC;UACxB,MAAMC,gBAAgB,GAAGD,GAAG,KAAK,KAAK,IAAIA,GAAG,CAAC/F,IAAI,KAAK,CAAC;UACxD,IAAI,CAACtE,QAAQ,CAAAT,aAAA;YACT8E,eAAe,EAAEgG;UAAG,GAChBC,gBAAgB,IAAI;YAAEC,uBAAuB,EAAE;UAAM,CAAC,CAC7D,CAAC;QACN,CAAC;QACDC,eAAe,EAAE;UACbC,uBAAuB,EAAE,IAAI,CAACC,mBAAmB;UACjDR,aAAa;UACbC,aAAa;UACbxH,IAAI,EAAE;QACV;MAAC;IAET,CAAC;IAED;AACJ;AACA;AACA;AACA;AACA;IALIhE,eAAA,yBAMkBgM,QAAkB,IAAW;MAC3C,IAAI,CAACjB,KAAK,CAACkB,OAAO,CAACrM,kBAAkB,EAAEoM,QAAQ,CAAC;MAChD,IAAI,CAACE,WAAW,CAAC,CAAC;IACtB,CAAC;IAED;AACJ;AACA;AACA;AACA;AACA;IALIlM,eAAA,iCAM0BmM,WAAmB,IAAW;MACpD;MACA;MACA,MAAMC,eAAe,GAAG1M,qBAAqB,GAAGyM,WAAW,GAAG,CAAC;MAC/D,IAAI,CAAC9K,QAAQ,CAAC;QAAE+K;MAAgB,CAAC,CAAC;IACtC,CAAC;IAED;AACJ;AACA;AACA;AACA;AACA;AACA;IANIpM,eAAA,yBAQiB,CACb+D,IAAa,EACbsI,KAAa,EACbC,QAAoC,EACpCC,QAAoC,KAC7B;MACP,IAAI,CAACzK,sBAAsB,CAAC0K,cAAc,CACtCzI,IAAI,EACJsI,KAAK,EACLC,QAAQ,EACRC,QAAQ,EACR,MAAM;QACF,IAAI,CAACE,6BAA6B,CAAC1I,IAAI,EAAEsI,KAAK,EAAEE,QAAQ,CAAC;MAC7D,CAAC,EACD,IAAI,CAAChL,aACT,CAAC;IACL,CAAC;IAAAvB,eAAA,wCAE+B,CAAC+D,IAAa,EAAEsI,KAAa,EAAEE,QAAoC,KAAW;MAC1G,MAAM;QAAEjM;MAAyB,CAAC,GAAG,IAAI,CAACG,KAAK;MAC/C,MAAM;QAAEM,KAAK,GAAG,EAAE;QAAEZ;MAAW,CAAC,GAAGG,iBAAiB;MACpD,MAAMoM,YAAY,GAAG3L,KAAK,CAAC4F,GAAG,CAACgG,cAAc,IAAI;QAC7C,MAAMC,UAAU,GAAGxR,SAAS,CAACuR,cAAc,CAAC;QAC5C,IAAI5I,IAAI,CAAC3B,EAAE,KAAKwK,UAAU,CAACxK,EAAE,EAAE;UAC3B,MAAMZ,MAAM,GAAGjG,OAAO,CAACqR,UAAU,EAAE,4BAA4B,EAAE,EAAE,CAAC;UACpEpL,MAAM,CAACsE,OAAO,CAAC+G,SAAS,IAAI;YACxB,IAAIA,SAAS,CAACzC,GAAG,CAAC0C,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,CAAC,KAAKV,KAAK,EAAE;cAC1CQ,SAAS,CAACG,KAAK,GAAGT,QAAQ,CAAC,CAAC;YAChC;UACJ,CAAC,CAAC;QACN;QACA,OAAOK,UAAU;MACrB,CAAC,CAAC;MAEF,IAAI,CAAC9L,uBAAuB,CAAC4L,YAAY,CAAC;MAE1C,IAAI,CAACrL,QAAQ,CAAC;QACVf,iBAAiB,EAAE;UACfS,KAAK,EAAE2L,YAAY;UACnBvM,UAAU;UACVU,aAAa,EAAE;QACnB;MACJ,CAAC,CAAC;IACN,CAAC;IAAAb,eAAA,+BAEsB,MAAM;MACzB,IAAI,CAACqB,QAAQ,CAAC;QACVqE,eAAe,EAAE,IAAIG,GAAG,CAAC,CAAC;QAC1B+F,uBAAuB,EAAE;MAC7B,CAAC,CAAC;IACN,CAAC;IAED;AACJ;AACA;AACA;AACA;AACA;IALI5L,eAAA,oCAM4B,MAAM;MAC9B,IAAI,CAACqB,QAAQ,CAAC4L,SAAS,KAAK;QACxBrB,uBAAuB,EAAE,CAACqB,SAAS,CAACrB;MACxC,CAAC,CAAC,CAAC;IACP,CAAC;IAED;AACJ;AACA;AACA;AACA;AACA;IALI5L,eAAA,iCAMyB,MAAM;MAC3B,IAAI,CAACqB,QAAQ,CAAC;QAAEuK,uBAAuB,EAAE;MAAM,CAAC,CAAC;IACrD,CAAC;IAAA5L,eAAA,yBAEiBwB,MAA4B,IAAK;MAC/C,IAAI,CAACH,QAAQ,CAAC;QAAE6L,eAAe,EAAE1L;MAAO,CAAC,EAAE,IAAI,CAACiE,iBAAiB,CAAC;IACtE,CAAC;IA9+CG,MAAM;MACF0H,OAAO;MACPC,WAAW;MACXC,eAAe;MACfC,QAAQ;MACRC,kBAAkB;MAClBC,mBAAmB;MACnB5K,YAAY,EAAZA,aAAY;MACZ6K,UAAU;MACVC,kBAAkB;MAClBzK,MAAM,EAANA,OAAM;MACNC,aAAa,EAAbA,cAAa;MACbyK,KAAK;MACLC;IACkB,CAAC,GAAG7N,KAAK;IAE/B,IAAI,CAACkB,GAAG,GAAG,IAAI5E,GAAG,CAAC;MACf8Q,OAAO;MACPU,UAAU,EAAEhP,4BAA4B;MACxCuD,EAAE,EAAE,GAAG9C,sBAAsB,GAAGsD,aAAY,EAAE;MAC9C0K,QAAQ;MACRC,kBAAkB;MAClBC,mBAAmB;MACnBC,UAAU;MACVC,kBAAkB;MAClBC,KAAK;MACLC,UAAU;MACVE,OAAO,EAAEhP;IACb,CAAC,CAAC;IAEF,IAAI,CAACsD,EAAE,GAAGzG,QAAQ,CAAC,MAAM,CAAC;IAE1B,IAAI,CAAC8E,KAAK,GAAG;MACTH,iBAAiB,EAAE,CAAC,CAAC;MACrBwC,aAAa,EAAEuK,eAAe,IAAID,WAAW,GAAG,CAAC,CAAC;MAClDrK,eAAe,EAAEsK,eAAe;MAChC9M,iBAAiB,EAAE,CAAC;MACpBuI,SAAS,EAAE,EAAE;MACb/B,UAAU,EAAE,CAAC;MACbqF,eAAe,EAAE,CAAC;MAClBlD,uBAAuB,EAAE,KAAK;MAC9BlB,iBAAiB,EAAE,KAAK;MACxB5C,SAAS,EAAE,KAAK;MAChBwG,uBAAuB,EAAE,KAAK;MAC9BpE,kBAAkB,EAAE,KAAK;MACzBkB,iBAAiB,EAAE,KAAK;MACxBoB,gBAAgB,EAAE,KAAK;MACvB9E,iBAAiB,EAAE,KAAK;MACxBxE,OAAO,EAAE,EAAE;MACX0M,eAAe,EAAE,CAAC,CAAC;MACnBhN,gBAAgB,EAAE,CAAC,CAAC;MACpBoB,QAAQ,EAAE,EAAE;MACZoE,eAAe,EAAE,IAAIG,GAAG,CAAC,CAAC;MAC1BxD,WAAW,EAAE,EAAE;MACfY,MAAM,EAANA,OAAM;MACNC,aAAa,EAAbA,cAAa;MACbhB,IAAI,EAAE7D;IACV,CAAC;EACL;;EAEA;AACJ;AACA;AACA;AACA;AACA;EACI0P,UAAUA,CAAA,EAAS;IACf,IAAI,CAAC9M,GAAG,CAAC+M,OAAO,CAAC,IAAI,CAAC;EAC1B;;EAEA;AACJ;AACA;AACA;AACA;AACA;AACA;EACIC,oBAAoBA,CAAA,EAAG;IACnB,IAAI,CAACF,UAAU,CAAC,CAAC;EACrB;;EAEA;AACJ;AACA;AACA;AACA;AACA;AACA;EACIG,iBAAiBA,CAAA,EAAG;IAChB,MAAM;MAAEC,eAAe;MAAEC;IAAkC,CAAC,GAAG,IAAI,CAACrO,KAAK;IACzE,IAAI,CAAC0D,WAAW,GAAG+G,QAAQ,CAAC6D,cAAc,CAAC,IAAI,CAACjM,EAAE,CAAgB;IAClE,IAAI,CAACkM,UAAU,GAAG,IAAI,CAAC7K,WAAW,CAAC8K,iBAAgC;IAEnE,QAAQH,WAAW;MACf,KAAKlP,oBAAoB;QACrB,IAAI,CAACqD,WAAW,CAAC,CAAC;QAClB;MACJ,KAAKpD,qBAAqB;QACtB,IAAI,CAACsD,wBAAwB,CAAC,CAAC;QAC/B;MACJ;QACI,IAAI,CAACH,WAAW,CAAC6L,eAAe,CAAC;IACzC;EACJ;;EAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACIK,kBAAkBA,CAAC;IAAEL,eAAe,EAAEM;EAAmC,CAAC,EAAExB,SAAgB,EAAQ;IAChG,MAAM;MAAEkB;IAAsC,CAAC,GAAG,IAAI,CAACpO,KAAK;IAC5D,MAAM;MACFO,iBAAiB,EAAE;QAAE8B;MAAG;IACrB,CAAC,GAAG6K,SAAS;IAEpB,IAAIwB,YAAY,KAAKN,eAAe,EAAE;MAClC;IACJ;IAEA,IAAI,OAAOA,eAAe,KAAK,QAAQ,IAAI/L,EAAE,KAAK+L,eAAe,EAAE;MAC/D,IAAI,CAAC7L,WAAW,CAAC6L,eAAe,CAAC;IACrC;EACJ;EAqDA;AACJ;AACA;AACA;AACA;AACA;EACI1L,wBAAwBA,CAAA,EAAG;IACvB,MAAM;MAAEpC,QAAQ;MAAED,aAAa,GAAG,CAAC;IAAwB,CAAC,GAAG,IAAI,CAACL,KAAK;IACzE,MAAM;MAAEQ,iBAAiB;MAAEC,OAAO;MAAE0M,eAAe;MAAEjK,MAAM;MAAEC;IAAqB,CAAC,GAAG,IAAI,CAACzC,KAAK;IAChG,MAAMiO,kBAAkB,GAAGtT,SAAS,CAACgF,aAAa,CAAC;IAEnD,IAAIG,iBAAiB,KAAK,CAAC,EAAE;MACzB;MACAC,OAAO,CAACD,iBAAiB,CAAC,GAAGmO,kBAAkB,CAACC,MAAM;IAC1D;IAEA,IAAI,OAAOnO,OAAO,CAACD,iBAAiB,CAAC,KAAK,QAAQ,EAAE;MAChD;MACAmO,kBAAkB,CAACC,MAAM,GAAGnO,OAAO,CAACD,iBAAiB,CAAC;IAC1D;IAEA,IAAI,OAAOmO,kBAAkB,CAAC1L,KAAK,KAAK,QAAQ,EAAE;MAC9C;MACA0L,kBAAkB,CAAC1L,KAAK,GAAGhE,iBAAiB;IAChD;;IAEA;IACA,IAAI,CAACqC,QAAQ,CAAC;MACVgB,WAAW,EAAE,EAAE;MACf/B,iBAAiB,EAAE,IAAI,CAACoD,yBAAyB,CAAC,CAAC;MACnDxB,IAAI,EAAE1D;IACV,CAAC,CAAC;IAEF,IAAIhB,gBAAgB,CAAC6C,QAAQ,EAAE,gCAAgC,CAAC,EAAE;MAC9DqO,kBAAkB,CAACE,QAAQ,GAAG,CAC1B;QACI;QACAC,SAAS,EAAE5L,MAAM,KAAKjF,UAAU,GAAGD,eAAe,GAAGkF,MAAM;QAC3D6L,SAAS,EAAE5L;MACf,CAAC,CACJ;MAED,IAAI,CAACpB,sBAAsB,GAAG,IAAIxF,wBAAwB,CAAC,IAAI,CAAC2E,GAAG,CAAC;MACpE,IAAI,CAACa,sBAAsB,CAACiN,yBAAyB,CACjDL,kBAAkB,EAClB,IAAI,CAACM,uCAAuC,EAC5C,IAAI,CAACzN,aAAa,EAClB2L,eACJ,CAAC;IACL,CAAC,MAAM;MACHwB,kBAAkB,CAACE,QAAQ,GAAG,CAC1B;QACIC,SAAS,EAAE5L,MAAM;QACjB6L,SAAS,EAAE5L;MACf,CAAC,CACJ;MACD,IAAI,CAACpB,sBAAsB,GAAG,IAAIvF,sBAAsB,CAAC,IAAI,CAAC0E,GAAG,CAAC;MAClE,IAAI,CAACa,sBAAsB,CAACiN,yBAAyB,CACjDL,kBAAkB,EAClB,IAAI,CAACM,uCAAuC,EAC5C,IAAI,CAACzN,aACT,CAAC;IACL;EACJ;EAkCA;AACJ;AACA;AACA;AACA;AACA;EACImC,yBAAyBA,CAAA,EAAe;IACpC,MAAM;MAAEpD;IAAyB,CAAC,GAAG,IAAI,CAACG,KAAK;IAC/C,OAAOwO,QAAA,CAAc3O,iBAAiB,EAAE;MACpCO,aAAa,EAAE;IACnB,CAAC,CAAC;EACN;EAkBA;AACJ;AACA;AACA;AACA;AACA;EACIqO,gBAAgBA,CAAA,EAAG;IACf,MAAM;MAAEC;IAAgC,CAAC,GAAG,IAAI,CAACpP,KAAK;IACtD,MAAM;MACFO,iBAAiB,EAAE;QAAEO;MAAc;IAChC,CAAC,GAAG,IAAI,CAACJ,KAAK;;IAErB;IACA,IAAI,IAAI,CAAC+C,SAAS,IAAI,CAAC2L,SAAS,EAAE;MAC9B,IAAI,CAAC3L,SAAS,GAAG,KAAK;MACtB;IACJ;;IAEA;IACA,IAAI3C,aAAa,KAAK,GAAG,IAAI,CAAC7D,kBAAkB,CAACwN,QAAQ,CAACC,aAAa,CAAC,EAAE;MACtEvN,KAAK,CAAC,IAAI,CAACuG,WAAW,EAAE,eAAe,CAAC;MACxC,IAAI,CAACpC,QAAQ,CAAC;QAAE0F,UAAU,EAAE;MAAE,CAAC,CAAC;IACpC;IAEA,IAAI,CAACvD,SAAS,GAAG,KAAK;EAC1B;EA4BA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACIK,0BAA0BA,CAACD,UAAsB,EAAEjB,sBAA+B,EAAQ;IACtF,MAAM;MAAEyM,UAAU;MAAExM;IAAmC,CAAC,GAAG,IAAI,CAAC7C,KAAK;IACrE,MAAM;MAAEsP,OAAO;MAAEjN,EAAE;MAAEhB;IAAiB,CAAC,GAAGwC,UAAU;IACpD,MAAM;MAAEO;IAAgB,CAAC,GAAG,IAAI,CAAC1D,KAAK;IACtC,MAAMa,QAAQ,GAAGc,EAAE,KAAKQ,YAAY,GAAGxB,IAAI,GAAG,EAAE;;IAEhD;IACA,IAAI,CAACgD,WAAW,CAAC,CAAC;IAElB,IAAI,CAACC,gBAAgB,CAACT,UAAU,EAAEO,QAAQ,EAAE,MAAM;MAC9C,IAAIxB,sBAAsB,EAAE;QACxB;QACA,IAAI,CAACtB,QAAQ,CAAC;UAAEC;QAAS,CAAC,EAAE,IAAI,CAAC4N,gBAAgB,CAAC;QAClD,IAAIG,OAAO,EAAE;UACTD,UAAU,CAAChU,SAAS,CAACiU,OAAO,CAAC,CAAC;QAClC;MACJ,CAAC,MAAM;QACH,IAAI,CAAChO,QAAQ,CAAC;UAAEC;QAAS,CAAC,CAAC;MAC/B;IACJ,CAAC,CAAC;EACN;EA0KA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACIgO,sBAAsBA,CAAC1L,UAAsB,EAAEjB,sBAA+B,EAAE;IAC5E,IAAIA,sBAAsB,EAAE;MACxB,IAAI,CAAC0B,gBAAgB,CAACT,UAAU,EAAEgB,SAAS,EAAE,IAAI,CAACsK,gBAAgB,CAAC;IACvE,CAAC,MAAM;MACH,IAAI,CAAC7K,gBAAgB,CAACT,UAAU,CAAC;IACrC;EACJ;;EAEA;AACJ;AACA;AACA;AACA;AACA;AACA;EACIrB,WAAWA,CAACI,sBAA+B,GAAG,IAAI,EAAQ;IACtD,MAAM;MAAEC;IAAmC,CAAC,GAAG,IAAI,CAAC7C,KAAK;;IAEzD;IACA,IAAI,CAACsB,QAAQ,CAAC;MACVgB,WAAW,EAAE,EAAE;MACfH,IAAI,EAAE3D,YAAY;MAClB+B,iBAAiB,EAAE,IAAI,CAACoD,yBAAyB,CAAC,CAAC;MACnDZ,aAAa,EAAE;IACnB,CAAC,CAAC;;IAEF;IACA,IAAI,CAAC7B,GAAG,CAACsO,aAAa,CAAC,CAAC,CAACC,OAAO,CAC5B5M,YAAY,EACXgB,UAAsB,IAAK;MACxB,IAAI,CAAC0L,sBAAsB,CAAC1L,UAAU,EAAEjB,sBAAsB,CAAC;IACnE,CAAC,EACD,IAAI,CAACpB,aAAa,EAClB;MAAEC,MAAM,EAAEpE,uCAAuC;MAAE0G,UAAU,EAAE;IAAK,CACxE,CAAC;EACL;EA4FA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,MAAMO,gBAAgBA,CAClBT,UAAsB,EACtBkD,YAA6B,EAC7BF,QAAoB,GAAGnL,IAAI,EACd;IACb,MAAMiL,aAAyB,GAAGtL,SAAS,CAACwI,UAAU,CAAC;IACvD,MAAM;MAAE7C,KAAK,GAAG;IAAG,CAAC,GAAG2F,aAAa;IAEpC,MAAM+I,OAAO,GAAG,IAAI,CAACxO,GAAG,CAACmF,UAAU,CAAC,KAAK,CAAC;IAC1C,MAAMsJ,UAAU,GAAG5I,YAAY,GAAGA,YAAY,CAAC1E,EAAE,GAAG,IAAI;IACxD,IAAIuN,eAA2C;IAE/C,MAAMC,cAAc,GAAG,MAAMC,OAAO,CAACC,GAAG,CACpC/O,KAAK,CAAC4F,GAAG,CAAC5C,IAAI,IAAI;MACd,OAAOA,IAAI,CAACC,IAAI,KAAKtF,SAAS,GAAG+Q,OAAO,CAACM,eAAe,CAAChM,IAAI,CAAC,GAAG,IAAI;IACzE,CAAC,CACL,CAAC;IAED2C,aAAa,CAAC3F,KAAK,GAAGA,KAAK,CAAC4F,GAAG,CAAC,CAAC5C,IAAI,EAAEiM,KAAK,KAAK;MAC7C,MAAMC,UAAU,GAAGlM,IAAI,CAAC3B,EAAE,KAAKsN,UAAU;MACzC,MAAMQ,WAAW,GAAGD,UAAU,GAAGnJ,YAAY,GAAG/C,IAAI;MACpD,MAAMoM,YAAY,GAAGP,cAAc,CAACI,KAAK,CAAC;MAE1C,MAAMvJ,OAAO,GAAA7F,aAAA,CAAAA,aAAA,KACNsP,WAAW;QACd/L,QAAQ,EAAE8L,UAAU;QACpBE;MAAY,EACN;MAEV,IAAIpM,IAAI,CAACC,IAAI,KAAKtF,SAAS,IAAIyR,YAAY,IAAI,CAACpT,oBAAoB,CAAC0J,OAAO,CAAC,EAAE;QAC3E,IAAI,CAAC2J,0BAA0B,CAAC3J,OAAO,CAAC;MAC5C;;MAEA;MACA,IAAIwJ,UAAU,EAAE;QACZN,eAAe,GAAGlJ,OAAO;MAC7B;MAEA,OAAOA,OAAO;IAClB,CAAC,CAAC;IACF,IAAI,CAACpF,QAAQ,CAAC;MAAEf,iBAAiB,EAAEoG,aAAa;MAAEvC,QAAQ,EAAEwL;IAAgB,CAAC,EAAE/I,QAAQ,CAAC;EAC5F;EAwwBA;AACJ;AACA;AACA;AACA;AACA;AACA;EACIyJ,MAAMA,CAAA,EAAG;IACL,MAAM;MACFlD,OAAO;MACPmD,OAAO;MACPC,eAAe;MACfpH,kBAAkB;MAClBlB,SAAS;MACTP,WAAW;MACXJ,UAAU;MACVqB,SAAS;MACTzD,iBAAiB;MACjB6E,QAAQ;MACRjF,SAAS;MACT0L,SAAS;MACTC,mBAAmB;MACnBC,oBAAoB;MACpBtC,WAAW;MACX/N,QAAQ;MACRsQ,YAAY;MACZzF,QAAQ;MACRD,OAAO;MACPhH,OAAO;MACP2M,WAAW;MACXtD,QAAQ;MACRuD,OAAO;MACPC,UAAU;MACVC,QAAQ;MACRC,YAAY;MACZrJ,UAAU;MACVsJ,SAAS;MACTC,QAAQ;MACR3D,kBAAkB;MAClBC,mBAAmB;MACnB5K,YAAY;MACZ6K,UAAU;MACVC,kBAAkB;MAClByD,UAAU;MACVC,UAAU;MACVC,qBAAqB;MACrBC,KAAK;MACLC,KAAK;MACL5D,KAAK;MACLC;IACkB,CAAC,GAAG,IAAI,CAAC7N,KAAK;IAEpC,MAAM;MACFO,iBAAiB;MACjBC,iBAAiB;MACjBwC,eAAe;MACf+F,SAAS;MACTsD,eAAe;MACflD,uBAAuB;MACvBlB,iBAAiB;MACjB5C,SAAS;MACTwG,uBAAuB;MACvBpE,kBAAkB;MAClBkB,iBAAiB;MACjBoB,gBAAgB;MAChB9E,iBAAiB;MACjBxE,OAAO;MACPN,gBAAgB;MAChBoB,QAAQ;MACR6C,QAAQ;MACRuB,eAAe;MACfxD;IACG,CAAC,GAAG,IAAI,CAACzB,KAAK;IAErB,MAAM;MAAE2B,EAAE;MAAEmB,MAAM;MAAEsB,WAAW;MAAE2M;IAAuB,CAAC,GAAGlR,iBAAiB;IAC7E,MAAM;MAAEyE;IAA8B,CAAC,GAAGF,WAAW,IAAI,CAAC,CAAC;IAC3D,MAAM4M,cAAc,GAAGtW,UAAU,CAAC,QAAQ,EAAEqV,SAAS,CAAC;IACtD,MAAMkB,WAAoB,GAAG5M,SAAS,IAAI,CAAC,CAACC,UAAU;IACtD,MAAM4M,WAAoB,GAAGxI,kBAAkB,IAAI,CAAC,CAACpE,UAAU;IAC/D,MAAM6M,qBAA8B,GAAGxD,WAAW,KAAKjP,qBAAqB;IAC5E,MAAM0S,uBAAuB,GAAGrU,gBAAgB,CAAC6C,QAAQ,EAAE,gCAAgC,CAAC;IAC5F,MAAMyR,WAAoB,GAAG5P,IAAI,KAAK5D,UAAU;IAEhD,MAAM0N,QAAQ,GAAG,IAAI,CAACzB,WAAW,CAAC,CAAC;IACnC,MAAMwH,kBAAkB,GAAG,IAAI,CAACC,qCAAqC,CAAC,CAAC;IAEvE,MAAMzG,aAAsB,GAAG,CAAC,CAAC/K,OAAO,CAACD,iBAAiB,GAAG,CAAC,CAAC;IAC/D,MAAM0R,iBAA0B,GAAG1R,iBAAiB,KAAK,CAAC,IAAI,CAAC,CAACC,OAAO,CAACD,iBAAiB,GAAG,CAAC,CAAC;IAE9F,MAAM8K,iBAAiB,GAAG,IAAI,CAAC6G,oBAAoB,CAAC,CAAC;;IAErD;IACA;IACA,oBACIjX,KAAA,CAAAkX,aAAA,CAAChW,gBAAgB;MAACmR,QAAQ,EAAEA,QAAS;MAACyD,QAAQ,EAAEA;IAAS,gBACrD9V,KAAA,CAAAkX,aAAA,CAAC1S,SAAS;MAACkR,YAAY,EAAEA;IAAa,gBAClC1V,KAAA,CAAAkX,aAAA;MAAK/P,EAAE,EAAE,IAAI,CAACA,EAAG;MAACoO,SAAS,EAAEiB,cAAe;MAACW,GAAG,EAAEtB,UAAW;MAAC,eAAY;IAAkB,gBACxF7V,KAAA,CAAAkX,aAAA,CAAC/V,aAAa;MAACiW,QAAQ,EAAE,IAAI,IAAI,CAACjQ,EAAE,EAAG;MAACkP,KAAK,EAAEA;IAAM,CAAE,CAAC,eACxDrW,KAAA,CAAAkX,aAAA;MAAK3B,SAAS,EAAC,gBAAgB;MAAC8B,SAAS,EAAE,IAAI,CAACA,SAAU;MAACC,QAAQ,EAAE;IAAE,gBACnEtX,KAAA,CAAAkX,aAAA;MAAK3B,SAAS,EAAC;IAA0B,GACpC,CAACoB,qBAAqB,iBACnB3W,KAAA,CAAAkX,aAAA,CAACrW,MAAM;MAACoG,IAAI,EAAEA,IAAK;MAAC2O,OAAO,EAAEA,OAAQ;MAAC2B,QAAQ,EAAE,IAAI,CAAChQ;IAAO,CAAE,CACjE,eAEDvH,KAAA,CAAAkX,aAAA,CAACnW,SAAS;MACNuU,eAAe,EAAEA,eAAgB;MACjCrO,IAAI,EAAEA,IAAK;MACX8J,QAAQ,EAAEA,QAAS;MACnByG,MAAM,EAAE7P,YAAa;MACrBqI,OAAO,EAAEA,OAAQ;MACjB3J,QAAQ,EAAEA,QAAS;MACnBhB,iBAAiB,EAAEA,iBAAkB;MACrCwE,SAAS,EAAE4M,WAAY;MACvBvI,kBAAkB,EAAEwI,WAAY;MAChCvF,eAAe,EAAEA,eAAgB;MACjCsG,cAAc,EAAEhT,qBAAsB;MACtCiT,cAAc,EAAEhT,qBAAsB;MACtCiT,0BAA0B,EAAEb,kBAAmB;MAC/Cb,QAAQ,EAAE,IAAI,CAACtG,MAAO;MACtBiI,sBAAsB,EAAE,IAAI,CAACC,oBAAqB;MAClD1J,QAAQ,EAAE,IAAI,CAACyB,YAAa;MAC5BkI,sBAAsB,EAAE,IAAI,CAACA,sBAAuB;MACpDC,WAAW,EAAE,IAAI,CAAC1Q,WAAY;MAC9B2Q,YAAY,EAAE,IAAI,CAACC,IAAK;MACxBC,yBAAyB,EAAE,IAAI,CAACA,yBAA0B;MAC1DC,gBAAgB,EAAE,IAAI,CAACC,cAAe;MACtCC,aAAa,EAAE,IAAI,CAAC7P,WAAY;MAChCiC,eAAe,EAAEA,eAAgB;MACjC6L,KAAK,EAAEA;IAAM,CAChB,CAAC,eAEFtW,KAAA,CAAAkX,aAAA,CAACrV,OAAO;MACJmL,SAAS,EAAEA,SAAU;MACrBP,WAAW,EAAEA,WAAY;MACzBJ,UAAU,EAAEA,UAAW;MACvBqB,SAAS,EAAEA,SAAU;MACrBoB,QAAQ,EAAEA,QAAS;MACnBzJ,iBAAiB,EAAEA,iBAAkB;MACrCD,QAAQ,EAAEA,QAAS;MACnB+L,eAAe,EAAEmH,IAAI,CAACC,GAAG,CAACpH,eAAe,EAAE2F,kBAAkB,CAAE;MAC/D7G,QAAQ,EAAEA,QAAS;MACnBD,OAAO,EAAEA,OAAQ;MACjBhH,OAAO,EAAEA,OAAQ;MACjB2M,WAAW,EAAEA,WAAY;MACzBI,YAAY,EAAEA,YAAa;MAC3B9Q,gBAAgB,EAAEA,gBAAiB;MACnCmL,iBAAiB,EAAEA,iBAAkB;MACrC2H,WAAW,EAAE,IAAI,CAACA,WAAY;MAC9BS,YAAY,EAAE,IAAI,CAACC,MAAO;MAC1BC,cAAc,EAAE,IAAI,CAACC,QAAS;MAC9BC,aAAa,EAAE,IAAI,CAAC3P,OAAQ;MAC5B4P,YAAY,EAAE,IAAI,CAAC/K,MAAO;MAC1BgL,YAAY,EAAE,IAAI,CAACvO,MAAO;MAC1BwO,WAAW,EAAE,IAAI,CAAC1O,KAAM;MACxB2O,gBAAgB,EAAE,IAAI,CAACC,cAAe;MACtCC,gBAAgB,EAAE,IAAI,CAAC3H,cAAe;MACtCyG,YAAY,EAAE,IAAI,CAACC,IAAK;MACxBI,aAAa,EAAE,IAAI,CAAC7P,WAAY;MAChCvB,IAAI,EAAEA,IAAK;MACX8J,QAAQ,EAAEA;IAAS,CACtB,CAAC,EAED,CAAC8F,WAAW,IAAI,CAACD,uBAAuB,iBACrC5W,KAAA,CAAAkX,aAAA,CAAC1V,MAAM,qBACHxB,KAAA,CAAAkX,aAAA,CAACpW,UAAU;MACPwP,aAAa,EAAEA,aAAc;MAC7BC,aAAa,EAAEyG,iBAAkB;MACjChH,OAAO,EAAEA,OAAQ;MACjB1H,MAAM,EAAEA,MAAO;MACf6Q,cAAc,EAAE,IAAI,CAACC,QAAS;MAC9BC,QAAQ,EAAEvR,eAAgB;MAC1ByO,UAAU,EAAEA,UAAW;MACvB1F,uBAAuB,EAAE,IAAI,CAACC;IAAoB,CACrD,CACG,CAEX,CAAC,EACL6F,qBAAqB,IAAIC,uBAAuB,IAAIjG,uBAAuB,iBACxE3Q,KAAA,CAAAkX,aAAA,CAAC3V,iBAAiB;MACd8D,iBAAiB,EAAEA,iBAAkB;MACrCJ,gBAAgB,EAAEA,gBAAiB;MACnCqU,OAAO,EAAE,IAAI,CAACC,sBAAuB;MACrCC,QAAQ,EAAE,IAAI,CAACC,gBAAiB;MAChCjP,iBAAiB,EAAE,IAAI,CAACA,iBAAkB;MAC1CC,eAAe,EAAEA;IAAgB,CACpC,CAEJ,CAAC,EACLgM,WAAW,IAAI,CAAC,CAAC,IAAI,CAACpD,UAAU,gBAC7BrT,KAAA,CAAAkX,aAAA,CAACtW,YAAY;MACT8Y,MAAM,EAAE3P,iBAAkB;MAC1BmJ,eAAe,EAAE/L,EAAG;MACpBuL,KAAK,EAAEA,KAAM;MACbF,UAAU,EAAEA,UAAW;MACvBC,kBAAkB,EAAEA,kBAAmB;MACvCP,OAAO,EAAEA,OAAQ;MACjBS,UAAU,EAAEA,UAAW;MACvB2G,OAAO,EAAE,IAAI,CAACK,oBAAqB;MACnCC,aAAa,EAAE,IAAI,CAACpR,WAAY;MAChC6K,UAAU,EAAE,IAAI,CAACA,UAAW;MAC5B4C,QAAQ,EAAEA,QAAS;MACnBR,oBAAoB,EAAEA,oBAAqB;MAC3CnD,kBAAkB,EAAEA,kBAAmB;MACvCC,mBAAmB,EAAEA;IAAoB,CAC5C,CAAC,GACF,IAAI,EACPmE,WAAW,IAAI,CAAC,CAAC,IAAI,CAACrD,UAAU,gBAC7BrT,KAAA,CAAAkX,aAAA,CAACvW,kBAAkB;MACf+Y,MAAM,EAAEzL,uBAAwB;MAChCE,QAAQ,EAAE,IAAI,CAACH,6BAA8B;MAC7C6L,QAAQ,EAAE,IAAI,CAAC1Q,WAAY;MAC3BgB,SAAS,EAAEA,SAAU;MACrB0D,SAAS,EAAEA,SAAU;MACrB+L,aAAa,EAAE,IAAI,CAACpR,WAAY;MAChC6K,UAAU,EAAE,IAAI,CAACA;IAAW,CAC/B,CAAC,GACF,IAAI,EACPrG,SAAS,IAAI9D,QAAQ,IAAI,CAAC,CAAC,IAAI,CAACmK,UAAU,gBACvCrT,KAAA,CAAAkX,aAAA,CAACtV,wBAAwB;MACrB8X,MAAM,EAAE3M,iBAAkB;MAC1BE,QAAQ,EAAE,IAAI,CAACH,cAAe;MAC9B+M,QAAQ,EAAE,IAAI,CAAC1Q,WAAY;MAC3BL,IAAI,EAAEI,QAAS;MACfiB,SAAS,EAAEA,SAAU;MACrByP,aAAa,EAAE,IAAI,CAACpR,WAAY;MAChC6K,UAAU,EAAE,IAAI,CAACA;IAAW,CAC/B,CAAC,GACF,IAAI,EACP3F,SAAS,IAAIxE,QAAQ,IAAI,CAAC,CAAC,IAAI,CAACmK,UAAU,gBACvCrT,KAAA,CAAAkX,aAAA,CAACvV,YAAY;MACT+X,MAAM,EAAEjM,iBAAkB;MAC1BE,QAAQ,EAAE,IAAI,CAACL,cAAe;MAC9BuM,QAAQ,EAAE,IAAI,CAAC1Q,WAAY;MAC3BL,IAAI,EAAEI,QAAS;MACfiB,SAAS,EAAEA,SAAU;MACrB0D,SAAS,EAAEA,SAAU;MACrB+L,aAAa,EAAE,IAAI,CAACpR,WAAY;MAChC6K,UAAU,EAAE,IAAI,CAACA;IAAW,CAC/B,CAAC,GACF,IAAI,EACPvE,QAAQ,IAAI5F,QAAQ,IAAI,CAAC,CAAC,IAAI,CAACmK,UAAU,gBACtCrT,KAAA,CAAAkX,aAAA,CAACxV,WAAW;MACRgY,MAAM,EAAE7K,gBAAiB;MACzB5E,iBAAiB,EAAEA,iBAAkB;MACrC6P,mBAAmB,EAAE,IAAI,CAACC,iBAAkB;MAC5CF,QAAQ,EAAE,IAAI,CAACrP,iBAAkB;MACjC1B,IAAI,EAAEI,QAAS;MACfiB,SAAS,EAAEA,SAAU;MACrByP,aAAa,EAAE,IAAI,CAACpR,WAAY;MAChC6K,UAAU,EAAE,IAAI,CAACA;IAAW,CAC/B,CAAC,GACF,IAAI,EACPhH,UAAU,IAAInD,QAAQ,IAAI,CAAC,CAAC,IAAI,CAACmK,UAAU,gBACxCrT,KAAA,CAAAkX,aAAA,CAACzV,aAAa;MACViY,MAAM,EAAEnN,kBAAmB;MAC3BvD,OAAO,EAAEA,OAAQ;MACjB6Q,QAAQ,EAAE,IAAI,CAAC1Q,WAAY;MAC3BL,IAAI,EAAEI,QAAS;MACf7D,iBAAiB,EAAElF,SAAS,CAACkF,iBAAiB,CAAE;MAChDqN,KAAK,EAAEA,KAAM;MACbkH,aAAa,EAAE,IAAI,CAACpR,WAAY;MAChC6K,UAAU,EAAE,IAAI,CAACA,UAAW;MAC5B2C,SAAS,EAAEA,SAAU;MACrBtJ,UAAU,EAAEA,UAAW;MACvBD,WAAW,EAAEA,WAAY;MACzBuN,KAAK,EAAE,IAAI,CAAChU,GAAG,CAACiU,QAAQ,CAAC,CAAE;MAC3B/H,OAAO,EAAEA,OAAQ;MACjBmD,OAAO,EAAEA,OAAQ;MACjBa,UAAU,EAAEA,UAAW;MACvBC,UAAU,EAAEA,UAAW;MACvBC,qBAAqB,EAAEA,qBAAsB;MAC7C5D,UAAU,EAAEA,UAAW;MACvBC,kBAAkB,EAAEA,kBAAmB;MACvC+C,mBAAmB,EAAEA,mBAAoB;MACzClD,kBAAkB,EAAEA,kBAAmB;MACvCC,mBAAmB,EAAEA;IAAoB,CAC5C,CAAC,GACF,IACH,CACE,CACG,CAAC;IAEvB;IACA;EACJ;AACJ;AAACxN,eAAA,CA/0DKH,eAAe,kBAqBK;EAClB+C,YAAY,EAAEzE,YAAY;EAC1B8E,MAAM,EAAEjF,UAAU;EAClBkF,aAAa,EAAEpF,QAAQ;EACvB4J,WAAW,EAAE,IAAI;EACjBO,SAAS,EAAE,IAAI;EACfnD,SAAS,EAAE,IAAI;EACf6D,SAAS,EAAE,IAAI;EACfoB,QAAQ,EAAE,IAAI;EACdzC,UAAU,EAAE,IAAI;EAChBpC,iBAAiB,EAAE,IAAI;EACvBiE,kBAAkB,EAAE,IAAI;EACxBgG,SAAS,EAAE,KAAK;EAChBhC,OAAO,EAAEzP,oBAAoB;EAC7B4S,OAAO,EAAE3S,oBAAoB;EAC7BwT,UAAU,EAAEvT,uBAAuB;EACnCgQ,UAAU,EAAEnQ,uBAAuB;EACnC+S,SAAS,EAAE,EAAE;EACbtI,QAAQ,EAAEzM,IAAI;EACdkM,UAAU,EAAElM,IAAI;EAChBwV,SAAS,EAAExV,IAAI;EACfmN,QAAQ,EAAEnN,IAAI;EACd2N,QAAQ,EAAE3N,IAAI;EACdoL,QAAQ,EAAEpL,IAAI;EACdyV,QAAQ,EAAEzV,IAAI;EACd2T,UAAU,EAAE3T,IAAI;EAChB2S,WAAW,EAAEnP,kBAAkB;EAC/BmO,WAAW,EAAErO,mBAAmB;EAChCsO,eAAe,EAAErO,iBAAiB;EAClCyR,mBAAmB,EAAE;IACjB0E,mBAAmB,EAAE,CAAC;EAC1B,CAAC;EACDzE,oBAAoB,EAAE,CAAC,CAAC;EACxBrF,iBAAiB,EAAE,CAAC;AACxB,CAAC;AA0xDL,SAASxL,eAAe,IAAIuV,wBAAwB;AACpD,eAAe9Z,IAAI,CAAC,CAACW,cAAc,EAAEqB,mBAAmB,EAAEC,mBAAmB,EAAEiC,0BAA0B,CAAC,CAAC,CACvGK,eACJ,CAAC","ignoreList":[]}