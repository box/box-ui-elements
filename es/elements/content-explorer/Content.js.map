{"version":3,"file":"Content.js","names":["React","EmptyView","ItemGrid","ItemList","ProgressBar","MetadataBasedItemList","MetadataViewContainer","isFeatureEnabled","VIEW_ERROR","VIEW_METADATA","VIEW_MODE_LIST","VIEW_MODE_GRID","VIEW_SELECTED","isEmpty","view","currentCollection","fieldsToShow","items","length","Content","_ref","features","gridColumnCount","metadataTemplate","metadataViewProps","onMetadataFilter","onMetadataUpdate","onSortChange","viewMode","rest","_objectWithoutProperties","_excluded","percentLoaded","sortBy","sortDirection","isViewEmpty","isMetadataBasedView","isListView","isGridView","isMetadataViewV2Feature","createElement","className","percent","isLoading","_extends","hasError"],"sources":["../../../src/elements/content-explorer/Content.tsx"],"sourcesContent":["import * as React from 'react';\nimport EmptyView from '../common/empty-view';\nimport ItemGrid from '../common/item-grid';\nimport ItemList from '../common/item-list';\nimport ProgressBar from '../common/progress-bar';\nimport MetadataBasedItemList from '../../features/metadata-based-view';\nimport MetadataViewContainer, { ExternalFilterValues, MetadataViewContainerProps } from './MetadataViewContainer';\nimport { isFeatureEnabled, type FeatureConfig } from '../common/feature-checking';\nimport { VIEW_ERROR, VIEW_METADATA, VIEW_MODE_LIST, VIEW_MODE_GRID, VIEW_SELECTED } from '../../constants';\nimport type { ViewMode } from '../common/flowTypes';\nimport type { ItemAction, ItemEventHandlers, ItemEventPermissions } from '../common/item';\nimport type { FieldsToShow } from '../../common/types/metadataQueries';\nimport type { BoxItem, Collection, View } from '../../common/types/core';\nimport type { MetadataFieldValue, MetadataTemplate } from '../../common/types/metadata';\nimport './Content.scss';\n\n/**\n * Determines if we should show the empty state\n *\n * @param {string} view the current view\n * @param {Object} currentCollection the current collection\n * @param {FieldsToShow} fieldsToShow list of metadata template fields to show\n * @return {boolean} empty or not\n */\nfunction isEmpty(view: View, currentCollection: Collection, fieldsToShow: FieldsToShow): boolean {\n    const { items = [] }: Collection = currentCollection;\n    return view === VIEW_ERROR || !items.length || (view === VIEW_METADATA && !fieldsToShow.length);\n}\n\nexport interface ContentProps extends Required<ItemEventHandlers>, Required<ItemEventPermissions> {\n    currentCollection: Collection;\n    features?: FeatureConfig;\n    fieldsToShow?: FieldsToShow;\n    gridColumnCount?: number;\n    isMedium: boolean;\n    isSmall: boolean;\n    isTouch: boolean;\n    itemActions?: ItemAction[];\n    metadataTemplate?: MetadataTemplate;\n    metadataViewProps?: Omit<\n        MetadataViewContainerProps,\n        'hasError' | 'currentCollection' | 'metadataTemplate' | 'onMetadataFilter'\n    >;\n    onMetadataFilter?: (fields: ExternalFilterValues) => void;\n    onMetadataUpdate: (\n        item: BoxItem,\n        field: string,\n        currentValue: MetadataFieldValue,\n        editedValue: MetadataFieldValue,\n    ) => void;\n    onSortChange: (sortBy: string, sortDirection: string) => void;\n    portalElement: HTMLElement;\n    view: View;\n    viewMode?: ViewMode;\n}\n\nconst Content = ({\n    currentCollection,\n    features,\n    fieldsToShow = [],\n    gridColumnCount,\n    metadataTemplate,\n    metadataViewProps,\n    onMetadataFilter,\n    onMetadataUpdate,\n    onSortChange,\n    view,\n    viewMode = VIEW_MODE_LIST,\n    ...rest\n}: ContentProps) => {\n    const { items, percentLoaded, sortBy, sortDirection } = currentCollection;\n\n    const isViewEmpty = isEmpty(view, currentCollection, fieldsToShow);\n    const isMetadataBasedView = view === VIEW_METADATA;\n    const isListView = !isMetadataBasedView && viewMode === VIEW_MODE_LIST; // Folder view or Recents view\n    const isGridView = !isMetadataBasedView && viewMode === VIEW_MODE_GRID; // Folder view or Recents view\n    const isMetadataViewV2Feature = isFeatureEnabled(features, 'contentExplorer.metadataViewV2');\n    return (\n        <div className=\"bce-content\">\n            {view === VIEW_ERROR || view === VIEW_SELECTED ? null : <ProgressBar percent={percentLoaded} />}\n\n            {!isMetadataViewV2Feature && isViewEmpty && <EmptyView view={view} isLoading={percentLoaded !== 100} />}\n            {isMetadataViewV2Feature && view === VIEW_ERROR && <EmptyView view={view} isLoading={false} />}\n            {!isMetadataViewV2Feature && !isViewEmpty && isMetadataBasedView && (\n                <MetadataBasedItemList\n                    currentCollection={currentCollection}\n                    fieldsToShow={fieldsToShow}\n                    onMetadataUpdate={onMetadataUpdate}\n                    {...rest}\n                />\n            )}\n            {isMetadataViewV2Feature && isMetadataBasedView && (\n                <MetadataViewContainer\n                    currentCollection={currentCollection}\n                    isLoading={percentLoaded !== 100}\n                    hasError={view === VIEW_ERROR}\n                    metadataTemplate={metadataTemplate}\n                    onMetadataFilter={onMetadataFilter}\n                    onSortChange={onSortChange}\n                    {...metadataViewProps}\n                />\n            )}\n            {!isViewEmpty && isListView && (\n                <ItemList\n                    items={items}\n                    onSortChange={onSortChange}\n                    sortBy={sortBy}\n                    sortDirection={sortDirection}\n                    view={view}\n                    {...rest}\n                />\n            )}\n            {!isViewEmpty && isGridView && (\n                <ItemGrid gridColumnCount={gridColumnCount} items={items} view={view} {...rest} />\n            )}\n        </div>\n    );\n};\n\nexport default Content;\n"],"mappings":"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","ignoreList":[]}