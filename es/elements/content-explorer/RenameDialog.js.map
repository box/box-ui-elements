{"version":3,"file":"RenameDialog.js","names":["React","Modal","useIntl","BlueprintModal","TextInput","CLASS_MODAL_CONTENT","CLASS_MODAL_OVERLAY","CLASS_MODAL","ERROR_CODE_ITEM_NAME_TOO_LONG","ERROR_CODE_ITEM_NAME_IN_USE","messages","RenameDialog","appElement","errorCode","isOpen","isLoading","item","onCancel","onRename","parentElement","formatMessage","textInput","error","name","extension","ext","nameWithoutExt","replace","handleRename","value","ref","input","HTMLInputElement","focus","select","onKeyDown","key","renameDialogErrorInUse","renameDialogErrorTooLong","renameDialogErrorInvalid","createElement","className","contentLabel","renameDialogLabel","onRequestClose","overlayClassName","parentSelector","portalClassName","Body","defaultValue","label","renameDialogText","required","Footer","SecondaryButton","disabled","onClick","size","cancel","PrimaryButton","loading","loadingAriaLabel","rename"],"sources":["../../../src/elements/content-explorer/RenameDialog.tsx"],"sourcesContent":["import * as React from 'react';\nimport Modal from 'react-modal';\nimport { useIntl } from 'react-intl';\nimport { Modal as BlueprintModal, TextInput } from '@box/blueprint-web';\n\nimport {\n    CLASS_MODAL_CONTENT,\n    CLASS_MODAL_OVERLAY,\n    CLASS_MODAL,\n    ERROR_CODE_ITEM_NAME_TOO_LONG,\n    ERROR_CODE_ITEM_NAME_IN_USE,\n} from '../../constants';\nimport type { BoxItem } from '../../common/types/core';\n\nimport messages from '../common/messages';\n\nexport interface RenameDialogProps {\n    appElement: HTMLElement;\n    errorCode: string;\n    isLoading: boolean;\n    isOpen: boolean;\n    item: BoxItem;\n    onCancel: () => void;\n    onRename: (value: string, extension: string) => void;\n    parentElement: HTMLElement;\n}\n\nconst RenameDialog = ({\n    appElement,\n    errorCode,\n    isOpen,\n    isLoading,\n    item,\n    onCancel,\n    onRename,\n    parentElement,\n}: RenameDialogProps) => {\n    const { formatMessage } = useIntl();\n    let textInput = null;\n    let error;\n\n    const { name = '', extension } = item;\n    const ext = extension ? `.${extension}` : '';\n    const nameWithoutExt = extension ? name.replace(ext, '') : name;\n\n    /**\n     * Appends the extension and calls rename function\n     */\n    const handleRename = () => {\n        if (textInput && textInput.value) {\n            if (textInput.value === nameWithoutExt) {\n                onCancel();\n            } else {\n                onRename(textInput.value, ext);\n            }\n        }\n    };\n\n    /**\n     * Grabs reference to the input element\n     */\n    const ref = input => {\n        textInput = input;\n        if (textInput instanceof HTMLInputElement) {\n            textInput.focus();\n            textInput.select();\n        }\n    };\n\n    /**\n     * Handles enter key down\n     */\n    const onKeyDown = ({ key }) => {\n        switch (key) {\n            case 'Enter':\n                handleRename();\n                break;\n            default:\n                break;\n        }\n    };\n\n    switch (errorCode) {\n        case ERROR_CODE_ITEM_NAME_IN_USE:\n            error = messages.renameDialogErrorInUse;\n            break;\n        case ERROR_CODE_ITEM_NAME_TOO_LONG:\n            error = messages.renameDialogErrorTooLong;\n            break;\n        default:\n            error = errorCode ? messages.renameDialogErrorInvalid : null;\n            break;\n    }\n\n    return (\n        <Modal\n            appElement={appElement}\n            className={CLASS_MODAL_CONTENT}\n            contentLabel={formatMessage(messages.renameDialogLabel)}\n            isOpen={isOpen}\n            onRequestClose={onCancel}\n            overlayClassName={CLASS_MODAL_OVERLAY}\n            parentSelector={() => parentElement}\n            portalClassName={`${CLASS_MODAL} be-modal-rename`}\n        >\n            <BlueprintModal.Body>\n                <TextInput\n                    defaultValue={nameWithoutExt}\n                    error={error && formatMessage(error, { name: nameWithoutExt })}\n                    label={formatMessage(messages.renameDialogText, { name: nameWithoutExt })}\n                    onKeyDown={onKeyDown}\n                    ref={ref}\n                    required\n                />\n            </BlueprintModal.Body>\n            <BlueprintModal.Footer>\n                <BlueprintModal.Footer.SecondaryButton disabled={isLoading} onClick={onCancel} size=\"large\">\n                    {formatMessage(messages.cancel)}\n                </BlueprintModal.Footer.SecondaryButton>\n                <BlueprintModal.Footer.PrimaryButton\n                    loading={isLoading}\n                    loadingAriaLabel={formatMessage(messages.loading)}\n                    onClick={handleRename}\n                    size=\"large\"\n                >\n                    {formatMessage(messages.rename)}\n                </BlueprintModal.Footer.PrimaryButton>\n            </BlueprintModal.Footer>\n        </Modal>\n    );\n};\n\nexport default RenameDialog;\n"],"mappings":"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","ignoreList":[]}