{"version":3,"file":"ContentExplorer-visual.stories.js","names":["expect","screen","userEvent","waitFor","within","http","HttpResponse","ContentExplorer","mockEmptyRootFolder","mockRootFolder","mockSubfolder","mockRecentItems","mockUserRequest","DEFAULT_HOSTNAME_API","basic","play","canvasElement","canvas","folder","findByText","toBeInTheDocument","getByText","Modernization","args","enableModernizedComponents","openExistingFolder","subFolder","click","openCreateFolderDialog","addButton","findByRole","name","dropdown","newFolderButton","closeCreateFolderDialog","cancelButton","queryByText","not","defaultHandlers","get","json","status","emptyState","rootFolderId","parameters","msw","handlers","url","response","errorEmptyState","withTheming","title","component","features","global","FEATURE_FLAGS","FOLDER_ID","token","TOKEN"],"sources":["../../../../../src/elements/content-explorer/stories/tests/ContentExplorer-visual.stories.js"],"sourcesContent":["import { expect, screen, userEvent, waitFor, within } from 'storybook/test';\nimport { http, HttpResponse } from 'msw';\nimport ContentExplorer from '../../ContentExplorer';\nimport { mockEmptyRootFolder, mockRootFolder } from '../../../common/__mocks__/mockRootFolder';\nimport mockSubfolder from '../../../common/__mocks__/mockSubfolder';\nimport mockRecentItems from '../../../common/__mocks__/mockRecentItems';\nimport { mockUserRequest } from '../../../common/__mocks__/mockRequests';\n\nimport { DEFAULT_HOSTNAME_API } from '../../../../constants';\n\nexport const basic = {\n    play: async ({ canvasElement }) => {\n        const canvas = within(canvasElement);\n        await waitFor(async () => {\n            const folder = await canvas.findByText('An Ordered Folder');\n            expect(folder).toBeInTheDocument();\n            expect(canvas.getByText('Apr 16, 2019 by Preview')).toBeInTheDocument();\n\n            expect(canvas.getByText('Archive')).toBeInTheDocument();\n            expect(canvas.getByText('Dec 16, 2020 by Preview')).toBeInTheDocument();\n\n            expect(canvas.getByText('Archived Folder')).toBeInTheDocument();\n            expect(canvas.getByText('Dec 17, 2020 by Preview')).toBeInTheDocument();\n\n            expect(canvas.getByText('Book Sample.pdf')).toBeInTheDocument();\n            expect(canvas.getByText('Dec 8, 2022 by Preview')).toBeInTheDocument();\n        });\n    },\n};\n\nexport const Modernization = {\n    args: {\n        enableModernizedComponents: true,\n    },\n};\n\nexport const openExistingFolder = {\n    play: async ({ canvasElement }) => {\n        const canvas = within(canvasElement);\n\n        const subFolder = await canvas.findByText('An Ordered Folder');\n        await userEvent.click(subFolder);\n\n        expect(await canvas.findByText('Audio.mp3')).toBeInTheDocument();\n    },\n};\n\nexport const openCreateFolderDialog = {\n    play: async ({ canvasElement }) => {\n        const canvas = within(canvasElement);\n\n        const addButton = await canvas.findByRole('button', { name: 'Add' });\n        await userEvent.click(addButton);\n\n        const dropdown = await screen.findByRole('menu');\n        const newFolderButton = await within(dropdown).findByRole('menuitem', { name: 'New Folder' });\n        expect(newFolderButton).toBeInTheDocument();\n        await userEvent.click(newFolderButton);\n\n        expect(await screen.findByText('Please enter a name.')).toBeInTheDocument();\n    },\n};\n\nexport const closeCreateFolderDialog = {\n    play: async ({ canvasElement }) => {\n        const canvas = within(canvasElement);\n\n        const addButton = await canvas.findByRole('button', { name: 'Add' });\n        await userEvent.click(addButton);\n\n        const dropdown = await screen.findByRole('menu');\n        const newFolderButton = await within(dropdown).findByRole('menuitem', { name: 'New Folder' });\n        expect(newFolderButton).toBeInTheDocument();\n        await userEvent.click(newFolderButton);\n\n        expect(await screen.findByText('Please enter a name.')).toBeInTheDocument();\n\n        const cancelButton = screen.getByText('Cancel');\n        await userEvent.click(cancelButton);\n\n        await waitFor(() => {\n            expect(screen.queryByText('Please enter a name.')).not.toBeInTheDocument();\n        });\n    },\n};\n\n// export const openDeleteConfirmationDialog = {\n//     play: async ({ canvasElement }) => {\n//         const canvas = within(canvasElement);\n\n//         await waitFor(async () => {\n//             await canvas.findByRole('grid', { name: 'List view' });\n\n//             const moreOptionsButton = await canvas.findAllByRole('button', { name: 'More options' });\n//             await userEvent.hover(moreOptionsButton[0]);\n//             await userEvent.click(moreOptionsButton[0]);\n\n//             const deleteButton = await screen.findByRole('menuitem', { name: 'Delete' });\n//             await userEvent.hover(deleteButton);\n//             await userEvent.click(deleteButton);\n//         });\n\n//         expect(\n//             await screen.findByText('Are you sure you want to delete An Ordered Folder and all its contents?'),\n//         ).toBeInTheDocument();\n//     },\n// };\n\n// export const closeDeleteConfirmationDialog = {\n//     play: async ({ canvasElement }) => {\n//         const canvas = within(canvasElement);\n\n//         await waitFor(async () => {\n//             await canvas.findByRole('grid', { name: 'List view' });\n\n//             const moreOptionsButton = await canvas.findAllByRole('button', { name: 'More options' });\n//             await userEvent.hover(moreOptionsButton[0]);\n//             await userEvent.click(moreOptionsButton[0]);\n\n//             const deleteButton = await screen.findByRole('menuitem', { name: 'Delete' });\n//             await userEvent.hover(deleteButton);\n//             await userEvent.click(deleteButton);\n//         });\n\n//         expect(\n//             await screen.findByText('Are you sure you want to delete An Ordered Folder and all its contents?'),\n//         ).toBeInTheDocument();\n\n//         const cancelButton = screen.getByText('Cancel');\n//         await userEvent.click(cancelButton);\n\n//         await waitFor(() => {\n//             expect(\n//                 screen.queryByText('Are you sure you want to delete An Ordered Folder and all its contents?'),\n//             ).not.toBeInTheDocument();\n//         });\n//     },\n// };\n\n// export const openRenameDialog = {\n//     play: async ({ canvasElement }) => {\n//         const canvas = within(canvasElement);\n\n//         await waitFor(async () => {\n//             await canvas.findByRole('grid', { name: 'List view' });\n\n//             const moreOptionsButton = await canvas.findAllByRole('button', { name: 'More options' });\n//             await userEvent.hover(moreOptionsButton[0]);\n//             await userEvent.click(moreOptionsButton[0]);\n\n//             const renameButton = await screen.findByRole('menuitem', { name: 'Rename' });\n//             await userEvent.hover(renameButton);\n//             await userEvent.click(renameButton);\n//         });\n\n//         expect(await screen.findByText('Please enter a new name for An Ordered Folder:')).toBeInTheDocument();\n//     },\n// };\n\n// export const closeRenameDialog = {\n//     play: async ({ canvasElement }) => {\n//         const canvas = within(canvasElement);\n\n//         await waitFor(async () => {\n//             await canvas.findByRole('grid', { name: 'List view' });\n\n//             const moreOptionsButton = await canvas.findAllByRole('button', { name: 'More options' });\n//             await userEvent.hover(moreOptionsButton[0]);\n//             await userEvent.click(moreOptionsButton[0]);\n\n//             const renameButton = await screen.findByRole('menuitem', { name: 'Rename' });\n//             await userEvent.hover(renameButton);\n//             await userEvent.click(renameButton);\n//         });\n\n//         expect(await screen.findByText('Please enter a new name for An Ordered Folder:')).toBeInTheDocument();\n//         const cancelButton = screen.getByText('Cancel');\n//         await userEvent.click(cancelButton);\n\n//         await waitFor(() => {\n//             expect(screen.queryByText('Please enter a new name for An Ordered Folder:')).not.toBeInTheDocument();\n//         });\n//     },\n// };\n\n// export const openShareDialog = {\n//     play: async ({ canvasElement }) => {\n//         const canvas = within(canvasElement);\n\n//         await waitFor(async () => {\n//             await canvas.findByRole('grid', { name: 'List view' });\n\n//             const moreOptionsButton = await canvas.findAllByRole('button', { name: 'More options' });\n//             await userEvent.hover(moreOptionsButton[0]);\n//             await userEvent.click(moreOptionsButton[0]);\n\n//             const shareButton = await screen.findByRole('menuitem', { name: 'Share' });\n//             await userEvent.hover(shareButton);\n//             await userEvent.click(shareButton);\n//         });\n\n//         expect(await screen.findByText('Shared Link:')).toBeInTheDocument();\n\n//         const inputElement = screen.getByDisplayValue('https://example.com/share-link');\n//         expect(inputElement).toBeInTheDocument();\n//     },\n// };\n\n// export const closeShareDialog = {\n//     play: async ({ canvasElement }) => {\n//         const canvas = within(canvasElement);\n\n//         await waitFor(async () => {\n//             await canvas.findByRole('grid', { name: 'List view' });\n\n//             const moreOptionsButton = await canvas.findAllByRole('button', { name: 'More options' });\n//             await userEvent.click(moreOptionsButton[0]);\n\n//             const shareButton = await screen.findByRole('menuitem', { name: 'Share' });\n//             await userEvent.hover(shareButton);\n//             await userEvent.click(shareButton);\n//         });\n\n//         expect(await screen.findByText('Shared Link:')).toBeInTheDocument();\n//         const closeButton = screen.getByText('Close');\n//         await userEvent.click(closeButton);\n\n//         await waitFor(() => {\n//             expect(screen.queryByText('Shared Link:')).not.toBeInTheDocument();\n//         });\n//         const inputElement = screen.queryByDisplayValue('https://example.com/share-link');\n//         expect(inputElement).not.toBeInTheDocument();\n//     },\n// };\n\nconst defaultHandlers = [\n    http.get(`${DEFAULT_HOSTNAME_API}/2.0/folders/69083462919`, () => {\n        return HttpResponse.json(mockRootFolder);\n    }),\n    http.get(`${DEFAULT_HOSTNAME_API}/2.0/folders/73426618530`, () => {\n        return HttpResponse.json(mockSubfolder);\n    }),\n    http.get(`${DEFAULT_HOSTNAME_API}/2.0/folders/74729718131`, () => {\n        return HttpResponse.json(mockEmptyRootFolder);\n    }),\n    http.get(`${DEFAULT_HOSTNAME_API}/2.0/folders/191354690948`, () => {\n        return new HttpResponse('Internal Server Error', { status: 500 });\n    }),\n    http.get(`${DEFAULT_HOSTNAME_API}/2.0/recent_items`, () => {\n        return HttpResponse.json(mockRecentItems);\n    }),\n];\n\nexport const emptyState = {\n    args: {\n        rootFolderId: '74729718131',\n    },\n    parameters: {\n        msw: {\n            handlers: [\n                ...defaultHandlers,\n                http.get(mockUserRequest.url, () => {\n                    return HttpResponse.json(mockUserRequest.response);\n                }),\n            ],\n        },\n    },\n    play: async ({ canvasElement }) => {\n        const canvas = within(canvasElement);\n        await waitFor(() => {\n            expect(canvas.getByText('There are no items in this folder.')).toBeInTheDocument();\n        });\n    },\n};\n\nexport const errorEmptyState = {\n    args: {\n        rootFolderId: '191354690948',\n    },\n    play: async ({ canvasElement }) => {\n        const canvas = within(canvasElement);\n        await waitFor(() => {\n            expect(canvas.getByText('A network error has occurred while trying to load.')).toBeInTheDocument();\n        });\n    },\n};\n\nexport const withTheming = {\n    play: async ({ canvasElement }) => {\n        const canvas = within(canvasElement);\n\n        await waitFor(async () => {\n            expect(await canvas.getByText('Preview Test Folder')).toBeInTheDocument();\n        });\n    },\n};\n\nexport default {\n    title: 'Elements/ContentExplorer/tests/ContentExplorer/visual',\n    component: ContentExplorer,\n    args: {\n        features: global.FEATURE_FLAGS,\n        rootFolderId: global.FOLDER_ID,\n        token: global.TOKEN,\n    },\n    parameters: {\n        msw: {\n            handlers: defaultHandlers,\n        },\n    },\n};\n"],"mappings":"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","ignoreList":[]}