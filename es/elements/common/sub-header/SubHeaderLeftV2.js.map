{"version":3,"file":"SubHeaderLeftV2.js","names":["React","useIntl","XMark","IconButton","PageHeader","Text","useSelectedItemText","messages","SubHeaderLeftV2","props","currentCollection","onClearSelectedItemIds","rootName","selectedItemIds","title","formatMessage","selectedItemText","createElement","Root","className","variant","Corner","clearSelection","icon","onClick","StartElements","as"],"sources":["../../../../src/elements/common/sub-header/SubHeaderLeftV2.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useIntl } from 'react-intl';\nimport { XMark } from '@box/blueprint-web-assets/icons/Fill/index';\nimport { IconButton, PageHeader, Text } from '@box/blueprint-web';\nimport type { Selection } from 'react-aria-components';\nimport { useSelectedItemText } from '../../content-explorer/utils';\nimport type { Collection } from '../../../common/types/core';\nimport messages from '../messages';\n\nimport './SubHeaderLeftV2.scss';\n\nexport interface SubHeaderLeftV2Props {\n    currentCollection: Collection;\n    onClearSelectedItemIds?: () => void;\n    rootName?: string;\n    selectedItemIds: Selection;\n    title?: string;\n}\n\nconst SubHeaderLeftV2 = (props: SubHeaderLeftV2Props) => {\n    const { currentCollection, onClearSelectedItemIds, rootName, selectedItemIds, title } = props;\n    const { formatMessage } = useIntl();\n\n    const selectedItemText = useSelectedItemText(currentCollection, selectedItemIds);\n\n    // Case 1 and 2: selected item text with X button\n    if (selectedItemText) {\n        return (\n            <PageHeader.Root className=\"be-SubHeaderLeftV2--selection\" variant=\"default\">\n                <PageHeader.Corner>\n                    <IconButton\n                        aria-label={formatMessage(messages.clearSelection)}\n                        icon={XMark}\n                        onClick={onClearSelectedItemIds}\n                        variant=\"small-utility\"\n                    />\n                </PageHeader.Corner>\n\n                <PageHeader.StartElements>\n                    <Text as=\"span\">{selectedItemText}</Text>\n                </PageHeader.StartElements>\n            </PageHeader.Root>\n        );\n    }\n\n    // Case 3: No selected items - show title if provided, otherwise show root name\n    return (\n        <Text as=\"h1\" variant=\"titleXLarge\">\n            {title ?? rootName}\n        </Text>\n    );\n};\n\nexport default SubHeaderLeftV2;\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,OAAO,QAAQ,YAAY;AACpC,SAASC,KAAK,QAAQ,4CAA4C;AAClE,SAASC,UAAU,EAAEC,UAAU,EAAEC,IAAI,QAAQ,oBAAoB;AAEjE,SAASC,mBAAmB,QAAQ,8BAA8B;AAElE,OAAOC,QAAQ,MAAM,aAAa;AAElC,OAAO,wBAAwB;AAU/B,MAAMC,eAAe,GAAIC,KAA2B,IAAK;EACrD,MAAM;IAAEC,iBAAiB;IAAEC,sBAAsB;IAAEC,QAAQ;IAAEC,eAAe;IAAEC;EAAM,CAAC,GAAGL,KAAK;EAC7F,MAAM;IAAEM;EAAc,CAAC,GAAGd,OAAO,CAAC,CAAC;EAEnC,MAAMe,gBAAgB,GAAGV,mBAAmB,CAACI,iBAAiB,EAAEG,eAAe,CAAC;;EAEhF;EACA,IAAIG,gBAAgB,EAAE;IAClB,oBACIhB,KAAA,CAAAiB,aAAA,CAACb,UAAU,CAACc,IAAI;MAACC,SAAS,EAAC,+BAA+B;MAACC,OAAO,EAAC;IAAS,gBACxEpB,KAAA,CAAAiB,aAAA,CAACb,UAAU,CAACiB,MAAM,qBACdrB,KAAA,CAAAiB,aAAA,CAACd,UAAU;MACP,cAAYY,aAAa,CAACR,QAAQ,CAACe,cAAc,CAAE;MACnDC,IAAI,EAAErB,KAAM;MACZsB,OAAO,EAAEb,sBAAuB;MAChCS,OAAO,EAAC;IAAe,CAC1B,CACc,CAAC,eAEpBpB,KAAA,CAAAiB,aAAA,CAACb,UAAU,CAACqB,aAAa,qBACrBzB,KAAA,CAAAiB,aAAA,CAACZ,IAAI;MAACqB,EAAE,EAAC;IAAM,GAAEV,gBAAuB,CAClB,CACb,CAAC;EAE1B;;EAEA;EACA,oBACIhB,KAAA,CAAAiB,aAAA,CAACZ,IAAI;IAACqB,EAAE,EAAC,IAAI;IAACN,OAAO,EAAC;EAAa,GAC9BN,KAAK,IAAIF,QACR,CAAC;AAEf,CAAC;AAED,eAAeJ,eAAe","ignoreList":[]}