{"version":3,"file":"Sort.js","names":["React","useIntl","DropdownMenu","IconButton","IconSort","FIELD_NAME","FIELD_DATE","FIELD_SIZE","SORT_ASC","SORT_DESC","messages","SORT_ITEMS","Sort","onSortChange","portalElement","formatMessage","createElement","Root","Trigger","sort","className","icon","Content","container","map","sortByValue","sortDirectionValue","sortItemKey","Item","key","onClick"],"sources":["../../../../src/elements/common/sub-header/Sort.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useIntl } from 'react-intl';\nimport { DropdownMenu, IconButton } from '@box/blueprint-web';\nimport IconSort from '../../../icons/general/IconSort';\nimport type { SortBy, SortDirection } from '../../../common/types/core';\nimport { FIELD_NAME, FIELD_DATE, FIELD_SIZE, SORT_ASC, SORT_DESC } from '../../../constants';\n\nimport messages from '../messages';\n\nexport interface SortProps {\n    onSortChange: (sortBy: SortBy, sortDirection: SortDirection) => void;\n    portalElement?: HTMLElement;\n}\n\ntype SortItem = [SortBy, SortDirection];\n\nconst SORT_ITEMS: Array<SortItem> = [\n    [FIELD_NAME, SORT_ASC],\n    [FIELD_NAME, SORT_DESC],\n    [FIELD_DATE, SORT_ASC],\n    [FIELD_DATE, SORT_DESC],\n    [FIELD_SIZE, SORT_ASC],\n    [FIELD_SIZE, SORT_DESC],\n];\n\nconst Sort = ({ onSortChange, portalElement }: SortProps) => {\n    const { formatMessage } = useIntl();\n\n    return (\n        <DropdownMenu.Root>\n            <DropdownMenu.Trigger>\n                <IconButton aria-label={formatMessage(messages.sort)} className=\"be-btn-sort\" icon={IconSort} />\n            </DropdownMenu.Trigger>\n            <DropdownMenu.Content container={portalElement}>\n                {SORT_ITEMS.map(([sortByValue, sortDirectionValue]) => {\n                    const sortItemKey = `${sortByValue}${sortDirectionValue}`;\n\n                    return (\n                        <DropdownMenu.Item\n                            key={sortItemKey}\n                            onClick={() => onSortChange(sortByValue, sortDirectionValue)}\n                        >\n                            {formatMessage(messages[sortItemKey])}\n                        </DropdownMenu.Item>\n                    );\n                })}\n            </DropdownMenu.Content>\n        </DropdownMenu.Root>\n    );\n};\n\nexport default Sort;\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,OAAO,QAAQ,YAAY;AACpC,SAASC,YAAY,EAAEC,UAAU,QAAQ,oBAAoB;AAC7D,OAAOC,QAAQ,MAAM,iCAAiC;AAEtD,SAASC,UAAU,EAAEC,UAAU,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,oBAAoB;AAE5F,OAAOC,QAAQ,MAAM,aAAa;AASlC,MAAMC,UAA2B,GAAG,CAChC,CAACN,UAAU,EAAEG,QAAQ,CAAC,EACtB,CAACH,UAAU,EAAEI,SAAS,CAAC,EACvB,CAACH,UAAU,EAAEE,QAAQ,CAAC,EACtB,CAACF,UAAU,EAAEG,SAAS,CAAC,EACvB,CAACF,UAAU,EAAEC,QAAQ,CAAC,EACtB,CAACD,UAAU,EAAEE,SAAS,CAAC,CAC1B;AAED,MAAMG,IAAI,GAAGA,CAAC;EAAEC,YAAY;EAAEC;AAAyB,CAAC,KAAK;EACzD,MAAM;IAAEC;EAAc,CAAC,GAAGd,OAAO,CAAC,CAAC;EAEnC,oBACID,KAAA,CAAAgB,aAAA,CAACd,YAAY,CAACe,IAAI,qBACdjB,KAAA,CAAAgB,aAAA,CAACd,YAAY,CAACgB,OAAO,qBACjBlB,KAAA,CAAAgB,aAAA,CAACb,UAAU;IAAC,cAAYY,aAAa,CAACL,QAAQ,CAACS,IAAI,CAAE;IAACC,SAAS,EAAC,aAAa;IAACC,IAAI,EAAEjB;EAAS,CAAE,CAC7E,CAAC,eACvBJ,KAAA,CAAAgB,aAAA,CAACd,YAAY,CAACoB,OAAO;IAACC,SAAS,EAAET;EAAc,GAC1CH,UAAU,CAACa,GAAG,CAAC,CAAC,CAACC,WAAW,EAAEC,kBAAkB,CAAC,KAAK;IACnD,MAAMC,WAAW,GAAG,GAAGF,WAAW,GAAGC,kBAAkB,EAAE;IAEzD,oBACI1B,KAAA,CAAAgB,aAAA,CAACd,YAAY,CAAC0B,IAAI;MACdC,GAAG,EAAEF,WAAY;MACjBG,OAAO,EAAEA,CAAA,KAAMjB,YAAY,CAACY,WAAW,EAAEC,kBAAkB;IAAE,GAE5DX,aAAa,CAACL,QAAQ,CAACiB,WAAW,CAAC,CACrB,CAAC;EAE5B,CAAC,CACiB,CACP,CAAC;AAE5B,CAAC;AAED,eAAef,IAAI","ignoreList":[]}