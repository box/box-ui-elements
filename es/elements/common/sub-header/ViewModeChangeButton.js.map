{"version":3,"file":"ViewModeChangeButton.js","names":["React","useIntl","classNames","noop","Tooltip","IconButton","Grid","Hamburger","VIEW_MODE_GRID","VIEW_MODE_LIST","messages","ViewModeChangeButton","_ref","className","onViewModeChange","viewMode","rest","_objectWithoutProperties","_excluded","formatMessage","isGridView","viewMessage","listView","gridView","onClick","createElement","content","_extends","icon"],"sources":["../../../../src/elements/common/sub-header/ViewModeChangeButton.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useIntl } from 'react-intl';\nimport classNames from 'classnames';\nimport noop from 'lodash/noop';\nimport { Tooltip, IconButton } from '@box/blueprint-web';\nimport { Grid, Hamburger } from '@box/blueprint-web-assets/icons/Fill';\nimport type { ViewMode } from '../flowTypes';\nimport { VIEW_MODE_GRID, VIEW_MODE_LIST } from '../../../constants';\n\nimport './ViewModeChangeButton.scss';\n\nimport messages from '../messages';\n\nexport interface ViewModeChangeButtonProps {\n    className?: string;\n    onViewModeChange?: (viewMode: ViewMode) => void;\n    viewMode: ViewMode;\n}\n\nconst ViewModeChangeButton = ({\n    className = '',\n    onViewModeChange = noop,\n    viewMode,\n    ...rest\n}: ViewModeChangeButtonProps) => {\n    const { formatMessage } = useIntl();\n    const isGridView = viewMode === VIEW_MODE_GRID;\n    const viewMessage = isGridView ? formatMessage(messages.listView) : formatMessage(messages.gridView);\n    const onClick = () => {\n        onViewModeChange(isGridView ? VIEW_MODE_LIST : VIEW_MODE_GRID);\n    };\n\n    return (\n        <Tooltip content={viewMessage}>\n            <IconButton\n                aria-label={viewMessage}\n                data-testid=\"view-mode-change-button\"\n                className={classNames('bdl-ViewModeChangeButton', className)}\n                icon={isGridView ? Hamburger : Grid}\n                onClick={onClick}\n                {...rest}\n            />\n        </Tooltip>\n    );\n};\n\nexport default ViewModeChangeButton;\n"],"mappings":";;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,OAAO,QAAQ,YAAY;AACpC,OAAOC,UAAU,MAAM,YAAY;AACnC,OAAOC,IAAI,MAAM,aAAa;AAC9B,SAASC,OAAO,EAAEC,UAAU,QAAQ,oBAAoB;AACxD,SAASC,IAAI,EAAEC,SAAS,QAAQ,sCAAsC;AAEtE,SAASC,cAAc,EAAEC,cAAc,QAAQ,oBAAoB;AAEnE,OAAO,6BAA6B;AAEpC,OAAOC,QAAQ,MAAM,aAAa;AAQlC,MAAMC,oBAAoB,GAAGC,IAAA,IAKI;EAAA,IALH;MAC1BC,SAAS,GAAG,EAAE;MACdC,gBAAgB,GAAGX,IAAI;MACvBY;IAEuB,CAAC,GAAAH,IAAA;IADrBI,IAAI,GAAAC,wBAAA,CAAAL,IAAA,EAAAM,SAAA;EAEP,MAAM;IAAEC;EAAc,CAAC,GAAGlB,OAAO,CAAC,CAAC;EACnC,MAAMmB,UAAU,GAAGL,QAAQ,KAAKP,cAAc;EAC9C,MAAMa,WAAW,GAAGD,UAAU,GAAGD,aAAa,CAACT,QAAQ,CAACY,QAAQ,CAAC,GAAGH,aAAa,CAACT,QAAQ,CAACa,QAAQ,CAAC;EACpG,MAAMC,OAAO,GAAGA,CAAA,KAAM;IAClBV,gBAAgB,CAACM,UAAU,GAAGX,cAAc,GAAGD,cAAc,CAAC;EAClE,CAAC;EAED,oBACIR,KAAA,CAAAyB,aAAA,CAACrB,OAAO;IAACsB,OAAO,EAAEL;EAAY,gBAC1BrB,KAAA,CAAAyB,aAAA,CAACpB,UAAU,EAAAsB,QAAA;IACP,cAAYN,WAAY;IACxB,eAAY,yBAAyB;IACrCR,SAAS,EAAEX,UAAU,CAAC,0BAA0B,EAAEW,SAAS,CAAE;IAC7De,IAAI,EAAER,UAAU,GAAGb,SAAS,GAAGD,IAAK;IACpCkB,OAAO,EAAEA;EAAQ,GACbR,IAAI,CACX,CACI,CAAC;AAElB,CAAC;AAED,eAAeL,oBAAoB","ignoreList":[]}