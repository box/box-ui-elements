{"version":3,"file":"PreviewDialog.js","names":["React","useIntl","Modal","cloneDeep","ContentPreview","TYPE_FILE","CLASS_MODAL_CONTENT_FULL_BLEED","CLASS_MODAL_OVERLAY","CLASS_MODAL","messages","PreviewDialog","apiHost","appElement","appHost","cache","canDownload","contentPreviewProps","currentCollection","isOpen","item","onCancel","onDownload","onPreview","parentElement","previewLibraryVersion","requestInterceptor","responseInterceptor","sharedLink","sharedLinkPassword","staticHost","staticPath","token","formatMessage","items","onLoad","data","files","filter","type","createElement","className","contentLabel","preview","onRequestClose","overlayClassName","parentSelector","portalClassName","_extends","autoFocus","collection","fileId","id","hasHeader","onClose"],"sources":["../../../../src/elements/common/preview-dialog/PreviewDialog.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useIntl } from 'react-intl';\nimport Modal from 'react-modal';\nimport cloneDeep from 'lodash/cloneDeep';\n\nimport { AxiosRequestConfig, AxiosResponse } from 'axios';\nimport ContentPreview, { ContentPreviewProps } from '../../content-preview';\nimport { TYPE_FILE, CLASS_MODAL_CONTENT_FULL_BLEED, CLASS_MODAL_OVERLAY, CLASS_MODAL } from '../../../constants';\nimport type { Token, BoxItem, Collection } from '../../../common/types/core';\nimport type APICache from '../../../utils/Cache';\n\nimport messages from '../messages';\n\nexport interface PreviewDialogProps {\n    apiHost: string;\n    appElement: HTMLElement;\n    appHost: string;\n    cache: APICache;\n    canDownload: boolean;\n    contentPreviewProps: ContentPreviewProps;\n    currentCollection: Collection;\n    isOpen: boolean;\n    isTouch: boolean;\n    item: BoxItem;\n    onCancel: () => void;\n    onDownload: (item: BoxItem) => void;\n    onPreview: (data: unknown) => void;\n    parentElement: HTMLElement;\n    previewLibraryVersion: string;\n    requestInterceptor?: (response: AxiosResponse) => void;\n    responseInterceptor?: (config: AxiosRequestConfig) => void;\n    sharedLink?: string;\n    sharedLinkPassword?: string;\n    staticHost: string;\n    staticPath: string;\n    token: Token;\n}\n\nconst PreviewDialog = ({\n    apiHost,\n    appElement,\n    appHost,\n    cache,\n    canDownload,\n    contentPreviewProps,\n    currentCollection,\n    isOpen,\n    item,\n    onCancel,\n    onDownload,\n    onPreview,\n    parentElement,\n    previewLibraryVersion,\n    requestInterceptor,\n    responseInterceptor,\n    sharedLink,\n    sharedLinkPassword,\n    staticHost,\n    staticPath,\n    token,\n}: PreviewDialogProps) => {\n    const { formatMessage } = useIntl();\n    const { items }: Collection = currentCollection;\n    const onLoad = (data: unknown): void => {\n        onPreview(cloneDeep(data));\n    };\n\n    if (!item || !items) {\n        return null;\n    }\n\n    const files: BoxItem[] = items.filter(({ type }) => type === TYPE_FILE);\n    return (\n        <Modal\n            appElement={appElement}\n            className={CLASS_MODAL_CONTENT_FULL_BLEED}\n            contentLabel={formatMessage(messages.preview)}\n            isOpen={isOpen}\n            onRequestClose={onCancel}\n            overlayClassName={CLASS_MODAL_OVERLAY}\n            parentSelector={() => parentElement}\n            portalClassName={CLASS_MODAL}\n        >\n            <ContentPreview\n                {...contentPreviewProps}\n                autoFocus\n                apiHost={apiHost}\n                appHost={appHost}\n                cache={cache}\n                canDownload={canDownload}\n                collection={files}\n                fileId={item.id}\n                hasHeader\n                onClose={onCancel}\n                onDownload={onDownload}\n                onLoad={onLoad}\n                previewLibraryVersion={previewLibraryVersion}\n                staticHost={staticHost}\n                staticPath={staticPath}\n                sharedLink={sharedLink}\n                sharedLinkPassword={sharedLinkPassword}\n                requestInterceptor={requestInterceptor}\n                responseInterceptor={responseInterceptor}\n                token={token}\n            />\n        </Modal>\n    );\n};\n\nexport default PreviewDialog;\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,OAAO,QAAQ,YAAY;AACpC,OAAOC,KAAK,MAAM,aAAa;AAC/B,OAAOC,SAAS,MAAM,kBAAkB;AAGxC,OAAOC,cAAc,MAA+B,uBAAuB;AAC3E,SAASC,SAAS,EAAEC,8BAA8B,EAAEC,mBAAmB,EAAEC,WAAW,QAAQ,oBAAoB;AAIhH,OAAOC,QAAQ,MAAM,aAAa;AA2BlC,MAAMC,aAAa,GAAGA,CAAC;EACnBC,OAAO;EACPC,UAAU;EACVC,OAAO;EACPC,KAAK;EACLC,WAAW;EACXC,mBAAmB;EACnBC,iBAAiB;EACjBC,MAAM;EACNC,IAAI;EACJC,QAAQ;EACRC,UAAU;EACVC,SAAS;EACTC,aAAa;EACbC,qBAAqB;EACrBC,kBAAkB;EAClBC,mBAAmB;EACnBC,UAAU;EACVC,kBAAkB;EAClBC,UAAU;EACVC,UAAU;EACVC;AACgB,CAAC,KAAK;EACtB,MAAM;IAAEC;EAAc,CAAC,GAAG/B,OAAO,CAAC,CAAC;EACnC,MAAM;IAAEgC;EAAkB,CAAC,GAAGhB,iBAAiB;EAC/C,MAAMiB,MAAM,GAAIC,IAAa,IAAW;IACpCb,SAAS,CAACnB,SAAS,CAACgC,IAAI,CAAC,CAAC;EAC9B,CAAC;EAED,IAAI,CAAChB,IAAI,IAAI,CAACc,KAAK,EAAE;IACjB,OAAO,IAAI;EACf;EAEA,MAAMG,KAAgB,GAAGH,KAAK,CAACI,MAAM,CAAC,CAAC;IAAEC;EAAK,CAAC,KAAKA,IAAI,KAAKjC,SAAS,CAAC;EACvE,oBACIL,KAAA,CAAAuC,aAAA,CAACrC,KAAK;IACFU,UAAU,EAAEA,UAAW;IACvB4B,SAAS,EAAElC,8BAA+B;IAC1CmC,YAAY,EAAET,aAAa,CAACvB,QAAQ,CAACiC,OAAO,CAAE;IAC9CxB,MAAM,EAAEA,MAAO;IACfyB,cAAc,EAAEvB,QAAS;IACzBwB,gBAAgB,EAAErC,mBAAoB;IACtCsC,cAAc,EAAEA,CAAA,KAAMtB,aAAc;IACpCuB,eAAe,EAAEtC;EAAY,gBAE7BR,KAAA,CAAAuC,aAAA,CAACnC,cAAc,EAAA2C,QAAA,KACP/B,mBAAmB;IACvBgC,SAAS;IACTrC,OAAO,EAAEA,OAAQ;IACjBE,OAAO,EAAEA,OAAQ;IACjBC,KAAK,EAAEA,KAAM;IACbC,WAAW,EAAEA,WAAY;IACzBkC,UAAU,EAAEb,KAAM;IAClBc,MAAM,EAAE/B,IAAI,CAACgC,EAAG;IAChBC,SAAS;IACTC,OAAO,EAAEjC,QAAS;IAClBC,UAAU,EAAEA,UAAW;IACvBa,MAAM,EAAEA,MAAO;IACfV,qBAAqB,EAAEA,qBAAsB;IAC7CK,UAAU,EAAEA,UAAW;IACvBC,UAAU,EAAEA,UAAW;IACvBH,UAAU,EAAEA,UAAW;IACvBC,kBAAkB,EAAEA,kBAAmB;IACvCH,kBAAkB,EAAEA,kBAAmB;IACvCC,mBAAmB,EAAEA,mBAAoB;IACzCK,KAAK,EAAEA;EAAM,EAChB,CACE,CAAC;AAEhB,CAAC;AAED,eAAerB,aAAa","ignoreList":[]}