{"version":3,"file":"Internationalize.js","names":["React","Children","IntlProvider","Internationalize","language","messages","children","shouldInternationalize","createElement","locale","only"],"sources":["../../../src/elements/common/Internationalize.js"],"sourcesContent":["/**\n * @flow\n * @file Wraps a component in an IntlProvider\n * @author Box\n */\n\nimport React, { Children } from 'react';\nimport { IntlProvider } from 'react-intl';\nimport type { StringMap } from '../../common/types/core';\n\ntype Props = {\n    children?: any,\n    language?: string,\n    messages?: StringMap,\n};\n\nconst Internationalize = ({ language, messages, children }: Props) => {\n    const shouldInternationalize: boolean = !!language && !!messages;\n\n    if (shouldInternationalize) {\n        return (\n            <IntlProvider locale={language} messages={messages}>\n                {children}\n            </IntlProvider>\n        );\n    }\n\n    return Children.only(children);\n};\n\nexport default Internationalize;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,YAAY,QAAQ,YAAY;AASzC,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,QAAQ;EAAEC;AAAgB,CAAC,KAAK;EAClE,MAAMC,sBAA+B,GAAG,CAAC,CAACH,QAAQ,IAAI,CAAC,CAACC,QAAQ;EAEhE,IAAIE,sBAAsB,EAAE;IACxB,oBACIP,KAAA,CAAAQ,aAAA,CAACN,YAAY;MAACO,MAAM,EAAEL,QAAS;MAACC,QAAQ,EAAEA;IAAS,GAC9CC,QACS,CAAC;EAEvB;EAEA,OAAOL,QAAQ,CAACS,IAAI,CAACJ,QAAQ,CAAC;AAClC,CAAC;AAED,eAAeH,gBAAgB","ignoreList":[]}