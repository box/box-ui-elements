{"version":3,"file":"withRouterAndRef.js","names":["React","Route","withRouterAndRef","Wrapped","WithRouterAndRef","forwardRef","props","ref","routerDisabled","createElement","_extends","routeProps","name","displayName"],"sources":["../../../../src/elements/common/routing/withRouterAndRef.js"],"sourcesContent":["// @flow\nimport * as React from 'react';\nimport { Route } from 'react-router-dom';\n\n// Basically a workaround for the fact that react-router's withRouter cannot forward ref's through\n// functional components. Use this instead to gain the benefits of withRouter but also ref forwarding\nexport default function withRouterAndRef(Wrapped: React.ComponentType<any>) {\n    const WithRouterAndRef = React.forwardRef<Object, React.Ref<any>>((props, ref) => {\n        const { routerDisabled } = props;\n        \n        // If router is disabled, return component directly without Route wrapper\n        if (routerDisabled) {\n            return <Wrapped ref={ref} {...props} />;\n        }\n        \n        // Default behavior: wrap with Route to get router props\n        return <Route>{routeProps => <Wrapped ref={ref} {...routeProps} {...props} />}</Route>;\n    });\n    const name = Wrapped.displayName || Wrapped.name || 'Component';\n    WithRouterAndRef.displayName = `withRouterAndRef(${name})`;\n    return WithRouterAndRef;\n}\n"],"mappings":";AACA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,KAAK,QAAQ,kBAAkB;;AAExC;AACA;AACA,eAAe,SAASC,gBAAgBA,CAACC,OAAiC,EAAE;EACxE,MAAMC,gBAAgB,gBAAGJ,KAAK,CAACK,UAAU,CAAyB,CAACC,KAAK,EAAEC,GAAG,KAAK;IAC9E,MAAM;MAAEC;IAAe,CAAC,GAAGF,KAAK;;IAEhC;IACA,IAAIE,cAAc,EAAE;MAChB,oBAAOR,KAAA,CAAAS,aAAA,CAACN,OAAO,EAAAO,QAAA;QAACH,GAAG,EAAEA;MAAI,GAAKD,KAAK,CAAG,CAAC;IAC3C;;IAEA;IACA,oBAAON,KAAA,CAAAS,aAAA,CAACR,KAAK,QAAEU,UAAU,iBAAIX,KAAA,CAAAS,aAAA,CAACN,OAAO,EAAAO,QAAA;MAACH,GAAG,EAAEA;IAAI,GAAKI,UAAU,EAAML,KAAK,CAAG,CAAS,CAAC;EAC1F,CAAC,CAAC;EACF,MAAMM,IAAI,GAAGT,OAAO,CAACU,WAAW,IAAIV,OAAO,CAACS,IAAI,IAAI,WAAW;EAC/DR,gBAAgB,CAACS,WAAW,GAAG,oBAAoBD,IAAI,GAAG;EAC1D,OAAOR,gBAAgB;AAC3B","ignoreList":[]}