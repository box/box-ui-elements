{"version":3,"file":"ItemGrid.js","names":["React","useIntl","noop","GridList","ItemDate","ItemOptions","ItemTypeIcon","isThumbnailAvailable","TYPE_FOLDER","TYPE_WEBLINK","VIEW_MODE_GRID","messages","ItemGrid","_ref","canPreview","gridColumnCount","isTouch","items","onItemClick","view","rest","_objectWithoutProperties","_excluded","formatMessage","createElement","gridView","className","style","gridTemplateColumns","map","item","id","name","thumbnailUrl","type","handleAction","Item","key","onAction","textValue","Thumbnail","alt","src","Header","Subtitle","_extends","viewMode"],"sources":["../../../../src/elements/common/item-grid/ItemGrid.tsx"],"sourcesContent":["import React from 'react';\nimport { useIntl } from 'react-intl';\nimport noop from 'lodash/noop';\n\nimport { GridList } from '@box/blueprint-web';\n\nimport { ItemDate, ItemOptions, ItemTypeIcon } from '../item';\nimport { isThumbnailAvailable } from '../utils';\n\nimport { TYPE_FOLDER, TYPE_WEBLINK, VIEW_MODE_GRID } from '../../../constants';\n\nimport messages from './messages';\n\nimport type { BoxItem, View } from '../../../common/types/core';\nimport type { ItemAction, ItemEventHandlers, ItemEventPermissions } from '../item';\n\nimport './ItemGrid.scss';\n\nexport interface ItemGridProps extends ItemEventHandlers, ItemEventPermissions {\n    gridColumnCount?: number;\n    isTouch?: boolean;\n    itemActions?: ItemAction[];\n    items: BoxItem[];\n    portalElement?: HTMLElement;\n    view: View;\n}\n\nconst ItemGrid = ({\n    canPreview,\n    gridColumnCount = 1,\n    isTouch,\n    items,\n    onItemClick = noop,\n    view,\n    ...rest\n}: ItemGridProps) => {\n    const { formatMessage } = useIntl();\n\n    return (\n        <GridList\n            aria-label={formatMessage(messages.gridView)}\n            className=\"be-ItemGrid\"\n            style={{ gridTemplateColumns: `repeat(${gridColumnCount}, minmax(188px, 1fr))` }}\n        >\n            {items.map(item => {\n                const { id, name, thumbnailUrl, type } = item;\n\n                const handleAction = () => {\n                    if (type === TYPE_FOLDER || (!isTouch && (type === TYPE_WEBLINK || canPreview))) {\n                        onItemClick(item);\n                    }\n                };\n\n                return (\n                    <GridList.Item\n                        key={id}\n                        className=\"be-ItemGrid-item\"\n                        id={id}\n                        onAction={handleAction}\n                        textValue={name}\n                    >\n                        <GridList.Thumbnail>\n                            {thumbnailUrl && isThumbnailAvailable(item) ? (\n                                <img alt={name} src={thumbnailUrl} />\n                            ) : (\n                                <div className=\"be-ItemGrid-thumbnailIcon\">\n                                    <ItemTypeIcon item={item} />\n                                </div>\n                            )}\n                        </GridList.Thumbnail>\n                        <GridList.Header>{name}</GridList.Header>\n                        <GridList.Subtitle>\n                            <ItemDate item={item} view={view} />\n                        </GridList.Subtitle>\n                        <ItemOptions canPreview={canPreview} item={item} viewMode={VIEW_MODE_GRID} {...rest} />\n                    </GridList.Item>\n                );\n            })}\n        </GridList>\n    );\n};\n\nexport default ItemGrid;\n"],"mappings":";;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,YAAY;AACpC,OAAOC,IAAI,MAAM,aAAa;AAE9B,SAASC,QAAQ,QAAQ,oBAAoB;AAE7C,SAASC,QAAQ,EAAEC,WAAW,EAAEC,YAAY,QAAQ,SAAS;AAC7D,SAASC,oBAAoB,QAAQ,UAAU;AAE/C,SAASC,WAAW,EAAEC,YAAY,EAAEC,cAAc,QAAQ,oBAAoB;AAE9E,OAAOC,QAAQ,MAAM,YAAY;AAKjC,OAAO,iBAAiB;AAWxB,MAAMC,QAAQ,GAAGC,IAAA,IAQI;EAAA,IARH;MACdC,UAAU;MACVC,eAAe,GAAG,CAAC;MACnBC,OAAO;MACPC,KAAK;MACLC,WAAW,GAAGhB,IAAI;MAClBiB;IAEW,CAAC,GAAAN,IAAA;IADTO,IAAI,GAAAC,wBAAA,CAAAR,IAAA,EAAAS,SAAA;EAEP,MAAM;IAAEC;EAAc,CAAC,GAAGtB,OAAO,CAAC,CAAC;EAEnC,oBACID,KAAA,CAAAwB,aAAA,CAACrB,QAAQ;IACL,cAAYoB,aAAa,CAACZ,QAAQ,CAACc,QAAQ,CAAE;IAC7CC,SAAS,EAAC,aAAa;IACvBC,KAAK,EAAE;MAAEC,mBAAmB,EAAE,UAAUb,eAAe;IAAwB;EAAE,GAEhFE,KAAK,CAACY,GAAG,CAACC,IAAI,IAAI;IACf,MAAM;MAAEC,EAAE;MAAEC,IAAI;MAAEC,YAAY;MAAEC;IAAK,CAAC,GAAGJ,IAAI;IAE7C,MAAMK,YAAY,GAAGA,CAAA,KAAM;MACvB,IAAID,IAAI,KAAK1B,WAAW,IAAK,CAACQ,OAAO,KAAKkB,IAAI,KAAKzB,YAAY,IAAIK,UAAU,CAAE,EAAE;QAC7EI,WAAW,CAACY,IAAI,CAAC;MACrB;IACJ,CAAC;IAED,oBACI9B,KAAA,CAAAwB,aAAA,CAACrB,QAAQ,CAACiC,IAAI;MACVC,GAAG,EAAEN,EAAG;MACRL,SAAS,EAAC,kBAAkB;MAC5BK,EAAE,EAAEA,EAAG;MACPO,QAAQ,EAAEH,YAAa;MACvBI,SAAS,EAAEP;IAAK,gBAEhBhC,KAAA,CAAAwB,aAAA,CAACrB,QAAQ,CAACqC,SAAS,QACdP,YAAY,IAAI1B,oBAAoB,CAACuB,IAAI,CAAC,gBACvC9B,KAAA,CAAAwB,aAAA;MAAKiB,GAAG,EAAET,IAAK;MAACU,GAAG,EAAET;IAAa,CAAE,CAAC,gBAErCjC,KAAA,CAAAwB,aAAA;MAAKE,SAAS,EAAC;IAA2B,gBACtC1B,KAAA,CAAAwB,aAAA,CAAClB,YAAY;MAACwB,IAAI,EAAEA;IAAK,CAAE,CAC1B,CAEO,CAAC,eACrB9B,KAAA,CAAAwB,aAAA,CAACrB,QAAQ,CAACwC,MAAM,QAAEX,IAAsB,CAAC,eACzChC,KAAA,CAAAwB,aAAA,CAACrB,QAAQ,CAACyC,QAAQ,qBACd5C,KAAA,CAAAwB,aAAA,CAACpB,QAAQ;MAAC0B,IAAI,EAAEA,IAAK;MAACX,IAAI,EAAEA;IAAK,CAAE,CACpB,CAAC,eACpBnB,KAAA,CAAAwB,aAAA,CAACnB,WAAW,EAAAwC,QAAA;MAAC/B,UAAU,EAAEA,UAAW;MAACgB,IAAI,EAAEA,IAAK;MAACgB,QAAQ,EAAEpC;IAAe,GAAKU,IAAI,CAAG,CAC3E,CAAC;EAExB,CAAC,CACK,CAAC;AAEnB,CAAC;AAED,eAAeR,QAAQ","ignoreList":[]}