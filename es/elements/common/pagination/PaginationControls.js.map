{"version":3,"file":"PaginationControls.js","names":["React","FormattedMessage","useIntl","Button","IconButton","Tooltip","PointerChevronLeft","PointerChevronRight","messages","PaginationControls","handleNextClick","handlePreviousClick","hasNextPage","hasPageEntryStatus","hasPreviousPage","isSmall","offset","pageSize","totalCount","formatMessage","startEntryIndex","endEntryIndex","Math","min","createElement","className","_extends","pageEntryStatus","values","content","previousPage","previousPageButton","disabled","icon","onClick","size","variant","nextPage","nextPageButton"],"sources":["../../../../src/elements/common/pagination/PaginationControls.tsx"],"sourcesContent":["import * as React from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { Button, IconButton, Tooltip } from '@box/blueprint-web';\nimport { PointerChevronLeft, PointerChevronRight } from '@box/blueprint-web-assets/icons/Fill';\n\nimport messages from '../messages';\n\nimport './Pagination.scss';\n\nexport interface PaginationControlsProps {\n    handleNextClick: () => void;\n    handlePreviousClick: () => void;\n    hasNextPage: boolean;\n    hasPageEntryStatus?: boolean;\n    hasPreviousPage: boolean;\n    isSmall: boolean;\n    offset?: number;\n    pageSize?: number;\n    totalCount?: number;\n}\n\nconst PaginationControls = ({\n    handleNextClick,\n    handlePreviousClick,\n    hasNextPage,\n    hasPageEntryStatus = true,\n    hasPreviousPage,\n    isSmall,\n    offset = 0,\n    pageSize = 0,\n    totalCount = 0,\n}: PaginationControlsProps) => {\n    const { formatMessage } = useIntl();\n    const startEntryIndex = offset + 1;\n    const endEntryIndex = Math.min(offset + pageSize, totalCount);\n\n    return (\n        <div className=\"bdl-Pagination\">\n            {hasPageEntryStatus && (\n                <FormattedMessage\n                    {...messages.pageEntryStatus}\n                    values={{ startEntryIndex, endEntryIndex, totalCount }}\n                />\n            )}\n            <div className=\"bdl-Pagination-buttons\">\n                <Tooltip content={formatMessage(messages.previousPage)}>\n                    {isSmall ? (\n                        <IconButton\n                            aria-label={formatMessage(messages.previousPageButton)}\n                            className=\"bdl-Pagination-iconButton\"\n                            disabled={!hasPreviousPage}\n                            icon={PointerChevronLeft}\n                            onClick={handlePreviousClick}\n                            size=\"large\"\n                        />\n                    ) : (\n                        <Button disabled={!hasPreviousPage} onClick={handlePreviousClick} variant=\"secondary\">\n                            {formatMessage(messages.previousPageButton)}\n                        </Button>\n                    )}\n                </Tooltip>\n                <Tooltip content={formatMessage(messages.nextPage)}>\n                    {isSmall ? (\n                        <IconButton\n                            aria-label={formatMessage(messages.nextPageButton)}\n                            className=\"bdl-Pagination-iconButton\"\n                            disabled={!hasNextPage}\n                            icon={PointerChevronRight}\n                            onClick={handleNextClick}\n                            size=\"large\"\n                        />\n                    ) : (\n                        <Button disabled={!hasNextPage} onClick={handleNextClick} variant=\"secondary\">\n                            {formatMessage(messages.nextPageButton)}\n                        </Button>\n                    )}\n                </Tooltip>\n            </div>\n        </div>\n    );\n};\n\nexport default PaginationControls;\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,gBAAgB,EAAEC,OAAO,QAAQ,YAAY;AACtD,SAASC,MAAM,EAAEC,UAAU,EAAEC,OAAO,QAAQ,oBAAoB;AAChE,SAASC,kBAAkB,EAAEC,mBAAmB,QAAQ,sCAAsC;AAE9F,OAAOC,QAAQ,MAAM,aAAa;AAElC,OAAO,mBAAmB;AAc1B,MAAMC,kBAAkB,GAAGA,CAAC;EACxBC,eAAe;EACfC,mBAAmB;EACnBC,WAAW;EACXC,kBAAkB,GAAG,IAAI;EACzBC,eAAe;EACfC,OAAO;EACPC,MAAM,GAAG,CAAC;EACVC,QAAQ,GAAG,CAAC;EACZC,UAAU,GAAG;AACQ,CAAC,KAAK;EAC3B,MAAM;IAAEC;EAAc,CAAC,GAAGjB,OAAO,CAAC,CAAC;EACnC,MAAMkB,eAAe,GAAGJ,MAAM,GAAG,CAAC;EAClC,MAAMK,aAAa,GAAGC,IAAI,CAACC,GAAG,CAACP,MAAM,GAAGC,QAAQ,EAAEC,UAAU,CAAC;EAE7D,oBACIlB,KAAA,CAAAwB,aAAA;IAAKC,SAAS,EAAC;EAAgB,GAC1BZ,kBAAkB,iBACfb,KAAA,CAAAwB,aAAA,CAACvB,gBAAgB,EAAAyB,QAAA,KACTlB,QAAQ,CAACmB,eAAe;IAC5BC,MAAM,EAAE;MAAER,eAAe;MAAEC,aAAa;MAAEH;IAAW;EAAE,EAC1D,CACJ,eACDlB,KAAA,CAAAwB,aAAA;IAAKC,SAAS,EAAC;EAAwB,gBACnCzB,KAAA,CAAAwB,aAAA,CAACnB,OAAO;IAACwB,OAAO,EAAEV,aAAa,CAACX,QAAQ,CAACsB,YAAY;EAAE,GAClDf,OAAO,gBACJf,KAAA,CAAAwB,aAAA,CAACpB,UAAU;IACP,cAAYe,aAAa,CAACX,QAAQ,CAACuB,kBAAkB,CAAE;IACvDN,SAAS,EAAC,2BAA2B;IACrCO,QAAQ,EAAE,CAAClB,eAAgB;IAC3BmB,IAAI,EAAE3B,kBAAmB;IACzB4B,OAAO,EAAEvB,mBAAoB;IAC7BwB,IAAI,EAAC;EAAO,CACf,CAAC,gBAEFnC,KAAA,CAAAwB,aAAA,CAACrB,MAAM;IAAC6B,QAAQ,EAAE,CAAClB,eAAgB;IAACoB,OAAO,EAAEvB,mBAAoB;IAACyB,OAAO,EAAC;EAAW,GAChFjB,aAAa,CAACX,QAAQ,CAACuB,kBAAkB,CACtC,CAEP,CAAC,eACV/B,KAAA,CAAAwB,aAAA,CAACnB,OAAO;IAACwB,OAAO,EAAEV,aAAa,CAACX,QAAQ,CAAC6B,QAAQ;EAAE,GAC9CtB,OAAO,gBACJf,KAAA,CAAAwB,aAAA,CAACpB,UAAU;IACP,cAAYe,aAAa,CAACX,QAAQ,CAAC8B,cAAc,CAAE;IACnDb,SAAS,EAAC,2BAA2B;IACrCO,QAAQ,EAAE,CAACpB,WAAY;IACvBqB,IAAI,EAAE1B,mBAAoB;IAC1B2B,OAAO,EAAExB,eAAgB;IACzByB,IAAI,EAAC;EAAO,CACf,CAAC,gBAEFnC,KAAA,CAAAwB,aAAA,CAACrB,MAAM;IAAC6B,QAAQ,EAAE,CAACpB,WAAY;IAACsB,OAAO,EAAExB,eAAgB;IAAC0B,OAAO,EAAC;EAAW,GACxEjB,aAAa,CAACX,QAAQ,CAAC8B,cAAc,CAClC,CAEP,CACR,CACJ,CAAC;AAEd,CAAC;AAED,eAAe7B,kBAAkB","ignoreList":[]}