{"version":3,"file":"Breadcrumbs.js","names":["React","useIntl","Breadcrumb","BreadcrumbDropdown","BreadcrumbDelimiter","DELIMITER_CARET","DEFAULT_ROOT","DELIMITER_SLASH","messages","filterCrumbs","rootId","crumbs","rootIndex","findIndex","crumb","id","slice","getBreadcrumb","isLast","onCrumbClick","delimiter","portalElement","Array","isArray","condensed","createElement","className","name","onClick","Breadcrumbs","isSmall","formatMessage","length","filteredCrumbs","defaultRootCrumb","find","rootBreadcrumb","undefined","lastBreadcrumb","secondLastBreadcrumb","moreBreadcrumbs","firstBreadcrumb"],"sources":["../../../../src/elements/common/breadcrumbs/Breadcrumbs.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useIntl } from 'react-intl';\n\nimport Breadcrumb from './Breadcrumb';\nimport BreadcrumbDropdown from './BreadcrumbDropdown';\nimport BreadcrumbDelimiter from './BreadcrumbDelimiter';\nimport type { Crumb, Delimiter } from '../../../common/types/core';\nimport { DELIMITER_CARET, DEFAULT_ROOT, DELIMITER_SLASH } from '../../../constants';\n\nimport './Breadcrumbs.scss';\n\nimport messages from '../messages';\n\nexport interface BreadcrumbsProps {\n    crumbs: Crumb[];\n    delimiter: Delimiter;\n    isSmall?: boolean;\n    onCrumbClick: (item: string) => void;\n    portalElement?: HTMLElement;\n    rootId: string;\n}\n\n/**\n * Filters out ancestors to root from the crumbs.\n * This is useful when the root is not All Files.\n *\n * @private\n * @param {string} rootId the root folder id\n * @param {Array} crumbs list of crumbs\n * @return {Array} crumbs\n */\nfunction filterCrumbs(rootId: string, crumbs: Crumb[]): Crumb[] {\n    const rootIndex = crumbs.findIndex((crumb: Crumb) => crumb.id === rootId);\n    return rootIndex === -1 ? crumbs : crumbs.slice(rootIndex);\n}\n\n/**\n * Creates an individual breadcrumb\n *\n * @private\n * @param {Object} crumb single crumb data\n * @param {boolean} isLast is this the last crumb\n * @return {Element}\n */\nfunction getBreadcrumb(\n    crumbs: Crumb | Crumb[],\n    isLast: boolean,\n    onCrumbClick: (item: string) => void,\n    delimiter: Delimiter,\n    portalElement?: HTMLElement,\n) {\n    if (Array.isArray(crumbs)) {\n        const condensed = delimiter !== DELIMITER_CARET;\n        return (\n            <span className=\"be-breadcrumb-more\">\n                <BreadcrumbDropdown crumbs={crumbs} onCrumbClick={onCrumbClick} portalElement={portalElement} />\n                <BreadcrumbDelimiter delimiter={condensed ? DELIMITER_SLASH : DELIMITER_CARET} />\n            </span>\n        );\n    }\n\n    const { id, name } = crumbs;\n    return <Breadcrumb delimiter={delimiter} isLast={isLast} name={name} onClick={() => onCrumbClick(id)} />;\n}\n\nconst Breadcrumbs = ({ crumbs, delimiter, isSmall = false, onCrumbClick, portalElement, rootId }: BreadcrumbsProps) => {\n    const { formatMessage } = useIntl();\n\n    if (!rootId || crumbs.length === 0) {\n        return <span />;\n    }\n\n    // The crumbs given may have ancestors higher than the root. We need to filter them out.\n    const filteredCrumbs = filterCrumbs(rootId, crumbs);\n\n    // Make sure \"All Files\" crumb is localized\n    const defaultRootCrumb = filteredCrumbs.find(({ id }) => id === DEFAULT_ROOT);\n    if (defaultRootCrumb) {\n        defaultRootCrumb.name = formatMessage(messages.rootBreadcrumb);\n    }\n\n    const { length } = filteredCrumbs;\n\n    // Always show the last/leaf breadcrumb.\n    const crumb = filteredCrumbs[length - 1];\n    const onClick = crumb.id ? () => onCrumbClick(crumb.id) : undefined;\n    const lastBreadcrumb = <Breadcrumb isLast name={crumb.name} onClick={onClick} />;\n\n    // Always show the second last/parent breadcrumb when there are at least 2 crumbs.\n    const secondLastBreadcrumb =\n        length > 1 ? getBreadcrumb(filteredCrumbs[length - 2], false, onCrumbClick, delimiter, portalElement) : null;\n\n    // Only show the more dropdown when there were at least 4 crumbs.\n    const moreBreadcrumbs =\n        length > 3\n            ? getBreadcrumb(filteredCrumbs.slice(1, length - 2), false, onCrumbClick, delimiter, portalElement)\n            : null;\n\n    // Only show the root breadcrumb when there are at least 3 crumbs.\n    const firstBreadcrumb =\n        length > 2 ? getBreadcrumb(filteredCrumbs[0], false, onCrumbClick, delimiter, portalElement) : null;\n\n    return (\n        <div className=\"be-breadcrumbs\">\n            {isSmall ? null : firstBreadcrumb}\n            {isSmall ? null : moreBreadcrumbs}\n            {secondLastBreadcrumb}\n            {lastBreadcrumb}\n        </div>\n    );\n};\n\nexport default Breadcrumbs;\n"],"mappings":"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","ignoreList":[]}