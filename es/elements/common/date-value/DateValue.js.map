{"version":3,"file":"DateValue.js","names":["useIntl","isToday","isYesterday","DEFAULT_DATE_FORMAT","defaultMessages","DateValue","date","format","messages","isRelative","formatDate","formatMessage","dateObject","Date","formattedDate","today","yesterday","default"],"sources":["../../../../src/elements/common/date-value/DateValue.tsx"],"sourcesContent":["import { MessageDescriptor, useIntl } from 'react-intl';\n\nimport { isToday, isYesterday } from '../../../utils/datetime';\n\nimport { DEFAULT_DATE_FORMAT } from '../constants';\n\nimport defaultMessages from './messages';\n\nexport interface DateValueProps {\n    messages?: {\n        default?: MessageDescriptor;\n        today?: MessageDescriptor;\n        yesterday?: MessageDescriptor;\n    };\n    date: string;\n    format?: Intl.DateTimeFormatOptions;\n    isRelative?: boolean;\n}\n\nconst DateValue = ({ date, format = DEFAULT_DATE_FORMAT, messages = {}, isRelative = false }: DateValueProps) => {\n    const { formatDate, formatMessage } = useIntl();\n\n    const dateObject = new Date(date);\n    const formattedDate = formatDate(dateObject, format);\n\n    if (isRelative && isToday(dateObject)) {\n        return formatMessage(messages.today ?? defaultMessages.today, { date: formattedDate });\n    }\n\n    if (isRelative && isYesterday(dateObject)) {\n        return formatMessage(messages.yesterday ?? defaultMessages.yesterday, { date: formattedDate });\n    }\n\n    return messages.default ? formatMessage(messages.default, { date: formattedDate }) : formattedDate;\n};\n\nexport default DateValue;\n"],"mappings":"AAAA,SAA4BA,OAAO,QAAQ,YAAY;AAEvD,SAASC,OAAO,EAAEC,WAAW,QAAQ,yBAAyB;AAE9D,SAASC,mBAAmB,QAAQ,cAAc;AAElD,OAAOC,eAAe,MAAM,YAAY;AAaxC,MAAMC,SAAS,GAAGA,CAAC;EAAEC,IAAI;EAAEC,MAAM,GAAGJ,mBAAmB;EAAEK,QAAQ,GAAG,CAAC,CAAC;EAAEC,UAAU,GAAG;AAAsB,CAAC,KAAK;EAC7G,MAAM;IAAEC,UAAU;IAAEC;EAAc,CAAC,GAAGX,OAAO,CAAC,CAAC;EAE/C,MAAMY,UAAU,GAAG,IAAIC,IAAI,CAACP,IAAI,CAAC;EACjC,MAAMQ,aAAa,GAAGJ,UAAU,CAACE,UAAU,EAAEL,MAAM,CAAC;EAEpD,IAAIE,UAAU,IAAIR,OAAO,CAACW,UAAU,CAAC,EAAE;IACnC,OAAOD,aAAa,CAACH,QAAQ,CAACO,KAAK,IAAIX,eAAe,CAACW,KAAK,EAAE;MAAET,IAAI,EAAEQ;IAAc,CAAC,CAAC;EAC1F;EAEA,IAAIL,UAAU,IAAIP,WAAW,CAACU,UAAU,CAAC,EAAE;IACvC,OAAOD,aAAa,CAACH,QAAQ,CAACQ,SAAS,IAAIZ,eAAe,CAACY,SAAS,EAAE;MAAEV,IAAI,EAAEQ;IAAc,CAAC,CAAC;EAClG;EAEA,OAAON,QAAQ,CAACS,OAAO,GAAGN,aAAa,CAACH,QAAQ,CAACS,OAAO,EAAE;IAAEX,IAAI,EAAEQ;EAAc,CAAC,CAAC,GAAGA,aAAa;AACtG,CAAC;AAED,eAAeT,SAAS","ignoreList":[]}