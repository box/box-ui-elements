{"version":3,"file":"withCurrentUser.js","names":["React","messages","withAPIContext","getBadItemError","withCurrentUser","WrappedComponent","ComponentWithCurrentUser","Component","constructor","props","_defineProperty","error","code","contextInfo","console","onError","user","shouldDestroy","api","file","getUsersAPI","getUser","id","fetchCurrentUserSuccessCallback","fetchCurrentUserErrorCallback","setState","currentUser","currentUserError","undefined","e","maskError","errorHeader","currentUserErrorHeaderMessage","errorSubHeader","defaultErrorMaskSubHeaderMessage","errorCallback","state","componentDidMount","fetchCurrentUser","render","createElement","_extends","displayName","name"],"sources":["../../../../src/elements/common/current-user/withCurrentUser.tsx"],"sourcesContent":["import * as React from 'react';\n// @ts-ignore: no ts definition\nimport messages from '../messages';\n// @ts-ignore: no ts definition\n// eslint-disable-next-line import/named\nimport { withAPIContext } from '../api-context';\n// @ts-ignore: no ts definition\nimport { getBadItemError } from '../../../utils/error';\n// @ts-ignore: no ts definition\n// eslint-disable-next-line import/named\nimport { ElementsXhrError, ErrorContextProps } from '../../../common/types/api';\n// @ts-ignore: no ts definition\n// eslint-disable-next-line import/named\nimport { Errors } from '../flowTypes';\n// @ts-ignore: no ts definition\n// eslint-disable-next-line import/named\nimport { User } from '../../../common/types/core';\n\nexport type WithCurrentUserProps = {\n    currentUser?: User;\n    currentUserError?: Errors;\n} & ErrorContextProps;\n\nexport type ComponentWithCurrentUser = {\n    errorCallback: (error: ElementsXhrError, code: string, contextInfo: Object) => void;\n    fetchCurrentUser: (user?: User, shouldDestroy?: boolean) => void;\n    fetchCurrentUserErrorCallback: (e: ElementsXhrError, code: string) => Errors;\n    fetchCurrentUserSuccessCallback: (currentUser: User) => void;\n};\n\nexport type CurrentUserState = {\n    currentUser?: User;\n    currentUserError?: Errors;\n};\n\nexport type WithCurrentUserComponent<P> = React.ComponentClass<P & WithCurrentUserProps>;\n\nexport default function withCurrentUser<P extends object>(\n    WrappedComponent: React.ComponentType<P & WithCurrentUserProps>,\n): WithCurrentUserComponent<P> {\n    class ComponentWithCurrentUser extends React.Component<P & WithCurrentUserProps, CurrentUserState> {\n        static displayName: string;\n\n        constructor(props: P & WithCurrentUserProps) {\n            super(props);\n            const { currentUser } = props;\n            this.state = { currentUser };\n        }\n\n        componentDidMount() {\n            const { currentUser } = this.state;\n            this.fetchCurrentUser(currentUser);\n        }\n\n        /**\n         * Network error callback\n         *\n         * @private\n         * @param {Error} error - Error object\n         * @param {Error} code - the code for the error\n         * @param {Object} contextInfo - the context info for the error\n         * @return {void}\n         */\n        errorCallback = (error: ElementsXhrError, code: string, contextInfo: Object = {}): void => {\n            // eslint-disable-next-line no-console\n            console.error(error);\n            this.props.onError(error, code, contextInfo);\n        };\n\n        /**\n         * Fetches a Users info\n         *\n         * @private\n         * @param {User} [user] - Box User. If missing, gets user that the current token was generated for.\n         * @param {boolean} shouldDestroy\n         * @return {void}\n         */\n        fetchCurrentUser = (user?: User, shouldDestroy = false): void => {\n            const { api, file } = this.props;\n\n            if (!file) {\n                throw getBadItemError();\n            }\n\n            if (typeof user === 'undefined') {\n                api.getUsersAPI(shouldDestroy).getUser(\n                    file.id,\n                    this.fetchCurrentUserSuccessCallback,\n                    this.fetchCurrentUserErrorCallback,\n                );\n            } else {\n                this.setState({ currentUser: user, currentUserError: undefined });\n            }\n        };\n\n        /**\n         * User fetch success callback\n         *\n         * @private\n         * @param {Object} currentUser - User info object\n         * @return {void}\n         */\n        fetchCurrentUserSuccessCallback = (currentUser: User): void => {\n            this.setState({ currentUser, currentUserError: undefined });\n        };\n\n        /**\n         * Handles a failed file user info fetch\n         *\n         * @private\n         * @param {ElementsXhrError} e - API error\n         * @return {void}\n         */\n        fetchCurrentUserErrorCallback = (e: ElementsXhrError, code: string) => {\n            this.setState({\n                currentUser: undefined,\n                currentUserError: {\n                    maskError: {\n                        errorHeader: messages.currentUserErrorHeaderMessage,\n                        errorSubHeader: messages.defaultErrorMaskSubHeaderMessage,\n                    },\n                },\n            });\n\n            this.errorCallback(e, code, {\n                error: e,\n            });\n        };\n\n        render() {\n            const { currentUser, currentUserError } = this.state;\n            return <WrappedComponent {...this.props} currentUser={currentUser} currentUserError={currentUserError} />;\n        }\n    }\n\n    const displayName = WrappedComponent.displayName || WrappedComponent.name || 'Component';\n    ComponentWithCurrentUser.displayName = `WithCurrentUser(${displayName})`;\n\n    return withAPIContext(ComponentWithCurrentUser);\n}\n"],"mappings":"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","ignoreList":[]}