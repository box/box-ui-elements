{"version":3,"file":"FileAccessStats.js","names":["Base","ERROR_CODE_FETCH_ACCESS_STATS","FileAccessStats","getUrl","id","Error","getBaseApiUrl","getFileAccessStats","successCallback","errorCallback","errorCode","get"],"sources":["../../src/api/FileAccessStats.js"],"sourcesContent":["/**\n * @flow\n * @file Helper for the box versions API\n * @author Box\n */\n\nimport Base from './Base';\nimport { ERROR_CODE_FETCH_ACCESS_STATS } from '../constants';\nimport type { ElementsErrorCallback } from '../common/types/api';\n\nclass FileAccessStats extends Base {\n    /**\n     * API URL for access stats\n     *\n     * @param {string} [id] - a box file id\n     * @return {string} base url for files\n     */\n    getUrl(id: string): string {\n        if (!id) {\n            throw new Error('Missing file id!');\n        }\n\n        return `${this.getBaseApiUrl()}/file_access_stats/${id}`;\n    }\n\n    /**\n     * API for fetching access stats on a file\n     *\n     * @param {string} id - a box file id\n     * @param {Function} successCallback - Success callback\n     * @param {Function} errorCallback - Error callback\n     * @return {void>}\n     */\n    getFileAccessStats(id: string, successCallback: Function, errorCallback: ElementsErrorCallback): void {\n        this.errorCode = ERROR_CODE_FETCH_ACCESS_STATS;\n        this.get({\n            id,\n            successCallback,\n            errorCallback,\n        });\n    }\n}\n\nexport default FileAccessStats;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,IAAI,MAAM,QAAQ;AACzB,SAASC,6BAA6B,QAAQ,cAAc;AAG5D,MAAMC,eAAe,SAASF,IAAI,CAAC;EAC/B;AACJ;AACA;AACA;AACA;AACA;EACIG,MAAMA,CAACC,EAAU,EAAU;IACvB,IAAI,CAACA,EAAE,EAAE;MACL,MAAM,IAAIC,KAAK,CAAC,kBAAkB,CAAC;IACvC;IAEA,OAAO,GAAG,IAAI,CAACC,aAAa,CAAC,CAAC,sBAAsBF,EAAE,EAAE;EAC5D;;EAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACIG,kBAAkBA,CAACH,EAAU,EAAEI,eAAyB,EAAEC,aAAoC,EAAQ;IAClG,IAAI,CAACC,SAAS,GAAGT,6BAA6B;IAC9C,IAAI,CAACU,GAAG,CAAC;MACLP,EAAE;MACFI,eAAe;MACfC;IACJ,CAAC,CAAC;EACN;AACJ;AAEA,eAAeP,eAAe","ignoreList":[]}