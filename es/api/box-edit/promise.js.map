{"version":3,"file":"promise.js","names":["promiseOne","promises","errors","errorCount","error","Promise","resolve","reject","pushErrors","idx","err","length","Error","forEach","promise","then","catch"],"sources":["../../../src/api/box-edit/promise.js"],"sourcesContent":["// @flow\n/**\n * NOTE: we don't use the NPM package directly because it has an unnecessary dependency on es6-promise + its commonjs format.\n * Returns the first promise in `promises` to successfully resolve.\n * If all fail, reject.\n * @see {@link https://github.com/jarofghosts/promise-one}\n */\nfunction promiseOne(promises: Array<Promise<any>>): Promise<any> {\n    const errors = [];\n    let errorCount = 0;\n    let error;\n\n    return new Promise((resolve, reject) => {\n        const pushErrors = idx => err => {\n            errors[idx] = err;\n            errorCount += 1;\n\n            if (errorCount === promises.length) {\n                error = new Error('no promises resolved');\n\n                reject(error);\n            }\n        };\n\n        promises.forEach((promise, idx) => {\n            promise.then(resolve).catch(pushErrors(idx));\n        });\n    });\n}\n\nexport default promiseOne;\n"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,UAAUA,CAACC,QAA6B,EAAgB;EAC7D,MAAMC,MAAM,GAAG,EAAE;EACjB,IAAIC,UAAU,GAAG,CAAC;EAClB,IAAIC,KAAK;EAET,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACpC,MAAMC,UAAU,GAAGC,GAAG,IAAIC,GAAG,IAAI;MAC7BR,MAAM,CAACO,GAAG,CAAC,GAAGC,GAAG;MACjBP,UAAU,IAAI,CAAC;MAEf,IAAIA,UAAU,KAAKF,QAAQ,CAACU,MAAM,EAAE;QAChCP,KAAK,GAAG,IAAIQ,KAAK,CAAC,sBAAsB,CAAC;QAEzCL,MAAM,CAACH,KAAK,CAAC;MACjB;IACJ,CAAC;IAEDH,QAAQ,CAACY,OAAO,CAAC,CAACC,OAAO,EAAEL,GAAG,KAAK;MAC/BK,OAAO,CAACC,IAAI,CAACT,OAAO,CAAC,CAACU,KAAK,CAACR,UAAU,CAACC,GAAG,CAAC,CAAC;IAChD,CAAC,CAAC;EACN,CAAC,CAAC;AACN;AAEA,eAAeT,UAAU","ignoreList":[]}