{"version":3,"file":"HTTPChannel.js","names":["LocalStore","Channel","get","getCookie","set","setCookie","GET","POST","YEAR_MS","DEFAULT_PRIMARY_PORT","DEFAULT_FALLBACK_PORT","CONTENT_TYPE_HEADER","CONTENT_TYPE_VALUE","STATUS_NOT_RUNNING","localStore","shouldUseFallbackFirst","getItem","saveFallbackPortPreference","setItem","clearFallbackPortPreference","removeItem","getPreferredPortOrdering","primary","fallback","HTTPChannel","constructor","appName","url","channelName","_defineProperty","method","xhr","XMLHttpRequest","window","open","ex","retryCounter","createCORSRequest","Error","timeoutMS","resolve","reject","comServerInstallationPromise","Promise","res","rej","resolveWithValidPort","port","currentPort","comServerInstallationPromiseRejected","portPreferences","primaryPort","fallbackPort","checkInstallStatus","then","bind","catch","err","data","request","setRequestHeader","onload","onerror","timeout","ontimeout","setTimeout","send","sendComServerRequest","response","JSON","parse","responseText","running","bgpId","getComChannel","generateId","comChannelName","aYearFromNow","Date","getTime","getComServerStatusInstallationPromise","browserToComServerTimeoutMS","comServerToApplicationTimeoutSec","results","response_type","message","time","replace","rand","Math","floor","random","toString","setComChannel","sendCount"],"sources":["../../../src/api/box-edit/HTTPChannel.js"],"sourcesContent":["// @flow\nimport LocalStore from '../../utils/LocalStore';\nimport Channel from './Channel';\nimport { get as getCookie, set as setCookie } from './cookies';\n\nconst GET = 'GET';\nconst POST = 'POST';\nconst YEAR_MS = 31536000000;\nconst DEFAULT_PRIMARY_PORT = 17223;\nconst DEFAULT_FALLBACK_PORT = 17224;\nconst CONTENT_TYPE_HEADER = 'Content-Type';\nconst CONTENT_TYPE_VALUE = 'text/plain; charset=UTF-8';\nconst STATUS_NOT_RUNNING = 'notrunning';\n\nconst localStore = new LocalStore();\n\nfunction shouldUseFallbackFirst() {\n    return !!localStore.getItem('comUseFallback');\n}\n\nfunction saveFallbackPortPreference() {\n    localStore.setItem('comUseFallback', 1);\n}\n\nfunction clearFallbackPortPreference() {\n    localStore.removeItem('comUseFallback');\n}\n\nfunction getPreferredPortOrdering() {\n    if (shouldUseFallbackFirst()) {\n        return {\n            primary: DEFAULT_FALLBACK_PORT,\n            fallback: DEFAULT_PRIMARY_PORT,\n        };\n    }\n\n    return {\n        primary: DEFAULT_PRIMARY_PORT,\n        fallback: DEFAULT_FALLBACK_PORT,\n    };\n}\n\nclass HTTPChannel extends Channel {\n    url: string;\n\n    channelName: string;\n\n    comChannelName: string;\n\n    comServerInstallationPromise: ?Promise<any>;\n\n    retryCounter: number;\n\n    sendCount: number;\n\n    currentPort: number;\n\n    comServerInstallationPromiseRejected: boolean;\n\n    window: any;\n\n    constructor(appName: string, url: string, channelName: string) {\n        super(appName);\n        this.url = url;\n        this.comChannelName = this.setComChannel(appName);\n        this.channelName = channelName;\n        this.comServerInstallationPromise = null;\n        this.comServerInstallationPromiseRejected = false;\n        this.retryCounter = 0;\n        this.sendCount = 0;\n        this.currentPort = getPreferredPortOrdering().primary;\n        this.window = window;\n    }\n\n    createCORSRequest = (method: string, url: string): XMLHttpRequest => {\n        let xhr;\n        try {\n            const { XMLHttpRequest } = this.window;\n            xhr = new XMLHttpRequest();\n            xhr.open(method, url, true);\n            return xhr;\n        } catch (ex) {\n            if (this.retryCounter < 3) {\n                this.retryCounter += 1;\n                return this.createCORSRequest(method, url);\n            }\n            throw new Error('could not create xhr');\n        }\n    };\n\n    getComServerStatusInstallationPromise = (timeoutMS: number): Promise<any> => {\n        let resolve;\n        let reject;\n        const comServerInstallationPromise = new Promise((res, rej) => {\n            resolve = res;\n            reject = rej;\n        });\n\n        const resolveWithValidPort = (port, res) => {\n            this.currentPort = port;\n\n            if (port === DEFAULT_PRIMARY_PORT) {\n                clearFallbackPortPreference();\n            } else {\n                saveFallbackPortPreference();\n            }\n\n            this.comServerInstallationPromiseRejected = false;\n            resolve(res);\n        };\n\n        const portPreferences = getPreferredPortOrdering();\n        const primaryPort = portPreferences.primary;\n        const fallbackPort = portPreferences.fallback;\n\n        // Try primary port first\n        this.checkInstallStatus(primaryPort, timeoutMS)\n            .then(resolveWithValidPort.bind(this, primaryPort))\n            .catch(err => {\n                // If com server returned that the port is available but the app is not running, reject\n                if (err === STATUS_NOT_RUNNING) {\n                    this.comServerInstallationPromiseRejected = true;\n                    reject();\n                    return;\n                }\n\n                // Only check secondary, if necessary, otherwise this throws a browser error in console\n                this.checkInstallStatus(fallbackPort, timeoutMS)\n                    .then(resolveWithValidPort.bind(this, fallbackPort))\n                    .catch(() => {\n                        this.comServerInstallationPromiseRejected = true;\n                        reject();\n                    });\n            });\n\n        return comServerInstallationPromise;\n    };\n\n    sendComServerRequest = (method: string, url: string, data: ?Object | string, timeoutMS: number): Promise<any> => {\n        return new Promise((resolve, reject) => {\n            try {\n                const request = this.createCORSRequest(method, url);\n\n                request.setRequestHeader(CONTENT_TYPE_HEADER, CONTENT_TYPE_VALUE);\n                request.onload = () => {\n                    resolve(request);\n                };\n                request.onerror = () => {\n                    reject(request);\n                };\n\n                if (timeoutMS > 0) {\n                    request.timeout = timeoutMS;\n                    request.ontimeout = () => {\n                        reject(request);\n                    };\n                }\n                setTimeout(() => {\n                    request.send(data);\n                }, 0);\n            } catch (err) {\n                reject();\n            }\n        });\n    };\n\n    checkInstallStatus = (port: number, timeoutMS: number): Promise<any> => {\n        return this.sendComServerRequest(GET, `${this.url}${port}/status`, null, timeoutMS).then(request => {\n            const response = JSON.parse(request.responseText);\n            if (response.running) {\n                return response;\n            }\n            this.comServerInstallationPromiseRejected = true;\n            throw new Error(STATUS_NOT_RUNNING);\n        });\n    };\n\n    getComChannel = (appName: string) => getCookie(`${appName}-bgp-id`);\n\n    setComChannel = (appName: string) => {\n        const bgpId = this.getComChannel(appName) || this.generateId();\n        const comChannelName = `bgp-${bgpId}`;\n        const aYearFromNow = new Date().getTime() + YEAR_MS;\n        setCookie(`${appName}-bgp-id`, bgpId, aYearFromNow);\n        setCookie(`bgp-${bgpId}`, 'generic', aYearFromNow);\n        return comChannelName;\n    };\n\n    getComServerStatus = (timeoutMS: number) => {\n        if (!this.comServerInstallationPromise || this.comServerInstallationPromiseRejected) {\n            // Null out the promise and fetch status again (handles the case where user installed box edit within the same page load)\n            this.comServerInstallationPromise = null;\n            this.comServerInstallationPromise = this.getComServerStatusInstallationPromise(timeoutMS);\n            return this.comServerInstallationPromise;\n        }\n        return this.comServerInstallationPromise;\n    };\n\n    sendRequest = (\n        data: Object | string,\n        browserToComServerTimeoutMS: number,\n        comServerToApplicationTimeoutSec: number,\n    ): Promise<any> => {\n        const url = `${this.url}${this.currentPort}/application_request?application=${this.appName}&com=${this.comChannelName}&timeout=${comServerToApplicationTimeoutSec}`;\n        return this.sendComServerRequest(POST, url, data, browserToComServerTimeoutMS).then(results => {\n            // TODO: does the error object need to be richer?\n            const response = JSON.parse(results.responseText);\n            if (response.response_type && response.response_type === 'error') {\n                throw new Error(`Communication error: ${response.message}`);\n            }\n            return response;\n        });\n    };\n\n    sendCommand = (\n        data: Object | string,\n        browserToComServerTimeoutMS: number,\n        comServerToApplicationTimeoutSec: number,\n    ): Promise<any> => {\n        const url = `${this.url}${this.currentPort}/application_command?application=${this.appName}&com=${this.comChannelName}&timeout=${comServerToApplicationTimeoutSec}`;\n        return this.sendComServerRequest(POST, url, data, browserToComServerTimeoutMS).then(results => {\n            return JSON.parse(results.responseText);\n        });\n    };\n\n    generateId = () => {\n        const time = new Date().getTime();\n        return 'xxxxxxxx'.replace(/x/g, () => {\n            // Generate random number between 1 and 16.\n            // Using time for added entropy.\n            const rand = Math.floor((time + Math.random() * 16) % 16);\n            // Convert number to a HEX\n            return rand.toString(16);\n        });\n    };\n}\n\nexport default HTTPChannel;\n"],"mappings":"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","ignoreList":[]}