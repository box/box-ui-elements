{"version":3,"file":"BoxEdit.js","names":["Browser","ComServerClient","CONSTANTS","TIMEOUT_MS","EXTENSION_CHECK_DEBOUNCE_TIME","extensionRequestTimeout","createRequestData","extensions","JSON","stringify","request_type","extension","createExecuteData","fileId","token","authCode","tokenScope","execData","auth_code","auth_token","browser_type","getName","command_type","file_id","toString","token_scope","isBlacklistedExtension","EXTENSION_BLACKLIST","uppercaseExt","toUpperCase","charAt","substr","BoxEditInstance","BoxEdit","constructor","extensionRequestQueue","Map","queueGetNativeAppNameFromLocal","has","queueItem","get","Error","promise","extensionRequest","appNameRequestPromise","Promise","resolve","reject","set","checkBoxEditAvailability","getBoxEditAvailability","client","BOX_EDIT_APP_NAME","getComServerStatus","canOpenWithBoxEdit","extensionToAppTuples","all","map","ext","appName","getAppForExtension","result","err","resultMap","forEach","tuple","openFile","fileID","executeDataAsString","data","sendCommand","applicationSupportRequest","setTimeout","processExtensionRequestQueue","copyQueue","value","key","push","clear","requestData","sendRequest","then","default_application_name","defaultApplicationName","Object","prototype","call","extensionAppObj","keys","decodeURIComponent","delete"],"sources":["../../../src/api/box-edit/BoxEdit.js"],"sourcesContent":["// @flow\n\nimport Browser from './BrowserUtils';\nimport ComServerClient from './ComServerClient';\nimport CONSTANTS from './constants';\n\ntype stringTuple = [string, string];\ntype extensionRequestQueueItem = {\n    promise: Promise<string>,\n    reject: Function,\n    resolve: Function,\n};\n\nconst TIMEOUT_MS = 5000;\nconst EXTENSION_CHECK_DEBOUNCE_TIME = 100;\n\nlet extensionRequestTimeout: ?TimeoutID;\n\nfunction createRequestData(extensions: Array<string>): string {\n    return JSON.stringify({\n        request_type: 'get_default_application',\n        extension: extensions,\n    });\n}\n\nfunction createExecuteData(fileId, token, authCode, tokenScope): string {\n    const execData = JSON.stringify({\n        auth_code: authCode,\n        auth_token: token,\n        browser_type: Browser.getName(),\n        command_type: 'launch_application',\n        file_id: fileId.toString(),\n        token_scope: tokenScope,\n    });\n    return execData;\n}\n\nfunction isBlacklistedExtension(extension): boolean {\n    const { EXTENSION_BLACKLIST } = CONSTANTS;\n    let uppercaseExt = extension.toUpperCase();\n\n    // if ext has a leading ., strip it\n    if (uppercaseExt.charAt(0) === '.') {\n        uppercaseExt = uppercaseExt.substr(1);\n    }\n\n    return uppercaseExt in EXTENSION_BLACKLIST;\n}\n\nlet BoxEditInstance = null;\n\nclass BoxEdit {\n    client: ComServerClient;\n\n    extensionRequestQueue: Map<string, extensionRequestQueueItem>;\n\n    constructor() {\n        if (!(BoxEditInstance instanceof BoxEdit)) {\n            BoxEditInstance = this;\n        }\n        this.extensionRequestQueue = new Map();\n        // eslint-disable-next-line no-constructor-return\n        return BoxEditInstance;\n    }\n\n    queueGetNativeAppNameFromLocal(extension: string): Promise<string> {\n        // There's already a pending or fulfilled request for the appname\n        if (this.extensionRequestQueue.has(extension)) {\n            const queueItem = this.extensionRequestQueue.get(extension);\n            if (!queueItem) {\n                throw new Error('Race condition re: queueGetNativeAppNameFromLocal');\n            }\n            return queueItem.promise;\n        }\n\n        const extensionRequest = {};\n        const appNameRequestPromise = new Promise((resolve, reject) => {\n            extensionRequest.resolve = resolve;\n            extensionRequest.reject = reject;\n        });\n        extensionRequest.promise = appNameRequestPromise;\n        this.extensionRequestQueue.set(extension, extensionRequest);\n\n        return appNameRequestPromise;\n    }\n\n    checkBoxEditAvailability(): Promise<any> {\n        return this.getBoxEditAvailability();\n    }\n\n    getBoxEditAvailability(): Promise<any> {\n        this.client = new ComServerClient(CONSTANTS.BOX_EDIT_APP_NAME);\n\n        return this.client.getComServerStatus();\n    }\n\n    async canOpenWithBoxEdit(extensions: string[]): Promise<any> {\n        const extensionToAppTuples: Array<stringTuple> = await Promise.all(\n            extensions.map(async ext => {\n                try {\n                    const appName = await this.getAppForExtension(ext);\n                    const result: stringTuple = [ext, appName];\n                    return result;\n                } catch (err) {\n                    const result: stringTuple = [ext, ''];\n                    return result;\n                }\n            }),\n        );\n\n        const resultMap: Map<string, string> = new Map();\n        extensionToAppTuples.forEach(tuple => resultMap.set(...tuple));\n\n        return Promise.resolve(resultMap);\n    }\n\n    openFile(fileID: string, token: Object): Promise<any> {\n        // @NOTE. canOpenWithBoxEdit, create token taken care of higher levels\n        // therefore not ported into React library\n\n        // TODO is token the right name?\n        const executeDataAsString = createExecuteData(\n            fileID,\n            token.data.token,\n            token.data.auth_code,\n            token.data.token_scope,\n        );\n\n        return this.client.sendCommand(executeDataAsString, TIMEOUT_MS);\n    }\n\n    getAppForExtension(extension: string): Promise<any> {\n        try {\n            if (isBlacklistedExtension(extension)) {\n                throw new Error('blacklisted');\n            }\n\n            const applicationSupportRequest = this.queueGetNativeAppNameFromLocal(extension);\n\n            if (!extensionRequestTimeout) {\n                extensionRequestTimeout = setTimeout(() => {\n                    this.processExtensionRequestQueue();\n                }, EXTENSION_CHECK_DEBOUNCE_TIME);\n            }\n\n            return applicationSupportRequest;\n        } catch (err) {\n            return Promise.reject();\n        }\n    }\n\n    processExtensionRequestQueue(): void {\n        const copyQueue = new Map();\n\n        const extensions = [];\n        this.extensionRequestQueue.forEach((value, key) => {\n            copyQueue.set(key, value);\n            extensions.push(key);\n        });\n\n        this.extensionRequestQueue.clear();\n\n        extensionRequestTimeout = null;\n\n        const requestData = createRequestData(extensions);\n\n        return this.client.sendRequest(requestData).then(data => {\n            if (data && data.default_application_name) {\n                let defaultApplicationName = data.default_application_name;\n\n                // @TODO. Reassess.\n                // This is an odd construction that may not be necessary.\n                if (Object.prototype.toString.call(defaultApplicationName) === '[object Object]') {\n                    defaultApplicationName = [defaultApplicationName];\n                }\n\n                defaultApplicationName.forEach(extensionAppObj => {\n                    const extension = Object.keys(extensionAppObj)[0];\n                    const appName = decodeURIComponent(extensionAppObj[extension]);\n                    if (appName) {\n                        const queueItem = copyQueue.get(extension);\n                        if (queueItem) {\n                            queueItem.resolve(appName);\n                            copyQueue.delete(extension);\n                        }\n                    }\n                });\n            }\n\n            // Reject all remaining items in the queue\n            extensions.forEach(extension => {\n                const queueItem = copyQueue.get(extension);\n                if (queueItem) {\n                    queueItem.reject();\n                }\n            });\n        });\n    }\n}\n\nexport default BoxEdit;\n"],"mappings":"AAEA,OAAOA,OAAO,MAAM,gBAAgB;AACpC,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,SAAS,MAAM,aAAa;AASnC,MAAMC,UAAU,GAAG,IAAI;AACvB,MAAMC,6BAA6B,GAAG,GAAG;AAEzC,IAAIC,uBAAmC;AAEvC,SAASC,iBAAiBA,CAACC,UAAyB,EAAU;EAC1D,OAAOC,IAAI,CAACC,SAAS,CAAC;IAClBC,YAAY,EAAE,yBAAyB;IACvCC,SAAS,EAAEJ;EACf,CAAC,CAAC;AACN;AAEA,SAASK,iBAAiBA,CAACC,MAAM,EAAEC,KAAK,EAAEC,QAAQ,EAAEC,UAAU,EAAU;EACpE,MAAMC,QAAQ,GAAGT,IAAI,CAACC,SAAS,CAAC;IAC5BS,SAAS,EAAEH,QAAQ;IACnBI,UAAU,EAAEL,KAAK;IACjBM,YAAY,EAAEpB,OAAO,CAACqB,OAAO,CAAC,CAAC;IAC/BC,YAAY,EAAE,oBAAoB;IAClCC,OAAO,EAAEV,MAAM,CAACW,QAAQ,CAAC,CAAC;IAC1BC,WAAW,EAAET;EACjB,CAAC,CAAC;EACF,OAAOC,QAAQ;AACnB;AAEA,SAASS,sBAAsBA,CAACf,SAAS,EAAW;EAChD,MAAM;IAAEgB;EAAoB,CAAC,GAAGzB,SAAS;EACzC,IAAI0B,YAAY,GAAGjB,SAAS,CAACkB,WAAW,CAAC,CAAC;;EAE1C;EACA,IAAID,YAAY,CAACE,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;IAChCF,YAAY,GAAGA,YAAY,CAACG,MAAM,CAAC,CAAC,CAAC;EACzC;EAEA,OAAOH,YAAY,IAAID,mBAAmB;AAC9C;AAEA,IAAIK,eAAe,GAAG,IAAI;AAE1B,MAAMC,OAAO,CAAC;EAKVC,WAAWA,CAAA,EAAG;IACV,IAAI,EAAEF,eAAe,YAAYC,OAAO,CAAC,EAAE;MACvCD,eAAe,GAAG,IAAI;IAC1B;IACA,IAAI,CAACG,qBAAqB,GAAG,IAAIC,GAAG,CAAC,CAAC;IACtC;IACA,OAAOJ,eAAe;EAC1B;EAEAK,8BAA8BA,CAAC1B,SAAiB,EAAmB;IAC/D;IACA,IAAI,IAAI,CAACwB,qBAAqB,CAACG,GAAG,CAAC3B,SAAS,CAAC,EAAE;MAC3C,MAAM4B,SAAS,GAAG,IAAI,CAACJ,qBAAqB,CAACK,GAAG,CAAC7B,SAAS,CAAC;MAC3D,IAAI,CAAC4B,SAAS,EAAE;QACZ,MAAM,IAAIE,KAAK,CAAC,mDAAmD,CAAC;MACxE;MACA,OAAOF,SAAS,CAACG,OAAO;IAC5B;IAEA,MAAMC,gBAAgB,GAAG,CAAC,CAAC;IAC3B,MAAMC,qBAAqB,GAAG,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MAC3DJ,gBAAgB,CAACG,OAAO,GAAGA,OAAO;MAClCH,gBAAgB,CAACI,MAAM,GAAGA,MAAM;IACpC,CAAC,CAAC;IACFJ,gBAAgB,CAACD,OAAO,GAAGE,qBAAqB;IAChD,IAAI,CAACT,qBAAqB,CAACa,GAAG,CAACrC,SAAS,EAAEgC,gBAAgB,CAAC;IAE3D,OAAOC,qBAAqB;EAChC;EAEAK,wBAAwBA,CAAA,EAAiB;IACrC,OAAO,IAAI,CAACC,sBAAsB,CAAC,CAAC;EACxC;EAEAA,sBAAsBA,CAAA,EAAiB;IACnC,IAAI,CAACC,MAAM,GAAG,IAAIlD,eAAe,CAACC,SAAS,CAACkD,iBAAiB,CAAC;IAE9D,OAAO,IAAI,CAACD,MAAM,CAACE,kBAAkB,CAAC,CAAC;EAC3C;EAEA,MAAMC,kBAAkBA,CAAC/C,UAAoB,EAAgB;IACzD,MAAMgD,oBAAwC,GAAG,MAAMV,OAAO,CAACW,GAAG,CAC9DjD,UAAU,CAACkD,GAAG,CAAC,MAAMC,GAAG,IAAI;MACxB,IAAI;QACA,MAAMC,OAAO,GAAG,MAAM,IAAI,CAACC,kBAAkB,CAACF,GAAG,CAAC;QAClD,MAAMG,MAAmB,GAAG,CAACH,GAAG,EAAEC,OAAO,CAAC;QAC1C,OAAOE,MAAM;MACjB,CAAC,CAAC,OAAOC,GAAG,EAAE;QACV,MAAMD,MAAmB,GAAG,CAACH,GAAG,EAAE,EAAE,CAAC;QACrC,OAAOG,MAAM;MACjB;IACJ,CAAC,CACL,CAAC;IAED,MAAME,SAA8B,GAAG,IAAI3B,GAAG,CAAC,CAAC;IAChDmB,oBAAoB,CAACS,OAAO,CAACC,KAAK,IAAIF,SAAS,CAACf,GAAG,CAAC,GAAGiB,KAAK,CAAC,CAAC;IAE9D,OAAOpB,OAAO,CAACC,OAAO,CAACiB,SAAS,CAAC;EACrC;EAEAG,QAAQA,CAACC,MAAc,EAAErD,KAAa,EAAgB;IAClD;IACA;;IAEA;IACA,MAAMsD,mBAAmB,GAAGxD,iBAAiB,CACzCuD,MAAM,EACNrD,KAAK,CAACuD,IAAI,CAACvD,KAAK,EAChBA,KAAK,CAACuD,IAAI,CAACnD,SAAS,EACpBJ,KAAK,CAACuD,IAAI,CAAC5C,WACf,CAAC;IAED,OAAO,IAAI,CAAC0B,MAAM,CAACmB,WAAW,CAACF,mBAAmB,EAAEjE,UAAU,CAAC;EACnE;EAEAyD,kBAAkBA,CAACjD,SAAiB,EAAgB;IAChD,IAAI;MACA,IAAIe,sBAAsB,CAACf,SAAS,CAAC,EAAE;QACnC,MAAM,IAAI8B,KAAK,CAAC,aAAa,CAAC;MAClC;MAEA,MAAM8B,yBAAyB,GAAG,IAAI,CAAClC,8BAA8B,CAAC1B,SAAS,CAAC;MAEhF,IAAI,CAACN,uBAAuB,EAAE;QAC1BA,uBAAuB,GAAGmE,UAAU,CAAC,MAAM;UACvC,IAAI,CAACC,4BAA4B,CAAC,CAAC;QACvC,CAAC,EAAErE,6BAA6B,CAAC;MACrC;MAEA,OAAOmE,yBAAyB;IACpC,CAAC,CAAC,OAAOT,GAAG,EAAE;MACV,OAAOjB,OAAO,CAACE,MAAM,CAAC,CAAC;IAC3B;EACJ;EAEA0B,4BAA4BA,CAAA,EAAS;IACjC,MAAMC,SAAS,GAAG,IAAItC,GAAG,CAAC,CAAC;IAE3B,MAAM7B,UAAU,GAAG,EAAE;IACrB,IAAI,CAAC4B,qBAAqB,CAAC6B,OAAO,CAAC,CAACW,KAAK,EAAEC,GAAG,KAAK;MAC/CF,SAAS,CAAC1B,GAAG,CAAC4B,GAAG,EAAED,KAAK,CAAC;MACzBpE,UAAU,CAACsE,IAAI,CAACD,GAAG,CAAC;IACxB,CAAC,CAAC;IAEF,IAAI,CAACzC,qBAAqB,CAAC2C,KAAK,CAAC,CAAC;IAElCzE,uBAAuB,GAAG,IAAI;IAE9B,MAAM0E,WAAW,GAAGzE,iBAAiB,CAACC,UAAU,CAAC;IAEjD,OAAO,IAAI,CAAC4C,MAAM,CAAC6B,WAAW,CAACD,WAAW,CAAC,CAACE,IAAI,CAACZ,IAAI,IAAI;MACrD,IAAIA,IAAI,IAAIA,IAAI,CAACa,wBAAwB,EAAE;QACvC,IAAIC,sBAAsB,GAAGd,IAAI,CAACa,wBAAwB;;QAE1D;QACA;QACA,IAAIE,MAAM,CAACC,SAAS,CAAC7D,QAAQ,CAAC8D,IAAI,CAACH,sBAAsB,CAAC,KAAK,iBAAiB,EAAE;UAC9EA,sBAAsB,GAAG,CAACA,sBAAsB,CAAC;QACrD;QAEAA,sBAAsB,CAACnB,OAAO,CAACuB,eAAe,IAAI;UAC9C,MAAM5E,SAAS,GAAGyE,MAAM,CAACI,IAAI,CAACD,eAAe,CAAC,CAAC,CAAC,CAAC;UACjD,MAAM5B,OAAO,GAAG8B,kBAAkB,CAACF,eAAe,CAAC5E,SAAS,CAAC,CAAC;UAC9D,IAAIgD,OAAO,EAAE;YACT,MAAMpB,SAAS,GAAGmC,SAAS,CAAClC,GAAG,CAAC7B,SAAS,CAAC;YAC1C,IAAI4B,SAAS,EAAE;cACXA,SAAS,CAACO,OAAO,CAACa,OAAO,CAAC;cAC1Be,SAAS,CAACgB,MAAM,CAAC/E,SAAS,CAAC;YAC/B;UACJ;QACJ,CAAC,CAAC;MACN;;MAEA;MACAJ,UAAU,CAACyD,OAAO,CAACrD,SAAS,IAAI;QAC5B,MAAM4B,SAAS,GAAGmC,SAAS,CAAClC,GAAG,CAAC7B,SAAS,CAAC;QAC1C,IAAI4B,SAAS,EAAE;UACXA,SAAS,CAACQ,MAAM,CAAC,CAAC;QACtB;MACJ,CAAC,CAAC;IACN,CAAC,CAAC;EACN;AACJ;AAEA,eAAed,OAAO","ignoreList":[]}