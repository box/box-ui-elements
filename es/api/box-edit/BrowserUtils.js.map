{"version":3,"file":"BrowserUtils.js","names":["BROWSER_CONSTANTS","CHROME","EDGE","FIREFOX","MAC","SAFARI","IE","MIN_FOLDER_UPLOAD_CHROME","MIN_FOLDER_UPLOAD_EDGE","MIN_FOLDER_UPLOAD_FIREFOX","MIN_FOLDER_UPLOAD_SAFARI","BROWSER_DATA","key","subString","identity","versionSearch","OS_DATA","device","getBrowserData","navigator","data","dataString","versionSearchString","i","len","length","indexOf","getBrowserVersion","index","versionArr","substring","match","isActiveXObjectEnabledForIE","objectID","objectIdentifier","enabled","window","ActiveXObject","exception","BrowserUtils","constructor","browserData","osInfo","browser","version","userAgent","appVersion","OS","getName","getVersion","isMinBrowser","name","minVersion","toLowerCase","parseFloat","isSafari","isFirefox","isChrome","isIE","isEdge","isIEAndSpecificBrowserPluginSupported","pluginID","BrowserInstance"],"sources":["../../../src/api/box-edit/BrowserUtils.js"],"sourcesContent":["// @flow\nconst BROWSER_CONSTANTS = {\n    CHROME: 'Chrome',\n    EDGE: 'Edge',\n    FIREFOX: 'Firefox',\n    MAC: 'Mac',\n    SAFARI: 'Safari',\n    IE: 'Explorer',\n};\nconst MIN_FOLDER_UPLOAD_CHROME = '21';\nconst MIN_FOLDER_UPLOAD_EDGE = '14';\nconst MIN_FOLDER_UPLOAD_FIREFOX = '50';\nconst MIN_FOLDER_UPLOAD_SAFARI = '11.1';\n\nconst BROWSER_DATA = [\n    {\n        key: 'userAgent',\n        subString: BROWSER_CONSTANTS.EDGE,\n        identity: BROWSER_CONSTANTS.EDGE,\n    },\n    {\n        key: 'userAgent',\n        subString: BROWSER_CONSTANTS.CHROME,\n        identity: BROWSER_CONSTANTS.CHROME,\n    },\n    {\n        // Chrome on iOS uses criOS to indicate that it is a chrome browser\n        // https://developer.chrome.com/multidevice/user-agent\n        key: 'userAgent',\n        subString: 'criOS',\n        identity: BROWSER_CONSTANTS.CHROME,\n        versionSearch: 'criOS',\n    },\n    {\n        key: 'vendor',\n        subString: 'Apple',\n        identity: BROWSER_CONSTANTS.SAFARI,\n        versionSearch: 'Version',\n    },\n    {\n        key: 'userAgent',\n        subString: BROWSER_CONSTANTS.FIREFOX,\n        identity: BROWSER_CONSTANTS.FIREFOX,\n    },\n    {\n        key: 'userAgent',\n        subString: 'MSIE',\n        identity: 'Explorer',\n        versionSearch: 'MSIE',\n    },\n    {\n        key: 'userAgent',\n        subString: 'Trident',\n        identity: 'Explorer',\n        versionSearch: 'rv',\n    },\n    {\n        key: 'userAgent',\n        subString: 'Gecko',\n        identity: 'Mozilla',\n        versionSearch: 'rv',\n    },\n];\n\nconst OS_DATA = [\n    {\n        key: 'platform',\n        subString: 'Win',\n        identity: 'Windows',\n    },\n    {\n        key: 'userAgent',\n        subString: 'iPod',\n        identity: 'iOS',\n        device: 'iPod',\n    },\n    {\n        key: 'userAgent',\n        subString: 'iPhone',\n        identity: 'iOS',\n        device: 'iPhone',\n    },\n    {\n        key: 'userAgent',\n        subString: 'iPad',\n        identity: 'iOS',\n        device: 'iPad',\n    },\n    {\n        // Make sure Mac is lower than iPhone/iPad/iPod in the array order as iOS user agent also includes 'Mac'\n        key: 'platform',\n        subString: BROWSER_CONSTANTS.MAC,\n        identity: BROWSER_CONSTANTS.MAC,\n    },\n    {\n        // Make sure Android is above Linux, as Android user agent also includes 'Linux'\n        key: 'userAgent',\n        subString: 'Android',\n        identity: 'Android',\n    },\n    {\n        key: 'platform',\n        subString: 'Linux',\n        identity: 'Linux',\n    },\n];\n\n/**\n * Searches for the identity of the browser in the provided array or known browsers.\n * @param {Object} navigator\n * @param {Array} data - list of supported browsers, filled with browser information\n * to determine the current browser identity\n * @returns {Object} - the identity of the browser\n */\nfunction getBrowserData(navigator: Object, data: Array<Object>) {\n    let dataString;\n    let identity = null;\n    let device = null;\n    let versionSearchString = '';\n\n    for (let i = 0, len = data.length; i < len; i += 1) {\n        dataString = navigator[data[i].key];\n        versionSearchString = data[i].versionSearch || data[i].identity;\n\n        if (dataString && dataString.indexOf(data[i].subString) !== -1) {\n            /* eslint-disable prefer-destructuring */\n            identity = data[i].identity;\n            device = data[i].device;\n            /* eslint-enable prefer-destructuring */\n            break;\n        }\n    }\n\n    return {\n        identity,\n        device,\n        versionSearchString,\n    };\n}\n\n/**\n * searches for the version of the browser in the provided array\n *\n * @param {string} dataString - a string that contains the version information,\n *        either navigator.userAgent or navigator.appVersion\n * @param {string} versionSearchString\n * @returns {string} - empty if versionString does not exist in dataString, else the version as a string.\n */\nfunction getBrowserVersion(dataString: string, versionSearchString: string) {\n    const index = dataString.indexOf(versionSearchString);\n    if (index === -1) {\n        return '';\n    }\n\n    // This regex grabs the decimal value of the version\n    const versionArr = dataString.substring(index + versionSearchString.length + 1).match(/[0-9]+(?:\\.[0-9]*)?/);\n    if (versionArr && versionArr.length) {\n        return versionArr[0];\n    }\n    return '';\n}\n\n/**\n * @param {string} [objectID] optional. Defaults to a random string, just to validate\n * the ability of creating the ActiveXObject on the browser\n * @returns {boolean}\n */\nfunction isActiveXObjectEnabledForIE(objectID: string) {\n    const objectIdentifier = objectID || 'htmlfile';\n    let enabled = false;\n\n    try {\n        if ('ActiveXObject' in window) {\n            const { ActiveXObject } = window;\n            enabled = !!new ActiveXObject(objectIdentifier);\n        }\n    } catch (exception) {\n        enabled = false;\n    }\n\n    return enabled;\n}\n\nclass BrowserUtils {\n    browser: string;\n\n    version: string;\n\n    OS: string;\n\n    device: string;\n\n    constructor() {\n        const { navigator } = window;\n        const browserData = getBrowserData(navigator, BROWSER_DATA);\n        const osInfo = getBrowserData(navigator, OS_DATA);\n\n        this.browser = browserData.identity || 'unknown';\n        this.version =\n            getBrowserVersion(navigator.userAgent, browserData.versionSearchString) ||\n            getBrowserVersion(navigator.appVersion, browserData.versionSearchString) ||\n            'unknown';\n        this.OS = osInfo.identity || 'unknown';\n        this.device = osInfo.device || 'unknown';\n    }\n\n    /**\n     * Returns the browser name as a string if recognized, else 'an unknown browser'.\n     * @returns {string} browser name\n     */\n    getName() {\n        return this.browser;\n    }\n\n    /**\n     * Returns the browser version as a string.\n     * @returns {string} version string\n     */\n    getVersion() {\n        return this.version;\n    }\n\n    /**\n     * Returns true if the browser is of type 'type' and the version of browser >= 'min' parameter.\n     *\n     * @param {string} name - The name of the browser\n     * @param {string | number} minVersion - The version number to be equal to or greater than.\n     * @returns {boolean} - true if current browser name is same as passed in and\n     *     browser version greater or equal to minVersion\n     */\n    isMinBrowser(name: string, minVersion: string | number): boolean {\n        return this.browser.toLowerCase() === name.toLowerCase() && parseFloat(this.version) >= parseFloat(minVersion);\n    }\n\n    /**\n     * Returns true if the current browser is Safari.\n     * @returns {boolean} True if browser is Safari\n     */\n    isSafari() {\n        return this.browser === BROWSER_CONSTANTS.SAFARI;\n    }\n\n    /**\n     * Returns true if the current browser is firefox.\n     * @returns {boolean}\n     */\n    isFirefox() {\n        return this.browser === BROWSER_CONSTANTS.FIREFOX;\n    }\n\n    /**\n     * Returns true if the current browser is chrome.\n     * @returns {boolean}\n     */\n    isChrome() {\n        return this.browser === BROWSER_CONSTANTS.CHROME;\n    }\n\n    /**\n     * Returns true if the current browser is internet explorer (ie).\n     * @returns {boolean}\n     */\n    isIE() {\n        return this.browser === BROWSER_CONSTANTS.IE;\n    }\n\n    /**\n     * Returns true if the current browser is microsoft edge.\n     * @returns {boolean}\n     */\n    isEdge() {\n        return this.browser === BROWSER_CONSTANTS.EDGE;\n    }\n\n    /**\n     * Checks if a specific plugin is supported and does not realy on\n     * plugins generally being supported.\n     * @param {string} [pluginID] optional. The specific plugin which should be checked for support\n     * @returns {boolean}\n     */\n    isIEAndSpecificBrowserPluginSupported(pluginID: string) {\n        return this.isIE() && isActiveXObjectEnabledForIE(pluginID);\n    }\n}\n\nconst BrowserInstance = new BrowserUtils();\n\n// for testing only\nexport {\n    BrowserUtils,\n    BROWSER_CONSTANTS,\n    MIN_FOLDER_UPLOAD_CHROME,\n    MIN_FOLDER_UPLOAD_EDGE,\n    MIN_FOLDER_UPLOAD_FIREFOX,\n    MIN_FOLDER_UPLOAD_SAFARI,\n};\n// export as a singleton\nexport default BrowserInstance;\n"],"mappings":"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","ignoreList":[]}