{"version":3,"file":"FileCollaborators.js","names":["MarkerBasedAPI","DEFAULT_MAX_COLLABORATORS","FileCollaborators","constructor","args","_defineProperty","data","isDestroyed","successCallback","collaboratorSelectorItems","entries","map","collab","item","type","email","login","id","name","_objectSpread","fileId","errorCallback","searchStr","includeGroups","trim","getFileCollaborators","filter_term","include_groups","include_uploader_collabs","getUrl","Error","getBaseApiUrl","requestData","limit","markerGet"],"sources":["../../src/api/FileCollaborators.js"],"sourcesContent":["/**\n * @flow\n * @file Helper for the box collaborators API\n * @author Box\n */\n\nimport MarkerBasedAPI from './MarkerBasedAPI';\nimport { DEFAULT_MAX_COLLABORATORS } from '../constants';\nimport type { ElementsErrorCallback } from '../common/types/api';\nimport type { SelectorItem, SelectorItems, UserMini, GroupMini } from '../common/types/core';\n\ntype CollaboratorsAPIResponse = {\n    entries: Array<GroupMini | UserMini>,\n    next_marker: ?string,\n};\n\nclass FileCollaborators extends MarkerBasedAPI {\n    /**\n     * API URL for comments\n     *\n     * @param {string} [id] - a box file id\n     * @return {string} base url for files\n     */\n    getUrl(id: string): string {\n        if (!id) {\n            throw new Error('Missing file id!');\n        }\n\n        return `${this.getBaseApiUrl()}/files/${id}/collaborators`;\n    }\n\n    /**\n     * Transform result of API response\n     *\n     * @param {Object} data the response data\n     */\n    successHandler = (data: CollaboratorsAPIResponse): void => {\n        if (this.isDestroyed() || typeof this.successCallback !== 'function') {\n            return;\n        }\n\n        // Transform into \"mention selector\" format:\n        const collaboratorSelectorItems: SelectorItems<UserMini | GroupMini> = data.entries.map(\n            (collab: UserMini | GroupMini) => {\n                let item;\n                if (collab.type === 'group') {\n                    item = collab; // flow needs assignment to happen after type refinement\n                } else {\n                    item = collab;\n                    item.email = item.login; // transform user object\n                }\n                return {\n                    id: collab.id,\n                    name: collab.name,\n                    item,\n                };\n            },\n        );\n\n        this.successCallback({ ...data, entries: collaboratorSelectorItems });\n    };\n\n    /**\n     * API for fetching collaborators on a file\n     *\n     * @param {string} id - the file id\n     * @param {Function} successCallback - the success callback\n     * @param {Function} errorCallback - the error callback\n     * @param {Object} requestData - any additional request data\n     * @param {number} limit - the max number of collaborators to return\n     * @returns {void}\n     */\n    getFileCollaborators(\n        id: string,\n        successCallback: ({ entries: Array<SelectorItem<UserMini | GroupMini>>, next_marker: ?string }) => void,\n        errorCallback: ElementsErrorCallback,\n        requestData: Object = {},\n        limit: number = DEFAULT_MAX_COLLABORATORS,\n    ): void {\n        // NOTE: successCallback is called with the result\n        // of this.successHandler, not the API response!\n        this.markerGet({\n            id,\n            limit,\n            successCallback,\n            errorCallback,\n            requestData,\n        });\n    }\n\n    /**\n     * Fetches file @mention's\n     *\n     * @oaram {string} fileId\n     * @param {Function} successCallback\n     * @param {Function} errorCallback\n     * @param {string} searchStr - Search string to filter file collaborators by\n     * @param {Object} [options]\n     * @param {boolean} [options.includeGroups] - return groups as well as users\n     * @return {void}\n     */\n    getCollaboratorsWithQuery = (\n        fileId: string,\n        successCallback: ({ entries: Array<SelectorItem<UserMini | GroupMini>>, next_marker: ?string }) => void,\n        errorCallback: ElementsErrorCallback,\n        searchStr: string,\n        { includeGroups = false }: { includeGroups: boolean } = {},\n    ) => {\n        // Do not fetch without filter\n        if (!searchStr || searchStr.trim() === '') {\n            return;\n        }\n\n        this.getFileCollaborators(fileId, successCallback, errorCallback, {\n            filter_term: searchStr,\n            include_groups: includeGroups,\n            include_uploader_collabs: false,\n        });\n    };\n}\n\nexport default FileCollaborators;\n"],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,cAAc,MAAM,kBAAkB;AAC7C,SAASC,yBAAyB,QAAQ,cAAc;AASxD,MAAMC,iBAAiB,SAASF,cAAc,CAAC;EAAAG,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAe3C;AACJ;AACA;AACA;AACA;IAJIC,eAAA,yBAKkBC,IAA8B,IAAW;MACvD,IAAI,IAAI,CAACC,WAAW,CAAC,CAAC,IAAI,OAAO,IAAI,CAACC,eAAe,KAAK,UAAU,EAAE;QAClE;MACJ;;MAEA;MACA,MAAMC,yBAA8D,GAAGH,IAAI,CAACI,OAAO,CAACC,GAAG,CAClFC,MAA4B,IAAK;QAC9B,IAAIC,IAAI;QACR,IAAID,MAAM,CAACE,IAAI,KAAK,OAAO,EAAE;UACzBD,IAAI,GAAGD,MAAM,CAAC,CAAC;QACnB,CAAC,MAAM;UACHC,IAAI,GAAGD,MAAM;UACbC,IAAI,CAACE,KAAK,GAAGF,IAAI,CAACG,KAAK,CAAC,CAAC;QAC7B;QACA,OAAO;UACHC,EAAE,EAAEL,MAAM,CAACK,EAAE;UACbC,IAAI,EAAEN,MAAM,CAACM,IAAI;UACjBL;QACJ,CAAC;MACL,CACJ,CAAC;MAED,IAAI,CAACL,eAAe,CAAAW,aAAA,CAAAA,aAAA,KAAMb,IAAI;QAAEI,OAAO,EAAED;MAAyB,EAAE,CAAC;IACzE,CAAC;IA8BD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAVIJ,eAAA,oCAW4B,CACxBe,MAAc,EACdZ,eAAuG,EACvGa,aAAoC,EACpCC,SAAiB,EACjB;MAAEC,aAAa,GAAG;IAAkC,CAAC,GAAG,CAAC,CAAC,KACzD;MACD;MACA,IAAI,CAACD,SAAS,IAAIA,SAAS,CAACE,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;QACvC;MACJ;MAEA,IAAI,CAACC,oBAAoB,CAACL,MAAM,EAAEZ,eAAe,EAAEa,aAAa,EAAE;QAC9DK,WAAW,EAAEJ,SAAS;QACtBK,cAAc,EAAEJ,aAAa;QAC7BK,wBAAwB,EAAE;MAC9B,CAAC,CAAC;IACN,CAAC;EAAA;EArGD;AACJ;AACA;AACA;AACA;AACA;EACIC,MAAMA,CAACZ,EAAU,EAAU;IACvB,IAAI,CAACA,EAAE,EAAE;MACL,MAAM,IAAIa,KAAK,CAAC,kBAAkB,CAAC;IACvC;IAEA,OAAO,GAAG,IAAI,CAACC,aAAa,CAAC,CAAC,UAAUd,EAAE,gBAAgB;EAC9D;EAiCA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIQ,oBAAoBA,CAChBR,EAAU,EACVT,eAAuG,EACvGa,aAAoC,EACpCW,WAAmB,GAAG,CAAC,CAAC,EACxBC,KAAa,GAAGhC,yBAAyB,EACrC;IACJ;IACA;IACA,IAAI,CAACiC,SAAS,CAAC;MACXjB,EAAE;MACFgB,KAAK;MACLzB,eAAe;MACfa,aAAa;MACbW;IACJ,CAAC,CAAC;EACN;AA+BJ;AAEA,eAAe9B,iBAAiB","ignoreList":[]}