{"version":3,"file":"utils.js","names":["getAbortError","FIELD_TYPE_TAXONOMY","formatComment","comment","formattedComment","_objectSpread","tagged_message","message","replies","length","map","formatMetadataFieldValue","field","value","type","Array","isArray","option","id","displayValue","displayName","handleOnAbort","xhr","abort"],"sources":["../../src/api/utils.js"],"sourcesContent":["/**\n * @flow\n * @file Utils for the box APIs\n * @author Box\n */\n\nimport type Xhr from '../utils/Xhr';\nimport type { Comment } from '../common/types/feed';\nimport { getAbortError } from '../utils/error';\nimport type { MetadataTemplateField, MetadataFieldValue } from '../common/types/metadata';\nimport { FIELD_TYPE_TAXONOMY } from '../features/metadata-instance-fields/constants';\n\n/**\n * Formats comment data (including replies) for use in components.\n *\n * @param {Comment} comment - An individual comment entry from the API\n * @return {Comment} Updated comment\n */\nconst formatComment = (comment: Comment): Comment => {\n    const formattedComment = {\n        ...comment,\n        tagged_message: comment.message,\n    };\n\n    if (comment.replies && comment.replies.length) {\n        formattedComment.replies = comment.replies.map(formatComment);\n    }\n\n    return formattedComment;\n};\n\nconst formatMetadataFieldValue = (field: MetadataTemplateField, value: MetadataFieldValue): MetadataFieldValue => {\n    if (field.type === FIELD_TYPE_TAXONOMY && Array.isArray(value)) {\n        return value.map((option: { id: string, displayName: string }) => ({\n            value: option.id,\n            displayValue: option.displayName,\n        }));\n    }\n\n    return value;\n};\n\nconst handleOnAbort = (xhr: Xhr) => {\n    xhr.abort();\n\n    throw getAbortError();\n};\n\nexport { formatComment, formatMetadataFieldValue, handleOnAbort };\n"],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;;AAIA,SAASA,aAAa,QAAQ,gBAAgB;AAE9C,SAASC,mBAAmB,QAAQ,gDAAgD;;AAEpF;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,aAAa,GAAIC,OAAgB,IAAc;EACjD,MAAMC,gBAAgB,GAAAC,aAAA,CAAAA,aAAA,KACfF,OAAO;IACVG,cAAc,EAAEH,OAAO,CAACI;EAAO,EAClC;EAED,IAAIJ,OAAO,CAACK,OAAO,IAAIL,OAAO,CAACK,OAAO,CAACC,MAAM,EAAE;IAC3CL,gBAAgB,CAACI,OAAO,GAAGL,OAAO,CAACK,OAAO,CAACE,GAAG,CAACR,aAAa,CAAC;EACjE;EAEA,OAAOE,gBAAgB;AAC3B,CAAC;AAED,MAAMO,wBAAwB,GAAGA,CAACC,KAA4B,EAAEC,KAAyB,KAAyB;EAC9G,IAAID,KAAK,CAACE,IAAI,KAAKb,mBAAmB,IAAIc,KAAK,CAACC,OAAO,CAACH,KAAK,CAAC,EAAE;IAC5D,OAAOA,KAAK,CAACH,GAAG,CAAEO,MAA2C,KAAM;MAC/DJ,KAAK,EAAEI,MAAM,CAACC,EAAE;MAChBC,YAAY,EAAEF,MAAM,CAACG;IACzB,CAAC,CAAC,CAAC;EACP;EAEA,OAAOP,KAAK;AAChB,CAAC;AAED,MAAMQ,aAAa,GAAIC,GAAQ,IAAK;EAChCA,GAAG,CAACC,KAAK,CAAC,CAAC;EAEX,MAAMvB,aAAa,CAAC,CAAC;AACzB,CAAC;AAED,SAASE,aAAa,EAAES,wBAAwB,EAAEU,aAAa","ignoreList":[]}