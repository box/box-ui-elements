{"version":3,"file":"PlainUpload.js","names":["noop","digest","getFileLastModifiedAsISONoMSIfPossible","BaseUpload","CONTENT_MD5_HEADER","PlainUpload","constructor","args","_defineProperty","data","entries","isDestroyed","successCallback","event","progressCallback","uploadUrl","upload_url","getBaseUploadUrl","fileId","replace","attributes","JSON","stringify","name","fileName","parent","id","folderId","description","fileDescription","content_modified_at","file","options","url","headers","successHandler","uploadSuccessHandler","errorHandler","preflightErrorHandler","progressHandler","uploadProgressHandler","sha1","computeSHA1","xhr","uploadFile","upload","errorCallback","conflictCallback","overwrite","makePreflightRequest","cancel","clearTimeout","retryTimeout","destroy","reader","window","FileReader","buffer","readFile","hashBuffer","hashArray","Array","from","Uint8Array","map","b","toString","slice","join","e"],"sources":["../../../src/api/uploads/PlainUpload.js"],"sourcesContent":["/**\n * @flow\n * @file Helper for the plain Box Upload API\n * @author Box\n */\n\nimport noop from 'lodash/noop';\nimport { digest } from '../../utils/webcrypto';\nimport { getFileLastModifiedAsISONoMSIfPossible } from '../../utils/uploads';\nimport BaseUpload from './BaseUpload';\nimport type { BoxItem } from '../../common/types/core';\n\nconst CONTENT_MD5_HEADER = 'Content-MD5';\n\nclass PlainUpload extends BaseUpload {\n    successCallback: Function;\n\n    progressCallback: Function;\n\n    /**\n     * Handles an upload success response\n     *\n     * @param {Object} data - Upload success data\n     * @return {void}\n     */\n    uploadSuccessHandler = ({ data }: Object): void => {\n        const { entries }: { entries: BoxItem[] } = data;\n        if (this.isDestroyed()) {\n            return;\n        }\n\n        if (typeof this.successCallback === 'function') {\n            // Response entries are the successfully created Box File objects\n            this.successCallback(entries);\n        }\n    };\n\n    /**\n     * Handles an upload progress event\n     *\n     * @param {Object} event - Progress event\n     * @return {void}\n     */\n    uploadProgressHandler = (event: ProgressEvent): void => {\n        if (this.isDestroyed()) {\n            return;\n        }\n\n        if (typeof this.progressCallback === 'function') {\n            this.progressCallback(event);\n        }\n    };\n\n    /**\n     * Uploads a file. If a file ID is supplied, use the Upload File\n     * Version API to replace the file.\n     *\n     * @param {Object} - Request options\n     * @param {boolean} [options.url] - Upload URL to use\n     * @return {Promise} Async function promise\n     */\n    preflightSuccessHandler = async ({ data }: { data: { upload_url?: string } }): Promise<any> => {\n        if (this.isDestroyed()) {\n            return;\n        }\n\n        // Use provided upload URL if passed in, otherwise construct\n        let uploadUrl = data.upload_url;\n        if (!uploadUrl) {\n            uploadUrl = `${this.getBaseUploadUrl()}/files/content`;\n\n            if (this.fileId) {\n                uploadUrl = uploadUrl.replace('content', `${this.fileId}/content`);\n            }\n        }\n\n        const attributes = JSON.stringify({\n            name: this.fileName,\n            parent: { id: this.folderId },\n            description: this.fileDescription,\n            content_modified_at: getFileLastModifiedAsISONoMSIfPossible(this.file),\n        });\n\n        const options = {\n            url: uploadUrl,\n            data: {\n                attributes,\n                file: this.file,\n            },\n            headers: {},\n            successHandler: this.uploadSuccessHandler,\n            errorHandler: this.preflightErrorHandler,\n            progressHandler: this.uploadProgressHandler,\n        };\n\n        // Calculate SHA1 for file consistency check\n        const sha1 = await this.computeSHA1(this.file);\n        if (sha1) {\n            options.headers = {\n                [CONTENT_MD5_HEADER]: sha1,\n            };\n        }\n\n        this.xhr.uploadFile(options);\n    };\n\n    /**\n     * Uploads a file. If there is a conflict and overwrite is true, replace the file.\n     * Otherwise, re-upload with a different name.\n     *\n     * @param {Object} options - Upload options\n     * @param {string} options.folderId - untyped folder id\n     * @param {string} [options.fileId] - Untyped file id (e.g. no \"file_\" prefix)\n     * @param {File} options.file - File blob object\n     * @param {Function} [options.successCallback] - Function to call with response\n     * @param {Function} [options.errorCallback] - Function to call with errors\n     * @param {Function} [options.progressCallback] - Function to call with progress\n     * @param {Function} [options.conflictCallback] - Function to call on conflicting file names\n     * @param {boolean|'error'} [overwrite] - Should upload overwrite file with same name, throw error, or call conflictCallback to rename\n     * @return {void}\n     */\n    upload({\n        folderId,\n        fileId,\n        file,\n        fileDescription,\n        successCallback = noop,\n        errorCallback = noop,\n        progressCallback = noop,\n        conflictCallback,\n        // $FlowFixMe\n        overwrite = true,\n    }: {\n        conflictCallback?: Function,\n        errorCallback: Function,\n        file: File,\n        fileDescription: ?string,\n        fileId: ?string,\n        folderId: string,\n        overwrite: boolean | 'error',\n        progressCallback: Function,\n        successCallback: Function,\n    }): void {\n        if (this.isDestroyed()) {\n            return;\n        }\n\n        // Save references\n        this.folderId = folderId;\n        this.fileId = fileId;\n        this.file = file;\n        this.fileDescription = fileDescription;\n        this.fileName = this.file.name;\n        this.successCallback = successCallback;\n        this.errorCallback = errorCallback;\n        this.progressCallback = progressCallback;\n        this.overwrite = overwrite;\n        this.conflictCallback = conflictCallback;\n\n        this.makePreflightRequest();\n    }\n\n    /**\n     * Cancels upload of a file.\n     *\n     * @return {void}\n     */\n    cancel() {\n        if (this.isDestroyed()) {\n            return;\n        }\n\n        clearTimeout(this.retryTimeout);\n        this.destroy();\n    }\n\n    /**\n     * Calculates SHA1 of a file\n     *\n     * @param {File} file\n     * @return {Promise} Promise that resolves with SHA1 digest\n     */\n    async computeSHA1(file: File): Promise<any> {\n        let sha1 = '';\n\n        try {\n            // Adapted from https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/digest\n            const reader = new window.FileReader();\n            const { buffer } = await this.readFile(reader, file);\n            const hashBuffer: ArrayBuffer = await digest('SHA-1', buffer);\n            const hashArray = Array.from(new Uint8Array(hashBuffer));\n            sha1 = hashArray.map(b => `00${b.toString(16)}`.slice(-2)).join('');\n        } catch (e) {\n            // Return empty sha1 if hashing fails\n        }\n\n        return sha1;\n    }\n}\n\nexport default PlainUpload;\n"],"mappings":"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","ignoreList":[]}