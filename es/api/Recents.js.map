{"version":3,"file":"Recents.js","names":["flatten","getBadItemError","FOLDER_FIELDS_TO_FETCH","Base","FileAPI","FolderAPI","WebLinkAPI","DEFAULT_ROOT","CACHE_PREFIX_RECENTS","ERROR_CODE_FETCH_RECENTS","FIELD_DATE","FIELD_REPRESENTATIONS","X_REP_HINT_HEADER_DIMENSIONS_DEFAULT","SORT_DESC","Recents","constructor","args","_defineProperty","data","isDestroyed","entries","order","by","direction","items","forEach","item","interacted_at","path_collection","shouldInclude","id","findIndex","crumb","push","_extends","flattenedItems","options","getCache","set","key","item_collection","finish","error","errorCallback","errorCode","getCacheKey","getUrl","getBaseApiUrl","cache","recents","get","Array","isArray","collection","map","percentLoaded","sortBy","sortDirection","successCallback","recentsRequest","Promise","reject","fields","requestFields","xhr","url","params","toString","headers","includes","then","recentsSuccessHandler","catch","recentsErrorHandler","forceFetch","unset","has"],"sources":["../../src/api/Recents.js"],"sourcesContent":["/**\n * @flow\n * @file Helper for the box recents api\n * @author Box\n */\n\nimport flatten from '../utils/flatten';\nimport { getBadItemError } from '../utils/error';\nimport { FOLDER_FIELDS_TO_FETCH } from '../utils/fields';\nimport Base from './Base';\nimport FileAPI from './File';\nimport FolderAPI from './Folder';\nimport WebLinkAPI from './WebLink';\nimport {\n    DEFAULT_ROOT,\n    CACHE_PREFIX_RECENTS,\n    ERROR_CODE_FETCH_RECENTS,\n    FIELD_DATE,\n    FIELD_REPRESENTATIONS,\n    X_REP_HINT_HEADER_DIMENSIONS_DEFAULT,\n    SORT_DESC,\n} from '../constants';\nimport type { RequestOptions, ElementsErrorCallback } from '../common/types/api';\nimport type {\n    BoxItem,\n    FlattenedBoxItem,\n    FlattenedBoxItemCollection,\n    Collection,\n    Recent,\n    RecentCollection,\n    Crumb,\n} from '../common/types/core';\nimport type APICache from '../utils/Cache';\n\nclass Recents extends Base {\n    /**\n     * @property {string}\n     */\n    key: string;\n\n    /**\n     * @property {string}\n     */\n    id: string;\n\n    /**\n     * @property {Function}\n     */\n    successCallback: Function;\n\n    /**\n     * @property {Function}\n     */\n    errorCallback: ElementsErrorCallback;\n\n    /**\n     * Creates a key for the cache\n     *\n     * @param {string} id folder id\n     * @return {string} key\n     */\n    getCacheKey(id: string): string {\n        return `${CACHE_PREFIX_RECENTS}${id}`;\n    }\n\n    /**\n     * URL for recents api\n     *\n     * @return {string} base url for files\n     */\n    getUrl(): string {\n        return `${this.getBaseApiUrl()}/recent_items`;\n    }\n\n    /**\n     * Returns the results\n     *\n     * @return {void}\n     */\n    finish(): void {\n        if (this.isDestroyed()) {\n            return;\n        }\n\n        const cache: APICache = this.getCache();\n        const recents: FlattenedBoxItem = cache.get(this.key);\n        const { item_collection }: FlattenedBoxItem = recents;\n        if (!item_collection) {\n            throw getBadItemError();\n        }\n\n        const { entries }: FlattenedBoxItemCollection = item_collection;\n        if (!Array.isArray(entries)) {\n            throw getBadItemError();\n        }\n\n        const collection: Collection = {\n            id: this.id,\n            items: entries.map((key: string) => cache.get(key)),\n            percentLoaded: 100,\n            sortBy: FIELD_DATE, // Results are always sorted by date\n            sortDirection: SORT_DESC, // Results are always sorted descending\n        };\n        this.successCallback(collection);\n    }\n\n    /**\n     * Handles the folder Recents response\n     *\n     * @param {Object} response\n     * @return {void}\n     */\n    recentsSuccessHandler = ({ data }: { data: RecentCollection }): void => {\n        if (this.isDestroyed()) {\n            return;\n        }\n\n        const {\n            entries,\n            order: { by, direction },\n        }: RecentCollection = data;\n        const items: BoxItem[] = [];\n\n        entries.forEach(({ item, interacted_at }: Recent) => {\n            const { path_collection }: BoxItem = item;\n            const shouldInclude =\n                this.id === DEFAULT_ROOT ||\n                (!!path_collection && path_collection.entries.findIndex((crumb: Crumb) => crumb.id === this.id) !== -1);\n            if (shouldInclude) {\n                items.push(Object.assign(item, { interacted_at }));\n            }\n        });\n\n        const flattenedItems: string[] = flatten(\n            items,\n            new FolderAPI(this.options),\n            new FileAPI(this.options),\n            new WebLinkAPI(this.options),\n        );\n\n        this.getCache().set(this.key, {\n            item_collection: {\n                entries: flattenedItems,\n                order: [\n                    {\n                        by,\n                        direction,\n                    },\n                ],\n            },\n        });\n        this.finish();\n    };\n\n    /**\n     * Handles the Recents error\n     *\n     * @param {Error} error fetch error\n     * @return {void}\n     */\n    recentsErrorHandler = (error: Error): void => {\n        if (this.isDestroyed()) {\n            return;\n        }\n\n        this.errorCallback(error, this.errorCode);\n    };\n\n    /**\n     * Does the network request\n     *\n     * @param {RequestOptions} options - options for request\n     * @return {Promise}\n     */\n    recentsRequest(options: RequestOptions = {}): Promise<void> {\n        if (this.isDestroyed()) {\n            return Promise.reject();\n        }\n\n        const { fields } = options;\n        const requestFields = fields || FOLDER_FIELDS_TO_FETCH;\n\n        this.errorCode = ERROR_CODE_FETCH_RECENTS;\n        return this.xhr\n            .get({\n                url: this.getUrl(),\n                params: {\n                    fields: requestFields.toString(),\n                },\n                headers: requestFields.includes(FIELD_REPRESENTATIONS)\n                    ? {\n                          'X-Rep-Hints': X_REP_HINT_HEADER_DIMENSIONS_DEFAULT,\n                      }\n                    : {},\n            })\n            .then(this.recentsSuccessHandler)\n            .catch(this.recentsErrorHandler);\n    }\n\n    /**\n     * Gets recent files\n     *\n     * @param {string} id - parent folder id\n     * @param {Function} successCallback - Function to call with results\n     * @param {Function} errorCallback - Function to call with errors\n     * @param {boolean|void} [options.forceFetch] - Bypasses the cache\n     * @return {void}\n     */\n    recents(id: string, successCallback: Function, errorCallback: ElementsErrorCallback, options: Object = {}): void {\n        if (this.isDestroyed()) {\n            return;\n        }\n\n        // Save references\n        this.id = id;\n        this.successCallback = successCallback;\n        this.errorCallback = errorCallback;\n\n        const cache: APICache = this.getCache();\n        this.key = this.getCacheKey(this.id);\n\n        // Clear the cache if needed\n        if (options.forceFetch) {\n            cache.unset(this.key);\n        }\n\n        // Return the Cache value if it exists\n        if (cache.has(this.key)) {\n            this.finish();\n            return;\n        }\n\n        // Make the XHR request\n        this.recentsRequest(options);\n    }\n}\n\nexport default Recents;\n"],"mappings":"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","ignoreList":[]}