{"version":3,"file":"Base.js","names":["noop","Xhr","Cache","UploadsReachability","getTypedFileId","getBadItemError","getBadPermissionsError","DEFAULT_HOSTNAME_API","DEFAULT_HOSTNAME_UPLOAD","HTTP_GET","HTTP_POST","HTTP_PUT","HTTP_DELETE","Base","constructor","options","_defineProperty","data","isDestroyed","successCallback","error","errorCallback","response","errorCode","cache","apiHost","uploadHost","_objectSpread","xhr","destroyed","consoleLog","window","console","log","consoleError","uploadsReachability","destroy","abort","checkApiCallValidity","permissionToCheck","permissions","id","permission","getBaseApiUrl","suffix","endsWith","getBaseUploadUrl","getCache","getUrl","Error","format","entry","get","requestData","url","apiUrl","makeRequest","post","put","delete","method","xhrMethod","toLowerCase","bind","successHandler","errorHandler"],"sources":["../../src/api/Base.js"],"sourcesContent":["/**\n * @flow\n * @file Base class with utility methods for API calls\n * @author Box\n */\n\nimport noop from 'lodash/noop';\nimport Xhr from '../utils/Xhr';\nimport Cache from '../utils/Cache';\nimport UploadsReachability from './uploads/UploadsReachability';\nimport { getTypedFileId } from '../utils/file';\nimport { getBadItemError, getBadPermissionsError } from '../utils/error';\nimport {\n    DEFAULT_HOSTNAME_API,\n    DEFAULT_HOSTNAME_UPLOAD,\n    HTTP_GET,\n    HTTP_POST,\n    HTTP_PUT,\n    HTTP_DELETE,\n} from '../constants';\nimport type { ElementsErrorCallback, APIOptions } from '../common/types/api';\nimport type APICache from '../utils/Cache';\n\nclass Base {\n    /**\n     * @property {Cache}\n     */\n    cache: APICache;\n\n    /**\n     * @property {boolean}\n     */\n    destroyed: boolean;\n\n    /**\n     * @property {Xhr}\n     */\n    xhr: Xhr;\n\n    /**\n     * @property {string}\n     */\n    apiHost: string;\n\n    /**\n     * @property {string}\n     */\n    uploadHost: string;\n\n    /**\n     * @property {*}\n     */\n    options: APIOptions;\n\n    /**\n     * @property {Function}\n     */\n    consoleLog: Function;\n\n    /**\n     * @property {Function}\n     */\n    consoleError: Function;\n\n    /**\n     * @property {string}\n     */\n    errorCode: string;\n\n    /**\n     * @property {Function}\n     */\n    successCallback: (data?: Object) => void;\n\n    /**\n     * @property {Function}\n     */\n    errorCallback: ElementsErrorCallback;\n\n    /**\n     * @property {UploadsReachability}\n     */\n    uploadsReachability: UploadsReachability;\n\n    /**\n     * [constructor]\n     *\n     * @param {Object} [options]\n     * @param {string} [options.token] - Auth token\n     * @param {string} [options.sharedLink] - Shared link\n     * @param {string} [options.sharedLinkPassword] - Shared link password\n     * @param {string} [options.apiHost] - Api host\n     * @param {string} [options.uploadHost] - Upload host name\n     * @return {Base} Base instance\n     */\n    constructor(options: APIOptions) {\n        this.cache = options.cache || new Cache();\n        this.apiHost = options.apiHost || DEFAULT_HOSTNAME_API;\n        this.uploadHost = options.uploadHost || DEFAULT_HOSTNAME_UPLOAD;\n        // @TODO: avoid keeping another copy of data in this.options\n        this.options = { ...options, apiHost: this.apiHost, uploadHost: this.uploadHost, cache: this.cache };\n        this.xhr = new Xhr(this.options);\n        this.destroyed = false;\n        this.consoleLog = !!options.consoleLog && !!window.console ? window.console.log || noop : noop;\n        this.consoleError = !!options.consoleError && !!window.console ? window.console.error || noop : noop;\n        this.uploadsReachability = new UploadsReachability();\n    }\n\n    /**\n     * [destructor]\n     *\n     * @return {void}\n     */\n    destroy(): void {\n        this.xhr.abort();\n        this.destroyed = true;\n    }\n\n    /**\n     * Asks the API if its destructor has been called\n     *\n     * @return {void}\n     */\n    isDestroyed(): boolean {\n        return this.destroyed;\n    }\n\n    /**\n     * Checks that our desired API call has sufficient permissions and an item ID\n     *\n     * @param {string} permissionToCheck - Permission to check\n     * @param {Object} permissions - Permissions object\n     * @param {string} id - Item id\n     * @return {void}\n     */\n    checkApiCallValidity(permissionToCheck: string, permissions?: Object, id?: string): void {\n        if (!id || !permissions) {\n            throw getBadItemError();\n        }\n\n        const permission = permissions[permissionToCheck];\n        if (!permission) {\n            throw getBadPermissionsError();\n        }\n    }\n\n    /**\n     * Base URL for api\n     *\n     * @return {string} base url\n     */\n    getBaseApiUrl(): string {\n        const suffix: string = this.apiHost.endsWith('/') ? '2.0' : '/2.0';\n        return `${this.apiHost}${suffix}`;\n    }\n\n    /**\n     * Base URL for api uploads\n     *\n     * @return {string} base url\n     */\n    getBaseUploadUrl(): string {\n        const suffix: string = this.uploadHost.endsWith('/') ? 'api/2.0' : '/api/2.0';\n        return `${this.uploadHost}${suffix}`;\n    }\n\n    /**\n     * Gets the cache instance\n     *\n     * @return {Cache} cache instance\n     */\n    getCache(): APICache {\n        return this.cache;\n    }\n\n    /**\n     * Generic success handler\n     *\n     * @param {Object} data - The response data\n     */\n    successHandler = (data: any): void => {\n        if (!this.isDestroyed() && typeof this.successCallback === 'function') {\n            this.successCallback(data);\n        }\n    };\n\n    /**\n     * Generic error handler\n     *\n     * @param {Object} data - The response data\n     * @param {Function} errorCallback the error callback\n     */\n    errorHandler = (error: $AxiosError<any>): void => {\n        if (!this.isDestroyed() && typeof this.errorCallback === 'function') {\n            const { response } = error;\n\n            if (response && response.data) {\n                this.errorCallback(response.data, this.errorCode);\n            } else {\n                this.errorCallback(error, this.errorCode);\n            }\n        }\n    };\n\n    /**\n     * Gets the URL for the API, meant to be overridden\n     * @param {string} id - The item id\n     */\n    /* eslint-disable no-unused-vars */\n    getUrl(id: string) {\n        /* eslint-enable no-unused-vars */\n        throw new Error('Implement me!');\n    }\n\n    /**\n     * Formats an API entry for use in components\n     * @param {string} entry - an API response entry\n     */\n    /* eslint-disable no-unused-vars */\n    format(entry: Object) {\n        /* eslint-enable no-unused-vars */\n        throw new Error('Implement me!');\n    }\n\n    /**\n     * Generic API GET\n     *\n     * @param {string} id - The file id\n     * @param {Function} successCallback - The success callback\n     * @param {Function} errorCallback - The error callback\n     * @param {Object} requestData - additional request data\n     * @param {string} url - API url\n     * @returns {Promise}\n     */\n    get({\n        id,\n        successCallback,\n        errorCallback,\n        requestData, // Note: this is inconsistent, other methods use `data`\n        url,\n    }: {\n        errorCallback: ElementsErrorCallback,\n        id: string,\n        requestData?: Object,\n        successCallback: Function,\n        url?: string,\n    }): Promise<any> {\n        const apiUrl = url || this.getUrl(id);\n        return this.makeRequest(HTTP_GET, id, apiUrl, successCallback, errorCallback, requestData);\n    }\n\n    /**\n     * Generic API POST\n     *\n     * @param {string} id - The file id\n     * @param {string} url - The url to post to\n     * @param {Object} data - The data to post\n     * @param {Function} successCallback - The success callback\n     * @param {Function} errorCallback - The error callback\n     */\n    post({\n        id,\n        url,\n        data,\n        successCallback,\n        errorCallback,\n    }: {\n        data: Object,\n        errorCallback: ElementsErrorCallback,\n        id: string,\n        successCallback: Function,\n        url: string,\n    }): Promise<any> {\n        return this.makeRequest(HTTP_POST, id, url, successCallback, errorCallback, data);\n    }\n\n    /**\n     * Generic API PUT\n     *\n     * @param {string} id - The file id\n     * @param {string} url - The url to put to\n     * @param {Object} data - The data to put\n     * @param {Function} successCallback - The success callback\n     * @param {Function} errorCallback - The error callback\n     */\n    put({\n        id,\n        url,\n        data,\n        successCallback,\n        errorCallback,\n    }: {\n        data: Object,\n        errorCallback: ElementsErrorCallback,\n        id: string,\n        successCallback: Function,\n        url: string,\n    }): Promise<any> {\n        return this.makeRequest(HTTP_PUT, id, url, successCallback, errorCallback, data);\n    }\n\n    /**\n     * Generic API DELETE\n     *\n     * @param {string} id - The file id\n     * @param {string} url - The url of the item to delete\n     * @param {Function} successCallback - The success callback\n     * @param {Function} errorCallback - The error callback\n     * @param {Object} data optional data to delete\n     */\n    delete({\n        id,\n        url,\n        data,\n        successCallback,\n        errorCallback,\n    }: {\n        data?: Object,\n        errorCallback: ElementsErrorCallback,\n        id: string,\n        successCallback: Function,\n        url: string,\n    }): Promise<any> {\n        return this.makeRequest(HTTP_DELETE, id, url, successCallback, errorCallback, data);\n    }\n\n    /**\n     * Generic API CRUD operations\n     *\n     * @param {string} method - which REST method to execute (GET, POST, PUT, DELETE)\n     * @param {string} id - The file id\n     * @param {string} url - The url of the item to operate on\n     * @param {Function} successCallback - The success callback\n     * @param {Function} errorCallback - The error callback\n     * @param {Object} requestData - Optional info to be added to the API call such as params or request body data\n     */\n    async makeRequest(\n        method: string,\n        id: string,\n        url: string,\n        successCallback: Function,\n        errorCallback: ElementsErrorCallback,\n        requestData: Object = {},\n    ): Promise<void> {\n        if (this.isDestroyed()) {\n            return;\n        }\n\n        this.successCallback = successCallback;\n        this.errorCallback = errorCallback;\n\n        // $FlowFixMe\n        const xhrMethod: Function = this.xhr[method.toLowerCase()].bind(this.xhr);\n        try {\n            const { data } = await xhrMethod({\n                id: getTypedFileId(id),\n                url,\n                ...requestData,\n            });\n            this.successHandler(data);\n        } catch (error) {\n            this.errorHandler(error);\n        }\n    }\n}\n\nexport default Base;\n"],"mappings":"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","ignoreList":[]}