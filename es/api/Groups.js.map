{"version":3,"file":"Groups.js","names":["noop","Base","Groups","getUrlForGroupCount","id","getBaseApiUrl","getGroupCount","errorCallback","successCallback","group","file","Promise","resolve","reject","get","url","args","requestData","params","limit"],"sources":["../../src/api/Groups.js"],"sourcesContent":["/**\n * @flow\n * @file Helper for the box Groups API\n * @author Box\n */\nimport noop from 'lodash/noop';\nimport Base from './Base';\nimport type { ElementsErrorCallback } from '../common/types/api';\n\nclass Groups extends Base {\n    /**\n     * API URL to get group count\n     *\n     * @param {string} id a box group ID\n     * @return {string} formatted URL for retrieving the membership information\n     */\n    getUrlForGroupCount(id: string): string {\n        return `${this.getBaseApiUrl()}/groups/${id}/memberships`;\n    }\n\n    /**\n     * API for creating a comment on a file\n     *\n     * @param {string} id a box group ID\n     * @param {Function} [successCallback] callback for handling a valid server response\n     * @param {Function} [errorCallback] handle errors raised by backend or connection errors\n     * @return {Promise<{}>} Promise which resolves with the payload, including the total_count\n     */\n    getGroupCount({\n        errorCallback = noop,\n        successCallback = noop,\n        group,\n        file,\n    }: {\n        errorCallback?: ElementsErrorCallback,\n        file: { id: string },\n        group: { id: string },\n        successCallback?: Function,\n    }): Promise<{ total_count: number }> {\n        return new Promise((resolve, reject) =>\n            this.get({\n                id: file.id,\n                url: this.getUrlForGroupCount(group.id),\n                successCallback: (...args) => {\n                    successCallback(...args);\n                    resolve(...args);\n                },\n                errorCallback: (...args) => {\n                    errorCallback(...args);\n                    reject();\n                },\n                requestData: { params: { limit: 1 } },\n            }),\n        );\n    }\n}\n\nexport default Groups;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,OAAOA,IAAI,MAAM,aAAa;AAC9B,OAAOC,IAAI,MAAM,QAAQ;AAGzB,MAAMC,MAAM,SAASD,IAAI,CAAC;EACtB;AACJ;AACA;AACA;AACA;AACA;EACIE,mBAAmBA,CAACC,EAAU,EAAU;IACpC,OAAO,GAAG,IAAI,CAACC,aAAa,CAAC,CAAC,WAAWD,EAAE,cAAc;EAC7D;;EAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACIE,aAAaA,CAAC;IACVC,aAAa,GAAGP,IAAI;IACpBQ,eAAe,GAAGR,IAAI;IACtBS,KAAK;IACLC;EAMJ,CAAC,EAAoC;IACjC,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAC/B,IAAI,CAACC,GAAG,CAAC;MACLV,EAAE,EAAEM,IAAI,CAACN,EAAE;MACXW,GAAG,EAAE,IAAI,CAACZ,mBAAmB,CAACM,KAAK,CAACL,EAAE,CAAC;MACvCI,eAAe,EAAEA,CAAC,GAAGQ,IAAI,KAAK;QAC1BR,eAAe,CAAC,GAAGQ,IAAI,CAAC;QACxBJ,OAAO,CAAC,GAAGI,IAAI,CAAC;MACpB,CAAC;MACDT,aAAa,EAAEA,CAAC,GAAGS,IAAI,KAAK;QACxBT,aAAa,CAAC,GAAGS,IAAI,CAAC;QACtBH,MAAM,CAAC,CAAC;MACZ,CAAC;MACDI,WAAW,EAAE;QAAEC,MAAM,EAAE;UAAEC,KAAK,EAAE;QAAE;MAAE;IACxC,CAAC,CACL,CAAC;EACL;AACJ;AAEA,eAAejB,MAAM","ignoreList":[]}