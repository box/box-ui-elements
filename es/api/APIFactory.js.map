{"version":3,"file":"APIFactory.js","names":["Cache","ChunkedUploadAPI","PlainUploadAPI","FolderAPI","FileAPI","WebLinkAPI","SearchAPI","RecentsAPI","VersionsAPI","CommentsAPI","TasksNewAPI","TaskCollaboratorsAPI","TaskLinksAPI","ThreadedCommentsAPI","FileAccessStatsAPI","FileActivitiesAPI","MarkerBasedGroupsAPI","MarkerBasedUsersAPI","GroupsAPI","UsersAPI","MetadataAPI","FileCollaboratorsAPI","FileCollaborationsAPI","FolderCollaborationsAPI","CollaborationsAPI","FeedAPI","AppIntegrationsAPI","AnnotationsAPI","OpenWithAPI","MetadataQueryAPI","BoxEditAPI","IntelligenceAPI","DEFAULT_HOSTNAME_API","DEFAULT_HOSTNAME_UPLOAD","TYPE_FOLDER","TYPE_FILE","TYPE_WEBLINK","APIFactory","constructor","options","_objectSpread","apiHost","uploadHost","cache","language","destroy","destroyCache","fileAPI","weblinkAPI","plainUploadAPI","chunkedUploadAPI","folderAPI","searchAPI","recentsAPI","versionsAPI","fileAccessStatsAPI","fileActivitiesAPI","tasksNewAPI","taskCollaboratorsAPI","taskLinksAPI","commentsAPI","threadedCommentsAPI","markerBasedGroupsAPI","markerBasedUsersAPI","groupsAPI","usersAPI","metadataAPI","fileCollaboratorsAPI","fileCollaborationsAPI","folderCollaborationsAPI","collaborationsAPI","appIntegrationsAPI","metadataQueryAPI","openWithAPI","annotationsAPI","intelligenceAPI","getCache","getAPI","type","api","getFolderAPI","getFileAPI","getWebLinkAPI","Error","shouldDestroy","getPlainUploadAPI","getChunkedUploadAPI","getSearchAPI","getRecentsAPI","getMetadataAPI","getVersionsAPI","getCommentsAPI","getThreadedCommentsAPI","getTasksNewAPI","getTaskCollaboratorsAPI","getTaskLinksAPI","getFileAccessStatsAPI","getFileActivitiesAPI","getFileCollaboratorsAPI","getFileCollaborationsAPI","getFolderCollaborationsAPI","getCollaborationsAPI","getMarkerBasedGroupsAPI","getMarkerBasedUsersAPI","getGroupsAPI","getUsersAPI","getFeedAPI","feedItemsAPI","getOpenWithAPI","getAppIntegrationsAPI","getMetadataQueryAPI","getBoxEditAPI","boxEditAPI","getAnnotationsAPI","getIntelligenceAPI"],"sources":["../../src/api/APIFactory.js"],"sourcesContent":["/**\n * @flow\n * @file Main entry point for the box api\n * @author Box\n */\n\nimport Cache from '../utils/Cache';\nimport ChunkedUploadAPI from './uploads/MultiputUpload';\nimport PlainUploadAPI from './uploads/PlainUpload';\nimport FolderAPI from './Folder';\nimport FileAPI from './File';\nimport WebLinkAPI from './WebLink';\nimport SearchAPI from './Search';\nimport RecentsAPI from './Recents';\nimport VersionsAPI from './Versions';\nimport CommentsAPI from './Comments';\nimport TasksNewAPI from './tasks/TasksNew';\nimport TaskCollaboratorsAPI from './tasks/TaskCollaborators';\nimport TaskLinksAPI from './tasks/TaskLinks';\nimport ThreadedCommentsAPI from './ThreadedComments';\nimport FileAccessStatsAPI from './FileAccessStats';\nimport FileActivitiesAPI from './FileActivities';\nimport MarkerBasedGroupsAPI from './MarkerBasedGroups';\nimport MarkerBasedUsersAPI from './MarkerBasedUsers';\nimport GroupsAPI from './Groups';\nimport UsersAPI from './Users';\nimport MetadataAPI from './Metadata';\nimport FileCollaboratorsAPI from './FileCollaborators';\nimport FileCollaborationsAPI from './FileCollaborations';\nimport FolderCollaborationsAPI from './FolderCollaborations';\nimport CollaborationsAPI from './Collaborations';\nimport FeedAPI from './Feed';\nimport AppIntegrationsAPI from './AppIntegrations';\nimport AnnotationsAPI from './Annotations';\nimport OpenWithAPI from './OpenWith';\nimport MetadataQueryAPI from './MetadataQuery';\nimport BoxEditAPI from './box-edit';\nimport IntelligenceAPI from './Intelligence';\nimport { DEFAULT_HOSTNAME_API, DEFAULT_HOSTNAME_UPLOAD, TYPE_FOLDER, TYPE_FILE, TYPE_WEBLINK } from '../constants';\nimport type { ItemType } from '../common/types/core';\nimport type { APIOptions } from '../common/types/api';\nimport type APICache from '../utils/Cache';\n\ntype ItemAPI = FolderAPI | FileAPI | WebLinkAPI;\n\nclass APIFactory {\n    /**\n     * @property {*}\n     */\n    options: APIOptions;\n\n    /**\n     * @property {FileAPI}\n     */\n    fileAPI: FileAPI;\n\n    /**\n     * @property {WebLink}\n     */\n    weblinkAPI: WebLinkAPI;\n\n    /**\n     * @property {FolderAPI}\n     */\n    folderAPI: FolderAPI;\n\n    /**\n     * @property {PlainUploadAPI}\n     */\n    plainUploadAPI: PlainUploadAPI;\n\n    /**\n     * @property {ChunkedUploadAPI}\n     */\n    chunkedUploadAPI: ChunkedUploadAPI;\n\n    /**\n     * @property {SearchAPI}\n     */\n    searchAPI: SearchAPI;\n\n    /**\n     * @property {RecentsAPI}\n     */\n    recentsAPI: RecentsAPI;\n\n    /**\n     * @property {VersionsAPI}\n     */\n    versionsAPI: VersionsAPI;\n\n    /**\n     * @property {CommentsAPI}\n     */\n    commentsAPI: CommentsAPI;\n\n    /**\n     * @property {ThreadedCommentsAPI}\n     */\n    threadedCommentsAPI: ThreadedCommentsAPI;\n\n    /**\n     * @property {TasksNewAPI}\n     */\n    tasksNewAPI: TasksNewAPI;\n\n    /**\n     * @property {TaskCollaboratorsAPI}\n     */\n    taskCollaboratorsAPI: TaskCollaboratorsAPI;\n\n    /**\n     * @property {TaskLinksAPI}\n     */\n    taskLinksAPI: TaskLinksAPI;\n\n    /*\n     * @property {FileAccessStatsAPI}\n     */\n    fileAccessStatsAPI: FileAccessStatsAPI;\n\n    /*\n     * @property {FileActivitiesAPI}\n     */\n    fileActivitiesAPI: FileActivitiesAPI;\n\n    /*\n     * @property {MarkerBasedGroupsAPI}\n     */\n    markerBasedGroupsAPI: MarkerBasedGroupsAPI;\n\n    /*\n     * @property {MarkerBasedUsersAPI}\n     */\n    markerBasedUsersAPI: MarkerBasedUsersAPI;\n\n    /**\n     * @property {GroupsAPI}\n     */\n    groupsAPI: GroupsAPI;\n\n    /*\n     * @property {UsersAPI}\n     */\n    usersAPI: UsersAPI;\n\n    /*\n     * @property {MetadataAPI}\n     */\n    metadataAPI: MetadataAPI;\n\n    /**\n     * @property {FileCollaboratorsAPI}\n     */\n    fileCollaboratorsAPI: FileCollaboratorsAPI;\n\n    /**\n     * @property {FileCollaborationsAPI}\n     */\n    fileCollaborationsAPI: FileCollaborationsAPI;\n\n    /**\n     * @property {FolderCollaborationsAPI}\n     */\n    folderCollaborationsAPI: FolderCollaborationsAPI;\n\n    /**\n     * @property {CollaborationsAPI}\n     */\n    collaborationsAPI: CollaborationsAPI;\n\n    /**\n     * @property {FeedAPI}\n     */\n    feedItemsAPI: FeedAPI;\n\n    /**\n     * @property {OpenWithAPI}\n     */\n    openWithAPI: OpenWithAPI;\n\n    /**\n     * @property {AppIntegrationsAPI}\n     */\n    appIntegrationsAPI: AppIntegrationsAPI;\n\n    /**\n     * @property {MetadataQueryAPI}\n     */\n    metadataQueryAPI: MetadataQueryAPI;\n\n    /** @property {BoxEditAPI}\n     *\n     */\n    boxEditAPI: BoxEditAPI;\n\n    /**\n     * @property {AnnotationsAPI}\n     */\n    annotationsAPI: AnnotationsAPI;\n\n    /**\n     * @property {IntelligenceAPI}\n     */\n    intelligenceAPI: IntelligenceAPI;\n\n    /**\n     * [constructor]\n     *\n     * @param {Object} options\n     * @param {string} options.id - item id\n     * @param {string|function} options.token - Auth token\n     * @param {string} [options.sharedLink] - Shared link\n     * @param {string} [options.sharedLinkPassword] - Shared link password\n     * @param {string} [options.apiHost] - Api host\n     * @param {string} [options.uploadHost] - Upload host name\n     * @return {API} Api instance\n     */\n    constructor(options: APIOptions) {\n        this.options = {\n            ...options,\n            apiHost: options.apiHost || DEFAULT_HOSTNAME_API,\n            uploadHost: options.uploadHost || DEFAULT_HOSTNAME_UPLOAD,\n            cache: options.cache || new Cache(),\n            language: options.language,\n        };\n    }\n\n    /**\n     * [destructor]\n     *\n     * @param {boolean} destroyCache - true to destroy cache\n     * @return {void}\n     */\n    destroy(destroyCache: boolean = false) {\n        if (this.fileAPI) {\n            this.fileAPI.destroy();\n            delete this.fileAPI;\n        }\n\n        if (this.weblinkAPI) {\n            this.weblinkAPI.destroy();\n            delete this.weblinkAPI;\n        }\n\n        if (this.plainUploadAPI) {\n            this.plainUploadAPI.destroy();\n            delete this.plainUploadAPI;\n        }\n\n        if (this.chunkedUploadAPI) {\n            this.chunkedUploadAPI.destroy();\n            delete this.chunkedUploadAPI;\n        }\n\n        if (this.folderAPI) {\n            this.folderAPI.destroy();\n            delete this.folderAPI;\n        }\n\n        if (this.searchAPI) {\n            this.searchAPI.destroy();\n            delete this.searchAPI;\n        }\n\n        if (this.recentsAPI) {\n            this.recentsAPI.destroy();\n            delete this.recentsAPI;\n        }\n\n        if (this.versionsAPI) {\n            this.versionsAPI.destroy();\n            delete this.versionsAPI;\n        }\n\n        if (this.fileAccessStatsAPI) {\n            this.fileAccessStatsAPI.destroy();\n            delete this.fileAccessStatsAPI;\n        }\n\n        if (this.fileActivitiesAPI) {\n            this.fileActivitiesAPI.destroy();\n            delete this.fileActivitiesAPI;\n        }\n\n        if (this.tasksNewAPI) {\n            this.tasksNewAPI.destroy();\n            delete this.tasksNewAPI;\n        }\n\n        if (this.taskCollaboratorsAPI) {\n            this.taskCollaboratorsAPI.destroy();\n            delete this.taskCollaboratorsAPI;\n        }\n\n        if (this.taskLinksAPI) {\n            this.taskLinksAPI.destroy();\n            delete this.taskLinksAPI;\n        }\n\n        if (this.commentsAPI) {\n            this.commentsAPI.destroy();\n            delete this.commentsAPI;\n        }\n\n        if (this.threadedCommentsAPI) {\n            this.threadedCommentsAPI.destroy();\n            delete this.threadedCommentsAPI;\n        }\n\n        if (this.markerBasedGroupsAPI) {\n            this.markerBasedGroupsAPI.destroy();\n            delete this.markerBasedGroupsAPI;\n        }\n\n        if (this.markerBasedUsersAPI) {\n            this.markerBasedUsersAPI.destroy();\n            delete this.markerBasedUsersAPI;\n        }\n\n        if (this.groupsAPI) {\n            this.groupsAPI.destroy();\n            delete this.groupsAPI;\n        }\n\n        if (this.usersAPI) {\n            this.usersAPI.destroy();\n            delete this.usersAPI;\n        }\n\n        if (this.metadataAPI) {\n            this.metadataAPI.destroy();\n            delete this.metadataAPI;\n        }\n\n        if (this.fileCollaboratorsAPI) {\n            this.fileCollaboratorsAPI.destroy();\n            delete this.fileCollaboratorsAPI;\n        }\n\n        if (this.fileCollaborationsAPI) {\n            this.fileCollaborationsAPI.destroy();\n            delete this.fileCollaborationsAPI;\n        }\n\n        if (this.folderCollaborationsAPI) {\n            this.folderCollaborationsAPI.destroy();\n            delete this.folderCollaborationsAPI;\n        }\n\n        if (this.collaborationsAPI) {\n            this.collaborationsAPI.destroy();\n            delete this.collaborationsAPI;\n        }\n\n        if (this.appIntegrationsAPI) {\n            this.appIntegrationsAPI.destroy();\n            delete this.appIntegrationsAPI;\n        }\n\n        if (this.metadataQueryAPI) {\n            this.metadataQueryAPI.destroy();\n            delete this.metadataQueryAPI;\n        }\n\n        if (this.openWithAPI) {\n            this.openWithAPI.destroy();\n            delete this.openWithAPI;\n        }\n\n        if (this.annotationsAPI) {\n            this.annotationsAPI.destroy();\n            delete this.annotationsAPI;\n        }\n\n        if (this.intelligenceAPI) {\n            this.intelligenceAPI.destroy();\n            delete this.intelligenceAPI;\n        }\n\n        if (destroyCache) {\n            this.options.cache = new Cache();\n        }\n    }\n\n    /**\n     * Gets the cache instance\n     *\n     * @return {Cache} cache instance\n     */\n    getCache(): APICache {\n        return ((this.options.cache: any): APICache);\n    }\n\n    /**\n     * Returns the API based on type of item\n     *\n     * @private\n     * @param {String} type - item type\n     * @return {ItemAPI} api\n     */\n    getAPI(type: ItemType): ItemAPI {\n        let api: ItemAPI;\n\n        switch (type) {\n            case TYPE_FOLDER:\n                api = this.getFolderAPI();\n                break;\n            case TYPE_FILE:\n                api = this.getFileAPI();\n                break;\n            case TYPE_WEBLINK:\n                api = this.getWebLinkAPI();\n                break;\n            default:\n                throw new Error('Unknown Type!');\n        }\n\n        return api;\n    }\n\n    /**\n     * API for file\n     *\n     * @return {FileAPI} FileAPI instance\n     */\n    getFileAPI(shouldDestroy: boolean = true): FileAPI {\n        if (shouldDestroy) {\n            this.destroy();\n        }\n        this.fileAPI = new FileAPI(this.options);\n        return this.fileAPI;\n    }\n\n    /**\n     * API for web links\n     *\n     * @return {WebLinkAPI} WebLinkAPI instance\n     */\n    getWebLinkAPI(): WebLinkAPI {\n        this.destroy();\n        this.weblinkAPI = new WebLinkAPI(this.options);\n        return this.weblinkAPI;\n    }\n\n    /**\n     * API for plain uploads\n     *\n     * @return {UploadAPI} UploadAPI instance\n     */\n    getPlainUploadAPI(): PlainUploadAPI {\n        this.destroy();\n        this.plainUploadAPI = new PlainUploadAPI(this.options);\n        return this.plainUploadAPI;\n    }\n\n    /**\n     * API for chunked uploads\n     *\n     * @return {UploadAPI} UploadAPI instance\n     */\n    getChunkedUploadAPI(): ChunkedUploadAPI {\n        this.destroy();\n        this.chunkedUploadAPI = new ChunkedUploadAPI(this.options);\n        return this.chunkedUploadAPI;\n    }\n\n    /**\n     * API for folder\n     *\n     * @return {FolderAPI} FolderAPI instance\n     */\n    getFolderAPI(shouldDestroy: boolean = true): FolderAPI {\n        if (shouldDestroy) {\n            this.destroy();\n        }\n        this.folderAPI = new FolderAPI(this.options);\n        return this.folderAPI;\n    }\n\n    /**\n     * API for search\n     *\n     * @return {SearchAPI} SearchAPI instance\n     */\n    getSearchAPI(): SearchAPI {\n        this.destroy();\n        this.searchAPI = new SearchAPI(this.options);\n        return this.searchAPI;\n    }\n\n    /**\n     * API for recents\n     *\n     * @return {RecentsAPI} RecentsAPI instance\n     */\n    getRecentsAPI(): RecentsAPI {\n        this.destroy();\n        this.recentsAPI = new RecentsAPI(this.options);\n        return this.recentsAPI;\n    }\n\n    /**\n     * API for metadata\n     *\n     * @param {boolean} shouldDestroy - true if the factory should destroy before returning the call\n     * @return {MetadataAPI} MetadataAPI instance\n     */\n    getMetadataAPI(shouldDestroy: boolean): MetadataAPI {\n        if (shouldDestroy) {\n            this.destroy();\n        }\n\n        this.metadataAPI = new MetadataAPI(this.options);\n        return this.metadataAPI;\n    }\n\n    /**\n     * API for versions\n     *\n     * @param {boolean} shouldDestroy - true if the factory should destroy before returning the call\n     * @return {VersionsAPI} VersionsAPI instance\n     */\n    getVersionsAPI(shouldDestroy: boolean): VersionsAPI {\n        if (shouldDestroy) {\n            this.destroy();\n        }\n\n        this.versionsAPI = new VersionsAPI(this.options);\n        return this.versionsAPI;\n    }\n\n    /**\n     * API for comments\n     *\n     * @param {boolean} shouldDestroy - true if the factory should destroy before returning the call\n     * @return {CommentsAPI} CommentsAPI instance\n     */\n    getCommentsAPI(shouldDestroy: boolean): CommentsAPI {\n        if (shouldDestroy) {\n            this.destroy();\n        }\n\n        this.commentsAPI = new CommentsAPI(this.options);\n        return this.commentsAPI;\n    }\n\n    /**\n     * API for threaded comments\n     *\n     * @param {boolean} shouldDestroy - true if the factory should destroy before returning the call\n     * @return {ThreadedCommentsAPI} ThreadedCommentsAPI instance\n     */\n    getThreadedCommentsAPI(shouldDestroy: boolean): ThreadedCommentsAPI {\n        if (shouldDestroy) {\n            this.destroy();\n        }\n\n        this.threadedCommentsAPI = new ThreadedCommentsAPI(this.options);\n        return this.threadedCommentsAPI;\n    }\n\n    /**\n     * API for tasks\n     *\n     * @param {boolean} shouldDestroy - true if the factory should destroy before returning the call\n     * @return {TasksAPI} TaskAssignmentsAPI instance\n     */\n    getTasksNewAPI(shouldDestroy: boolean): TasksNewAPI {\n        if (shouldDestroy) {\n            this.destroy();\n        }\n\n        this.tasksNewAPI = new TasksNewAPI(this.options);\n        return this.tasksNewAPI;\n    }\n\n    /**\n     * API for taskCollaborators\n     *\n     * @param {boolean} shouldDestroy - true if the factory should destroy before returning the call\n     * @return {TaskCollaboratorsAPI} TaskCollaboratorsAPI instance\n     */\n    getTaskCollaboratorsAPI(shouldDestroy: boolean): TaskCollaboratorsAPI {\n        if (shouldDestroy) {\n            this.destroy();\n        }\n\n        this.taskCollaboratorsAPI = new TaskCollaboratorsAPI(this.options);\n        return this.taskCollaboratorsAPI;\n    }\n\n    /**\n     * API for taskLinks\n     *\n     * @param {boolean} shouldDestroy - true if the factory should destroy before returning the call\n     * @return {TasksAPI} TaskLinksAPI instance\n     */\n    getTaskLinksAPI(shouldDestroy: boolean): TaskLinksAPI {\n        if (shouldDestroy) {\n            this.destroy();\n        }\n\n        this.taskLinksAPI = new TaskLinksAPI(this.options);\n        return this.taskLinksAPI;\n    }\n\n    /**\n     * API for file access stats\n     *\n     * @param {boolean} shouldDestroy - true if the factory should destroy before returning the call\n     * @return {FileAccessStatsAPI} FileAccessStatsAPI instance\n     */\n    getFileAccessStatsAPI(shouldDestroy: boolean): FileAccessStatsAPI {\n        if (shouldDestroy) {\n            this.destroy();\n        }\n\n        this.fileAccessStatsAPI = new FileAccessStatsAPI(this.options);\n        return this.fileAccessStatsAPI;\n    }\n\n    /**\n     * API for file access stats\n     *\n     * @param {boolean} shouldDestroy - true if the factory should destroy before returning the call\n     * @return {FileActivitiesAPI} FileActivitiesAPI instance\n     */\n    getFileActivitiesAPI(shouldDestroy: boolean): FileActivitiesAPI {\n        if (shouldDestroy) {\n            this.destroy();\n        }\n\n        this.fileActivitiesAPI = new FileActivitiesAPI(this.options);\n        return this.fileActivitiesAPI;\n    }\n\n    /**\n     * API for file collaborators\n     *\n     * @param {boolean} shouldDestroy - true if the factory should destroy before returning the call\n     * @return {FileCollaboratorsAPI} FileCollaboratorsAPI instance\n     */\n    getFileCollaboratorsAPI(shouldDestroy: boolean): FileCollaboratorsAPI {\n        if (shouldDestroy) {\n            this.destroy();\n        }\n\n        this.fileCollaboratorsAPI = new FileCollaboratorsAPI(this.options);\n        return this.fileCollaboratorsAPI;\n    }\n\n    /**\n     * API for file collaborations\n     *\n     * This is different from the FileCollaboratorsAPI! See ./FileCollaborations for more information.\n     *\n     * @param {boolean} shouldDestroy - true if the factory should destroy before returning the call\n     * @return {FileCollaborationsAPI} FileCollaborationsAPI instance\n     */\n    getFileCollaborationsAPI(shouldDestroy: boolean): FileCollaborationsAPI {\n        if (shouldDestroy) {\n            this.destroy();\n        }\n\n        this.fileCollaborationsAPI = new FileCollaborationsAPI(this.options);\n        return this.fileCollaborationsAPI;\n    }\n\n    /**\n     * API for folder collaborations\n     *\n     * @param {boolean} shouldDestroy - true if the factory should destroy before returning the call\n     * @return {FolderCollaborationsAPI} FolderCollaborationsAPI instance\n     */\n    getFolderCollaborationsAPI(shouldDestroy: boolean): FolderCollaborationsAPI {\n        if (shouldDestroy) {\n            this.destroy();\n        }\n\n        this.folderCollaborationsAPI = new FolderCollaborationsAPI(this.options);\n        return this.folderCollaborationsAPI;\n    }\n\n    /**\n     * API for collaborations\n     *\n     * This is different from the other collaboration/collaborator APIs!\n     * See ./Collaborations for more information.\n     *\n     * @param {boolean} shouldDestroy - true if the factory should destroy before returning the call\n     * @return {CollaborationsAPI} CollaborationsAPI instance\n     */\n    getCollaborationsAPI(shouldDestroy: boolean): CollaborationsAPI {\n        if (shouldDestroy) {\n            this.destroy();\n        }\n\n        this.collaborationsAPI = new CollaborationsAPI(this.options);\n        return this.collaborationsAPI;\n    }\n\n    /**\n     * API for Groups (marker-based paging)\n     *\n     * @param {boolean} shouldDestroy - true if the factory should destroy before returning the call\n     * @return {MarkerBasedGroupsAPI} MarkerBasedGroupsAPI instance\n     */\n    getMarkerBasedGroupsAPI(shouldDestroy: boolean): MarkerBasedGroupsAPI {\n        if (shouldDestroy) {\n            this.destroy();\n        }\n\n        this.markerBasedGroupsAPI = new MarkerBasedGroupsAPI(this.options);\n        return this.markerBasedGroupsAPI;\n    }\n\n    /**\n     * API for Users (marker-based paging)\n     *\n     * @param {boolean} shouldDestroy - true if the factory should destroy before returning the call\n     * @return {MarkerBasedUsersAPI} MarkerBasedUsersAPI instance\n     */\n    getMarkerBasedUsersAPI(shouldDestroy: boolean): MarkerBasedUsersAPI {\n        if (shouldDestroy) {\n            this.destroy();\n        }\n\n        this.markerBasedUsersAPI = new MarkerBasedUsersAPI(this.options);\n        return this.markerBasedUsersAPI;\n    }\n\n    /**\n     * API for Groups (offset-based paging)\n     *\n     * @param {boolean} shouldDestroy - true if the factory should destroy before returning the call\n     * @return {GroupsAPI} GroupsAPI instance\n     */\n    getGroupsAPI(shouldDestroy: boolean): GroupsAPI {\n        if (shouldDestroy) {\n            this.destroy();\n        }\n\n        this.groupsAPI = new GroupsAPI(this.options);\n        return this.groupsAPI;\n    }\n\n    /**\n     * API for Users (offset-based paging)\n     *\n     * @param {boolean} shouldDestroy - true if the factory should destroy before returning the call\n     * @return {UsersAPI} UsersAPI instance\n     */\n    getUsersAPI(shouldDestroy: boolean): UsersAPI {\n        if (shouldDestroy) {\n            this.destroy();\n        }\n\n        this.usersAPI = new UsersAPI(this.options);\n        return this.usersAPI;\n    }\n\n    /**\n     * API for Feed Items\n     *\n     * @param {boolean} shouldDestroy - true if the factory should destroy before returning the call\n     * @return {FeedAPI} FeedAPI instance\n     */\n    getFeedAPI(shouldDestroy: boolean): FeedAPI {\n        if (shouldDestroy) {\n            this.destroy();\n        }\n\n        this.feedItemsAPI = new FeedAPI(this.options);\n        return this.feedItemsAPI;\n    }\n\n    /**\n     * API for Open With\n     *\n     * @param {boolean} shouldDestroy - true if the factory should destroy before returning the call\n     * @return {OpenWithAPI} OpenWithAPI instance\n     */\n    getOpenWithAPI(shouldDestroy: boolean): OpenWithAPI {\n        if (shouldDestroy) {\n            this.destroy();\n        }\n\n        this.openWithAPI = new OpenWithAPI(this.options);\n        return this.openWithAPI;\n    }\n\n    /**\n     * API for the App Integrations endpoint\n     *\n     * @param {boolean} shouldDestroy - true if the factory should destroy before returning the call\n     * @return {AppIntegrationsAPI} AppIntegrationsAPI instance\n     */\n    getAppIntegrationsAPI(shouldDestroy: boolean): AppIntegrationsAPI {\n        if (shouldDestroy) {\n            this.destroy();\n        }\n\n        this.appIntegrationsAPI = new AppIntegrationsAPI(this.options);\n        return this.appIntegrationsAPI;\n    }\n\n    /**\n     * API for Metadata Query\n     *\n     * @param {boolean} shouldDestroy - true if the factory should destroy before returning the call\n     * @return {MetadataQuery} MetadataQuery instance\n     */\n    getMetadataQueryAPI(shouldDestroy: boolean = false): MetadataQueryAPI {\n        if (shouldDestroy) {\n            this.destroy();\n        }\n\n        this.metadataQueryAPI = new MetadataQueryAPI(this.options);\n        return this.metadataQueryAPI;\n    }\n\n    /**\n     * API for Box Edit\n     *\n     * @return {BoxEditAPI} BoxEditAPI instance\n     */\n    getBoxEditAPI(): BoxEditAPI {\n        this.boxEditAPI = new BoxEditAPI();\n        return this.boxEditAPI;\n    }\n\n    /**\n     * API for Annotations\n     *\n     * @return {AnnotationsAPI} AnnotationsAPI instance\n     */\n    getAnnotationsAPI(shouldDestroy: boolean): AnnotationsAPI {\n        if (shouldDestroy) {\n            this.destroy();\n        }\n\n        this.annotationsAPI = new AnnotationsAPI(this.options);\n        return this.annotationsAPI;\n    }\n\n    /**\n     * API for Intelligence\n     *\n     * @return {IntelligenceAPI} IntelligenceAPI instance\n     */\n    getIntelligenceAPI(shouldDestroy: boolean): IntelligenceAPI {\n        if (shouldDestroy) {\n            this.destroy();\n        }\n\n        this.intelligenceAPI = new IntelligenceAPI(this.options);\n        return this.intelligenceAPI;\n    }\n}\n\nexport default APIFactory;\n"],"mappings":"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","ignoreList":[]}