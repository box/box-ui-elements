{"version":3,"file":"Intelligence.js","names":["Base","AiExtractResponse","AiExtractStructured","ERROR_CODE_EXTRACT_STRUCTURED","Intelligence","ask","question","items","dialogueHistory","options","prompt","Error","length","forEach","item","id","type","url","getBaseApiUrl","xhr","post","data","_objectSpread","mode","dialogue_history","extractStructured","request","errorCode","suggestionsResponse","answer"],"sources":["../../src/api/Intelligence.js"],"sourcesContent":["/**\n * @flow\n * @file Helper for the Box AI API endpoint\n * @author Box\n */\n\nimport type { QuestionType } from '@box/box-ai-content-answers';\nimport Base from './Base';\nimport { AiExtractResponse } from './schemas/AiExtractResponse';\nimport { AiExtractStructured } from './schemas/AiExtractStructured';\nimport { ERROR_CODE_EXTRACT_STRUCTURED } from '../constants';\nimport type { BoxItem } from '../common/types/core';\n\nclass Intelligence extends Base {\n    /**\n     * API endpoint to ask ai a question\n     *\n     * @param {QuestionType} question - Object should at least contain the prompt, which is the question to ask\n     * @param {Array<object>} items - Array of items to ask about\n     * @param {Array<QuestionType>} dialogueHistory - Array of previous questions object that already have answers\n     * @param {{ include_citations?: boolean }} options - Optional parameters\n     * @return {Promise}\n     */\n    async ask(\n        question: QuestionType,\n        items: Array<BoxItem>,\n        dialogueHistory: Array<QuestionType> = [],\n        options: { include_citations?: boolean } = {},\n    ): Promise<any> {\n        const { prompt } = question;\n        if (!prompt) {\n            throw new Error('Missing prompt!');\n        }\n\n        if (!items || items.length === 0) {\n            throw new Error('Missing items!');\n        }\n\n        items.forEach(item => {\n            if (!item.id || !item.type) {\n                throw new Error('Invalid item!');\n            }\n        });\n\n        const url = `${this.getBaseApiUrl()}/ai/ask`;\n\n        return this.xhr.post({\n            url,\n            id: `file_${items[0].id}`,\n            data: {\n                mode: 'single_item_qa',\n                prompt,\n                items,\n                dialogue_history: dialogueHistory,\n                ...options,\n            },\n        });\n    }\n\n    /**\n     * Sends an AI request to supported LLMs and returns extracted key pairs and values.\n     *\n     * @param {AiExtractStructured} request - AI Extract Structured Request\n     * @return A successful response including the answer from the LLM.\n     */\n    async extractStructured(request: AiExtractStructured): Promise<AiExtractResponse> {\n        this.errorCode = ERROR_CODE_EXTRACT_STRUCTURED;\n\n        const { items } = request;\n        if (!items || items.length === 0) {\n            throw new Error('Missing items!');\n        }\n\n        const item = items[0];\n\n        if (!item.id || !item.type) {\n            throw new Error('Invalid item!');\n        }\n\n        const url = `${this.getBaseApiUrl()}/ai/extract_structured`;\n\n        const suggestionsResponse = await this.xhr.post({\n            url,\n            data: request,\n            id: `file_${item.id}`,\n        });\n\n        return !!suggestionsResponse?.data?.answer && typeof suggestionsResponse.data.answer === 'object'\n            ? suggestionsResponse.data.answer\n            : suggestionsResponse.data;\n    }\n}\n\nexport default Intelligence;\n"],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;;AAGA,OAAOA,IAAI,MAAM,QAAQ;AACzB,SAASC,iBAAiB,QAAQ,6BAA6B;AAC/D,SAASC,mBAAmB,QAAQ,+BAA+B;AACnE,SAASC,6BAA6B,QAAQ,cAAc;AAG5D,MAAMC,YAAY,SAASJ,IAAI,CAAC;EAC5B;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,MAAMK,GAAGA,CACLC,QAAsB,EACtBC,KAAqB,EACrBC,eAAoC,GAAG,EAAE,EACzCC,OAAwC,GAAG,CAAC,CAAC,EACjC;IACZ,MAAM;MAAEC;IAAO,CAAC,GAAGJ,QAAQ;IAC3B,IAAI,CAACI,MAAM,EAAE;MACT,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;IACtC;IAEA,IAAI,CAACJ,KAAK,IAAIA,KAAK,CAACK,MAAM,KAAK,CAAC,EAAE;MAC9B,MAAM,IAAID,KAAK,CAAC,gBAAgB,CAAC;IACrC;IAEAJ,KAAK,CAACM,OAAO,CAACC,IAAI,IAAI;MAClB,IAAI,CAACA,IAAI,CAACC,EAAE,IAAI,CAACD,IAAI,CAACE,IAAI,EAAE;QACxB,MAAM,IAAIL,KAAK,CAAC,eAAe,CAAC;MACpC;IACJ,CAAC,CAAC;IAEF,MAAMM,GAAG,GAAG,GAAG,IAAI,CAACC,aAAa,CAAC,CAAC,SAAS;IAE5C,OAAO,IAAI,CAACC,GAAG,CAACC,IAAI,CAAC;MACjBH,GAAG;MACHF,EAAE,EAAE,QAAQR,KAAK,CAAC,CAAC,CAAC,CAACQ,EAAE,EAAE;MACzBM,IAAI,EAAAC,aAAA;QACAC,IAAI,EAAE,gBAAgB;QACtBb,MAAM;QACNH,KAAK;QACLiB,gBAAgB,EAAEhB;MAAe,GAC9BC,OAAO;IAElB,CAAC,CAAC;EACN;;EAEA;AACJ;AACA;AACA;AACA;AACA;EACI,MAAMgB,iBAAiBA,CAACC,OAA4B,EAA8B;IAC9E,IAAI,CAACC,SAAS,GAAGxB,6BAA6B;IAE9C,MAAM;MAAEI;IAAM,CAAC,GAAGmB,OAAO;IACzB,IAAI,CAACnB,KAAK,IAAIA,KAAK,CAACK,MAAM,KAAK,CAAC,EAAE;MAC9B,MAAM,IAAID,KAAK,CAAC,gBAAgB,CAAC;IACrC;IAEA,MAAMG,IAAI,GAAGP,KAAK,CAAC,CAAC,CAAC;IAErB,IAAI,CAACO,IAAI,CAACC,EAAE,IAAI,CAACD,IAAI,CAACE,IAAI,EAAE;MACxB,MAAM,IAAIL,KAAK,CAAC,eAAe,CAAC;IACpC;IAEA,MAAMM,GAAG,GAAG,GAAG,IAAI,CAACC,aAAa,CAAC,CAAC,wBAAwB;IAE3D,MAAMU,mBAAmB,GAAG,MAAM,IAAI,CAACT,GAAG,CAACC,IAAI,CAAC;MAC5CH,GAAG;MACHI,IAAI,EAAEK,OAAO;MACbX,EAAE,EAAE,QAAQD,IAAI,CAACC,EAAE;IACvB,CAAC,CAAC;IAEF,OAAO,CAAC,CAACa,mBAAmB,EAAEP,IAAI,EAAEQ,MAAM,IAAI,OAAOD,mBAAmB,CAACP,IAAI,CAACQ,MAAM,KAAK,QAAQ,GAC3FD,mBAAmB,CAACP,IAAI,CAACQ,MAAM,GAC/BD,mBAAmB,CAACP,IAAI;EAClC;AACJ;AAEA,eAAejB,YAAY","ignoreList":[]}