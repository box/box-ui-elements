{"version":3,"file":"File.js","names":["queryString","getProp","findMissingProperties","fillMissingProperties","getTypedFileId","getBadItemError","getBadPermissionsError","CACHE_PREFIX_FILE","ERROR_CODE_FETCH_FILE","ERROR_CODE_GET_DOWNLOAD_URL","FIELD_AUTHENTICATED_DOWNLOAD_URL","FIELD_EXTENSION","FIELD_IS_DOWNLOAD_AVAILABLE","REPRESENTATIONS_RESPONSE_ERROR","REPRESENTATIONS_RESPONSE_SUCCESS","REPRESENTATIONS_RESPONSE_VIEWABLE","X_REP_HINTS","Item","retryNumOfTimes","TokenService","File","getCacheKey","id","getUrl","suffix","getBaseApiUrl","getDownloadUrl","fileId","fileOrFileVersion","successCallback","errorCallback","errorCode","downloadAvailable","downloadUrl","token","getReadToken","options","errorHandler","Error","query","url","downloadBaseUrl","parseUrl","downloadUrlParams","_objectSpread","access_token","downloadUrlQuery","stringify","successHandler","isRepresentationsCallComplete","response","status","generateRepresentation","representation","infoUrl","xhr","get","then","data","catch","e","getThumbnailUrl","item","entry","extension","template","thumbnailUrl","replace","thumbnailBaseUrl","thumbnailUrlParams","thumbnailUrlQuery","setFileDescription","file","description","permissions","Promise","reject","can_rename","put","isDestroyed","updatedFile","merge","originalFile","getFile","cache","getCache","key","isCached","forceFetch","has","missingFields","fields","xhrOptions","headers","length","refreshCache","params","toString","dataWithMissingFields","set","getFileExtension"],"sources":["../../src/api/File.js"],"sourcesContent":["/**\n * @flow\n * @file Helper for the box file API\n * @author Box\n */\n\nimport queryString from 'query-string';\nimport getProp from 'lodash/get';\nimport { findMissingProperties, fillMissingProperties } from '../utils/fields';\nimport { getTypedFileId } from '../utils/file';\nimport { getBadItemError, getBadPermissionsError } from '../utils/error';\nimport {\n    CACHE_PREFIX_FILE,\n    ERROR_CODE_FETCH_FILE,\n    ERROR_CODE_GET_DOWNLOAD_URL,\n    FIELD_AUTHENTICATED_DOWNLOAD_URL,\n    FIELD_EXTENSION,\n    FIELD_IS_DOWNLOAD_AVAILABLE,\n    REPRESENTATIONS_RESPONSE_ERROR,\n    REPRESENTATIONS_RESPONSE_SUCCESS,\n    REPRESENTATIONS_RESPONSE_VIEWABLE,\n    X_REP_HINTS,\n} from '../constants';\nimport Item from './Item';\nimport { retryNumOfTimes } from '../utils/function';\nimport TokenService from '../utils/TokenService';\nimport type { RequestOptions, ElementsErrorCallback } from '../common/types/api';\nimport type { BoxItem, BoxItemVersion, FileRepresentation } from '../common/types/core';\nimport type APICache from '../utils/Cache';\n\nclass File extends Item {\n    /**\n     * Creates a key for the cache\n     *\n     * @param {string} id - Folder id\n     * @return {string} key\n     */\n    getCacheKey(id: string): string {\n        return `${CACHE_PREFIX_FILE}${id}`;\n    }\n\n    /**\n     * API URL for files\n     *\n     * @param {string} [id] - Optional file id\n     * @return {string} base url for files\n     */\n    getUrl(id: string): string {\n        const suffix: string = id ? `/${id}` : '';\n        return `${this.getBaseApiUrl()}/files${suffix}`;\n    }\n\n    /**\n     * API for getting download URL for files and file versions\n     *\n     * @param {string} fileId - File id\n     * @param {BoxItem|BoxItemVersion} fileOrFileVersion - File or file version to download\n     * @param {Function} successCallback - Success callback\n     * @param {Function} errorCallback - Error callback\n     * @return {void}\n     */\n    async getDownloadUrl(\n        fileId: string,\n        fileOrFileVersion: BoxItem | BoxItemVersion,\n        successCallback: string => void,\n        errorCallback: ElementsErrorCallback,\n    ): Promise<void> {\n        this.errorCode = ERROR_CODE_GET_DOWNLOAD_URL;\n        this.errorCallback = errorCallback;\n        this.successCallback = successCallback;\n\n        const downloadAvailable = fileOrFileVersion[FIELD_IS_DOWNLOAD_AVAILABLE];\n        const downloadUrl = fileOrFileVersion[FIELD_AUTHENTICATED_DOWNLOAD_URL];\n        const token = await TokenService.getReadToken(getTypedFileId(fileId), this.options.token);\n\n        if (!downloadAvailable || !downloadUrl || !token) {\n            this.errorHandler(new Error('Download is missing required fields or token.'));\n            return;\n        }\n\n        const { query, url: downloadBaseUrl } = queryString.parseUrl(downloadUrl);\n        const downloadUrlParams = { ...query, access_token: token };\n        const downloadUrlQuery = queryString.stringify(downloadUrlParams);\n\n        this.successHandler(`${downloadBaseUrl}?${downloadUrlQuery}`);\n    }\n\n    /**\n     * Determines whether the call to the file representations API has completed\n     *\n     * @param {data: { FileRepresentation }} response\n     * @return {boolean}\n     */\n    isRepresentationsCallComplete(response: { data: FileRepresentation }): boolean {\n        const status = getProp(response, 'data.status.state');\n        return (\n            !status ||\n            status === REPRESENTATIONS_RESPONSE_ERROR ||\n            status === REPRESENTATIONS_RESPONSE_SUCCESS ||\n            status === REPRESENTATIONS_RESPONSE_VIEWABLE\n        );\n    }\n\n    /**\n     * Polls a representation's infoUrl, attempting to generate a representation\n     *\n     * @param {FileRepresentation} representation - representation that should have its info.url polled\n     * @return {Promise<FileRepresentation>} - representation updated with most current status\n     */\n    async generateRepresentation(representation: FileRepresentation): Promise<FileRepresentation> {\n        const infoUrl = getProp(representation, 'info.url');\n\n        if (!infoUrl) {\n            return representation;\n        }\n\n        return retryNumOfTimes(\n            (successCallback, errorCallback) =>\n                this.xhr\n                    .get({ successCallback, errorCallback, url: infoUrl })\n                    .then(response =>\n                        this.isRepresentationsCallComplete(response)\n                            ? successCallback(response.data)\n                            : errorCallback(response.data),\n                    )\n                    .catch(e => {\n                        errorCallback(e);\n                    }),\n            4,\n            2000,\n            2,\n        );\n    }\n\n    /**\n     * API for getting a thumbnail URL for a BoxItem\n     *\n     * @param {BoxItem} item - BoxItem to get the thumbnail URL for\n     * @return {Promise<?string>} - the url for the item's thumbnail, or null\n     */\n    async getThumbnailUrl(item: BoxItem): Promise<?string> {\n        const entry = getProp(item, 'representations.entries[0]');\n        const extension = getProp(entry, 'representation');\n        const template = getProp(entry, 'content.url_template');\n        const token = await TokenService.getReadToken(getTypedFileId(item.id), this.options.token);\n\n        if (!extension || !template || !token) {\n            return null;\n        }\n\n        const thumbnailUrl = template.replace('{+asset_path}', extension === 'jpg' ? '' : '1.png');\n        const { query, url: thumbnailBaseUrl } = queryString.parseUrl(thumbnailUrl);\n        const thumbnailUrlParams = { ...query, access_token: token };\n        const thumbnailUrlQuery = queryString.stringify(thumbnailUrlParams);\n        return `${thumbnailBaseUrl}?${thumbnailUrlQuery}`;\n    }\n\n    /**\n     * API for setting the description of a file\n     *\n     * @param {BoxItem} file - File object for which we are changing the description\n     * @param {string} description - New file description\n     * @param {Function} successCallback - Success callback\n     * @param {Function} errorCallback - Error callback\n     * @return {Promise}\n     */\n    setFileDescription(\n        file: BoxItem,\n        description: string,\n        successCallback: Function,\n        errorCallback: Function,\n    ): Promise<void> {\n        const { id, permissions } = file;\n\n        if (!id || !permissions) {\n            errorCallback(getBadItemError());\n            return Promise.reject();\n        }\n\n        if (!permissions.can_rename) {\n            errorCallback(getBadPermissionsError());\n            return Promise.reject();\n        }\n\n        return this.xhr\n            .put({\n                id: getTypedFileId(id),\n                url: this.getUrl(id),\n                data: { description },\n            })\n            .then(({ data }: { data: BoxItem }) => {\n                if (!this.isDestroyed()) {\n                    const updatedFile = this.merge(this.getCacheKey(id), 'description', data.description);\n                    successCallback(updatedFile);\n                }\n            })\n            .catch(() => {\n                if (!this.isDestroyed()) {\n                    const originalFile = this.merge(this.getCacheKey(id), 'description', file.description);\n                    errorCallback(originalFile);\n                }\n            });\n    }\n\n    /**\n     * Gets a box file\n     *\n     * @param {string} id - File id\n     * @param {Function} successCallback - Function to call with results\n     * @param {Function} errorCallback - Function to call with errors\n     * @param {boolean|void} [options.fields] - Optionally include specific fields\n     * @param {boolean|void} [options.forceFetch] - Optionally Bypasses the cache\n     * @param {boolean|void} [options.refreshCache] - Optionally Updates the cache\n     * @return {Promise}\n     */\n    async getFile(\n        id: string,\n        successCallback: Function,\n        errorCallback: ElementsErrorCallback,\n        options: RequestOptions = {},\n    ): Promise<void> {\n        if (this.isDestroyed()) {\n            return;\n        }\n\n        const cache: APICache = this.getCache();\n        const key: string = this.getCacheKey(id);\n        const isCached: boolean = !options.forceFetch && cache.has(key);\n        const file: BoxItem = isCached ? cache.get(key) : { id };\n        let missingFields: Array<string> = findMissingProperties(file, options.fields);\n        const xhrOptions: Object = {\n            id: getTypedFileId(id),\n            url: this.getUrl(id),\n            headers: { 'X-Rep-Hints': X_REP_HINTS },\n        };\n        this.errorCode = ERROR_CODE_FETCH_FILE;\n        this.successCallback = successCallback;\n        this.errorCallback = errorCallback;\n\n        // If the file was cached and there are no missing fields\n        // then just return the cached file and optionally refresh\n        // the cache with new data if required\n        if (isCached && missingFields.length === 0) {\n            successCallback(file);\n            missingFields = options.fields || [];\n            if (!options.refreshCache) {\n                return;\n            }\n        }\n\n        // If there are missing fields to fetch, add it to the params\n        if (missingFields.length > 0) {\n            xhrOptions.params = {\n                fields: missingFields.toString(),\n            };\n        }\n\n        try {\n            const { data } = await this.xhr.get(xhrOptions);\n            if (this.isDestroyed()) {\n                return;\n            }\n\n            // Merge fields that were requested but were actually not returned.\n            // This part is mostly useful for metadata.foo.bar fields since the API\n            // returns { metadata: null } instead of { metadata: { foo: { bar: null } } }\n            const dataWithMissingFields = fillMissingProperties(data, missingFields);\n\n            // Cache check is again done since this code is executed async\n            if (cache.has(key)) {\n                cache.merge(key, dataWithMissingFields);\n            } else {\n                // If there was nothing in the cache\n                cache.set(key, dataWithMissingFields);\n            }\n\n            this.successHandler(cache.get(key));\n        } catch (e) {\n            this.errorHandler(e);\n        }\n    }\n\n    /**\n     * Gets the extension of a box file.\n     *\n     * @param {string} id - File id\n     * @param {Function} successCallback - Function to call with results\n     * @param {Function} errorCallback - Function to call with errors\n     * @return {Promise}\n     */\n    getFileExtension(id: string, successCallback: Function, errorCallback: ElementsErrorCallback): void {\n        if (this.isDestroyed()) {\n            return;\n        }\n\n        this.getFile(id, successCallback, errorCallback, {\n            fields: [FIELD_EXTENSION],\n        });\n    }\n}\n\nexport default File;\n"],"mappings":"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","ignoreList":[]}