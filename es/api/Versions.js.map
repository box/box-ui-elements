{"version":3,"file":"Versions.js","names":["getProp","FILE_VERSIONS_FIELDS_TO_FETCH","OffsetBasedAPI","DEFAULT_FETCH_END","DEFAULT_FETCH_START","ERROR_CODE_DELETE_VERSION","ERROR_CODE_FETCH_VERSION","ERROR_CODE_FETCH_VERSIONS","ERROR_CODE_PROMOTE_VERSION","ERROR_CODE_RESTORE_VERSION","PERMISSION_CAN_DELETE","PERMISSION_CAN_UPLOAD","Versions","constructor","args","_defineProperty","data","isDestroyed","successCallback","getUrl","id","Error","getBaseApiUrl","getVersionUrl","versionId","addPermissions","versions","file","entries","total_count","can_upload","map","_ref","permissions","version","_objectWithoutProperties","_excluded","_objectSpread","deleteVersion","errorCallback","fileId","errorCode","checkApiCallValidity","e","delete","url","getVersions","offset","limit","fields","shouldFetchAll","offsetGet","getVersion","fileVersionId","get","requestData","params","toString","addCurrentVersion","currentVersion","promotedFromId","promotedVersion","find","version_promoted","version_number","promoteVersion","post","type","restoreVersion","put","trashed_at"],"sources":["../../src/api/Versions.js"],"sourcesContent":["/**\n * @flow\n * @file Helper for the box versions API\n * @author Box\n */\n\nimport getProp from 'lodash/get';\nimport { FILE_VERSIONS_FIELDS_TO_FETCH } from '../utils/fields';\nimport OffsetBasedAPI from './OffsetBasedAPI';\nimport {\n    DEFAULT_FETCH_END,\n    DEFAULT_FETCH_START,\n    ERROR_CODE_DELETE_VERSION,\n    ERROR_CODE_FETCH_VERSION,\n    ERROR_CODE_FETCH_VERSIONS,\n    ERROR_CODE_PROMOTE_VERSION,\n    ERROR_CODE_RESTORE_VERSION,\n    PERMISSION_CAN_DELETE,\n    PERMISSION_CAN_UPLOAD,\n} from '../constants';\nimport type { ElementsErrorCallback } from '../common/types/api';\nimport type { BoxItem, FileVersions, BoxItemVersionPermission, BoxItemVersion } from '../common/types/core';\n\nclass Versions extends OffsetBasedAPI {\n    /**\n     * API URL for file versions\n     *\n     * @param {string} id - a box file id\n     * @return {string} base url for file versions\n     */\n    getUrl(id: string): string {\n        if (!id) {\n            throw new Error('Missing file id!');\n        }\n\n        return `${this.getBaseApiUrl()}/files/${id}/versions`;\n    }\n\n    /**\n     * API URL for version info endpoint\n     *\n     * @param {string} id - a box file id\n     * @param {string} versionId - a box file version id\n     * @return {string} url for version info\n     */\n    getVersionUrl(id: string, versionId: string): string {\n        if (!versionId) {\n            throw new Error('Missing version id!');\n        }\n\n        return `${this.getUrl(id)}/${versionId}`;\n    }\n\n    /**\n     * Returns the versions api response data\n     * @param {Object} data the api response data\n     */\n    successHandler = (data: FileVersions): void => {\n        if (this.isDestroyed() || typeof this.successCallback !== 'function') {\n            return;\n        }\n\n        this.successCallback(data);\n    };\n\n    /**\n     * Helper to add associated permissions from the file to the version objects\n     *\n     * @param {FileVersions} versions - API returned file versions for this file\n     * @param {BoxItem} file - The parent file object\n     * @return {FileVersions} modified versions array including associated file permissions\n     */\n    addPermissions(versions: ?FileVersions, file: BoxItem): ?FileVersions {\n        if (!versions) {\n            return versions;\n        }\n\n        // Versions defer to the parent file for upload (promote) permissions\n        const { entries, total_count } = versions;\n        const can_upload = getProp(file, ['permissions', PERMISSION_CAN_UPLOAD], false);\n\n        return {\n            entries: entries.map(({ permissions, ...version }) => ({\n                ...version,\n                permissions: { can_upload, ...permissions },\n            })),\n            total_count,\n        };\n    }\n\n    /**\n     * API for deleting a version of a file\n     *\n     * @param {Object} options - the request options\n     * @param {string} options.fileId - a box file id\n     * @param {string} options.versionId - a box file version id\n     * @param {BoxItemVersionPermission} options.permissions - the permissions for the file\n     * @param {Function} options.successCallback - the success callback\n     * @param {Function} options.errorCallback - the error callback\n     * @returns {void}\n     */\n    deleteVersion({\n        errorCallback,\n        fileId,\n        permissions,\n        successCallback,\n        versionId,\n    }: {\n        errorCallback: ElementsErrorCallback,\n        fileId: string,\n        permissions: BoxItemVersionPermission,\n        successCallback: null => any,\n        versionId: string,\n    }): void {\n        this.errorCode = ERROR_CODE_DELETE_VERSION;\n\n        try {\n            this.checkApiCallValidity(PERMISSION_CAN_DELETE, permissions, fileId);\n        } catch (e) {\n            errorCallback(e, this.errorCode);\n            return;\n        }\n\n        this.delete({\n            id: fileId,\n            url: this.getVersionUrl(fileId, versionId),\n            successCallback,\n            errorCallback,\n        });\n    }\n\n    /**\n     * API for fetching versions on a file\n     *\n     * @param {string} fileId - a box file id\n     * @param {Function} successCallback - the success callback\n     * @param {Function} errorCallback - the error callback\n     * @param {number} offset - the offset of the starting version index\n     * @param {number} limit - the max number of versions to fetch\n     * @param {Array} fields - the fields to fetch\n     * @param {boolean} shouldFetchAll - true if all versions should be fetched\n     * @returns {void}\n     */\n    getVersions(\n        fileId: string,\n        successCallback: FileVersions => any,\n        errorCallback: ElementsErrorCallback,\n        offset: number = DEFAULT_FETCH_START,\n        limit: number = DEFAULT_FETCH_END,\n        fields: Array<string> = FILE_VERSIONS_FIELDS_TO_FETCH,\n        shouldFetchAll: boolean = true,\n    ): void {\n        this.errorCode = ERROR_CODE_FETCH_VERSIONS;\n        this.offsetGet(fileId, successCallback, errorCallback, offset, limit, fields, shouldFetchAll);\n    }\n\n    /**\n     * API for fetching a certain version for a file\n     *\n     * @param {string} fileId - a box file id\n     * @param {string} fileVersionId - a box file version id\n     * @param {Function} successCallback - the success callback\n     * @param {Function} errorCallback - the error callback\n     * @returns {void}\n     */\n    getVersion(\n        fileId: string,\n        fileVersionId: string,\n        successCallback: BoxItemVersion => void,\n        errorCallback: ElementsErrorCallback,\n    ): void {\n        this.errorCode = ERROR_CODE_FETCH_VERSION;\n\n        this.get({\n            id: fileId,\n            successCallback,\n            errorCallback,\n            url: this.getVersionUrl(fileId, fileVersionId),\n            requestData: {\n                params: {\n                    fields: FILE_VERSIONS_FIELDS_TO_FETCH.toString(),\n                },\n            },\n        });\n    }\n\n    /**\n     * Decorates the current version and adds it to an existing FileVersions object\n     *\n     * @param {BoxItemVersion} currentVersion - a box version\n     * @param {FileVersions} versions - versions response\n     * @param {BoxItem} file - a box file\n     * @returns {FileVersions} - a FileVersions object containing the decorated current version\n     */\n    addCurrentVersion(currentVersion: ?BoxItemVersion, versions: ?FileVersions, file: BoxItem): FileVersions {\n        if (!currentVersion) {\n            return versions || { entries: [], total_count: 0 };\n        }\n\n        if (!versions) {\n            return { entries: [currentVersion], total_count: 1 };\n        }\n\n        const promotedFromId = getProp(file, 'restored_from.id');\n        const promotedVersion = versions.entries.find(version => version.id === promotedFromId);\n\n        if (promotedVersion) {\n            currentVersion.version_promoted = promotedVersion.version_number;\n        }\n\n        return { entries: [...versions.entries, currentVersion], total_count: versions.total_count + 1 };\n    }\n\n    /**\n     * API for promoting a version of a file to current\n     *\n     * @param {Object} options - the request options\n     * @param {string} options.fileId - a box file id\n     * @param {string} options.versionId - a box file version id\n     * @param {BoxItemVersionPermission} options.permissions - the permissions for the file\n     * @param {Function} options.successCallback - the success callback\n     * @param {Function} options.errorCallback - the error callback\n     * @returns {void}\n     */\n    promoteVersion({\n        errorCallback,\n        fileId,\n        permissions,\n        successCallback,\n        versionId,\n    }: {\n        errorCallback: ElementsErrorCallback,\n        fileId: string,\n        permissions: BoxItemVersionPermission,\n        successCallback: BoxItemVersion => any,\n        versionId: string,\n    }): void {\n        this.errorCode = ERROR_CODE_PROMOTE_VERSION;\n\n        try {\n            this.checkApiCallValidity(PERMISSION_CAN_UPLOAD, permissions, fileId);\n        } catch (e) {\n            errorCallback(e, this.errorCode);\n            return;\n        }\n\n        this.post({\n            id: fileId,\n            data: {\n                data: {\n                    id: versionId,\n                    type: 'file_version',\n                },\n            },\n            url: this.getVersionUrl(fileId, 'current'),\n            successCallback,\n            errorCallback,\n        });\n    }\n\n    /**\n     * API for restoring a deleted version of a file\n     *\n     * @param {Object} options - the request options\n     * @param {string} options.fileId - a box file id\n     * @param {string} options.versionId - a box file version id\n     * @param {BoxItemVersionPermission} options.permissions - the permissions for the file\n     * @param {Function} options.successCallback - the success callback\n     * @param {Function} options.errorCallback - the error callback\n     * @returns {void}\n     */\n    restoreVersion({\n        errorCallback,\n        fileId,\n        permissions,\n        successCallback,\n        versionId,\n    }: {\n        errorCallback: ElementsErrorCallback,\n        fileId: string,\n        permissions: BoxItemVersionPermission,\n        successCallback: BoxItemVersion => any,\n        versionId: string,\n    }): void {\n        this.errorCode = ERROR_CODE_RESTORE_VERSION;\n\n        try {\n            this.checkApiCallValidity(PERMISSION_CAN_DELETE, permissions, fileId);\n        } catch (e) {\n            errorCallback(e, this.errorCode);\n            return;\n        }\n\n        this.put({\n            id: fileId,\n            data: {\n                data: {\n                    trashed_at: null,\n                },\n            },\n            url: this.getVersionUrl(fileId, versionId),\n            successCallback,\n            errorCallback,\n        });\n    }\n}\n\nexport default Versions;\n"],"mappings":"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","ignoreList":[]}