{"version":3,"file":"parseCSV.js","names":["parseCSV","text","components","match","map","c","trim","length","charAt","substr"],"sources":["../../src/utils/parseCSV.js"],"sourcesContent":["/**\n * Parse a comma separated values text and return an array of separated strings\n *\n * @param  {string} text The input string\n * @return {array} A list of separated strings\n *\n * @example\n * parse('a, b, \"c, d\"')\n * returns [\"a\", \"b\", \"c, d\"]\n */\nfunction parseCSV(text) {\n    if (text === null || typeof text === 'undefined') {\n        // Input text is either null or undefined\n        return [];\n    }\n\n    // Convert the comma separated text into array\n    //\n    // The logic of the regular expression is simple\n    // look ahead comma or carriage return and retrieve:\n    //   1. either strings that are surrounded by double quotes\n    //   2. or strings that do not contain comma and carriage return\n    const components = text.match(/(\".*?\"|[^\",\\r\\n]+)(?=\\s*[,\\r\\n]|\\s*$)/g);\n    if (!components) {\n        // No match pattern is found\n        return [];\n    }\n\n    return components.map(c => {\n        // Trim the leading and trailing spaces\n        c = c.trim();\n\n        // Remove double quote pairs from both ends\n        // example '\"\"\"abc\"\"\"' will be altered to 'abc'\n        while (c.length >= 2 && c.charAt(0) === '\"' && c.charAt(c.length - 1) === '\"') {\n            c = c.substr(1, c.length - 2);\n        }\n\n        return c;\n    });\n}\n\nexport default parseCSV;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,QAAQA,CAACC,IAAI,EAAE;EACpB,IAAIA,IAAI,KAAK,IAAI,IAAI,OAAOA,IAAI,KAAK,WAAW,EAAE;IAC9C;IACA,OAAO,EAAE;EACb;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA,MAAMC,UAAU,GAAGD,IAAI,CAACE,KAAK,CAAC,wCAAwC,CAAC;EACvE,IAAI,CAACD,UAAU,EAAE;IACb;IACA,OAAO,EAAE;EACb;EAEA,OAAOA,UAAU,CAACE,GAAG,CAACC,CAAC,IAAI;IACvB;IACAA,CAAC,GAAGA,CAAC,CAACC,IAAI,CAAC,CAAC;;IAEZ;IACA;IACA,OAAOD,CAAC,CAACE,MAAM,IAAI,CAAC,IAAIF,CAAC,CAACG,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,IAAIH,CAAC,CAACG,MAAM,CAACH,CAAC,CAACE,MAAM,GAAG,CAAC,CAAC,KAAK,GAAG,EAAE;MAC3EF,CAAC,GAAGA,CAAC,CAACI,MAAM,CAAC,CAAC,EAAEJ,CAAC,CAACE,MAAM,GAAG,CAAC,CAAC;IACjC;IAEA,OAAOF,CAAC;EACZ,CAAC,CAAC;AACN;AAEA,eAAeL,QAAQ","ignoreList":[]}