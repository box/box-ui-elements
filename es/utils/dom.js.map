{"version":3,"file":"dom.js","names":["React","scrollIntoViewIfNeeded","KEYS","OVERLAY_WRAPPER_CLASS","isInputElement","element","HTMLElement","tag","tagName","toLowerCase","getAttribute","isFocusableElement","isCheckbox","classList","contains","parentElement","isButton","isActivateKey","event","key","enter","space","isLeftClick","button","altKey","ctrlKey","metaKey","shiftKey","focus","root","selector","focusRoot","querySelector","scrollIntoView","itemEl","options","parentEl","closest","_objectSpread","scrollMode","boundary","useIsContentOverflowed","contentRef","isContentOverflowed","setIsContentOverflowed","useState","useLayoutEffect","current","offsetWidth","scrollWidth","willOverflow"],"sources":["../../src/utils/dom.js"],"sourcesContent":["/**\n * @flow\n * @file File for some simple dom utilities\n * @author Box\n */\nimport * as React from 'react';\nimport scrollIntoViewIfNeeded from 'scroll-into-view-if-needed';\n\nimport { KEYS, OVERLAY_WRAPPER_CLASS } from '../constants';\nimport './domPolyfill';\n\n/**\n * Checks if an html element is some type of input-able\n * element or text area type where characters can be typed.\n *\n * @param {HTMLElement|null} element - the dom element to check\n * @return {boolean} true if its one of the above elements\n */\nexport function isInputElement(element: HTMLElement | EventTarget | null): boolean {\n    if (!element || !(element instanceof HTMLElement)) {\n        return false;\n    }\n\n    const tag = element.tagName.toLowerCase();\n    return (\n        tag === 'input' ||\n        tag === 'select' ||\n        tag === 'textarea' ||\n        (tag === 'div' && !!element.getAttribute('contenteditable'))\n    );\n}\n\n/**\n * Checks if an html element is some kind of element\n * that the user would want to keep their focus on.\n *\n * @param {HTMLElement|null} element - the dom element to check\n * @return {boolean} true if its one of the above elements\n */\nexport function isFocusableElement(element: HTMLElement | EventTarget | null): boolean {\n    if (!element || !(element instanceof HTMLElement)) {\n        return false;\n    }\n\n    const tag = element.tagName.toLowerCase();\n\n    // Box React UI sensitive checks\n    const isCheckbox =\n        element.classList.contains('checkbox-pointer-target') ||\n        (element.parentElement instanceof HTMLElement\n            ? element.parentElement.classList.contains('checkbox-label')\n            : false);\n\n    const isButton =\n        element.classList.contains('btn-content') ||\n        (element.parentElement instanceof HTMLElement && element.parentElement.classList.contains('btn')) ||\n        (element.parentElement instanceof HTMLElement && element.parentElement.classList.contains('bdl-Button')) ||\n        false;\n\n    return isInputElement(element) || tag === 'button' || tag === 'a' || tag === 'option' || isCheckbox || isButton;\n}\n\n/**\n * Checks if a keyboard event is intended to activate an element.\n *\n * @param {SyntheticKeyboardEvent<HTMLElement>} event - The keyboard event\n * @returns {boolean} true if the event is intended to activate the element\n */\nexport function isActivateKey(event: SyntheticKeyboardEvent<HTMLElement>) {\n    return event.key === KEYS.enter || event.key === KEYS.space;\n}\n\n/**\n * Checks if a mouse event is an unmodified left click.\n *\n * @param {SyntheticMouseEvent<HTMLElement>} event - The mouse event\n * @returns {boolean} true if the event is an unmodified left click\n */\nexport function isLeftClick(event: SyntheticMouseEvent<HTMLElement>) {\n    return event.button === 0 && !event.altKey && !event.ctrlKey && !event.metaKey && !event.shiftKey;\n}\n\n/**\n * Focuses a DOM element if it exists.\n *\n * @param {HTMLElement} root - the root dom element to search\n * @param {string} selector - the query selector\n * @param {boolean|void} [focusRoot] - if root should be focused\n * @return {void}\n */\nexport function focus(root: ?HTMLElement, selector?: string, focusRoot: boolean = true): void {\n    if (!root) {\n        return;\n    }\n\n    if (!selector) {\n        root.focus();\n        return;\n    }\n\n    const element = root.querySelector(selector);\n    if (element && typeof element.focus === 'function') {\n        element.focus();\n    } else if (focusRoot) {\n        root.focus();\n    }\n}\n\n/**\n * Scrolls the container / modal / wrapper instead of the body\n *\n * @param {HTMLElement} itemEl - the base dom element to search\n * @param {Object} options - scroll into view options to override\n * @return {void}\n */\nexport function scrollIntoView(itemEl: ?HTMLElement, options?: Object = {}): void {\n    // @NOTE: breaks encapsulation but alternative is unknown child ref\n    if (itemEl) {\n        const parentEl = itemEl.closest(`.body, .modal, .${OVERLAY_WRAPPER_CLASS}`);\n        scrollIntoViewIfNeeded(itemEl, {\n            scrollMode: 'if-needed',\n            boundary: parentEl,\n            ...options,\n        });\n    }\n}\n\n/**\n *\n * A React hook that tells you if an element (passed in as a ref) has content that overflows its container,\n * i.e., if the text is wider than the box around it.\n *\n * @param {{ current: null | HTMLElement }} contentRef\n * @return {boolean}\n */\nexport function useIsContentOverflowed(contentRef: { current: null | HTMLElement }): boolean {\n    const [isContentOverflowed, setIsContentOverflowed] = React.useState<boolean>(false);\n\n    // This function should be set as the ref prop for the measured component.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    React.useLayoutEffect(() => {\n        const { current } = contentRef;\n        if (!current) {\n            return;\n        }\n        const { offsetWidth, scrollWidth } = current;\n        const willOverflow = offsetWidth < scrollWidth;\n        if (willOverflow !== isContentOverflowed) {\n            setIsContentOverflowed(willOverflow);\n        }\n    });\n\n    return isContentOverflowed;\n}\n"],"mappings":"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","ignoreList":[]}