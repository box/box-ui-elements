{"version":3,"file":"Browser.js","names":["isDashSupported","Browser","getUserAgent","global","navigator","userAgent","isMobile","test","isIE","isFirefox","isSafari","isMobileSafari","isMobileChromeOniOS","canDownload","window","externalHost","document","createElement","canPlayDash","recheck","mse","MediaSource","isTypeSupported","canWriteToClipboard","clipboard","writeText","canReadFromClipboard","readText"],"sources":["../../src/utils/Browser.js"],"sourcesContent":["/**\n * @flow\n * @file Helper for some browser utilities\n * @author Box\n */\n\nlet isDashSupported;\n\nclass Browser {\n    /**\n     * Returns the user agent.\n     * Helps in mocking out.\n     *\n     * @return {String} navigator userAgent\n     */\n    static getUserAgent(): string {\n        return global.navigator.userAgent;\n    }\n\n    /**\n     * Returns whether browser is mobile, including tablets.\n     *\n     * We rely on user agent (UA) to avoid matching desktops with touchscreens.\n     * @see https://developer.mozilla.org/en-US/docs/Web/HTTP/Browser_detection_using_the_user_agent#mobile_tablet_or_desktop\n     *\n     * @return {boolean} Whether browser is mobile\n     */\n    static isMobile(): boolean {\n        const userAgent = Browser.getUserAgent();\n        return (\n            /iphone|ipad|ipod|android|blackberry|bb10|mini|windows\\sce|palm/i.test(userAgent) || /Mobi/i.test(userAgent)\n        );\n    }\n\n    /**\n     * Returns whether browser is IE.\n     *\n     * @return {boolena} Whether browser is IE\n     */\n    static isIE() {\n        return /Trident/i.test(Browser.getUserAgent());\n    }\n\n    /**\n     * Returns whether browser is Firefox.\n     *\n     * @return {boolean} Whether browser is Firefox\n     */\n    static isFirefox() {\n        const userAgent = Browser.getUserAgent();\n        return /Firefox/i.test(userAgent) && !/Seamonkey\\//i.test(userAgent);\n    }\n\n    /**\n     * Returns whether browser is Safari.\n     *\n     * @return {boolean} Whether browser is Safari\n     */\n    static isSafari() {\n        const userAgent = Browser.getUserAgent();\n        return /AppleWebKit/i.test(userAgent) && !/Chrome\\//i.test(userAgent);\n    }\n\n    /**\n     * Returns whether browser is Mobile Safari.\n     *\n     * @see https://developer.chrome.com/docs/multidevice/user-agent/\n     * @return {boolean} Whether browser is Mobile Safari\n     */\n    static isMobileSafari() {\n        return Browser.isMobile() && Browser.isSafari() && !Browser.isMobileChromeOniOS();\n    }\n\n    /**\n     * Returns whether browser is Mobile Chrome on iOS.\n     *\n     * @see https://developer.chrome.com/docs/multidevice/user-agent/\n     * @return {boolean} Whether browser is Mobile Chrome on iOS\n     */\n    static isMobileChromeOniOS() {\n        const userAgent = Browser.getUserAgent();\n        return Browser.isMobile() && /AppleWebKit/i.test(userAgent) && /CriOS\\//i.test(userAgent);\n    }\n\n    /**\n     * Returns whether browser can download via HTML5.\n     *\n     * @see https://github.com/Modernizr/Modernizr/blob/master/feature-detects/a/download.js\n     * @return {boolean} Whether browser supports downloading\n     */\n    static canDownload() {\n        return !Browser.isMobile() || (!window.externalHost && 'download' in document.createElement('a'));\n    }\n\n    /**\n     * Checks the browser for Dash support using H264 high.\n     * Dash requires MediaSource extensions to exist and be applicable\n     * to the H264 container (since we use H264 and not webm)\n     *\n     * @public\n     * @param {boolean} recheck - recheck support\n     * @return {boolean} true if dash is usable\n     */\n    static canPlayDash(recheck: boolean = false) {\n        if (typeof isDashSupported === 'undefined' || recheck) {\n            const mse = global.MediaSource;\n            isDashSupported =\n                !!mse &&\n                typeof mse.isTypeSupported === 'function' &&\n                mse.isTypeSupported('video/mp4; codecs=\"avc1.64001E\"');\n        }\n\n        return isDashSupported;\n    }\n\n    /**\n     * Checks whether the browser has support for the Clipboard API. This new API supercedes\n     * the `execCommand`-based API and uses Promises for detecting whether it works or not.\n     *\n     * This check determines if the browser can support writing to the clipboard.\n     * @see https://www.w3.org/TR/clipboard-apis/#async-clipboard-api\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Clipboard\n     *\n     * @return {boolean} whether writing to the clipboard is possible\n     */\n    static canWriteToClipboard() {\n        return !!(global.navigator.clipboard && global.navigator.clipboard.writeText);\n    }\n\n    /**\n     * Checks whether the browser has support for the Clipboard API. This new API supercedes\n     * the `execCommand`-based API and uses Promises for detecting whether it works or not.\n     *\n     * This check determines if the browser can support reading from the clipboard.\n     * @see https://www.w3.org/TR/clipboard-apis/#async-clipboard-api\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Clipboard\n     *\n     * @return {boolean} whether reading from the clipboard is possible\n     */\n    static canReadFromClipboard() {\n        return !!(global.navigator.clipboard && global.navigator.clipboard.readText);\n    }\n}\n\nexport default Browser;\n"],"mappings":"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","ignoreList":[]}