{"version":3,"file":"flatten.js","names":["getBadItemError","TYPE_FOLDER","TYPE_FILE","TYPE_WEBLINK","flatten","list","folderAPI","fileAPI","weblinkAPI","items","forEach","item","id","type","api","Error","cache","getCache","key","getCacheKey","has","merge","set","push"],"sources":["../../src/utils/flatten.js"],"sourcesContent":["/**\n * @flow\n * @file Function to flatten an item list\n * @author Box\n */\n\nimport { getBadItemError } from './error';\nimport { TYPE_FOLDER, TYPE_FILE, TYPE_WEBLINK } from '../constants';\nimport type { BoxItem } from '../common/types/core';\nimport type APICache from './Cache';\n\n/**\n * Takes an item list and flattens it by moving\n * all item entries into the cache and replacing the list\n * entries with references to those items in the cache.\n * Web links are trated as files.\n *\n * @param {Array} list to flatten\n * @param {Folder} folderAPI api for files\n * @param {File} fileAPI api for files\n * @param {WebLink} weblinkAPI api for web links\n * @return {Array} list with items replaced with reference keys\n */\nexport default function flatten(\n    list: BoxItem[],\n    folderAPI: FolderAPI,\n    fileAPI: FileAPI,\n    weblinkAPI: WebLinkAPI,\n): string[] {\n    const items: string[] = [];\n    list.forEach((item: BoxItem) => {\n        const { id, type }: BoxItem = item;\n        if (!id || !type) {\n            throw getBadItemError();\n        }\n\n        let api;\n        switch (type) {\n            case TYPE_FOLDER:\n                api = folderAPI;\n                break;\n            case TYPE_FILE:\n                api = fileAPI;\n                break;\n            case TYPE_WEBLINK:\n                api = weblinkAPI;\n                break;\n            default:\n                throw new Error('Unknown Type!');\n        }\n\n        const cache: APICache = api.getCache();\n        const key: string = api.getCacheKey(id);\n\n        if (cache.has(key)) {\n            cache.merge(key, item);\n        } else {\n            cache.set(key, item);\n        }\n\n        items.push(key);\n    });\n    return items;\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA,SAASA,eAAe,QAAQ,SAAS;AACzC,SAASC,WAAW,EAAEC,SAAS,EAAEC,YAAY,QAAQ,cAAc;AAInE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,OAAOA,CAC3BC,IAAe,EACfC,SAAoB,EACpBC,OAAgB,EAChBC,UAAsB,EACd;EACR,MAAMC,KAAe,GAAG,EAAE;EAC1BJ,IAAI,CAACK,OAAO,CAAEC,IAAa,IAAK;IAC5B,MAAM;MAAEC,EAAE;MAAEC;IAAc,CAAC,GAAGF,IAAI;IAClC,IAAI,CAACC,EAAE,IAAI,CAACC,IAAI,EAAE;MACd,MAAMb,eAAe,CAAC,CAAC;IAC3B;IAEA,IAAIc,GAAG;IACP,QAAQD,IAAI;MACR,KAAKZ,WAAW;QACZa,GAAG,GAAGR,SAAS;QACf;MACJ,KAAKJ,SAAS;QACVY,GAAG,GAAGP,OAAO;QACb;MACJ,KAAKJ,YAAY;QACbW,GAAG,GAAGN,UAAU;QAChB;MACJ;QACI,MAAM,IAAIO,KAAK,CAAC,eAAe,CAAC;IACxC;IAEA,MAAMC,KAAe,GAAGF,GAAG,CAACG,QAAQ,CAAC,CAAC;IACtC,MAAMC,GAAW,GAAGJ,GAAG,CAACK,WAAW,CAACP,EAAE,CAAC;IAEvC,IAAII,KAAK,CAACI,GAAG,CAACF,GAAG,CAAC,EAAE;MAChBF,KAAK,CAACK,KAAK,CAACH,GAAG,EAAEP,IAAI,CAAC;IAC1B,CAAC,MAAM;MACHK,KAAK,CAACM,GAAG,CAACJ,GAAG,EAAEP,IAAI,CAAC;IACxB;IAEAF,KAAK,CAACc,IAAI,CAACL,GAAG,CAAC;EACnB,CAAC,CAAC;EACF,OAAOT,KAAK;AAChB","ignoreList":[]}