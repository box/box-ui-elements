{"version":3,"file":"sorter.js","names":["comparator","getBadItemError","isSortingNeeded","order","sortBy","sortDirection","Array","isArray","some","entry","by","direction","sorter","item","cache","item_collection","entries","sort","sortFeedItems","args","feedItems","reduce","items","itemContainer","concat","a","b","Date","parse","created_at"],"sources":["../../src/utils/sorter.js"],"sourcesContent":["/**\n * @flow\n * @file Function to sort the item list\n * @author Box\n */\n\nimport comparator from './comparator';\nimport { getBadItemError } from './error';\nimport type { Annotations, AppActivityItems, Comments, FeedItems, Tasks, ThreadedComments } from '../common/types/feed';\nimport type {\n    SortBy,\n    SortDirection,\n    Order,\n    FlattenedBoxItem,\n    FlattenedBoxItemCollection,\n    FileVersions,\n} from '../common/types/core';\nimport type APICache from './Cache';\n\nfunction isSortingNeeded(order?: Order[], sortBy: SortBy, sortDirection: SortDirection): boolean {\n    return !Array.isArray(order) || !order.some(entry => entry.by === sortBy && entry.direction === sortDirection);\n}\n\n/**\n * Sorts items in place\n *\n * @param {Object} item box item object\n * @param {string} sortBy sort by field\n * @param {string} sortDirection the sort direction\n * @param {Cache} cache item cache\n * @return {void}\n */\nexport default function sorter(\n    item: FlattenedBoxItem,\n    sortBy: SortBy,\n    sortDirection: SortDirection,\n    cache: APICache,\n): FlattenedBoxItem {\n    const { item_collection }: FlattenedBoxItem = item;\n    if (!item_collection) {\n        throw getBadItemError();\n    }\n\n    const { entries, order }: FlattenedBoxItemCollection = item_collection;\n    if (!Array.isArray(entries)) {\n        throw getBadItemError();\n    }\n\n    if (isSortingNeeded(order, sortBy, sortDirection)) {\n        entries.sort(comparator(sortBy, sortDirection, cache));\n        item_collection.order = [\n            {\n                by: sortBy,\n                direction: sortDirection,\n            },\n        ];\n    }\n\n    return item;\n}\n\n/**\n * Sort valid feed items, descending by created_at time.\n *\n * @param {Array<?Comments | ?Tasks | ?FileVersions>} args - Arguments list of each item container\n * type that is allowed in the feed.\n * @return {Array<?Comments | ?Tasks | ?FileVersions>} the sorted feed items\n */\nexport function sortFeedItems(\n    ...args: Array<?Comments | ?ThreadedComments | ?Tasks | ?FileVersions | ?AppActivityItems | ?Annotations>\n): FeedItems {\n    const feedItems: FeedItems = args\n        .reduce((items, itemContainer) => {\n            if (itemContainer) {\n                return items.concat(itemContainer.entries);\n            }\n\n            return items;\n        }, [])\n        .sort((a, b) => Date.parse(a.created_at) - Date.parse(b.created_at));\n\n    return feedItems;\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,UAAU,MAAM,cAAc;AACrC,SAASC,eAAe,QAAQ,SAAS;AAYzC,SAASC,eAAeA,CAACC,KAAe,EAAEC,MAAc,EAAEC,aAA4B,EAAW;EAC7F,OAAO,CAACC,KAAK,CAACC,OAAO,CAACJ,KAAK,CAAC,IAAI,CAACA,KAAK,CAACK,IAAI,CAACC,KAAK,IAAIA,KAAK,CAACC,EAAE,KAAKN,MAAM,IAAIK,KAAK,CAACE,SAAS,KAAKN,aAAa,CAAC;AAClH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASO,MAAMA,CAC1BC,IAAsB,EACtBT,MAAc,EACdC,aAA4B,EAC5BS,KAAe,EACC;EAChB,MAAM;IAAEC;EAAkC,CAAC,GAAGF,IAAI;EAClD,IAAI,CAACE,eAAe,EAAE;IAClB,MAAMd,eAAe,CAAC,CAAC;EAC3B;EAEA,MAAM;IAAEe,OAAO;IAAEb;EAAkC,CAAC,GAAGY,eAAe;EACtE,IAAI,CAACT,KAAK,CAACC,OAAO,CAACS,OAAO,CAAC,EAAE;IACzB,MAAMf,eAAe,CAAC,CAAC;EAC3B;EAEA,IAAIC,eAAe,CAACC,KAAK,EAAEC,MAAM,EAAEC,aAAa,CAAC,EAAE;IAC/CW,OAAO,CAACC,IAAI,CAACjB,UAAU,CAACI,MAAM,EAAEC,aAAa,EAAES,KAAK,CAAC,CAAC;IACtDC,eAAe,CAACZ,KAAK,GAAG,CACpB;MACIO,EAAE,EAAEN,MAAM;MACVO,SAAS,EAAEN;IACf,CAAC,CACJ;EACL;EAEA,OAAOQ,IAAI;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASK,aAAaA,CACzB,GAAGC,IAAsG,EAChG;EACT,MAAMC,SAAoB,GAAGD,IAAI,CAC5BE,MAAM,CAAC,CAACC,KAAK,EAAEC,aAAa,KAAK;IAC9B,IAAIA,aAAa,EAAE;MACf,OAAOD,KAAK,CAACE,MAAM,CAACD,aAAa,CAACP,OAAO,CAAC;IAC9C;IAEA,OAAOM,KAAK;EAChB,CAAC,EAAE,EAAE,CAAC,CACLL,IAAI,CAAC,CAACQ,CAAC,EAAEC,CAAC,KAAKC,IAAI,CAACC,KAAK,CAACH,CAAC,CAACI,UAAU,CAAC,GAAGF,IAAI,CAACC,KAAK,CAACF,CAAC,CAACG,UAAU,CAAC,CAAC;EAExE,OAAOT,SAAS;AACpB","ignoreList":[]}