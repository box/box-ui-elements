{"version":3,"file":"MessageCenterModal.js","names":["React","FormattedMessage","injectIntl","classNames","AutoSizer","CellMeasurer","CellMeasurerCache","List","debounce","AnimateHeight","Scrollbar","Modal","CategorySelector","CollapsibleScrollbar","Message","intlMessages","MessagePreviewGhost","ContentGhost","BottomContentWrapper","ErrorState","EmptyState","ALL","cache","defaultHeight","fixedWidth","SCROLLBAR_MARGIN","listStyle","overflowX","overflowY","trackYStyles","marginLeft","MessageCenterModal","apiHost","contentPreviewProps","onRequestClose","messages","getToken","intl","overscanRowCount","onMessageShown","categories","useMemo","Array","isArray","messageCategoriesSet","Set","forEach","templateParams","category","add","size","value","displayText","formatMessage","all","product","events","boxEducation","listRef","useRef","isMouseInTitleRef","messageLoadCacheRef","Map","setCategory","useState","isExpanded","setIsExpanded","dimensions","setDimensions","width","height","scrollRef","title","createElement","className","onMouseEnter","current","onMouseLeave","duration","currentCategory","onSelect","clearAll","filteredMessages","filter","sort","activateDate","activateDateA","priority","priorityA","activateDateB","priorityB","useEffect","scrollbarRef","scrollToTop","rowRenderer","index","parent","style","isVisible","message","messageId","id","isFirstTimeBeingShown","has","set","key","columnIndex","rowIndex","registerChild","ref","_extends","handleOnScroll","clientHeight","scrollTop","prevClientHeight","prevScrollTop","isScrollingDown","handleResize","resizeDimensions","handlOnResize","useCallback","renderMessages","deferredMeasurementCache","noRowsRenderer","rowCount","length","rowHeight","scrollToIndex","isOpen","onResize","onScroll","scrollLeft","Grid","handleScrollEvent","permanentTrackY","Error","errorFetchingPosts"],"sources":["../../../../../src/features/message-center/components/message-center-modal/MessageCenterModal.js"],"sourcesContent":["// @flow\nimport * as React from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport type { IntlShape } from 'react-intl';\nimport classNames from 'classnames';\nimport { AutoSizer, CellMeasurer, CellMeasurerCache, List } from '@box/react-virtualized';\nimport debounce from 'lodash/debounce';\nimport AnimateHeight from 'react-animate-height';\nimport Scrollbar from 'react-scrollbars-custom';\nimport type { Token } from '../../../../common/types/core';\nimport Modal from '../../../../components/modal/Modal';\nimport CategorySelector from '../../../../components/category-selector/CategorySelector';\n\nimport CollapsibleScrollbar from '../collapsibile-scrollbar/CollapsibleScrollbar';\nimport Message from '../message/Message';\nimport intlMessages from '../../messages';\nimport type { EligibleMessageCenterMessage } from '../../types';\nimport type { ContentPreviewProps } from '../../../message-preview-content/MessagePreviewContent';\nimport './MessageCenterModal.scss';\nimport MessagePreviewGhost from '../../../message-preview-ghost/MessagePreviewGhost';\nimport ContentGhost from '../templates/common/ContentGhost';\nimport BottomContentWrapper from '../templates/common/BottomContentWrapper';\nimport ErrorState from '../error-state/ErrorState';\nimport EmptyState from './EmptyState';\n\ntype Props = {|\n    apiHost: string,\n    contentPreviewProps?: ContentPreviewProps,\n    getToken: (fileId: string) => Promise<Token>,\n    intl: IntlShape,\n    messages: Array<EligibleMessageCenterMessage> | null | Error,\n    onMessageShown: EligibleMessageCenterMessage => void,\n    onRequestClose: () => void,\n    overscanRowCount?: number,\n|};\n\nconst ALL = 'all';\nconst cache = new CellMeasurerCache({\n    defaultHeight: 400,\n    fixedWidth: true,\n});\n\nconst SCROLLBAR_MARGIN = 16;\nconst listStyle = { overflowX: false, overflowY: false };\nconst trackYStyles = { marginLeft: `${SCROLLBAR_MARGIN}px` };\n\nfunction MessageCenterModal({\n    apiHost,\n    contentPreviewProps,\n    onRequestClose,\n    messages,\n    getToken,\n    intl,\n    overscanRowCount = 1,\n    onMessageShown,\n}: Props) {\n    const categories: Array<{ displayText: string, value: string }> | null = React.useMemo(() => {\n        if (!Array.isArray(messages)) {\n            return null;\n        }\n\n        const messageCategoriesSet = new Set<string>();\n        messages.forEach(({ templateParams: { category } }) => {\n            messageCategoriesSet.add(category);\n        });\n\n        if (messageCategoriesSet.size <= 1) {\n            return null;\n        }\n\n        return [\n            {\n                value: ALL,\n                displayText: intl.formatMessage(intlMessages.all),\n            },\n            {\n                value: 'product',\n                displayText: intl.formatMessage(intlMessages.product),\n            },\n            {\n                value: 'events',\n                displayText: intl.formatMessage(intlMessages.events),\n            },\n            {\n                value: 'education',\n                displayText: intl.formatMessage(intlMessages.boxEducation),\n            },\n        ];\n    }, [intl, messages]);\n    const listRef = React.useRef(null);\n    const isMouseInTitleRef = React.useRef(false);\n    const messageLoadCacheRef = React.useRef(new Map<number, boolean>());\n    const [category, setCategory] = React.useState(ALL);\n    const [isExpanded, setIsExpanded] = React.useState(true);\n    const [dimensions, setDimensions] = React.useState({ width: 0, height: 0 });\n    const scrollRef = React.useRef<{ scrollbarRef: React.ElementRef<typeof Scrollbar> } | null>(null);\n\n    const title = (\n        <section\n            className={classNames('bdl-MessageCenterModal-title', {\n                'is-expanded': isExpanded,\n                'is-collapsed': !isExpanded,\n            })}\n            data-testid=\"modal-title\"\n            onMouseEnter={() => {\n                isMouseInTitleRef.current = true;\n                setIsExpanded(true);\n            }}\n            onMouseLeave={() => {\n                isMouseInTitleRef.current = false;\n            }}\n        >\n            <div className=\"bdl-MessageCenterModal-whatsNew\">\n                <FormattedMessage {...intlMessages.title} />\n            </div>\n            {categories && (\n                <AnimateHeight duration={300} height={isExpanded ? 'auto' : 0}>\n                    <section className=\"bdl-MessageCenterModal-categorySelector\">\n                        <CategorySelector\n                            currentCategory={category}\n                            categories={categories}\n                            onSelect={value => {\n                                cache.clearAll();\n                                setCategory(value);\n                            }}\n                        />\n                    </section>\n                </AnimateHeight>\n            )}\n        </section>\n    );\n\n    const filteredMessages = React.useMemo(() => {\n        if (!Array.isArray(messages)) {\n            return [];\n        }\n\n        return messages\n            .filter(({ templateParams }) => {\n                return category === ALL || templateParams.category === category;\n            })\n            .sort(\n                (\n                    { activateDate: activateDateA, priority: priorityA },\n                    { activateDate: activateDateB, priority: priorityB },\n                ) => {\n                    // sort by date (descending), secondary sort by priority (descending)\n                    if (activateDateA > activateDateB) {\n                        return -1;\n                    }\n\n                    if (activateDateA < activateDateB) {\n                        return 1;\n                    }\n\n                    if (priorityA > priorityB) {\n                        return -1;\n                    }\n\n                    if (priorityA < priorityB) {\n                        return 1;\n                    }\n\n                    return 0;\n                },\n            );\n    }, [category, messages]);\n\n    React.useEffect(() => {\n        if (scrollRef.current && scrollRef.current.scrollbarRef && scrollRef.current.scrollbarRef.current) {\n            scrollRef.current.scrollbarRef.current.scrollToTop();\n        }\n    }, [category]);\n\n    function rowRenderer({ index, parent, style, isVisible }: Object) {\n        const message = filteredMessages[index];\n        const messageId = message.id;\n        const isFirstTimeBeingShown = !messageLoadCacheRef.current.has(messageId);\n        if (isVisible && isFirstTimeBeingShown) {\n            messageLoadCacheRef.current.set(messageId, true);\n            onMessageShown(message);\n        }\n\n        return (\n            <CellMeasurer key={messageId} cache={cache} columnIndex={0} parent={parent} rowIndex={index}>\n                {({ registerChild }) => (\n                    <div\n                        ref={registerChild}\n                        className=\"bdl-MessageCenterModal-message\"\n                        style={style}\n                        data-testid=\"messagecentermodalmessage\"\n                    >\n                        <Message\n                            contentPreviewProps={contentPreviewProps}\n                            apiHost={apiHost}\n                            {...message}\n                            getToken={getToken}\n                        />\n                    </div>\n                )}\n            </CellMeasurer>\n        );\n    }\n\n    function handleOnScroll(clientHeight, scrollTop, prevClientHeight, prevScrollTop) {\n        if (clientHeight > 0 && clientHeight === prevClientHeight && !isMouseInTitleRef.current) {\n            const isScrollingDown = prevScrollTop < scrollTop;\n            if (isExpanded && isScrollingDown) {\n                setIsExpanded(false);\n            } else if (!isExpanded && !isScrollingDown) {\n                setIsExpanded(true);\n            }\n        }\n    }\n\n    function handleResize(resizeDimensions) {\n        setDimensions(resizeDimensions);\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const handlOnResize = React.useCallback(debounce(handleResize, 300), []);\n\n    function renderMessages(width: number, height: number): React.Node {\n        if (!messages) {\n            return (\n                <div className=\"bdl-MessageCenterModal-message\">\n                    <div className=\"bdl-MessageCenterModal-ghost\">\n                        <MessagePreviewGhost />\n                        <BottomContentWrapper>\n                            <ContentGhost />\n                        </BottomContentWrapper>\n                    </div>\n                </div>\n            );\n        }\n\n        return (\n            <List\n                ref={listRef}\n                className=\"bdl-MessageCenterModal-list\"\n                deferredMeasurementCache={cache}\n                height={dimensions.height || height}\n                noRowsRenderer={EmptyState}\n                overscanRowCount={overscanRowCount}\n                rowCount={filteredMessages.length}\n                rowHeight={cache.rowHeight}\n                rowRenderer={rowRenderer}\n                scrollToIndex={0}\n                style={listStyle}\n                width={width - SCROLLBAR_MARGIN}\n            />\n        );\n    }\n\n    return (\n        <Modal\n            className=\"bdl-MessageCenterModal\"\n            data-resin-component=\"messageCenterModal\"\n            data-testid=\"messagecentermodal\"\n            isOpen\n            onRequestClose={onRequestClose}\n            title={title}\n        >\n            <section className=\"bdl-MessageCenterModal-messages\">\n                <AutoSizer onResize={handlOnResize}>\n                    {({ height, width }) => (\n                        <CollapsibleScrollbar\n                            ref={scrollRef}\n                            onScroll={(\n                                { clientHeight, scrollTop, scrollLeft },\n                                { clientHeight: prevClientHeight, scrollTop: prevScrollTop },\n                            ) => {\n                                handleOnScroll(clientHeight, scrollTop, prevClientHeight, prevScrollTop);\n                                if (listRef.current && listRef.current.Grid) {\n                                    const { Grid } = listRef.current;\n                                    Grid.handleScrollEvent({ scrollTop, scrollLeft });\n                                }\n                            }}\n                            permanentTrackY\n                            style={{ width, height }}\n                            trackYStyles={trackYStyles}\n                        >\n                            {messages instanceof Error ? (\n                                <ErrorState>\n                                    <FormattedMessage {...intlMessages.errorFetchingPosts} />\n                                </ErrorState>\n                            ) : (\n                                renderMessages(width, height)\n                            )}\n                        </CollapsibleScrollbar>\n                    )}\n                </AutoSizer>\n            </section>\n        </Modal>\n    );\n}\n\nexport default injectIntl(MessageCenterModal);\n"],"mappings":"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","ignoreList":[]}