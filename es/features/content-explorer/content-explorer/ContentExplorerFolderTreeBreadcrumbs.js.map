{"version":3,"file":"ContentExplorerFolderTreeBreadcrumbs.js","names":["React","PropTypes","injectIntl","FormattedMessage","Arrow16","Button","DropdownMenu","IconFolderTree","Menu","MenuItem","FoldersPathPropType","messages","FOLDER_TREE_ICON_HEIGHT","FOLDER_TREE_ICON_WIDTH","BREADCRUMB_ARROW_ICON_HEIGHT","BREADCRUMB_ARROW_ICON_WIDTH","BREADCRUMB_ARROW_ICON_VIEWBOX","ContentExplorerFolderTreeBreadcrumbs","foldersPath","intl","formatMessage","formatNumber","isFolderTreeButtonHidden","numTotalItems","onBreadcrumbClick","currentFolderName","length","name","foldersPathWithoutLast","slice","createElement","className","clickToViewPath","title","filePath","type","height","width","map","folder","i","key","id","onClick","event","viewBox","_extends","folderTreeBreadcrumbsText","values","folderName","totalItems","propTypes","isRequired","any","bool","number","func","ContentExplorerFolderTreeBreadcrumbsBase"],"sources":["../../../../src/features/content-explorer/content-explorer/ContentExplorerFolderTreeBreadcrumbs.js"],"sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { injectIntl, FormattedMessage } from 'react-intl';\n\nimport Arrow16 from '../../../icon/fill/Arrow16';\nimport Button from '../../../components/button';\nimport DropdownMenu from '../../../components/dropdown-menu/DropdownMenu';\nimport IconFolderTree from '../../../icons/general/IconFolderTree';\nimport { Menu, MenuItem } from '../../../components/menu';\n\nimport { FoldersPathPropType } from '../prop-types';\nimport messages from '../messages';\nimport {\n    FOLDER_TREE_ICON_HEIGHT,\n    FOLDER_TREE_ICON_WIDTH,\n    BREADCRUMB_ARROW_ICON_HEIGHT,\n    BREADCRUMB_ARROW_ICON_WIDTH,\n    BREADCRUMB_ARROW_ICON_VIEWBOX,\n} from './constants';\n\nconst ContentExplorerFolderTreeBreadcrumbs = ({\n    foldersPath,\n    intl: { formatMessage, formatNumber },\n    isFolderTreeButtonHidden,\n    numTotalItems,\n    onBreadcrumbClick,\n}) => {\n    const currentFolderName = foldersPath[foldersPath.length - 1].name;\n    const foldersPathWithoutLast = foldersPath.slice(0, -1);\n    return (\n        <div className=\"bdl-ContentExplorerFolderTreeBreadcrumbs\">\n            {!isFolderTreeButtonHidden && (\n                <DropdownMenu>\n                    <Button\n                        aria-label={formatMessage(messages.clickToViewPath)}\n                        className=\"bdl-ContentExplorerFolderTreeBreadcrumbs-button\"\n                        title={formatMessage(messages.filePath)}\n                        type=\"button\"\n                    >\n                        <IconFolderTree height={FOLDER_TREE_ICON_HEIGHT} width={FOLDER_TREE_ICON_WIDTH} />\n                    </Button>\n                    <Menu>\n                        {foldersPathWithoutLast.map((folder, i) => (\n                            <MenuItem\n                                data-testid=\"folder-tree-item\"\n                                key={folder.id}\n                                onClick={event => onBreadcrumbClick(i, event)}\n                            >\n                                {folder.name}\n                            </MenuItem>\n                        ))}\n                    </Menu>\n                </DropdownMenu>\n            )}\n            {!isFolderTreeButtonHidden && (\n                <Arrow16\n                    className=\"bdl-ContentExplorerFolderTreeBreadcrumbs-icon\"\n                    height={BREADCRUMB_ARROW_ICON_HEIGHT}\n                    width={BREADCRUMB_ARROW_ICON_WIDTH}\n                    viewBox={BREADCRUMB_ARROW_ICON_VIEWBOX}\n                />\n            )}\n            <span className=\"bdl-ContentExplorerFolderTreeBreadcrumbs-text\" title={currentFolderName}>\n                <FormattedMessage\n                    {...messages.folderTreeBreadcrumbsText}\n                    values={{ folderName: currentFolderName, totalItems: formatNumber(numTotalItems) }}\n                />\n            </span>\n        </div>\n    );\n};\n\nContentExplorerFolderTreeBreadcrumbs.propTypes = {\n    foldersPath: FoldersPathPropType.isRequired,\n    intl: PropTypes.any,\n    isFolderTreeButtonHidden: PropTypes.bool,\n    numTotalItems: PropTypes.number.isRequired,\n    onBreadcrumbClick: PropTypes.func,\n};\n\nexport { ContentExplorerFolderTreeBreadcrumbs as ContentExplorerFolderTreeBreadcrumbsBase };\nexport default injectIntl(ContentExplorerFolderTreeBreadcrumbs);\n"],"mappings":"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","ignoreList":[]}