{"version":3,"file":"ContentExplorerActionButtons.js","names":["PropTypes","React","FormattedMessage","Button","PlainButton","PrimaryButton","ContentExplorerModePropType","FolderPropType","ItemsMapPropType","ContentExplorerModes","messages","getChosenItemsFromSelectedItems","selectedItems","chosenItems","selectedItemsIds","Object","keys","forEach","id","isActionDisabled","push","ContentExplorerActionButtons","actionButtonsProps","areButtonsDisabled","cancelButtonProps","canIncludeSubfolders","chooseButtonProps","chooseButtonText","contentExplorerMode","currentFolder","isChooseButtonLoading","isCopyButtonLoading","isMoveButtonLoading","isResponsive","isSelectAllAllowed","onCancelClick","onChooseClick","onCopyClick","onFoldersPathUpdated","onMoveClick","onSelectedClick","onViewSelectedClick","isNoSelectionAllowed","handleChooseClick","length","SELECT_FOLDER","handleMoveClick","itemToMove","handleCopyClick","itemToCopy","getStatusElement","statusMessage","statusElement","createElement","className","onClick","foldersPath","type","renderStatus","numSelected","_extends","values","numItemsSelected","numFoldersSelected","MULTI_SELECT","contentExplorerActionButtonsStyle","isDisabled","cancel","SELECT_FILE","isLoading","choose","MOVE_COPY","key","move","COPY","copy","propTypes","object","bool","node","isRequired","func"],"sources":["../../../../src/features/content-explorer/content-explorer/ContentExplorerActionButtons.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Button from '../../../components/button';\nimport PlainButton from '../../../components/plain-button';\nimport PrimaryButton from '../../../components/primary-button';\n\nimport { ContentExplorerModePropType, FolderPropType, ItemsMapPropType } from '../prop-types';\nimport ContentExplorerModes from '../modes';\nimport messages from '../messages';\n\nexport const getChosenItemsFromSelectedItems = selectedItems => {\n    const chosenItems = [];\n    const selectedItemsIds = Object.keys(selectedItems);\n    selectedItemsIds.forEach(id => {\n        if (!selectedItems[id].isActionDisabled) {\n            chosenItems.push(selectedItems[id]);\n        }\n    });\n    return chosenItems;\n};\n\nconst ContentExplorerActionButtons = ({\n    actionButtonsProps = {},\n    areButtonsDisabled = false,\n    cancelButtonProps = {},\n    canIncludeSubfolders,\n    chooseButtonProps = {},\n    chooseButtonText,\n    contentExplorerMode,\n    currentFolder,\n    isChooseButtonLoading = false,\n    isCopyButtonLoading = false,\n    isMoveButtonLoading = false,\n    isResponsive = false,\n    isSelectAllAllowed,\n    onCancelClick,\n    onChooseClick,\n    onCopyClick,\n    onFoldersPathUpdated,\n    onMoveClick,\n    onSelectedClick,\n    onViewSelectedClick,\n    selectedItems,\n    isNoSelectionAllowed,\n}) => {\n    const handleChooseClick = () => {\n        let chosenItems = getChosenItemsFromSelectedItems(selectedItems);\n        if (chosenItems.length === 0 && contentExplorerMode === ContentExplorerModes.SELECT_FOLDER && currentFolder) {\n            // Choose the selected item. If no item is selected, choose the current folder.\n            chosenItems = [currentFolder];\n        }\n\n        if (onChooseClick && (chosenItems.length > 0 || isNoSelectionAllowed)) {\n            onChooseClick(chosenItems);\n        }\n    };\n\n    const handleMoveClick = () => {\n        const selectedItemsIds = Object.keys(selectedItems);\n        // Move to the selected item. If no item is selected, move to the current folder.\n        const itemToMove = selectedItemsIds.length > 0 ? selectedItems[selectedItemsIds[0]] : currentFolder;\n\n        if (onMoveClick) {\n            onMoveClick(itemToMove);\n        }\n    };\n\n    const handleCopyClick = () => {\n        const selectedItemsIds = Object.keys(selectedItems);\n        // Copy to the selected item. If no item is selected, copy to the current folder.\n        const itemToCopy = selectedItemsIds.length > 0 ? selectedItems[selectedItemsIds[0]] : currentFolder;\n\n        if (onCopyClick) {\n            onCopyClick(itemToCopy);\n        }\n    };\n\n    const getStatusElement = statusMessage => {\n        let statusElement = <span className=\"status-message\">{statusMessage}</span>;\n\n        if (onViewSelectedClick) {\n            statusElement = (\n                <PlainButton\n                    className=\"status-message-link\"\n                    onClick={() => {\n                        const foldersPath = onViewSelectedClick();\n                        if (foldersPath) {\n                            onFoldersPathUpdated(foldersPath);\n                        }\n                    }}\n                    type=\"button\"\n                >\n                    {statusMessage}\n                </PlainButton>\n            );\n        } else if (onSelectedClick) {\n            statusElement = (\n                <Button className=\"status-message\" onClick={onSelectedClick} type=\"button\">\n                    {statusMessage}\n                </Button>\n            );\n        }\n        return statusElement;\n    };\n\n    const renderStatus = () => {\n        const numSelected = getChosenItemsFromSelectedItems(selectedItems).length;\n\n        let statusMessage = <FormattedMessage {...messages.numSelected} values={{ numSelected }} />;\n\n        if (canIncludeSubfolders) {\n            statusMessage = isSelectAllAllowed ? (\n                <FormattedMessage {...messages.numItemsSelected} values={{ numSelected }} />\n            ) : (\n                <FormattedMessage {...messages.numFoldersSelected} values={{ numSelected }} />\n            );\n        }\n\n        const statusElement = getStatusElement(statusMessage);\n\n        return contentExplorerMode === ContentExplorerModes.MULTI_SELECT && statusElement;\n    };\n    const contentExplorerActionButtonsStyle = isResponsive\n        ? 'modal-actions'\n        : 'content-explorer-action-buttons-container';\n\n    return (\n        <div className={contentExplorerActionButtonsStyle} {...actionButtonsProps}>\n            {renderStatus()}\n            <Button\n                className=\"content-explorer-cancel-button\"\n                type=\"button\"\n                isDisabled={isChooseButtonLoading || isMoveButtonLoading || isCopyButtonLoading}\n                onClick={onCancelClick}\n                {...cancelButtonProps}\n            >\n                <FormattedMessage {...messages.cancel} />\n            </Button>\n            {(contentExplorerMode === ContentExplorerModes.SELECT_FILE ||\n                contentExplorerMode === ContentExplorerModes.SELECT_FOLDER ||\n                contentExplorerMode === ContentExplorerModes.MULTI_SELECT) && (\n                <PrimaryButton\n                    type=\"button\"\n                    className=\"content-explorer-choose-button\"\n                    isDisabled={areButtonsDisabled || isChooseButtonLoading}\n                    isLoading={isChooseButtonLoading}\n                    onClick={handleChooseClick}\n                    {...chooseButtonProps}\n                >\n                    {chooseButtonText || <FormattedMessage {...messages.choose} />}\n                </PrimaryButton>\n            )}\n            {contentExplorerMode === ContentExplorerModes.MOVE_COPY && (\n                <PrimaryButton\n                    key=\"move-btn\"\n                    type=\"button\"\n                    className=\"content-explorer-move-button\"\n                    onClick={handleMoveClick}\n                    isDisabled={areButtonsDisabled || isMoveButtonLoading || isCopyButtonLoading}\n                    isLoading={isMoveButtonLoading}\n                >\n                    <FormattedMessage {...messages.move} />\n                </PrimaryButton>\n            )}\n            {(contentExplorerMode === ContentExplorerModes.MOVE_COPY ||\n                contentExplorerMode === ContentExplorerModes.COPY) && (\n                <PrimaryButton\n                    key=\"copy-btn\"\n                    type=\"button\"\n                    className=\"content-explorer-copy-button\"\n                    onClick={handleCopyClick}\n                    isDisabled={areButtonsDisabled || isMoveButtonLoading || isCopyButtonLoading}\n                    isLoading={isCopyButtonLoading}\n                >\n                    <FormattedMessage {...messages.copy} />\n                </PrimaryButton>\n            )}\n        </div>\n    );\n};\n\nContentExplorerActionButtons.propTypes = {\n    actionButtonsProps: PropTypes.object,\n    areButtonsDisabled: PropTypes.bool,\n    cancelButtonProps: PropTypes.object,\n    canIncludeSubfolders: PropTypes.bool,\n    chooseButtonProps: PropTypes.object,\n    chooseButtonText: PropTypes.node,\n    contentExplorerMode: ContentExplorerModePropType.isRequired,\n    currentFolder: FolderPropType,\n    isChooseButtonLoading: PropTypes.bool,\n    isCopyButtonLoading: PropTypes.bool,\n    isMoveButtonLoading: PropTypes.bool,\n    isResponsive: PropTypes.bool,\n    isSelectAllAllowed: PropTypes.bool,\n    onCancelClick: PropTypes.func,\n    onChooseClick: PropTypes.func,\n    onCopyClick: PropTypes.func,\n    onFoldersPathUpdated: PropTypes.func,\n    onMoveClick: PropTypes.func,\n    onSelectedClick: PropTypes.func,\n    onViewSelectedClick: PropTypes.func,\n    selectedItems: ItemsMapPropType.isRequired,\n    isNoSelectionAllowed: PropTypes.bool,\n};\n\nexport default ContentExplorerActionButtons;\n"],"mappings":"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","ignoreList":[]}