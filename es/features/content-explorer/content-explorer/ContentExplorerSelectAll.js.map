{"version":3,"file":"ContentExplorerSelectAll.js","names":["PropTypes","React","injectIntl","FormattedMessage","Checkbox","Tooltip","messages","ContentExplorerSelectAll","handleSelectAllClick","intl","isLabelHidden","isSelectAllChecked","numTotalItems","createElement","className","_extends","result","values","itemsCount","formatNumber","results","selectAll","isShown","undefined","text","hideLabel","onChange","isChecked","propTypes","func","any","bool","number","ContentExplorerSelectAllBase"],"sources":["../../../../src/features/content-explorer/content-explorer/ContentExplorerSelectAll.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport Checkbox from '../../../components/checkbox/Checkbox';\nimport Tooltip from '../../../components/tooltip';\nimport messages from '../messages';\n\nconst ContentExplorerSelectAll = ({\n    handleSelectAllClick,\n    intl,\n    isLabelHidden,\n    isSelectAllChecked,\n    numTotalItems = 0,\n}) => (\n    <div className=\"content-explorer-select-all-container\">\n        {!isLabelHidden && (\n            <label className=\"content-explorer-select-all-items-counter\">\n                {numTotalItems === 1 ? (\n                    <FormattedMessage {...messages.result} values={{ itemsCount: intl.formatNumber(numTotalItems) }} />\n                ) : (\n                    <FormattedMessage {...messages.results} values={{ itemsCount: intl.formatNumber(numTotalItems) }} />\n                )}\n            </label>\n        )}\n        {!isLabelHidden && (\n            <label className=\"content-explorer-select-all-checkbox-label\">\n                <FormattedMessage {...messages.selectAll} />\n            </label>\n        )}\n        <Tooltip isShown={isLabelHidden ? undefined : false} text={<FormattedMessage {...messages.selectAll} />}>\n            <Checkbox\n                hideLabel\n                className=\"content-explorer-select-all-checkbox\"\n                onChange={handleSelectAllClick}\n                isChecked={isSelectAllChecked}\n            />\n        </Tooltip>\n    </div>\n);\n\nContentExplorerSelectAll.propTypes = {\n    handleSelectAllClick: PropTypes.func,\n    intl: PropTypes.any,\n    isSelectAllChecked: PropTypes.bool,\n    isLabelHidden: PropTypes.bool,\n    numTotalItems: PropTypes.number,\n};\n\nexport { ContentExplorerSelectAll as ContentExplorerSelectAllBase };\nexport default injectIntl(ContentExplorerSelectAll);\n"],"mappings":";AAAA,OAAOA,SAAS,MAAM,YAAY;AAClC,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,UAAU,EAAEC,gBAAgB,QAAQ,YAAY;AACzD,OAAOC,QAAQ,MAAM,uCAAuC;AAC5D,OAAOC,OAAO,MAAM,6BAA6B;AACjD,OAAOC,QAAQ,MAAM,aAAa;AAElC,MAAMC,wBAAwB,GAAGA,CAAC;EAC9BC,oBAAoB;EACpBC,IAAI;EACJC,aAAa;EACbC,kBAAkB;EAClBC,aAAa,GAAG;AACpB,CAAC,kBACGX,KAAA,CAAAY,aAAA;EAAKC,SAAS,EAAC;AAAuC,GACjD,CAACJ,aAAa,iBACXT,KAAA,CAAAY,aAAA;EAAOC,SAAS,EAAC;AAA2C,GACvDF,aAAa,KAAK,CAAC,gBAChBX,KAAA,CAAAY,aAAA,CAACV,gBAAgB,EAAAY,QAAA,KAAKT,QAAQ,CAACU,MAAM;EAAEC,MAAM,EAAE;IAAEC,UAAU,EAAET,IAAI,CAACU,YAAY,CAACP,aAAa;EAAE;AAAE,EAAE,CAAC,gBAEnGX,KAAA,CAAAY,aAAA,CAACV,gBAAgB,EAAAY,QAAA,KAAKT,QAAQ,CAACc,OAAO;EAAEH,MAAM,EAAE;IAAEC,UAAU,EAAET,IAAI,CAACU,YAAY,CAACP,aAAa;EAAE;AAAE,EAAE,CAEpG,CACV,EACA,CAACF,aAAa,iBACXT,KAAA,CAAAY,aAAA;EAAOC,SAAS,EAAC;AAA4C,gBACzDb,KAAA,CAAAY,aAAA,CAACV,gBAAgB,EAAKG,QAAQ,CAACe,SAAY,CACxC,CACV,eACDpB,KAAA,CAAAY,aAAA,CAACR,OAAO;EAACiB,OAAO,EAAEZ,aAAa,GAAGa,SAAS,GAAG,KAAM;EAACC,IAAI,eAAEvB,KAAA,CAAAY,aAAA,CAACV,gBAAgB,EAAKG,QAAQ,CAACe,SAAY;AAAE,gBACpGpB,KAAA,CAAAY,aAAA,CAACT,QAAQ;EACLqB,SAAS;EACTX,SAAS,EAAC,sCAAsC;EAChDY,QAAQ,EAAElB,oBAAqB;EAC/BmB,SAAS,EAAEhB;AAAmB,CACjC,CACI,CACR,CACR;AAEDJ,wBAAwB,CAACqB,SAAS,GAAG;EACjCpB,oBAAoB,EAAER,SAAS,CAAC6B,IAAI;EACpCpB,IAAI,EAAET,SAAS,CAAC8B,GAAG;EACnBnB,kBAAkB,EAAEX,SAAS,CAAC+B,IAAI;EAClCrB,aAAa,EAAEV,SAAS,CAAC+B,IAAI;EAC7BnB,aAAa,EAAEZ,SAAS,CAACgC;AAC7B,CAAC;AAED,SAASzB,wBAAwB,IAAI0B,4BAA4B;AACjE,eAAe/B,UAAU,CAACK,wBAAwB,CAAC","ignoreList":[]}