{"version":3,"file":"ItemList.js","names":["PropTypes","React","classNames","getProp","AutoSizer","Column","Table","defaultTableRowRenderer","withInfiniteLoader","ContentExplorerModePropType","ItemsPropType","ItemsMapPropType","ItemListIcon","ItemListLoadingPlaceholder","ItemListName","ItemListButton","TABLE_CELL_CLASS","InfiniteLoaderTable","DEFAULT_ROW_HEIGHT","withAutoSizer","WrappedComponent","props","createElement","style","flex","width","w","height","h","_extends","TableResponsive","itemIconCellRenderer","rendererParams","rowData","type","extension","hasCollaborations","isExternallyOwned","archiveType","columnData","itemIconRenderer","className","isItemSelected","itemId","selectedItems","undefined","itemNameCellRenderer","rowIndex","id","name","label","onItemNameClick","itemNameLinkRenderer","isSelected","onClick","event","linkRenderer","renderItemListButton","contentExplorerMode","isActionDisabled","isDisabled","itemButtonCellRenderer","itemButtonRenderer","itemLoadingPlaceholderRenderer","loadingPlaceholderColumnWidths","columnIndex","ItemList","additionalColumns","isResponsive","items","numItemsPerPage","numTotalItems","onItemClick","onItemDoubleClick","onLoadMoreItems","headerHeight","headerRenderer","itemRowRenderer","noItemsRenderer","rowHeight","getRow","index","getRowClassNames","item","result","isLoading","renderRow","key","rowClassName","columns","itemRowClassname","testId","role","map","column","defaultRow","_objectSpread","cloneElement","TableComponent","tableProps","infiniteLoaderProps","isRowLoaded","loadMoreRows","minimumBatchSize","rowCount","threshold","length","headerRowRenderer","gridClassName","headerClassName","onRowClick","onRowDoubleClick","rowGetter","rowRenderer","noRowsRenderer","cellRenderer","dataKey","flexGrow","flexShrink","displayName","propTypes","arrayOf","element","string","isRequired","bool","number","func","ItemListBase"],"sources":["../../../../src/features/content-explorer/item-list/ItemList.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport getProp from 'lodash/get';\nimport AutoSizer from '@box/react-virtualized/dist/commonjs/AutoSizer';\nimport Column from '@box/react-virtualized/dist/commonjs/Table/Column';\nimport Table from '@box/react-virtualized/dist/commonjs/Table';\nimport defaultTableRowRenderer from '@box/react-virtualized/dist/commonjs/Table/defaultRowRenderer';\nimport '@box/react-virtualized/styles.css';\n\nimport { withInfiniteLoader } from '../../../components/react-virtualized-helpers';\n\nimport { ContentExplorerModePropType, ItemsPropType, ItemsMapPropType } from '../prop-types';\n\nimport ItemListIcon from './ItemListIcon';\nimport ItemListLoadingPlaceholder from './ItemListLoadingPlaceholder';\nimport ItemListName from './ItemListName';\nimport ItemListButton from './ItemListButton';\n\nimport './ItemList.scss';\n\nconst TABLE_CELL_CLASS = 'table-cell';\n\nconst InfiniteLoaderTable = withInfiniteLoader(Table);\n\nconst DEFAULT_ROW_HEIGHT = 40;\n\nconst withAutoSizer = WrappedComponent => {\n    return props => {\n        return (\n            <div style={{ flex: 1 }}>\n                <AutoSizer>\n                    {({ width: w, height: h }) => <WrappedComponent {...props} width={w} height={h} />}\n                </AutoSizer>\n            </div>\n        );\n    };\n};\n\nconst TableResponsive = withAutoSizer(Table);\n\nconst itemIconCellRenderer = rendererParams => {\n    const {\n        rowData: { type, extension, hasCollaborations, isExternallyOwned, archiveType },\n        columnData: { itemIconRenderer },\n    } = rendererParams;\n    return (\n        <div className={TABLE_CELL_CLASS}>\n            {itemIconRenderer ? (\n                itemIconRenderer(rendererParams)\n            ) : (\n                <ItemListIcon\n                    type={type}\n                    extension={extension}\n                    hasCollaborations={hasCollaborations}\n                    isExternallyOwned={isExternallyOwned}\n                    archiveType={archiveType}\n                />\n            )}\n        </div>\n    );\n};\n\nconst isItemSelected = (itemId, selectedItems) => selectedItems[itemId] !== undefined;\n\nconst itemNameCellRenderer = rendererParams => {\n    const {\n        rowIndex,\n        rowData: { id, type, name, label },\n        columnData: { selectedItems, onItemNameClick, itemNameLinkRenderer },\n    } = rendererParams;\n    // loading placeholder may not have name and ItemListName requires name\n    return (\n        name && (\n            <div className={TABLE_CELL_CLASS}>\n                <ItemListName\n                    itemId={id}\n                    type={type}\n                    name={name}\n                    label={label}\n                    isSelected={isItemSelected(id, selectedItems)}\n                    onClick={event => onItemNameClick(event, rowIndex)}\n                    linkRenderer={itemNameLinkRenderer}\n                />\n            </div>\n        )\n    );\n};\n\nconst renderItemListButton = (contentExplorerMode, id, isActionDisabled, isDisabled, name, selectedItems) =>\n    name && (\n        <ItemListButton\n            contentExplorerMode={contentExplorerMode}\n            id={id}\n            isDisabled={isActionDisabled}\n            isSelected={isItemSelected(id, selectedItems)}\n            name={name}\n        />\n    );\n\nconst itemButtonCellRenderer = rendererParams => {\n    const {\n        columnData: { contentExplorerMode, itemButtonRenderer, selectedItems },\n        rowData: { id, isActionDisabled, isDisabled, name },\n    } = rendererParams;\n    return (\n        !isDisabled && (\n            <div className={TABLE_CELL_CLASS}>\n                {itemButtonRenderer\n                    ? itemButtonRenderer(rendererParams)\n                    : renderItemListButton(contentExplorerMode, id, isActionDisabled, isDisabled, name, selectedItems)}\n            </div>\n        )\n    );\n};\n\nconst itemLoadingPlaceholderRenderer = rendererParams => {\n    const { loadingPlaceholderColumnWidths, columnIndex } = rendererParams;\n    return (\n        <div className={TABLE_CELL_CLASS}>\n            <ItemListLoadingPlaceholder\n                width={loadingPlaceholderColumnWidths && loadingPlaceholderColumnWidths[columnIndex]}\n            />\n        </div>\n    );\n};\n\nconst ItemList = ({\n    additionalColumns,\n    contentExplorerMode,\n    className = '',\n    isResponsive = false,\n    items,\n    numItemsPerPage,\n    numTotalItems,\n    selectedItems = {},\n    onItemClick,\n    onItemDoubleClick,\n    onItemNameClick,\n    onLoadMoreItems,\n    headerHeight,\n    headerRenderer,\n    itemIconRenderer,\n    itemNameLinkRenderer,\n    itemButtonRenderer,\n    itemRowRenderer = defaultTableRowRenderer,\n    noItemsRenderer,\n    width,\n    height,\n    rowHeight = DEFAULT_ROW_HEIGHT,\n}) => {\n    const getRow = ({ index }) => items[index];\n\n    const getRowClassNames = (index, item) => {\n        let result = index === -1 ? 'table-header' : 'table-row';\n\n        if (isItemSelected(item.id, selectedItems)) {\n            result = classNames('is-selected', result);\n        }\n        if (item && (item.isDisabled || item.isLoading)) {\n            result = classNames('disabled', result);\n        }\n\n        return result;\n    };\n\n    const renderRow = rendererParams => {\n        const { index, key, style, className: rowClassName, columns } = rendererParams;\n        const item = items[index];\n        const itemRowClassname = classNames(rowClassName, getRowClassNames(index, item));\n        const testId = getProp(rendererParams, 'rowData.id', '');\n\n        if (item.isLoading) {\n            return (\n                <div key={key} style={style} className={itemRowClassname} role=\"row\">\n                    {columns.map((column, columnIndex) => (\n                        <div\n                            key={columnIndex}\n                            className={column.props.className}\n                            style={column.props.style}\n                            role=\"gridcell\"\n                        >\n                            {itemLoadingPlaceholderRenderer({\n                                item,\n                                columnIndex,\n                            })}\n                        </div>\n                    ))}\n                </div>\n            );\n        }\n\n        const defaultRow = itemRowRenderer({\n            ...rendererParams,\n            className: itemRowClassname,\n        });\n        return React.cloneElement(defaultRow, { 'data-testid': `item-row-${testId}` });\n    };\n\n    let TableComponent = isResponsive ? TableResponsive : Table;\n    const tableProps = {};\n\n    if (onLoadMoreItems) {\n        TableComponent = InfiniteLoaderTable;\n        tableProps.infiniteLoaderProps = {\n            isRowLoaded: getRow,\n            loadMoreRows: onLoadMoreItems,\n            minimumBatchSize: numItemsPerPage,\n            rowCount: numTotalItems,\n            threshold: numItemsPerPage,\n        };\n    }\n\n    if (!noItemsRenderer || items.length > 0) {\n        tableProps.headerHeight = headerHeight;\n        tableProps.headerRowRenderer = headerRenderer;\n    }\n\n    return (\n        <div\n            className={classNames('content-explorer-item-list table', className, {\n                'bdl-ContentExplorerItemList--responsive': isResponsive,\n            })}\n        >\n            <TableComponent\n                gridClassName=\"table-body\"\n                headerClassName=\"table-header-item\"\n                width={width}\n                height={height}\n                rowHeight={rowHeight}\n                rowCount={items.length}\n                onRowClick={onItemClick}\n                onRowDoubleClick={onItemDoubleClick}\n                rowGetter={getRow}\n                rowRenderer={renderRow}\n                noRowsRenderer={noItemsRenderer}\n                {...tableProps}\n            >\n                <Column\n                    className=\"item-list-icon-col\"\n                    cellRenderer={itemIconCellRenderer}\n                    columnData={{\n                        itemIconRenderer,\n                    }}\n                    dataKey=\"icon\"\n                    width={32}\n                />\n                <Column\n                    className=\"item-list-name-col\"\n                    cellRenderer={itemNameCellRenderer}\n                    columnData={{\n                        selectedItems,\n                        onItemNameClick,\n                        itemNameLinkRenderer,\n                    }}\n                    dataKey=\"name\"\n                    width={0}\n                    flexGrow={1}\n                    flexShrink={0}\n                />\n                {additionalColumns}\n                <Column\n                    className=\"item-list-button-col\"\n                    cellRenderer={itemButtonCellRenderer}\n                    columnData={{\n                        contentExplorerMode,\n                        itemButtonRenderer,\n                        selectedItems,\n                    }}\n                    dataKey=\"button\"\n                    width={30}\n                />\n            </TableComponent>\n        </div>\n    );\n};\n\nItemList.displayName = 'ItemList';\n\nItemList.propTypes = {\n    additionalColumns: PropTypes.arrayOf(PropTypes.element),\n    className: PropTypes.string,\n    contentExplorerMode: ContentExplorerModePropType.isRequired,\n    isResponsive: PropTypes.bool,\n    items: ItemsPropType.isRequired,\n    numItemsPerPage: PropTypes.number,\n    numTotalItems: PropTypes.number,\n    selectedItems: ItemsMapPropType.isRequired,\n    onItemClick: PropTypes.func,\n    onItemDoubleClick: PropTypes.func,\n    onItemNameClick: PropTypes.func,\n    onLoadMoreItems: PropTypes.func,\n    headerHeight: PropTypes.number,\n    headerRenderer: PropTypes.func,\n    itemIconRenderer: PropTypes.func,\n    itemNameLinkRenderer: PropTypes.func,\n    itemButtonRenderer: PropTypes.func,\n    itemRowRenderer: PropTypes.func,\n    noItemsRenderer: PropTypes.func,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    rowHeight: PropTypes.number,\n};\n\nexport { ItemList as ItemListBase };\nexport default ItemList;\n"],"mappings":"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","ignoreList":[]}