{"version":3,"file":"NewFolderModal.js","names":["PropTypes","React","Component","classNames","FormattedMessage","injectIntl","Modal","ModalActions","TextInput","Button","PrimaryButton","messages","NewFolderModal","constructor","props","_defineProperty","onCreateFolderSubmit","folderNameInput","state","event","onCreateFolderInput","input","target","value","setState","render","className","intl","isOpen","onRequestClose","parentFolderName","isCreatingFolder","createFolderError","shouldNotUsePortal","isCreateButtonDisabled","trim","length","createElement","focusElementSelector","title","_extends","newFolderModalTitle","values","error","isRequired","label","newFolderModalFolderNameLabel","onInput","handleFolderNameInput","placeholder","formatMessage","newFolderModalFolderNamePlaceholder","type","onClick","newFolderModalCancel","isDisabled","isLoading","handleCreateClick","newFolderModalCreate","string","any","bool","func","NewFolderModalBase"],"sources":["../../../../src/features/content-explorer/new-folder-modal/NewFolderModal.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { FormattedMessage, injectIntl } from 'react-intl';\n\nimport { Modal, ModalActions } from '../../../components/modal';\nimport TextInput from '../../../components/text-input';\nimport Button from '../../../components/button';\nimport PrimaryButton from '../../../components/primary-button';\n\nimport messages from '../messages';\n\nimport './NewFolderModal.scss';\n\nclass NewFolderModal extends Component {\n    static propTypes = {\n        /** Adds class name to modal. */\n        className: PropTypes.string,\n        intl: PropTypes.any,\n        /** Opens the modal. */\n        isOpen: PropTypes.bool,\n        /** Called when the modal is requested to be closed. */\n        onRequestClose: PropTypes.func.isRequired,\n        /**\n         * Called when the folder creation is submitted.\n         *\n         * @param {string} folderName\n         */\n        onCreateFolderSubmit: PropTypes.func.isRequired,\n        /**\n         * Called with the latest folder name input.\n         *\n         * @param {string} folderName\n         */\n        onCreateFolderInput: PropTypes.func,\n        /** The name of the parent folder that the new folder will be created in. */\n        parentFolderName: PropTypes.string,\n        /** Folder is in the process of being created. */\n        isCreatingFolder: PropTypes.bool,\n        /** Message that will be shown when there was an error creating the folder. */\n        createFolderError: PropTypes.string,\n        /** Whether the modal should be nested in a Portal or in a div */\n        shouldNotUsePortal: PropTypes.bool,\n    };\n\n    static defaultProps = {\n        className: '',\n        isOpen: false,\n        parentFolderName: '',\n        isCreatingFolder: false,\n        createFolderError: null,\n        shouldNotUsePortal: false,\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            folderNameInput: '',\n        };\n    }\n\n    handleCreateClick = () => {\n        const { onCreateFolderSubmit } = this.props;\n        const { folderNameInput } = this.state;\n        onCreateFolderSubmit(folderNameInput);\n    };\n\n    handleFolderNameInput = event => {\n        const { onCreateFolderInput } = this.props;\n        const input = event.target.value;\n        this.setState({\n            folderNameInput: input,\n        });\n        if (onCreateFolderInput) {\n            onCreateFolderInput(input);\n        }\n    };\n\n    render() {\n        const {\n            className,\n            intl,\n            isOpen,\n            onRequestClose,\n            parentFolderName,\n            isCreatingFolder,\n            createFolderError,\n            shouldNotUsePortal,\n        } = this.props;\n        const { folderNameInput } = this.state;\n\n        const isCreateButtonDisabled = !folderNameInput.trim().length || !!createFolderError || !!isCreatingFolder;\n\n        return (\n            <Modal\n                className={classNames('new-folder-modal', className)}\n                focusElementSelector=\".folder-name-input input\"\n                isOpen={isOpen}\n                onRequestClose={onRequestClose}\n                shouldNotUsePortal={shouldNotUsePortal}\n                title={\n                    <FormattedMessage\n                        {...messages.newFolderModalTitle}\n                        values={{\n                            parentFolderName,\n                        }}\n                    />\n                }\n            >\n                <TextInput\n                    className=\"folder-name-input\"\n                    error={createFolderError}\n                    isRequired\n                    label={<FormattedMessage {...messages.newFolderModalFolderNameLabel} />}\n                    onInput={this.handleFolderNameInput}\n                    placeholder={intl.formatMessage(messages.newFolderModalFolderNamePlaceholder)}\n                    type=\"text\"\n                    value={folderNameInput}\n                />\n                <ModalActions>\n                    <Button className=\"new-folder-modal-cancel-button\" onClick={onRequestClose} type=\"button\">\n                        <FormattedMessage {...messages.newFolderModalCancel} />\n                    </Button>\n                    <PrimaryButton\n                        className=\"new-folder-modal-create-button\"\n                        isDisabled={isCreateButtonDisabled}\n                        isLoading={isCreatingFolder}\n                        onClick={this.handleCreateClick}\n                        type=\"button\"\n                    >\n                        <FormattedMessage {...messages.newFolderModalCreate} />\n                    </PrimaryButton>\n                </ModalActions>\n            </Modal>\n        );\n    }\n}\n\nexport { NewFolderModal as NewFolderModalBase };\nexport default injectIntl(NewFolderModal);\n"],"mappings":"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","ignoreList":[]}