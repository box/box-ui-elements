{"version":3,"file":"SecurityControlsModal.js","names":["React","FormattedMessage","Modal","ModalActions","commonMessages","Button","classificationMessages","ClassifiedBadge","Label","messages","SecurityControlsItem","SecurityControlsModal","closeModal","definition","classificationColor","classificationName","isSecurityControlsModalOpen","itemName","modalItems","title","createElement","_extends","modalTitle","values","className","onRequestClose","isOpen","modalDescription","color","name","text","map","message","tooltipMessage","index","key","onClick","type","close","defaultProps"],"sources":["../../../../src/features/classification/security-controls/SecurityControlsModal.js"],"sourcesContent":["// @flow\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { Modal, ModalActions } from '../../../components/modal';\nimport commonMessages from '../../../common/messages';\nimport Button from '../../../components/button';\nimport classificationMessages from '../messages';\nimport ClassifiedBadge from '../ClassifiedBadge';\nimport Label from '../../../components/label/Label';\nimport messages from './messages';\nimport SecurityControlsItem from './SecurityControlsItem';\nimport './SecurityControlsModal.scss';\nimport type { MessageItem } from '../flowTypes';\n\ntype Props = {\n    classificationColor?: string,\n    classificationName?: string,\n    closeModal: Function,\n    definition?: string,\n    isSecurityControlsModalOpen: boolean,\n    itemName?: string,\n    modalItems: Array<MessageItem>,\n};\n\nconst SecurityControlsModal = ({\n    closeModal,\n    definition,\n    classificationColor,\n    classificationName,\n    isSecurityControlsModalOpen,\n    itemName,\n    modalItems,\n}: Props) => {\n    if (!itemName || !classificationName || !definition) {\n        return null;\n    }\n\n    const title = <FormattedMessage {...messages.modalTitle} values={{ itemName }} />;\n\n    return (\n        <Modal\n            className=\"bdl-SecurityControlsModal\"\n            title={title}\n            onRequestClose={closeModal}\n            isOpen={isSecurityControlsModalOpen}\n        >\n            <p>\n                <FormattedMessage {...messages.modalDescription} />\n            </p>\n            <ClassifiedBadge color={classificationColor} name={((classificationName: any): string)} />\n            <Label text={<FormattedMessage {...classificationMessages.definition} />}>\n                <p className=\"bdl-SecurityControlsModal-definition\">{definition}</p>\n            </Label>\n            <ul className=\"bdl-SecurityControlsModal-controlsItemList\">\n                {modalItems.map(({ message, tooltipMessage }, index) => (\n                    <SecurityControlsItem key={index} message={message} tooltipMessage={tooltipMessage} />\n                ))}\n            </ul>\n            <ModalActions>\n                <Button onClick={closeModal} type=\"button\">\n                    <FormattedMessage {...commonMessages.close} />\n                </Button>\n            </ModalActions>\n        </Modal>\n    );\n};\n\nSecurityControlsModal.defaultProps = {\n    isSecurityControlsModalOpen: false,\n    modalItems: [],\n};\n\nexport default SecurityControlsModal;\n"],"mappings":";AACA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,gBAAgB,QAAQ,YAAY;AAE7C,SAASC,KAAK,EAAEC,YAAY,QAAQ,2BAA2B;AAC/D,OAAOC,cAAc,MAAM,0BAA0B;AACrD,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,sBAAsB,MAAM,aAAa;AAChD,OAAOC,eAAe,MAAM,oBAAoB;AAChD,OAAOC,KAAK,MAAM,iCAAiC;AACnD,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,oBAAoB,MAAM,wBAAwB;AACzD,OAAO,8BAA8B;AAarC,MAAMC,qBAAqB,GAAGA,CAAC;EAC3BC,UAAU;EACVC,UAAU;EACVC,mBAAmB;EACnBC,kBAAkB;EAClBC,2BAA2B;EAC3BC,QAAQ;EACRC;AACG,CAAC,KAAK;EACT,IAAI,CAACD,QAAQ,IAAI,CAACF,kBAAkB,IAAI,CAACF,UAAU,EAAE;IACjD,OAAO,IAAI;EACf;EAEA,MAAMM,KAAK,gBAAGnB,KAAA,CAAAoB,aAAA,CAACnB,gBAAgB,EAAAoB,QAAA,KAAKZ,QAAQ,CAACa,UAAU;IAAEC,MAAM,EAAE;MAAEN;IAAS;EAAE,EAAE,CAAC;EAEjF,oBACIjB,KAAA,CAAAoB,aAAA,CAAClB,KAAK;IACFsB,SAAS,EAAC,2BAA2B;IACrCL,KAAK,EAAEA,KAAM;IACbM,cAAc,EAAEb,UAAW;IAC3Bc,MAAM,EAAEV;EAA4B,gBAEpChB,KAAA,CAAAoB,aAAA,yBACIpB,KAAA,CAAAoB,aAAA,CAACnB,gBAAgB,EAAKQ,QAAQ,CAACkB,gBAAmB,CACnD,CAAC,eACJ3B,KAAA,CAAAoB,aAAA,CAACb,eAAe;IAACqB,KAAK,EAAEd,mBAAoB;IAACe,IAAI,EAAId;EAAkC,CAAE,CAAC,eAC1Ff,KAAA,CAAAoB,aAAA,CAACZ,KAAK;IAACsB,IAAI,eAAE9B,KAAA,CAAAoB,aAAA,CAACnB,gBAAgB,EAAKK,sBAAsB,CAACO,UAAa;EAAE,gBACrEb,KAAA,CAAAoB,aAAA;IAAGI,SAAS,EAAC;EAAsC,GAAEX,UAAc,CAChE,CAAC,eACRb,KAAA,CAAAoB,aAAA;IAAII,SAAS,EAAC;EAA4C,GACrDN,UAAU,CAACa,GAAG,CAAC,CAAC;IAAEC,OAAO;IAAEC;EAAe,CAAC,EAAEC,KAAK,kBAC/ClC,KAAA,CAAAoB,aAAA,CAACV,oBAAoB;IAACyB,GAAG,EAAED,KAAM;IAACF,OAAO,EAAEA,OAAQ;IAACC,cAAc,EAAEA;EAAe,CAAE,CACxF,CACD,CAAC,eACLjC,KAAA,CAAAoB,aAAA,CAACjB,YAAY,qBACTH,KAAA,CAAAoB,aAAA,CAACf,MAAM;IAAC+B,OAAO,EAAExB,UAAW;IAACyB,IAAI,EAAC;EAAQ,gBACtCrC,KAAA,CAAAoB,aAAA,CAACnB,gBAAgB,EAAKG,cAAc,CAACkC,KAAQ,CACzC,CACE,CACX,CAAC;AAEhB,CAAC;AAED3B,qBAAqB,CAAC4B,YAAY,GAAG;EACjCvB,2BAA2B,EAAE,KAAK;EAClCE,UAAU,EAAE;AAChB,CAAC;AAED,eAAeP,qBAAqB","ignoreList":[]}