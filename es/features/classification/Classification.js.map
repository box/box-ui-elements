{"version":3,"file":"Classification.js","names":["React","FormattedDate","FormattedMessage","AsyncLoad","ClassifiedBadge","Label","LoadingIndicator","SecurityControls","isValidDate","messages","STYLE_INLINE","STYLE_TOOLTIP","LoadableAppliedByAiClassificationReason","loader","Classification","aiClassificationReason","className","color","controls","controlsFormat","definition","isImportedClassification","isLoadingAppliedBy","isLoadingControls","itemName","maxAppCount","messageStyle","modifiedAt","modifiedBy","name","onClick","shouldDisplayAppsAsIntegrations","shouldUseAppliedByLabels","isClassified","hasDefinition","hasModifiedAt","hasModifiedBy","hasSecurityControls","isTooltipMessageEnabled","isInlineMessageEnabled","isNotClassifiedMessageVisible","isControlsIndicatorEnabled","isSecurityControlsEnabled","modifiedDate","Date","isModifiedMessageVisible","hasAiClassificationReason","Boolean","shouldRenderModificationDetails","formattedModifiedAt","createElement","value","month","year","day","modifiedByMessage","importedBy","modificationTitleLabel","appliedByTitle","modifiedByLabel","modifiedByDetails","_extends","appliedByDetails","values","appliedAt","appliedBy","renderModificationDetails","answer","citations","tooltipText","undefined","text","missing","classificationColor","classificationName","shouldRenderLabel"],"sources":["../../../src/features/classification/Classification.js"],"sourcesContent":["// @flow\nimport * as React from 'react';\nimport { FormattedDate, FormattedMessage } from 'react-intl';\n\nimport AsyncLoad from '../../elements/common/async-load';\nimport ClassifiedBadge from './ClassifiedBadge';\nimport Label from '../../components/label/Label';\nimport LoadingIndicator from '../../components/loading-indicator/LoadingIndicator';\nimport SecurityControls from './security-controls';\nimport { isValidDate } from '../../utils/datetime';\n\nimport messages from './messages';\n\nimport './Classification.scss';\n\nimport type { AiClassificationReason, Controls, ControlsFormat } from './flowTypes';\n\nconst STYLE_INLINE: 'inline' = 'inline';\nconst STYLE_TOOLTIP: 'tooltip' = 'tooltip';\n\nconst LoadableAppliedByAiClassificationReason = AsyncLoad({\n    loader: () =>\n        import(\n            /* webpackMode: \"lazy\", webpackChunkName: \"applied-by-ai-classification-reason\" */ './applied-by-ai-classification-reason/AppliedByAiClassificationReason'\n        ),\n});\n\ntype Props = {\n    aiClassificationReason?: AiClassificationReason,\n    className?: string,\n    color?: string,\n    controls?: Controls,\n    controlsFormat?: ControlsFormat,\n    definition?: string,\n    isImportedClassification?: boolean,\n    isLoadingAppliedBy?: boolean,\n    isLoadingControls?: boolean,\n    itemName?: string,\n    maxAppCount?: number,\n    messageStyle?: typeof STYLE_INLINE | typeof STYLE_TOOLTIP,\n    modifiedAt?: string,\n    modifiedBy?: string,\n    name?: string,\n    onClick?: (event: SyntheticEvent<HTMLButtonElement>) => void,\n    shouldDisplayAppsAsIntegrations?: boolean,\n    shouldUseAppliedByLabels?: boolean,\n};\n\nconst Classification = ({\n    aiClassificationReason,\n    className = '',\n    color,\n    controls,\n    controlsFormat,\n    definition,\n    isImportedClassification = false,\n    isLoadingAppliedBy = false,\n    isLoadingControls,\n    itemName = '',\n    maxAppCount,\n    messageStyle,\n    modifiedAt,\n    modifiedBy,\n    name,\n    onClick,\n    shouldDisplayAppsAsIntegrations = false,\n    shouldUseAppliedByLabels = false,\n}: Props) => {\n    const isClassified = !!name;\n    const hasDefinition = !!definition;\n    const hasModifiedAt = !!modifiedAt;\n    const hasModifiedBy = !!modifiedBy;\n    const hasSecurityControls = !!controls;\n    const isTooltipMessageEnabled = isClassified && hasDefinition && messageStyle === STYLE_TOOLTIP;\n    const isInlineMessageEnabled = isClassified && hasDefinition && messageStyle === STYLE_INLINE;\n    const isNotClassifiedMessageVisible = !isClassified && messageStyle === STYLE_INLINE;\n    const isControlsIndicatorEnabled = isClassified && isLoadingControls && messageStyle === STYLE_INLINE;\n    const isSecurityControlsEnabled =\n        isClassified && !isLoadingControls && hasSecurityControls && messageStyle === STYLE_INLINE;\n    const modifiedDate = new Date(modifiedAt || 0);\n    const isModifiedMessageVisible =\n        isClassified && hasModifiedAt && isValidDate(modifiedDate) && hasModifiedBy && messageStyle === STYLE_INLINE;\n    const hasAiClassificationReason =\n        messageStyle === STYLE_INLINE && isClassified && (isLoadingAppliedBy || Boolean(aiClassificationReason));\n    const shouldRenderModificationDetails = isModifiedMessageVisible || hasAiClassificationReason;\n\n    const formattedModifiedAt = isModifiedMessageVisible && (\n        <FormattedDate value={modifiedDate} month=\"long\" year=\"numeric\" day=\"numeric\" />\n    );\n\n    const modifiedByMessage = isImportedClassification ? messages.importedBy : messages.modifiedBy;\n\n    const modificationTitleLabel =\n        shouldUseAppliedByLabels || hasAiClassificationReason ? messages.appliedByTitle : messages.modifiedByLabel;\n\n    const modifiedByDetails = shouldUseAppliedByLabels ? (\n        <FormattedMessage\n            {...messages.appliedByDetails}\n            values={{ appliedAt: formattedModifiedAt, appliedBy: modifiedBy }}\n        />\n    ) : (\n        <FormattedMessage {...modifiedByMessage} values={{ modifiedAt: formattedModifiedAt, modifiedBy }} />\n    );\n\n    const renderModificationDetails = () => {\n        if (isLoadingAppliedBy) {\n            return <LoadingIndicator />;\n        }\n\n        if (aiClassificationReason) {\n            return (\n                <LoadableAppliedByAiClassificationReason\n                    answer={aiClassificationReason.answer}\n                    citations={aiClassificationReason.citations}\n                    className=\"bdl-Classification-appliedByAiDetails\"\n                    modifiedAt={aiClassificationReason.modifiedAt}\n                />\n            );\n        }\n\n        return (\n            <p className=\"bdl-Classification-modifiedBy\" data-testid=\"classification-modifiedby\">\n                {modifiedByDetails}\n            </p>\n        );\n    };\n\n    return (\n        <article className={`bdl-Classification ${className}`}>\n            {isClassified && (\n                <ClassifiedBadge\n                    color={color}\n                    name={((name: any): string)}\n                    onClick={onClick}\n                    tooltipText={isTooltipMessageEnabled ? definition : undefined}\n                />\n            )}\n            {isInlineMessageEnabled && (\n                <Label text={<FormattedMessage {...messages.definition} />}>\n                    <p className=\"bdl-Classification-definition\">{definition}</p>\n                </Label>\n            )}\n            {isNotClassifiedMessageVisible && (\n                <span className=\"bdl-Classification-missingMessage\">\n                    <FormattedMessage {...messages.missing} />\n                </span>\n            )}\n            {shouldRenderModificationDetails && (\n                <Label text={<FormattedMessage {...modificationTitleLabel} />}>{renderModificationDetails()}</Label>\n            )}\n\n            {isSecurityControlsEnabled && (\n                <SecurityControls\n                    classificationColor={color}\n                    classificationName={name}\n                    controls={controls}\n                    controlsFormat={controlsFormat}\n                    definition={definition}\n                    itemName={itemName}\n                    maxAppCount={maxAppCount}\n                    shouldRenderLabel\n                    shouldDisplayAppsAsIntegrations={shouldDisplayAppsAsIntegrations}\n                />\n            )}\n            {isControlsIndicatorEnabled && <LoadingIndicator />}\n        </article>\n    );\n};\n\nexport { STYLE_INLINE, STYLE_TOOLTIP };\nexport default Classification;\n"],"mappings":"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","ignoreList":[]}