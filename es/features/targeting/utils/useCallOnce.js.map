{"version":3,"file":"useCallOnce.js","names":["useState","useCallOnce","callback","hasCalled","setHasCalled","undefined"],"sources":["../../../../src/features/targeting/utils/useCallOnce.js"],"sourcesContent":["// @flow\nimport { useState } from 'react';\n\n/**\n * This hook will call the callback once in the life cycle of the component\n */\nfunction useCallOnce<V>(callback: () => V): () => V | void {\n    const [hasCalled, setHasCalled] = useState<boolean>(false);\n    return () => {\n        if (!hasCalled) {\n            setHasCalled(true);\n            return callback();\n        }\n        return undefined;\n    };\n}\n\nexport default useCallOnce;\n"],"mappings":"AACA,SAASA,QAAQ,QAAQ,OAAO;;AAEhC;AACA;AACA;AACA,SAASC,WAAWA,CAAIC,QAAiB,EAAkB;EACvD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGJ,QAAQ,CAAU,KAAK,CAAC;EAC1D,OAAO,MAAM;IACT,IAAI,CAACG,SAAS,EAAE;MACZC,YAAY,CAAC,IAAI,CAAC;MAClB,OAAOF,QAAQ,CAAC,CAAC;IACrB;IACA,OAAOG,SAAS;EACpB,CAAC;AACL;AAEA,eAAeJ,WAAW","ignoreList":[]}