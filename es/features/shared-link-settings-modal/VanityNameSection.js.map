{"version":3,"file":"VanityNameSection.js","names":["React","PropTypes","FormattedMessage","injectIntl","bdlGray65","Checkbox","TextInput","Fieldset","QuarantineBadge","messages","VanityNameSection","canChangeVanityName","error","intl","formatMessage","isVanityEnabled","vanityName","vanityNameInputProps","serverURL","onChange","onCheckboxChange","inputValue","vanityNameNotSet","vanityURLInput","createElement","className","_extends","description","color","vanityURLWarning","hideLabel","disabled","name","placeholder","vanityNamePlaceholder","type","value","title","customURLLabel","label","vanityURLEnableText","isChecked","isDisabled","subsection","undefined","propTypes","bool","isRequired","string","any","object","func","VanityNameSectionBase"],"sources":["../../../src/features/shared-link-settings-modal/VanityNameSection.js"],"sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage, injectIntl } from 'react-intl';\n\nimport { bdlGray65 } from '../../styles/variables';\n\nimport Checkbox from '../../components/checkbox';\nimport TextInput from '../../components/text-input';\nimport Fieldset from '../../components/fieldset';\nimport QuarantineBadge from '../../icons/badges/QuarantineBadge';\n\nimport messages from './messages';\n\nconst VanityNameSection = ({\n    canChangeVanityName,\n    error,\n    intl: { formatMessage },\n    isVanityEnabled,\n    vanityName,\n    vanityNameInputProps = {},\n    serverURL,\n    onChange,\n    onCheckboxChange,\n}) => {\n    const inputValue = canChangeVanityName ? vanityName : vanityName || formatMessage(messages.vanityNameNotSet);\n\n    const vanityURLInput = (\n        <div className=\"vanity-name-content\">\n            <TextInput\n                description={\n                    <span>\n                        <QuarantineBadge color={bdlGray65} />\n                        <FormattedMessage {...messages.vanityURLWarning} />\n                    </span>\n                }\n                hideLabel\n                disabled={!canChangeVanityName}\n                error={error}\n                name=\"vanityName\"\n                onChange={onChange}\n                placeholder={formatMessage(messages.vanityNamePlaceholder)}\n                type=\"text\"\n                value={inputValue}\n                {...vanityNameInputProps}\n            />\n            {(canChangeVanityName || !!vanityName) && (\n                <p className=\"custom-url-preview\">{`${serverURL}${vanityName}`}</p>\n            )}\n        </div>\n    );\n\n    return (\n        <div>\n            <hr />\n            <Fieldset className=\"be vanity-name-section\" title={<FormattedMessage {...messages.customURLLabel} />}>\n                <Checkbox\n                    label={<FormattedMessage {...messages.vanityURLEnableText} />}\n                    isChecked={isVanityEnabled}\n                    isDisabled={!canChangeVanityName}\n                    subsection={isVanityEnabled ? vanityURLInput : undefined}\n                    onChange={onCheckboxChange}\n                />\n            </Fieldset>\n        </div>\n    );\n};\n\nVanityNameSection.propTypes = {\n    canChangeVanityName: PropTypes.bool.isRequired,\n    error: PropTypes.string,\n    intl: PropTypes.any,\n    isVanityEnabled: PropTypes.bool.isRequired,\n    vanityName: PropTypes.string.isRequired,\n    vanityNameInputProps: PropTypes.object,\n    serverURL: PropTypes.string.isRequired,\n    onChange: PropTypes.func,\n    onCheckboxChange: PropTypes.func,\n};\n\nexport { VanityNameSection as VanityNameSectionBase };\nexport default injectIntl(VanityNameSection);\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,gBAAgB,EAAEC,UAAU,QAAQ,YAAY;AAEzD,SAASC,SAAS,QAAQ,wBAAwB;AAElD,OAAOC,QAAQ,MAAM,2BAA2B;AAChD,OAAOC,SAAS,MAAM,6BAA6B;AACnD,OAAOC,QAAQ,MAAM,2BAA2B;AAChD,OAAOC,eAAe,MAAM,oCAAoC;AAEhE,OAAOC,QAAQ,MAAM,YAAY;AAEjC,MAAMC,iBAAiB,GAAGA,CAAC;EACvBC,mBAAmB;EACnBC,KAAK;EACLC,IAAI,EAAE;IAAEC;EAAc,CAAC;EACvBC,eAAe;EACfC,UAAU;EACVC,oBAAoB,GAAG,CAAC,CAAC;EACzBC,SAAS;EACTC,QAAQ;EACRC;AACJ,CAAC,KAAK;EACF,MAAMC,UAAU,GAAGV,mBAAmB,GAAGK,UAAU,GAAGA,UAAU,IAAIF,aAAa,CAACL,QAAQ,CAACa,gBAAgB,CAAC;EAE5G,MAAMC,cAAc,gBAChBvB,KAAA,CAAAwB,aAAA;IAAKC,SAAS,EAAC;EAAqB,gBAChCzB,KAAA,CAAAwB,aAAA,CAAClB,SAAS,EAAAoB,QAAA;IACNC,WAAW,eACP3B,KAAA,CAAAwB,aAAA,4BACIxB,KAAA,CAAAwB,aAAA,CAAChB,eAAe;MAACoB,KAAK,EAAExB;IAAU,CAAE,CAAC,eACrCJ,KAAA,CAAAwB,aAAA,CAACtB,gBAAgB,EAAKO,QAAQ,CAACoB,gBAAmB,CAChD,CACT;IACDC,SAAS;IACTC,QAAQ,EAAE,CAACpB,mBAAoB;IAC/BC,KAAK,EAAEA,KAAM;IACboB,IAAI,EAAC,YAAY;IACjBb,QAAQ,EAAEA,QAAS;IACnBc,WAAW,EAAEnB,aAAa,CAACL,QAAQ,CAACyB,qBAAqB,CAAE;IAC3DC,IAAI,EAAC,MAAM;IACXC,KAAK,EAAEf;EAAW,GACdJ,oBAAoB,CAC3B,CAAC,EACD,CAACN,mBAAmB,IAAI,CAAC,CAACK,UAAU,kBACjChB,KAAA,CAAAwB,aAAA;IAAGC,SAAS,EAAC;EAAoB,GAAE,GAAGP,SAAS,GAAGF,UAAU,EAAM,CAErE,CACR;EAED,oBACIhB,KAAA,CAAAwB,aAAA,2BACIxB,KAAA,CAAAwB,aAAA,WAAK,CAAC,eACNxB,KAAA,CAAAwB,aAAA,CAACjB,QAAQ;IAACkB,SAAS,EAAC,wBAAwB;IAACY,KAAK,eAAErC,KAAA,CAAAwB,aAAA,CAACtB,gBAAgB,EAAKO,QAAQ,CAAC6B,cAAiB;EAAE,gBAClGtC,KAAA,CAAAwB,aAAA,CAACnB,QAAQ;IACLkC,KAAK,eAAEvC,KAAA,CAAAwB,aAAA,CAACtB,gBAAgB,EAAKO,QAAQ,CAAC+B,mBAAsB,CAAE;IAC9DC,SAAS,EAAE1B,eAAgB;IAC3B2B,UAAU,EAAE,CAAC/B,mBAAoB;IACjCgC,UAAU,EAAE5B,eAAe,GAAGQ,cAAc,GAAGqB,SAAU;IACzDzB,QAAQ,EAAEC;EAAiB,CAC9B,CACK,CACT,CAAC;AAEd,CAAC;AAEDV,iBAAiB,CAACmC,SAAS,GAAG;EAC1BlC,mBAAmB,EAAEV,SAAS,CAAC6C,IAAI,CAACC,UAAU;EAC9CnC,KAAK,EAAEX,SAAS,CAAC+C,MAAM;EACvBnC,IAAI,EAAEZ,SAAS,CAACgD,GAAG;EACnBlC,eAAe,EAAEd,SAAS,CAAC6C,IAAI,CAACC,UAAU;EAC1C/B,UAAU,EAAEf,SAAS,CAAC+C,MAAM,CAACD,UAAU;EACvC9B,oBAAoB,EAAEhB,SAAS,CAACiD,MAAM;EACtChC,SAAS,EAAEjB,SAAS,CAAC+C,MAAM,CAACD,UAAU;EACtC5B,QAAQ,EAAElB,SAAS,CAACkD,IAAI;EACxB/B,gBAAgB,EAAEnB,SAAS,CAACkD;AAChC,CAAC;AAED,SAASzC,iBAAiB,IAAI0C,qBAAqB;AACnD,eAAejD,UAAU,CAACO,iBAAiB,CAAC","ignoreList":[]}