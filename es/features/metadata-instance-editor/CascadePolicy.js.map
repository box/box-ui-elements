{"version":3,"file":"CascadePolicy.js","names":["React","InlineNotice","useCallback","FormattedMessage","useIntl","BoxAiAdvancedLogo24","BoxAiLogo24","BoxAiAgentSelectorWithApiContainer","Toggle","RadioButton","RadioGroup","Link","IconAlertDefault","messages","STANDARD_AGENT_ID","ENHANCED_AGENT_ID","ENHANCED_AGENT_CONFIGURATION","COMMUNITY_LINK","AI_LINK","CascadePolicy","canEdit","canUseAIFolderExtraction","cascadePolicyConfiguration","isCascadingEnabled","isCascadingOverwritten","isCustomMetadata","isAIFolderExtractionEnabled","isExistingCascadePolicy","onAIFolderExtractionToggle","onAIAgentSelect","onCascadeToggle","onCascadeModeChange","shouldShowCascadeOptions","formatMessage","readOnlyState","createElement","className","metadataCascadePolicyEnabledInfo","isEnhancedAgentSelected","agent","agents","useMemo","id","name","standardAgentName","isEnterpriseDefault","enhancedAgentName","customIcon","isSelected","agentFetcher","Promise","resolve","handleAgentSelect","Fragment","variant","variantIconAriaLabel","cascadePolicyOptionsDisabledNoticeIconAriaLabel","cascadePolicyOptionsDisabledNotice","_extends","tagName","enableCascadePolicy","isOn","label","onChange","e","target","checked","applyCascadePolicyText","href","cascadePolicyLearnMore","cannotApplyCascadePolicyText","cascadePolicyModeQuestion","operationNotImmediate","value","isDisabled","cascadePolicySkipMode","cascadePolicyOverwriteMode","width","height","enableAIAutofill","aiAutofillDescription","aiAutofillLearnMore","disabled","fetcher","onSelectAgent","recordAction","selectorAlignment"],"sources":["../../../src/features/metadata-instance-editor/CascadePolicy.js"],"sourcesContent":["// @flow\nimport * as React from 'react';\n\nimport { InlineNotice } from '@box/blueprint-web';\nimport { useCallback } from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\n\n// $FlowFixMe\nimport { BoxAiAdvancedLogo24, BoxAiLogo24 } from '@box/blueprint-web-assets/icons/Logo';\nimport { type AgentType } from '@box/box-ai-agent-selector';\n\n// $FlowFixMe\nimport { BoxAiAgentSelectorWithApiContainer } from '@box/box-ai-agent-selector';\n\nimport Toggle from '../../components/toggle';\nimport { RadioButton, RadioGroup } from '../../components/radio';\nimport Link from '../../components/link/Link';\nimport IconAlertDefault from '../../icons/general/IconAlertDefault';\nimport messages from './messages';\nimport './CascadePolicy.scss';\nimport { STANDARD_AGENT_ID, ENHANCED_AGENT_ID, ENHANCED_AGENT_CONFIGURATION } from './constants';\nimport type { MetadataCascadePolicyConfiguration } from '../../common/types/metadata';\n\nconst COMMUNITY_LINK = 'https://support.box.com/hc/en-us/articles/360044195873-Cascading-metadata-in-folders';\nconst AI_LINK = 'https://www.box.com/ai';\n\ntype Props = {\n    canEdit: boolean,\n    canUseAIFolderExtraction: boolean,\n    cascadePolicyConfiguration?: MetadataCascadePolicyConfiguration,\n    isAIFolderExtractionEnabled: boolean,\n    isCascadingEnabled: boolean,\n    isCascadingOverwritten: boolean,\n    isCustomMetadata: boolean,\n    isExistingCascadePolicy: boolean,\n    onAIFolderExtractionToggle: (value: boolean) => void,\n    onAIAgentSelect?: (agent: AgentType | null) => void,\n    onCascadeModeChange: (value: boolean) => void,\n    onCascadeToggle: (value: boolean) => void,\n    shouldShowCascadeOptions: boolean,\n};\n\nconst CascadePolicy = ({\n    canEdit,\n    canUseAIFolderExtraction,\n    cascadePolicyConfiguration,\n    isCascadingEnabled,\n    isCascadingOverwritten,\n    isCustomMetadata,\n    isAIFolderExtractionEnabled,\n    isExistingCascadePolicy,\n    onAIFolderExtractionToggle,\n    onAIAgentSelect,\n    onCascadeToggle,\n    onCascadeModeChange,\n    shouldShowCascadeOptions,\n}: Props) => {\n    const { formatMessage } = useIntl();\n\n    const readOnlyState = isCascadingEnabled ? (\n        <div className=\"metadata-cascade-notice\">\n            <FormattedMessage {...messages.metadataCascadePolicyEnabledInfo} />\n        </div>\n    ) : null;\n\n    const isEnhancedAgentSelected = cascadePolicyConfiguration?.agent === ENHANCED_AGENT_CONFIGURATION;\n\n    const agents = React.useMemo(\n        () => [\n            {\n                id: STANDARD_AGENT_ID,\n                name: formatMessage(messages.standardAgentName),\n                isEnterpriseDefault: true,\n            },\n            {\n                id: ENHANCED_AGENT_ID,\n                name: formatMessage(messages.enhancedAgentName),\n                isEnterpriseDefault: false,\n                customIcon: BoxAiAdvancedLogo24,\n                isSelected: isEnhancedAgentSelected,\n            },\n        ],\n        [formatMessage, isEnhancedAgentSelected],\n    );\n\n    // BoxAiAgentSelectorWithApiContainer expects a function that returns a Promise<AgentListResponse>\n    // Since we're passing in our own agents, we don't need to make an API call,\n    // so we wrap the store data in a Promise to satisfy the component's interface requirements.\n    const agentFetcher = useCallback(() => {\n        return Promise.resolve({ agents });\n    }, [agents]);\n\n    const handleAgentSelect = useCallback(\n        (agent: AgentType | null) => {\n            if (onAIAgentSelect) {\n                onAIAgentSelect(agent);\n            }\n        },\n        [onAIAgentSelect],\n    );\n\n    return canEdit ? (\n        <>\n            {isExistingCascadePolicy && (\n                <InlineNotice\n                    variant=\"info\"\n                    variantIconAriaLabel={formatMessage(messages.cascadePolicyOptionsDisabledNoticeIconAriaLabel)}\n                >\n                    <FormattedMessage {...messages.cascadePolicyOptionsDisabledNotice} />\n                </InlineNotice>\n            )}\n            <div className=\"metadata-cascade-editor\">\n                <div className=\"metadata-cascade-enable\" data-testid=\"metadata-cascade-enable\">\n                    <div>\n                        <FormattedMessage tagName=\"strong\" {...messages.enableCascadePolicy} />\n                        {!isCustomMetadata && (\n                            <Toggle\n                                aria-label={formatMessage(messages.enableCascadePolicy)}\n                                className={`metadata-cascade-toggle ${\n                                    isCascadingEnabled ? 'cascade-on' : 'cascade-off'\n                                }`}\n                                isOn={isCascadingEnabled}\n                                label=\"\"\n                                onChange={e => onCascadeToggle(e.target.checked)}\n                            />\n                        )}\n                    </div>\n                    {!isCustomMetadata ? (\n                        <div className=\"cascade-policy-text\">\n                            <FormattedMessage {...messages.applyCascadePolicyText} />\n                            &nbsp;\n                            <Link className=\"cascade-policy-link\" href={COMMUNITY_LINK} target=\"_blank\">\n                                <FormattedMessage {...messages.cascadePolicyLearnMore} />\n                            </Link>\n                        </div>\n                    ) : (\n                        <div>\n                            <FormattedMessage {...messages.cannotApplyCascadePolicyText} />\n                        </div>\n                    )}\n                </div>\n            </div>\n            {shouldShowCascadeOptions && (\n                <div className=\"metadata-cascade-editor\">\n                    <div className=\"metadata-cascading-mode\">\n                        <FormattedMessage {...messages.cascadePolicyModeQuestion} />\n\n                        <div className=\"metadata-operation-not-immediate\">\n                            <IconAlertDefault />\n                            <span>\n                                <FormattedMessage {...messages.operationNotImmediate} />\n                            </span>\n                        </div>\n                        <RadioGroup\n                            className=\"metadata-cascading-options\"\n                            onChange={e => onCascadeModeChange(e.target.value === 'overwrite')}\n                            value={isCascadingOverwritten ? 'overwrite' : 'skip'}\n                        >\n                            <RadioButton\n                                isDisabled={isExistingCascadePolicy}\n                                label={<FormattedMessage {...messages.cascadePolicySkipMode} />}\n                                value=\"skip\"\n                            />\n                            <RadioButton\n                                isDisabled={isExistingCascadePolicy}\n                                label={<FormattedMessage {...messages.cascadePolicyOverwriteMode} />}\n                                value=\"overwrite\"\n                            />\n                        </RadioGroup>\n                    </div>\n                </div>\n            )}\n            {shouldShowCascadeOptions && canUseAIFolderExtraction && (\n                <div className=\"metadata-cascade-editor\" data-testid=\"ai-folder-extraction\">\n                    <div className=\"metadata-cascade-enable\">\n                        <div>\n                            <BoxAiLogo24 className=\"metadata-cascade-ai-logo\" width={16} height={16} />\n                            <FormattedMessage tagName=\"strong\" {...messages.enableAIAutofill} />\n                            <Toggle\n                                aria-label={formatMessage(messages.enableAIAutofill)}\n                                className=\"metadata-cascade-toggle\"\n                                isOn={isAIFolderExtractionEnabled}\n                                isDisabled={isExistingCascadePolicy}\n                                label=\"\"\n                                onChange={e => onAIFolderExtractionToggle(e.target.checked)}\n                            />\n                        </div>\n                        <div className=\"cascade-policy-text\">\n                            <FormattedMessage {...messages.aiAutofillDescription} />\n                            &nbsp;\n                            <Link className=\"cascade-policy-link\" href={AI_LINK} target=\"_blank\">\n                                <FormattedMessage {...messages.aiAutofillLearnMore} />\n                            </Link>\n                        </div>\n                        {isAIFolderExtractionEnabled && (\n                            <div className=\"metadata-cascade-ai-agent-selector\">\n                                <BoxAiAgentSelectorWithApiContainer\n                                    disabled={isExistingCascadePolicy}\n                                    fetcher={agentFetcher}\n                                    onSelectAgent={handleAgentSelect}\n                                    recordAction={() => {}}\n                                    selectorAlignment=\"left\"\n                                />\n                            </div>\n                        )}\n                    </div>\n                </div>\n            )}\n        </>\n    ) : (\n        readOnlyState\n    );\n};\n\nexport default CascadePolicy;\n"],"mappings":"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","ignoreList":[]}