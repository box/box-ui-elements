{"version":3,"file":"TemplatedInstance.js","names":["React","FormattedMessage","MetadataField","messages","isHidden","MetadataInstanceEditorContext","TemplatedInstance","canEdit","data","errors","isDisabled","onFieldChange","onFieldRemove","template","fields","hasFields","length","hasVisibleFields","some","field","showNoFieldsMessage","showHiddenFieldsMessage","blurExceptionClassNames","useContext","createElement","Fragment","map","key","id","dataKey","dataValue","description","displayName","error","onChange","value","type","onRemove","options","className","allAttributesAreHidden","noAttributesForTemplate"],"sources":["../../../src/features/metadata-instance-editor/TemplatedInstance.js"],"sourcesContent":["// @flow\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport MetadataField from '../metadata-instance-fields/MetadataField';\nimport messages from './messages';\nimport { isHidden } from './metadataUtil';\nimport type { MetadataFields, MetadataTemplate, MetadataFieldValue } from '../../common/types/metadata';\nimport MetadataInstanceEditorContext from './MetadataInstanceEditorContext';\nimport './TemplatedInstance.scss';\n\ntype Props = {\n    canEdit: boolean,\n    data: MetadataFields,\n    errors: { [string]: React.Node },\n    isDisabled?: boolean,\n    onFieldChange?: (key: string, value: MetadataFieldValue, type: string) => void,\n    onFieldRemove?: (key: string) => void,\n    template: MetadataTemplate,\n};\n\nconst TemplatedInstance = ({\n    canEdit,\n    data = {},\n    errors,\n    isDisabled,\n    onFieldChange,\n    onFieldRemove,\n    template,\n}: Props) => {\n    const { fields = [] } = template;\n    const hasFields = fields.length > 0;\n    const hasVisibleFields = hasFields && fields.some(field => !isHidden(field));\n    const showNoFieldsMessage = !hasFields;\n    const showHiddenFieldsMessage = hasFields && !hasVisibleFields;\n    const { blurExceptionClassNames } = React.useContext(MetadataInstanceEditorContext);\n\n    return (\n        <>\n            {hasVisibleFields &&\n                fields.map(field => (\n                    <MetadataField\n                        key={field.id}\n                        blurExceptionClassNames={blurExceptionClassNames}\n                        canEdit={canEdit}\n                        dataKey={field.key}\n                        dataValue={data[field.key]}\n                        description={field.description}\n                        displayName={field.displayName}\n                        error={errors[field.key]}\n                        isDisabled={isDisabled}\n                        isHidden={isHidden(field)} // Checking both isHidden and hidden attributes due to differences in V2 and V3 APIs\n                        onChange={(key: string, value: MetadataFieldValue) => {\n                            if (canEdit && onFieldChange) {\n                                onFieldChange(key, value, field.type);\n                            }\n                        }}\n                        onRemove={(key: string) => {\n                            if (canEdit && onFieldRemove) {\n                                onFieldRemove(key);\n                            }\n                        }}\n                        options={field.options}\n                        type={field.type}\n                    />\n                ))}\n            {showHiddenFieldsMessage && (\n                <div className=\"attributes-hidden-message\">\n                    <FormattedMessage {...messages.allAttributesAreHidden} />\n                </div>\n            )}\n            {showNoFieldsMessage && (\n                <div className=\"no-attributes-message\">\n                    <FormattedMessage {...messages.noAttributesForTemplate} />\n                </div>\n            )}\n        </>\n    );\n};\n\nexport default TemplatedInstance;\n"],"mappings":"AACA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,gBAAgB,QAAQ,YAAY;AAE7C,OAAOC,aAAa,MAAM,2CAA2C;AACrE,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,QAAQ,QAAQ,gBAAgB;AAEzC,OAAOC,6BAA6B,MAAM,iCAAiC;AAC3E,OAAO,0BAA0B;AAYjC,MAAMC,iBAAiB,GAAGA,CAAC;EACvBC,OAAO;EACPC,IAAI,GAAG,CAAC,CAAC;EACTC,MAAM;EACNC,UAAU;EACVC,aAAa;EACbC,aAAa;EACbC;AACG,CAAC,KAAK;EACT,MAAM;IAAEC,MAAM,GAAG;EAAG,CAAC,GAAGD,QAAQ;EAChC,MAAME,SAAS,GAAGD,MAAM,CAACE,MAAM,GAAG,CAAC;EACnC,MAAMC,gBAAgB,GAAGF,SAAS,IAAID,MAAM,CAACI,IAAI,CAACC,KAAK,IAAI,CAACf,QAAQ,CAACe,KAAK,CAAC,CAAC;EAC5E,MAAMC,mBAAmB,GAAG,CAACL,SAAS;EACtC,MAAMM,uBAAuB,GAAGN,SAAS,IAAI,CAACE,gBAAgB;EAC9D,MAAM;IAAEK;EAAwB,CAAC,GAAGtB,KAAK,CAACuB,UAAU,CAAClB,6BAA6B,CAAC;EAEnF,oBACIL,KAAA,CAAAwB,aAAA,CAAAxB,KAAA,CAAAyB,QAAA,QACKR,gBAAgB,IACbH,MAAM,CAACY,GAAG,CAACP,KAAK,iBACZnB,KAAA,CAAAwB,aAAA,CAACtB,aAAa;IACVyB,GAAG,EAAER,KAAK,CAACS,EAAG;IACdN,uBAAuB,EAAEA,uBAAwB;IACjDf,OAAO,EAAEA,OAAQ;IACjBsB,OAAO,EAAEV,KAAK,CAACQ,GAAI;IACnBG,SAAS,EAAEtB,IAAI,CAACW,KAAK,CAACQ,GAAG,CAAE;IAC3BI,WAAW,EAAEZ,KAAK,CAACY,WAAY;IAC/BC,WAAW,EAAEb,KAAK,CAACa,WAAY;IAC/BC,KAAK,EAAExB,MAAM,CAACU,KAAK,CAACQ,GAAG,CAAE;IACzBjB,UAAU,EAAEA,UAAW;IACvBN,QAAQ,EAAEA,QAAQ,CAACe,KAAK,CAAE,CAAC;IAAA;IAC3Be,QAAQ,EAAEA,CAACP,GAAW,EAAEQ,KAAyB,KAAK;MAClD,IAAI5B,OAAO,IAAII,aAAa,EAAE;QAC1BA,aAAa,CAACgB,GAAG,EAAEQ,KAAK,EAAEhB,KAAK,CAACiB,IAAI,CAAC;MACzC;IACJ,CAAE;IACFC,QAAQ,EAAGV,GAAW,IAAK;MACvB,IAAIpB,OAAO,IAAIK,aAAa,EAAE;QAC1BA,aAAa,CAACe,GAAG,CAAC;MACtB;IACJ,CAAE;IACFW,OAAO,EAAEnB,KAAK,CAACmB,OAAQ;IACvBF,IAAI,EAAEjB,KAAK,CAACiB;EAAK,CACpB,CACJ,CAAC,EACLf,uBAAuB,iBACpBrB,KAAA,CAAAwB,aAAA;IAAKe,SAAS,EAAC;EAA2B,gBACtCvC,KAAA,CAAAwB,aAAA,CAACvB,gBAAgB,EAAKE,QAAQ,CAACqC,sBAAyB,CACvD,CACR,EACApB,mBAAmB,iBAChBpB,KAAA,CAAAwB,aAAA;IAAKe,SAAS,EAAC;EAAuB,gBAClCvC,KAAA,CAAAwB,aAAA,CAACvB,gBAAgB,EAAKE,QAAQ,CAACsC,uBAA0B,CACxD,CAEX,CAAC;AAEX,CAAC;AAED,eAAenC,iBAAiB","ignoreList":[]}