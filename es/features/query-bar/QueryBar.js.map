{"version":3,"file":"QueryBar.js","names":["React","TemplateButton","FilterButton","ColumnButton","isItemName","column","source","property","QueryBar","activeTemplate","columns","conditions","onColumnChange","onFilterChange","onTemplateChange","templates","metadataColumns","filter","columnsWithoutItemName","createElement","className","template"],"sources":["../../../src/features/query-bar/QueryBar.js"],"sourcesContent":["// @flow\nimport * as React from 'react';\n\nimport TemplateButton from './components/TemplateButton';\nimport FilterButton from './components/filter/FilterButton';\nimport ColumnButton from './components/ColumnButton';\n\nimport type { ColumnType, ConditionType } from './flowTypes';\nimport type { MetadataTemplate } from '../../common/types/metadata';\n\nimport './styles/QueryBarButtons.scss';\n\ntype Props = {\n    activeTemplate?: MetadataTemplate,\n    columns?: Array<ColumnType>,\n    conditions: Array<ConditionType>,\n    onColumnChange?: Function,\n    onFilterChange?: Function,\n    onTemplateChange?: Function,\n    templates?: Array<MetadataTemplate>,\n};\n\nconst isItemName = (column: ColumnType) => {\n    return column.source === 'item' && column.property === 'name';\n};\n\nconst QueryBar = ({\n    activeTemplate,\n    columns,\n    conditions,\n    onColumnChange,\n    onFilterChange,\n    onTemplateChange,\n    templates,\n}: Props) => {\n    const metadataColumns = columns && columns.filter(column => column.source !== 'item');\n    const columnsWithoutItemName = columns && columns.filter(column => !isItemName(column));\n    return (\n        <section className=\"metadata-view-query-bar\">\n            <TemplateButton activeTemplate={activeTemplate} onTemplateChange={onTemplateChange} templates={templates} />\n            <FilterButton columns={metadataColumns} conditions={conditions} onFilterChange={onFilterChange} />\n            <ColumnButton columns={columnsWithoutItemName} onColumnChange={onColumnChange} template={activeTemplate} />\n        </section>\n    );\n};\n\nexport default QueryBar;\n"],"mappings":"AACA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAE9B,OAAOC,cAAc,MAAM,6BAA6B;AACxD,OAAOC,YAAY,MAAM,kCAAkC;AAC3D,OAAOC,YAAY,MAAM,2BAA2B;AAKpD,OAAO,+BAA+B;AAYtC,MAAMC,UAAU,GAAIC,MAAkB,IAAK;EACvC,OAAOA,MAAM,CAACC,MAAM,KAAK,MAAM,IAAID,MAAM,CAACE,QAAQ,KAAK,MAAM;AACjE,CAAC;AAED,MAAMC,QAAQ,GAAGA,CAAC;EACdC,cAAc;EACdC,OAAO;EACPC,UAAU;EACVC,cAAc;EACdC,cAAc;EACdC,gBAAgB;EAChBC;AACG,CAAC,KAAK;EACT,MAAMC,eAAe,GAAGN,OAAO,IAAIA,OAAO,CAACO,MAAM,CAACZ,MAAM,IAAIA,MAAM,CAACC,MAAM,KAAK,MAAM,CAAC;EACrF,MAAMY,sBAAsB,GAAGR,OAAO,IAAIA,OAAO,CAACO,MAAM,CAACZ,MAAM,IAAI,CAACD,UAAU,CAACC,MAAM,CAAC,CAAC;EACvF,oBACIL,KAAA,CAAAmB,aAAA;IAASC,SAAS,EAAC;EAAyB,gBACxCpB,KAAA,CAAAmB,aAAA,CAAClB,cAAc;IAACQ,cAAc,EAAEA,cAAe;IAACK,gBAAgB,EAAEA,gBAAiB;IAACC,SAAS,EAAEA;EAAU,CAAE,CAAC,eAC5Gf,KAAA,CAAAmB,aAAA,CAACjB,YAAY;IAACQ,OAAO,EAAEM,eAAgB;IAACL,UAAU,EAAEA,UAAW;IAACE,cAAc,EAAEA;EAAe,CAAE,CAAC,eAClGb,KAAA,CAAAmB,aAAA,CAAChB,YAAY;IAACO,OAAO,EAAEQ,sBAAuB;IAACN,cAAc,EAAEA,cAAe;IAACS,QAAQ,EAAEZ;EAAe,CAAE,CACrG,CAAC;AAElB,CAAC;AAED,eAAeD,QAAQ","ignoreList":[]}