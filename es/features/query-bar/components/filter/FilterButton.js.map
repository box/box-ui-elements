{"version":3,"file":"FilterButton.js","names":["React","FormattedMessage","classNames","uniqueId","cloneDeep","IconMetadataFilter","Condition","Button","PrimaryButton","MenuToggle","Flyout","Overlay","AND","OR","COLUMN_OPERATORS","messages","FilterButton","Component","constructor","props","_defineProperty","setState","isMenuOpen","state","conditionID","columns","length","firstColumn","operator","type","key","columnId","id","values","Error","newCondition","createCondition","transientConditions","hasUserSubmitted","onFilterChange","areAllValid","conditionId","updateCondition","newConditionIndex","conditionToUpdate","find","currentCondition","index","_objectSpread","newConditions","condition","column","c","value","updateConditionState","option","convert","str","selectedConnector","conditionsAfterDeletion","filter","conditionIndex","forEach","event","target","classList","contains","parentNode","conditions","componentDidUpdate","prevProps","prevState","prevIsMenuOpen","wasFlyoutOpened","hasUnsavedConditions","shouldSetInitialCondition","render","numberOfConditions","buttonClasses","isFilterDisabled","createElement","className","closeOnClick","closeOnClickOutside","closeOnClickPredicate","shouldClose","onClose","onOpen","overlayIsVisible","portaledClasses","position","shouldDefaultFocus","isDisabled","onClick","toggleButton","filtersButtonText","_extends","multipleFiltersButtonText","number","noFiltersAppliedText","map","deleteCondition","onColumnChange","handleColumnChange","onConnectorChange","handleConnectorChange","onOperatorChange","handleOperatorChange","onValueChange","handleValueChange","addFilter","addFilterButtonText","applyFilters","applyFiltersButtonText"],"sources":["../../../../../src/features/query-bar/components/filter/FilterButton.js"],"sourcesContent":["// @flow\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport classNames from 'classnames';\nimport uniqueId from 'lodash/uniqueId';\nimport cloneDeep from 'lodash/cloneDeep';\n\nimport IconMetadataFilter from '../../../../icons/metadata-view/IconMetadataFilter';\nimport Condition from './Condition';\nimport Button from '../../../../components/button/Button';\nimport PrimaryButton from '../../../../components/primary-button/PrimaryButton';\nimport MenuToggle from '../../../../components/dropdown-menu/MenuToggle';\nimport { Flyout, Overlay } from '../../../../components/flyout';\nimport { AND, OR, COLUMN_OPERATORS } from '../../constants';\n\nimport messages from '../../messages';\n\nimport type {\n    ColumnType,\n    ConditionType,\n    ConditionValueType,\n    ConnectorType,\n    OperatorType,\n    OptionType,\n} from '../../flowTypes';\n\ntype State = {\n    hasUserSubmitted: boolean,\n    isMenuOpen: boolean,\n    selectedConnector: ConnectorType,\n    transientConditions: Array<Object>,\n};\n\ntype Props = {\n    columns?: Array<ColumnType>,\n    conditions: Array<ConditionType>,\n    onFilterChange?: Function,\n};\n\nclass FilterButton extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n\n        this.state = {\n            hasUserSubmitted: false,\n            isMenuOpen: false,\n            selectedConnector: AND,\n            transientConditions: cloneDeep(this.props.conditions),\n        };\n    }\n\n    componentDidUpdate(prevProps: Props, prevState: State) {\n        const { columns, conditions } = this.props;\n        const { isMenuOpen, transientConditions } = this.state;\n        const { isMenuOpen: prevIsMenuOpen } = prevState;\n        const wasFlyoutOpened = isMenuOpen && !prevIsMenuOpen;\n        if (wasFlyoutOpened) {\n            const hasUnsavedConditions = transientConditions.length > 0;\n            const shouldSetInitialCondition = conditions.length === 0;\n\n            if (!hasUnsavedConditions) {\n                if (shouldSetInitialCondition) {\n                    const newConditions = columns && columns.length === 0 ? [] : [this.createCondition()];\n                    this.setState({\n                        transientConditions: newConditions,\n                    });\n                } else {\n                    this.setState({\n                        transientConditions: cloneDeep(this.props.conditions),\n                    });\n                }\n            }\n        }\n    }\n\n    onClose = () => {\n        this.setState({\n            isMenuOpen: false,\n        });\n    };\n\n    onOpen = () => {\n        this.setState({ isMenuOpen: true });\n    };\n\n    toggleButton = () => {\n        this.setState({ isMenuOpen: !this.state.isMenuOpen });\n    };\n\n    createCondition = () => {\n        const conditionID = uniqueId();\n        const { columns } = this.props;\n        if (columns && columns.length > 0) {\n            const firstColumn = columns[0];\n            const operator = COLUMN_OPERATORS[firstColumn.type][0].key;\n\n            return {\n                columnId: firstColumn.id,\n                id: conditionID,\n                operator,\n                values: [],\n            };\n        }\n        throw new Error('Columns Required');\n    };\n\n    addFilter = () => {\n        const newCondition = this.createCondition();\n        this.setState({\n            transientConditions: [...this.state.transientConditions, newCondition],\n            hasUserSubmitted: false,\n        });\n    };\n\n    applyFilters = () => {\n        const { onFilterChange } = this.props;\n        const { transientConditions } = this.state;\n\n        const areAllValid = this.areAllValid();\n\n        if (areAllValid) {\n            if (onFilterChange) {\n                onFilterChange(transientConditions);\n            }\n            this.setState({\n                isMenuOpen: false,\n                transientConditions: [],\n                hasUserSubmitted: false,\n            });\n        } else {\n            this.setState({\n                hasUserSubmitted: true,\n            });\n        }\n    };\n\n    updateConditionState = (conditionId: string, updateCondition: Function) => {\n        const { transientConditions } = this.state;\n        let newConditionIndex = 0;\n        const conditionToUpdate = transientConditions.find((currentCondition, index) => {\n            newConditionIndex = index;\n            return currentCondition.id === conditionId;\n        });\n\n        let newCondition = { ...conditionToUpdate };\n        newCondition = updateCondition(newCondition);\n\n        const newConditions = cloneDeep(transientConditions);\n        newConditions[newConditionIndex] = newCondition;\n\n        this.setState({\n            transientConditions: newConditions,\n        });\n    };\n\n    handleColumnChange = (condition: ConditionType, columnId: string) => {\n        const { columns } = this.props;\n        const { transientConditions } = this.state;\n        let newConditionIndex = 0;\n        const conditionToUpdate = transientConditions.find((currentCondition, index) => {\n            newConditionIndex = index;\n            return currentCondition.id === condition.id;\n        });\n\n        const column = columns && columns.find(c => c.id === columnId);\n        if (!column) {\n            throw new Error('Invalid Column.id');\n        }\n\n        const type = column && column.type;\n\n        const operator = COLUMN_OPERATORS[type][0].key;\n\n        const newCondition = {\n            ...conditionToUpdate,\n            columnId,\n            operator,\n            values: [],\n        };\n\n        const newConditions = cloneDeep(transientConditions);\n        newConditions[newConditionIndex] = newCondition;\n\n        this.setState({\n            transientConditions: newConditions,\n        });\n    };\n\n    handleOperatorChange = (conditionId: string, value: OperatorType) => {\n        this.updateConditionState(conditionId, condition => {\n            condition.operator = value;\n            return condition;\n        });\n    };\n\n    handleValueChange = (conditionId: string, values: Array<ConditionValueType>) => {\n        this.updateConditionState(conditionId, condition => {\n            condition.values = values;\n            return condition;\n        });\n    };\n\n    handleConnectorChange = (option: OptionType) => {\n        const convert = str => {\n            switch (str) {\n                case AND:\n                    return AND;\n                case OR:\n                    return OR;\n                default:\n                    throw new Error('Invalid connector');\n            }\n        };\n\n        this.setState({\n            selectedConnector: convert(option.value),\n        });\n    };\n\n    deleteCondition = (index: number) => {\n        const { transientConditions } = this.state;\n\n        const conditionsAfterDeletion = transientConditions.filter((condition, conditionIndex) => {\n            return conditionIndex !== index;\n        });\n\n        this.setState({\n            transientConditions: conditionsAfterDeletion,\n        });\n    };\n\n    areAllValid = () => {\n        const { transientConditions } = this.state;\n        let areAllValid = true;\n        transientConditions.forEach(condition => {\n            if (condition.values.length === 0) {\n                areAllValid = false;\n            }\n        });\n        return areAllValid;\n    };\n\n    // Should close when all the conditions have a value set and the apply button is pressed.\n    shouldClose = (event?: SyntheticEvent<>) => {\n        // The current approach assumes that the Apply button contains at most one child element.\n        const areAllValid = this.areAllValid();\n\n        if (event && event.target && areAllValid) {\n            if (\n                (event.target: window.HTMLButtonElement).classList.contains('apply-filters-button') ||\n                (event.target: window.HTMLSpanElement).parentNode.classList.contains('apply-filters-button')\n            ) {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    render() {\n        const { columns, conditions } = this.props;\n        const { transientConditions, hasUserSubmitted, isMenuOpen, selectedConnector } = this.state;\n\n        const numberOfConditions = conditions.length;\n        const areAllValid = this.areAllValid();\n\n        const buttonClasses = classNames(\n            'query-bar-button',\n            numberOfConditions !== 0 && areAllValid ? 'is-active' : '',\n        );\n\n        const isFilterDisabled = !columns || columns.length === 0;\n\n        return (\n            <Flyout\n                className=\"query-bar-filter-dropdown-flyout\"\n                closeOnClick\n                closeOnClickOutside\n                closeOnClickPredicate={this.shouldClose}\n                onClose={this.onClose}\n                onOpen={this.onOpen}\n                overlayIsVisible={isMenuOpen}\n                portaledClasses={['pika-single']} /* Element in DatePicker package  */\n                position=\"bottom-right\"\n                shouldDefaultFocus\n            >\n                <Button\n                    className={buttonClasses}\n                    isDisabled={isFilterDisabled}\n                    onClick={this.toggleButton}\n                    type=\"button\"\n                >\n                    <MenuToggle>\n                        <IconMetadataFilter className=\"button-icon\" />\n                        <span className=\"button-label\">\n                            {numberOfConditions === 0 ? (\n                                <FormattedMessage {...messages.filtersButtonText} />\n                            ) : (\n                                <FormattedMessage\n                                    {...messages.multipleFiltersButtonText}\n                                    values={{\n                                        number: numberOfConditions,\n                                    }}\n                                />\n                            )}\n                        </span>\n                    </MenuToggle>\n                </Button>\n\n                <Overlay>\n                    {isMenuOpen ? (\n                        <div className=\"filter-button-dropdown\">\n                            <div className=\"filter-button-dropdown-header\">\n                                {transientConditions.length === 0 ? (\n                                    <FormattedMessage {...messages.noFiltersAppliedText} />\n                                ) : null}\n                                {transientConditions.map((condition, index) => {\n                                    return (\n                                        <Condition\n                                            key={`metadata-view-filter-item-${condition.id}`}\n                                            hasUserSubmitted={hasUserSubmitted}\n                                            columns={columns}\n                                            condition={condition}\n                                            deleteCondition={this.deleteCondition}\n                                            index={index}\n                                            onColumnChange={this.handleColumnChange}\n                                            onConnectorChange={this.handleConnectorChange}\n                                            onOperatorChange={this.handleOperatorChange}\n                                            onValueChange={this.handleValueChange}\n                                            selectedConnector={selectedConnector}\n                                        />\n                                    );\n                                })}\n                            </div>\n                            <div className=\"filter-button-dropdown-footer\">\n                                <Button type=\"button\" onClick={this.addFilter}>\n                                    <FormattedMessage {...messages.addFilterButtonText} />\n                                </Button>\n\n                                <PrimaryButton\n                                    className=\"apply-filters-button\"\n                                    onClick={this.applyFilters}\n                                    type=\"button\"\n                                >\n                                    <FormattedMessage {...messages.applyFiltersButtonText} />\n                                </PrimaryButton>\n                            </div>\n                        </div>\n                    ) : (\n                        <div />\n                    )}\n                </Overlay>\n            </Flyout>\n        );\n    }\n}\n\nexport default FilterButton;\n"],"mappings":"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","ignoreList":[]}