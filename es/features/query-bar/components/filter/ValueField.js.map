{"version":3,"file":"ValueField.js","names":["React","FormattedMessage","isNaN","DatePicker","SingleSelectField","MultiSelectField","TextInput","DATE","ENUM","FLOAT","MULTI_SELECT","NUMBER","STRING","VALUE","messages","getDateValue","selectedValues","length","undefined","value","date","Date","valueOf","Error","getStringValue","ValueField","error","onChange","valueOptions","valueType","onInputChange","e","target","createElement","className","errorPosition","hideLabel","label","name","placeholder","displayFormat","day","month","year","fieldType","options","selectValuePlaceholderText","selectedValue","map","option"],"sources":["../../../../../src/features/query-bar/components/filter/ValueField.js"],"sourcesContent":["// @flow\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport isNaN from 'lodash/isNaN';\n\nimport DatePicker from '../../../../components/date-picker';\nimport SingleSelectField from '../../../../components/select-field/SingleSelectField';\nimport MultiSelectField from '../../../../components/select-field/MultiSelectField';\nimport TextInput from '../../../../components/text-input';\nimport { DATE, ENUM, FLOAT, MULTI_SELECT, NUMBER, STRING, VALUE } from '../../constants';\nimport messages from '../../messages';\nimport type { ConditionValueType } from '../../flowTypes';\n\nimport '../../styles/Condition.scss';\n\ntype Props = {\n    error?: React.Node,\n    onChange: (value: Array<ConditionValueType>) => void,\n    selectedValues: Array<ConditionValueType>,\n    valueOptions: Array<Object>,\n    valueType: string,\n};\n\nconst getDateValue = selectedValues => {\n    if (selectedValues.length === 0 || selectedValues[0] === null) {\n        return undefined;\n    }\n\n    const value = selectedValues[0];\n    const date = new Date(value);\n    if (!isNaN(date.valueOf())) {\n        return date;\n    }\n\n    throw new Error('Expected Date');\n};\n\nconst getStringValue = selectedValues => {\n    if (selectedValues.length === 0) {\n        return undefined;\n    }\n\n    const value = selectedValues[0];\n    if (typeof value === 'string') {\n        return value !== '' ? value : null;\n    }\n\n    throw new Error('Expected string');\n};\n\nconst ValueField = ({ error, onChange, selectedValues, valueOptions, valueType }: Props) => {\n    const value = selectedValues.length > 0 ? selectedValues[0] : '';\n    const onInputChange = e => {\n        return e.target.value !== '' ? onChange([e.target.value]) : onChange([]);\n    };\n\n    switch (valueType) {\n        case STRING:\n        case NUMBER:\n        case FLOAT:\n            return (\n                <div className=\"filter-dropdown-text-field-container\">\n                    <TextInput\n                        error={error}\n                        errorPosition=\"middle-left\"\n                        hideLabel\n                        label=\"Text Input\"\n                        name=\"text\"\n                        onChange={onInputChange}\n                        placeholder={`Enter ${valueType === STRING ? 'value' : 'a number'}`}\n                        value={value}\n                    />\n                </div>\n            );\n        case DATE:\n            return (\n                <div className=\"filter-dropdown-date-field-container\">\n                    <DatePicker\n                        displayFormat={{\n                            day: 'numeric',\n                            month: 'long',\n                            year: 'numeric',\n                        }}\n                        hideLabel\n                        label=\"Date\"\n                        name=\"datepicker\"\n                        onChange={date => onChange([date])}\n                        placeholder=\"Date\"\n                        value={getDateValue(selectedValues)}\n                    />\n                </div>\n            );\n        case ENUM:\n            return (\n                <SingleSelectField\n                    fieldType={VALUE}\n                    onChange={e => onChange([e.value])}\n                    options={valueOptions}\n                    placeholder={<FormattedMessage {...messages.selectValuePlaceholderText} />}\n                    selectedValue={getStringValue(selectedValues)}\n                />\n            );\n        case MULTI_SELECT:\n            return (\n                <MultiSelectField\n                    fieldType={VALUE}\n                    onChange={e => onChange(e.map(option => option.value))}\n                    options={valueOptions}\n                    placeholder={<FormattedMessage {...messages.selectValuePlaceholderText} />}\n                    selectedValues={selectedValues}\n                />\n            );\n        default:\n            return null;\n    }\n};\n\nexport default ValueField;\n"],"mappings":"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","ignoreList":[]}