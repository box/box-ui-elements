{"version":3,"file":"TemplateButton.js","names":["React","FormattedMessage","classNames","MetadataDefaultBadge","MetadataActiveBadge","TemplateDropdown","Button","MenuToggle","messages","LoadingIndicator","TemplateButton","Component","constructor","args","_defineProperty","isTemplateMenuOpen","setState","state","template","onTemplateChange","props","templates","activeTemplate","icon","text","isLoadingTemplates","hasTemplates","length","createElement","className","templatesLoadingButtonText","noTemplatesText","displayName","templatesButtonText","buttonClasses","isDisabled","type","onClick","toggleTemplateDropdownButton","metadataViewTemplateListHeaderTitle","render","usedTemplates","defaultTemplateIcon","title","renderTitle","onAdd","updateActiveTemplate","activeTemplateIcon","entryButton","renderEntryButton"],"sources":["../../../../src/features/query-bar/components/TemplateButton.js"],"sourcesContent":["// @flow\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport classNames from 'classnames';\n\nimport MetadataDefaultBadge from '../../../icons/badges/MetadataDefaultBadge';\nimport MetadataActiveBadge from '../../../icons/badges/MetadataActiveBadge';\nimport TemplateDropdown from '../../metadata-instance-editor/TemplateDropdown';\nimport Button from '../../../components/button/Button';\nimport MenuToggle from '../../../components/dropdown-menu/MenuToggle';\nimport messages from '../messages';\nimport LoadingIndicator from '../../../components/loading-indicator';\nimport type { MetadataTemplate } from '../../../common/types/metadata';\n\ntype State = {\n    isTemplateMenuOpen: boolean,\n};\n\ntype Props = {\n    activeTemplate?: MetadataTemplate,\n    onAdd?: Function,\n    onTemplateChange?: Function,\n    templates?: Array<Object>,\n    usedTemplates: Array<Object>,\n};\n\nclass TemplateButton extends React.Component<Props, State> {\n    static defaultProps = {\n        usedTemplates: [],\n    };\n\n    state = {\n        isTemplateMenuOpen: false,\n    };\n\n    toggleTemplateDropdownButton = () => {\n        this.setState({ isTemplateMenuOpen: !this.state.isTemplateMenuOpen });\n    };\n\n    updateActiveTemplate = (template: MetadataTemplate) => {\n        const { onTemplateChange } = this.props;\n\n        if (onTemplateChange) {\n            onTemplateChange(template);\n        }\n    };\n\n    renderEntryButton = () => {\n        const { templates, activeTemplate } = this.props;\n\n        let icon;\n        let text;\n\n        const isLoadingTemplates = !templates;\n        const hasTemplates = templates && templates.length > 0;\n\n        if (isLoadingTemplates) {\n            icon = <LoadingIndicator className=\"loading-indicator\" />;\n            text = <FormattedMessage {...messages.templatesLoadingButtonText} />;\n        } else if (!hasTemplates) {\n            text = <FormattedMessage {...messages.noTemplatesText} />;\n        } else if (activeTemplate) {\n            icon = <MetadataActiveBadge />;\n            text = activeTemplate.displayName;\n        } else if (!activeTemplate) {\n            icon = <MetadataDefaultBadge />;\n            text = <FormattedMessage {...messages.templatesButtonText} />;\n        }\n\n        const buttonClasses = classNames('query-bar-button', {\n            'is-active': activeTemplate,\n        });\n\n        return (\n            <Button\n                className={buttonClasses}\n                isDisabled={!templates || templates.length === 0}\n                type=\"button\"\n                onClick={this.toggleTemplateDropdownButton}\n            >\n                <MenuToggle>\n                    {icon}\n                    <span className=\"button-label\">{text}</span>\n                </MenuToggle>\n            </Button>\n        );\n    };\n\n    renderTitle = () => (\n        <div className=\"template-dropdown-list-title\">\n            <FormattedMessage {...messages.metadataViewTemplateListHeaderTitle} />\n        </div>\n    );\n\n    render() {\n        const { activeTemplate, templates, usedTemplates } = this.props;\n        return (\n            <TemplateDropdown\n                className=\"query-bar-template-dropdown-flyout\"\n                defaultTemplateIcon={<MetadataDefaultBadge className=\"template-list-item-badge\" />}\n                title={this.renderTitle()}\n                onAdd={this.updateActiveTemplate}\n                activeTemplate={activeTemplate}\n                activeTemplateIcon={<MetadataActiveBadge className=\"template-list-item-badge\" />}\n                templates={templates || []}\n                usedTemplates={usedTemplates}\n                entryButton={this.renderEntryButton()}\n            />\n        );\n    }\n}\n\nexport default TemplateButton;\n"],"mappings":"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","ignoreList":[]}