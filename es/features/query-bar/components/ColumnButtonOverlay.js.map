{"version":3,"file":"ColumnButtonOverlay.js","names":["React","FormattedMessage","uniqueId","cloneDeep","Checkbox","DraggableList","PortaledDraggableListItem","PrimaryButton","reorder","messages","ColumnButtonOverlay","Component","constructor","props","_defineProperty","sourceIndex","destinationIndex","pendingColumns","state","columns","setState","column","pendingColumnsCopy","newColumn","_objectSpread","isShown","foundIndex","findIndex","originalColumn","id","onColumnChange","reduce","total","listId","render","createElement","className","onDragEnd","map","item","index","isDraggableViaHandle","key","isChecked","label","displayName","name","onChange","updatePendingColumns","type","onClick","applyFilters","applyFiltersButtonText"],"sources":["../../../../src/features/query-bar/components/ColumnButtonOverlay.js"],"sourcesContent":["// @flow\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport uniqueId from 'lodash/uniqueId';\nimport cloneDeep from 'lodash/cloneDeep';\n\nimport Checkbox from '../../../components/checkbox/Checkbox';\nimport DraggableList from '../../../components/draggable-list';\nimport PortaledDraggableListItem from '../../../components/draggable-list/PortaledDraggableListItem';\nimport PrimaryButton from '../../../components/primary-button/PrimaryButton';\nimport reorder from '../../../components/draggable-list/draggable-list-utils/reorder';\n\nimport type { ColumnType } from '../flowTypes';\n\nimport messages from '../messages';\n\ntype State = {\n    listId: string,\n    pendingColumns: Array<ColumnType>,\n};\n\ntype Props = {\n    columns?: Array<ColumnType>,\n    onColumnChange?: (columnTypes: Array<ColumnType>) => void,\n};\n\nclass ColumnButtonOverlay extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            listId: uniqueId(),\n            pendingColumns: props.columns ? cloneDeep(props.columns) : [],\n        };\n    }\n\n    onDragEnd = (sourceIndex: number, destinationIndex: number) => {\n        const { pendingColumns } = this.state;\n        const columns = reorder(pendingColumns, sourceIndex, destinationIndex);\n        this.setState({\n            pendingColumns: cloneDeep(columns),\n        });\n    };\n\n    updatePendingColumns = (column: ColumnType) => {\n        const { pendingColumns } = this.state;\n\n        const pendingColumnsCopy = cloneDeep(pendingColumns);\n\n        const newColumn = { ...column, isShown: !column.isShown };\n\n        const foundIndex = pendingColumnsCopy.findIndex(originalColumn => originalColumn.id === column.id);\n\n        pendingColumnsCopy[foundIndex] = newColumn;\n        this.setState({\n            pendingColumns: pendingColumnsCopy,\n        });\n    };\n\n    applyFilters = () => {\n        const { onColumnChange } = this.props;\n        const { pendingColumns } = this.state;\n        if (onColumnChange) {\n            onColumnChange(pendingColumns);\n        }\n    };\n\n    getNumberOfHiddenColumns = () => {\n        const { columns } = this.props;\n\n        return columns\n            ? columns.reduce((total, column) => {\n                  if (!column.isShown) {\n                      return total + 1;\n                  }\n                  return total;\n              }, 0)\n            : 0;\n    };\n\n    render() {\n        const { listId, pendingColumns } = this.state;\n\n        return (\n            <div className=\"column-button-dropdown\">\n                <div className=\"column-button-dropdown-header\">\n                    <DraggableList className=\"draggable-list-example\" listId={listId} onDragEnd={this.onDragEnd}>\n                        {pendingColumns.map((item, index) => {\n                            return (\n                                <PortaledDraggableListItem id={item.id} index={index} isDraggableViaHandle key={index}>\n                                    <Checkbox\n                                        isChecked={item.isShown}\n                                        label={item.displayName}\n                                        name={item.displayName}\n                                        onChange={() => this.updatePendingColumns(item)}\n                                    />\n                                </PortaledDraggableListItem>\n                            );\n                        })}\n                    </DraggableList>\n                </div>\n                <div className=\"column-button-dropdown-footer\">\n                    <PrimaryButton type=\"button\" onClick={this.applyFilters}>\n                        <FormattedMessage {...messages.applyFiltersButtonText} />\n                    </PrimaryButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ColumnButtonOverlay;\n"],"mappings":"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","ignoreList":[]}