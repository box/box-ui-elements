{"version":3,"file":"InviteCollaboratorsModal.js","names":["PropTypes","React","Component","omit","throttle","FormattedMessage","injectIntl","UpgradeBadge","Button","InlineNotice","PrimaryButton","Select","TextArea","Link","Modal","ModalActions","ContactDatalistItem","PillSelectorDropdown","parseEmails","RESIN_TAG_TARGET","PermissionFlyout","ReferAFriendAd","messages","commonMessages","COLLAB_ROLE_FOR_FILE","INPUT_DELAY","isSubstring","value","searchString","toLowerCase","indexOf","InviteCollaboratorsModal","constructor","props","_defineProperty","contacts","pillSelectorInputValue","selectedOptions","state","filter","name","email","id","find","map","type","text","setState","pillSelectorError","onRequestClose","intl","sendInvites","message","permission","length","formatMessage","requiredFieldError","emails","groupIDs","forEach","push","params","join","emailMessage","numsOfInvitees","numOfInviteeGroups","catch","error","invitedEmails","filterInvitedEmails","includes","onUserInput","pills","option","index","slice","splice","validator","invalidEmailError","pattern","test","target","defaultPersonalMessage","inviteePermissions","renderFileCollabComponents","createElement","className","inviteFileEditorsLabel","renderPermissionsSection","label","inviteePermissionsFieldLabel","onChange","handlePermissionChange","disabled","key","renderFolderCollabComponents","showUpgradeOptions","href","upgradeGetMoreAccessControls","cols","defaultValue","personalMessageLabel","handleMessageChange","rows","render","_this$props","collaborationRestrictionWarning","inviteButtonProps","isEligibleForReferAFriendProgram","itemName","itemType","submissionError","submitting","rest","_objectWithoutProperties","_excluded","modalProps","selectorOptions","getSelectorOptions","title","_extends","inviteCollaboratorsModalTitle","values","groupLabel","closeButtonProps","closeModal","allowCustomPills","inviteFieldLabel","onInput","handlePillSelectorInput","onRemove","handlePillRemove","onSelect","handlePillSelect","parseItems","placeholder","pillSelectorPlaceholder","validateForError","subtitle","isDisabled","onClick","inviteCollaboratorsModalCancelButton","isLoading","inviteCollaboratorsModalSendInvitesButton","node","arrayOf","shape","string","oneOfType","number","isrequired","isRequired","any","object","bool","itemTypedID","func","InviteCollaboratorsModalBase"],"sources":["../../../src/features/invite-collaborators-modal/InviteCollaboratorsModal.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport omit from 'lodash/omit';\nimport throttle from 'lodash/throttle';\nimport { FormattedMessage, injectIntl } from 'react-intl';\n\nimport { UpgradeBadge } from '../../components/badge';\nimport Button from '../../components/button';\nimport InlineNotice from '../../components/inline-notice';\nimport PrimaryButton from '../../components/primary-button';\nimport Select from '../../components/select';\nimport TextArea from '../../components/text-area';\nimport { Link } from '../../components/link';\nimport { Modal, ModalActions } from '../../components/modal';\nimport ContactDatalistItem from '../../components/contact-datalist-item';\nimport PillSelectorDropdown from '../../components/pill-selector-dropdown';\nimport parseEmails from '../../utils/parseEmails';\nimport { RESIN_TAG_TARGET } from '../../common/variables';\n\nimport PermissionFlyout from './PermissionFlyout';\nimport ReferAFriendAd from './ReferAFriendAd';\nimport messages from './messages';\nimport commonMessages from '../../common/messages';\n\nimport './InviteCollaboratorsModal.scss';\n\nconst COLLAB_ROLE_FOR_FILE = 'Editor';\nconst INPUT_DELAY = 250;\n\n/**\n * Returns true if the given value is a substring of the searchString\n * @param {String} value\n * @param {String} searchString\n * @return {boolean}\n */\nconst isSubstring = (value, searchString) => value && value.toLowerCase().indexOf(searchString.toLowerCase()) !== -1;\nclass InviteCollaboratorsModal extends Component {\n    static propTypes = {\n        /** Message warning about restrictions regarding inviting collaborators to the item */\n        collaborationRestrictionWarning: PropTypes.node,\n        /** An array of contacts for the pill selector dropdown */\n        contacts: PropTypes.arrayOf(\n            PropTypes.shape({\n                email: PropTypes.string,\n                id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isrequired,\n                name: PropTypes.string.isRequired,\n                type: PropTypes.string.isRequired,\n            }),\n        ).isRequired,\n        /**\n         * Default personal message for inviting collaborators to the item.\n         * Do not include if no personal message textarea should show up.\n         * Only applicable to non-file item types.\n         * */\n        defaultPersonalMessage: PropTypes.node,\n        intl: PropTypes.any,\n        /** Props for the invite button */\n        inviteButtonProps: PropTypes.object,\n        /** An array of invitee permissions */\n        inviteePermissions: PropTypes.arrayOf(\n            PropTypes.shape({\n                disabled: PropTypes.bool,\n                text: PropTypes.string.isRequired,\n                value: PropTypes.string.isRequired,\n            }),\n        ),\n        /** If true, will render a link to the refer-a-friend reward center */\n        isEligibleForReferAFriendProgram: PropTypes.bool,\n        /** The name of the item to invite collaborators for */\n        itemName: PropTypes.string.isRequired,\n        /** The type of the item to invite collaborators for (e.g. \"file\", \"folder\") */\n        itemType: PropTypes.string.isRequired,\n        /** The typed id of the item to invite collaborators for */\n        itemTypedID: PropTypes.string.isRequired,\n        /** Handler function for closing the modal */\n        onRequestClose: PropTypes.func.isRequired,\n        /** Handler function whenever the user types, e.g. to fetch contacts. */\n        onUserInput: PropTypes.func,\n        /**\n         * Function to send collab invitations based on the given parameters object.\n         * This function should return a Promise.\n         */\n        sendInvites: PropTypes.func.isRequired,\n        /**\n         * Flag to show link to upgrade and get more access controls.\n         * Only applicable to non-file item types.\n         */\n        showUpgradeOptions: PropTypes.bool,\n        /** Message indicating an error occurred while sending the invites. */\n        submissionError: PropTypes.node,\n        /**\n         * Flag indicating whether the send invites request is submitting.\n         */\n        submitting: PropTypes.bool,\n    };\n\n    static defaultProps = {\n        inviteButtonProps: {},\n    };\n\n    constructor(props) {\n        super(props);\n        const { defaultPersonalMessage, inviteePermissions } = props;\n        this.state = {\n            message: defaultPersonalMessage || '',\n            permission: inviteePermissions ? inviteePermissions[0].value : COLLAB_ROLE_FOR_FILE,\n            pillSelectorError: '',\n            pillSelectorInputValue: '',\n            selectedOptions: [],\n        };\n    }\n\n    getSelectorOptions = () => {\n        const { contacts } = this.props;\n        const { pillSelectorInputValue, selectedOptions } = this.state;\n\n        if (pillSelectorInputValue !== '') {\n            return contacts\n                .filter(\n                    // filter contacts whose name or email don't match input value\n                    ({ name, email }) =>\n                        isSubstring(name, pillSelectorInputValue) || isSubstring(email, pillSelectorInputValue),\n                )\n                .filter(\n                    // filter contacts who have already been selected\n                    ({ email, id }) => !selectedOptions.find(({ value }) => value === email || value === id),\n                )\n                .map(({ email, id, name, type }) => ({\n                    // map to standardized DatalistItem format\n                    // TODO: refactor this so inline conversions aren't required at every usage\n                    email,\n                    id,\n                    text: name,\n                    type,\n                    value: email || id, // if email doesn't exist, contact is a group, use id\n                }));\n        }\n\n        // return empty selector options if input value is empty\n        return [];\n    };\n\n    closeModal = () => {\n        this.setState({\n            pillSelectorError: '',\n            pillSelectorInputValue: '',\n            selectedOptions: [],\n        });\n        this.props.onRequestClose();\n    };\n\n    sendInvites = () => {\n        const { intl, sendInvites } = this.props;\n        const { message, permission, pillSelectorError, selectedOptions } = this.state;\n\n        if (pillSelectorError) {\n            // Block submission if there's a validation error\n            return;\n        }\n\n        if (selectedOptions.length === 0) {\n            // Block submission if no pills are selected\n            this.setState({\n                pillSelectorError: intl.formatMessage(commonMessages.requiredFieldError),\n            });\n            return;\n        }\n\n        const emails = [];\n        const groupIDs = [];\n        selectedOptions.forEach(({ type, value }) => {\n            if (type === 'group') {\n                groupIDs.push(value);\n            } else {\n                emails.push(value);\n            }\n        });\n\n        const params = {\n            emails: emails.join(','),\n            groupIDs: groupIDs.join(','),\n            emailMessage: message,\n            permission: permission || COLLAB_ROLE_FOR_FILE,\n            numsOfInvitees: emails.length,\n            numOfInviteeGroups: groupIDs.length,\n        };\n        sendInvites(params).catch(error => {\n            // Remove invited emails from selected pills\n            const invitedEmails = error.invitedEmails || [];\n            this.filterInvitedEmails(invitedEmails);\n        });\n    };\n\n    filterInvitedEmails = invitedEmails => {\n        this.setState({\n            selectedOptions: this.state.selectedOptions.filter(({ value }) => !invitedEmails.includes(value)),\n        });\n    };\n\n    handlePillSelectorInput = throttle(value => {\n        const { onUserInput } = this.props;\n        if (onUserInput) {\n            onUserInput(value);\n        }\n\n        // As user is typing, reset error\n        this.setState({ pillSelectorError: '', pillSelectorInputValue: value });\n    }, INPUT_DELAY);\n\n    handlePillSelect = pills => {\n        this.setState({\n            selectedOptions: [...this.state.selectedOptions, ...pills],\n        });\n    };\n\n    handlePillRemove = (option, index) => {\n        const selectedOptions = this.state.selectedOptions.slice();\n        selectedOptions.splice(index, 1);\n        this.setState({ selectedOptions });\n    };\n\n    validateForError = text => {\n        const { intl } = this.props;\n        let pillSelectorError = '';\n\n        if (text && !this.validator(text)) {\n            pillSelectorError = intl.formatMessage(commonMessages.invalidEmailError);\n        }\n\n        this.setState({ pillSelectorError });\n    };\n\n    validator = text => {\n        // email input validation\n        const pattern = /^[^\\s<>@,]+@[^\\s<>@,/\\\\]+\\.[^\\s<>@,]+$/i;\n        return pattern.test(text);\n    };\n\n    handlePermissionChange = ({ target }) => {\n        const { value } = target;\n        this.setState({ permission: value });\n    };\n\n    handleMessageChange = ({ target }) => {\n        const { value } = target;\n        this.setState({ message: value });\n    };\n\n    renderFileCollabComponents() {\n        return (\n            <div className=\"invite-file-editors\">\n                <FormattedMessage {...messages.inviteFileEditorsLabel} />\n            </div>\n        );\n    }\n\n    renderPermissionsSection() {\n        const { inviteePermissions } = this.props;\n        return (\n            <div className=\"invite-permissions-container\">\n                <Select\n                    className=\"select-container-medium\"\n                    data-resin-target=\"selectpermission\"\n                    label={<FormattedMessage {...messages.inviteePermissionsFieldLabel} />}\n                    name=\"invite-permission\"\n                    onChange={this.handlePermissionChange}\n                >\n                    {inviteePermissions.map(({ value, disabled = false, text }) => (\n                        <option key={value} data-resin-option={value} disabled={disabled} value={value}>\n                            {text}\n                        </option>\n                    ))}\n                </Select>\n                <PermissionFlyout />\n            </div>\n        );\n    }\n\n    renderFolderCollabComponents() {\n        const { defaultPersonalMessage, inviteePermissions, showUpgradeOptions } = this.props;\n        return (\n            <div>\n                {inviteePermissions && this.renderPermissionsSection()}\n                {showUpgradeOptions && (\n                    <Link className=\"upgrade-link\" href=\"/upgrade\">\n                        <UpgradeBadge />\n                        <FormattedMessage {...messages.upgradeGetMoreAccessControls} />\n                    </Link>\n                )}\n                {defaultPersonalMessage && (\n                    <TextArea\n                        cols=\"30\"\n                        data-resin-feature=\"personalmessage\"\n                        data-resin-target=\"message\"\n                        defaultValue={defaultPersonalMessage}\n                        label={<FormattedMessage {...messages.personalMessageLabel} />}\n                        name=\"collab-message\"\n                        onChange={this.handleMessageChange}\n                        rows=\"4\"\n                    />\n                )}\n            </div>\n        );\n    }\n\n    render() {\n        const {\n            collaborationRestrictionWarning,\n            intl,\n            inviteButtonProps,\n            isEligibleForReferAFriendProgram,\n            itemName,\n            itemType,\n            submissionError,\n            submitting,\n            ...rest\n        } = this.props;\n        const { pillSelectorError, selectedOptions } = this.state;\n        const modalProps = omit(rest, [\n            'contacts',\n            'defaultPersonalMessage',\n            'inviteePermissions',\n            'itemTypedID',\n            'onRequestClose',\n            'onUserInput',\n            'sendInvites',\n            'showUpgradeOptions',\n        ]);\n\n        const selectorOptions = this.getSelectorOptions();\n\n        const title = (\n            <FormattedMessage\n                {...messages.inviteCollaboratorsModalTitle}\n                values={{\n                    itemName,\n                }}\n            />\n        );\n\n        const groupLabel = <FormattedMessage {...messages.groupLabel} />;\n\n        return (\n            <Modal\n                className=\"invite-collaborators-modal\"\n                closeButtonProps={{\n                    [RESIN_TAG_TARGET]: 'close',\n                }}\n                data-resin-component=\"modal\"\n                data-resin-feature=\"invitecollaborators\"\n                onRequestClose={this.closeModal}\n                title={title}\n                {...modalProps}\n            >\n                {submissionError && <InlineNotice type=\"error\">{submissionError}</InlineNotice>}\n                {collaborationRestrictionWarning && (\n                    <InlineNotice type=\"warning\">{collaborationRestrictionWarning}</InlineNotice>\n                )}\n                <PillSelectorDropdown\n                    allowCustomPills\n                    error={pillSelectorError}\n                    label={<FormattedMessage {...messages.inviteFieldLabel} />}\n                    onInput={this.handlePillSelectorInput}\n                    onRemove={this.handlePillRemove}\n                    onSelect={this.handlePillSelect}\n                    parseItems={parseEmails}\n                    placeholder={intl.formatMessage(commonMessages.pillSelectorPlaceholder)}\n                    selectedOptions={selectedOptions}\n                    selectorOptions={selectorOptions}\n                    validateForError={this.validateForError}\n                    validator={this.validator}\n                >\n                    {selectorOptions.map(({ email, text, value }) => (\n                        <ContactDatalistItem key={value} name={text} subtitle={email || groupLabel} />\n                    ))}\n                </PillSelectorDropdown>\n                {itemType === 'file' ? this.renderFileCollabComponents() : this.renderFolderCollabComponents()}\n                {isEligibleForReferAFriendProgram && <ReferAFriendAd />}\n                <ModalActions>\n                    <Button data-resin-target=\"cancel\" isDisabled={submitting} onClick={this.closeModal} type=\"button\">\n                        <FormattedMessage {...messages.inviteCollaboratorsModalCancelButton} />\n                    </Button>\n                    <PrimaryButton\n                        {...inviteButtonProps}\n                        isDisabled={submitting}\n                        isLoading={submitting}\n                        onClick={this.sendInvites}\n                    >\n                        <FormattedMessage {...messages.inviteCollaboratorsModalSendInvitesButton} />\n                    </PrimaryButton>\n                </ModalActions>\n            </Modal>\n        );\n    }\n}\n\nexport { InviteCollaboratorsModal as InviteCollaboratorsModalBase };\nexport default injectIntl(InviteCollaboratorsModal);\n"],"mappings":"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","ignoreList":[]}