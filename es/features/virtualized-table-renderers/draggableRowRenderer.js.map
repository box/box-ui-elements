{"version":3,"file":"draggableRowRenderer.js","names":["React","classNames","Draggable","defaultRowRenderer","Portal","draggableRowRenderer","params","index","key","rowData","defaultRow","draggableId","id","createElement","draggableProvided","draggableSnapshot","isDragging","draggableProps","dragHandleProps","innerRef","style","draggableStyle","className","defaultRowClassName","defaultRowStyle","props","extendedRow","cloneElement","_objectSpread","ref"],"sources":["../../../src/features/virtualized-table-renderers/draggableRowRenderer.js"],"sourcesContent":["// @flow\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { defaultRowRenderer } from '@box/react-virtualized/dist/es/Table/index';\n\nimport type { DraggableProvided, DraggableStateSnapshot } from 'react-beautiful-dnd';\nimport type { RowRendererParams } from './flowTypes';\n\nimport Portal from '../../components/portal';\n\nconst draggableRowRenderer = (params: RowRendererParams) => {\n    const { index, key, rowData } = params;\n    const defaultRow = defaultRowRenderer(params);\n    // Keys are auto-generated by the virtualized table based on\n    // the row index. We give preference to id when available since\n    // the index changes (and thus also the key) when the rows are re-ordered\n    const draggableId = rowData.id || key;\n\n    return (\n        <Draggable draggableId={draggableId} index={index} key={draggableId}>\n            {(draggableProvided: DraggableProvided, draggableSnapshot: DraggableStateSnapshot) => {\n                const { isDragging } = draggableSnapshot;\n                const { draggableProps, dragHandleProps, innerRef } = draggableProvided;\n                const { style: draggableStyle } = draggableProps;\n                const { className: defaultRowClassName, style: defaultRowStyle } = defaultRow.props;\n\n                const className = classNames(defaultRowClassName, {\n                    'is-dragging': isDragging,\n                });\n\n                // Extend row with draggable properties\n                const extendedRow = React.cloneElement(defaultRow, {\n                    ...draggableProps,\n                    ...dragHandleProps,\n                    ref: innerRef,\n                    className,\n                    // Both virtualized Table and Draggable set inline styles on\n                    // elements. Styles from Draggable should take precedence\n                    style: {\n                        ...defaultRowStyle,\n                        ...draggableStyle,\n                    },\n                });\n\n                // Use portal when dragging so that row is on top of other elements\n                // and not hidden by default VirtualizedTable styles. Portal needs to\n                // have table class names in order for scoped styles to take effect\n                if (isDragging) {\n                    return (\n                        <Portal className=\"bdl-VirtualizedTable bdl-DraggableVirtualizedTable\">{extendedRow}</Portal>\n                    );\n                }\n                return extendedRow;\n            }}\n        </Draggable>\n    );\n};\n\nexport default draggableRowRenderer;\n"],"mappings":";;;;;AACA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,UAAU,MAAM,YAAY;AACnC,SAASC,SAAS,QAAQ,qBAAqB;AAC/C,SAASC,kBAAkB,QAAQ,4CAA4C;AAK/E,OAAOC,MAAM,MAAM,yBAAyB;AAE5C,MAAMC,oBAAoB,GAAIC,MAAyB,IAAK;EACxD,MAAM;IAAEC,KAAK;IAAEC,GAAG;IAAEC;EAAQ,CAAC,GAAGH,MAAM;EACtC,MAAMI,UAAU,GAAGP,kBAAkB,CAACG,MAAM,CAAC;EAC7C;EACA;EACA;EACA,MAAMK,WAAW,GAAGF,OAAO,CAACG,EAAE,IAAIJ,GAAG;EAErC,oBACIR,KAAA,CAAAa,aAAA,CAACX,SAAS;IAACS,WAAW,EAAEA,WAAY;IAACJ,KAAK,EAAEA,KAAM;IAACC,GAAG,EAAEG;EAAY,GAC/D,CAACG,iBAAoC,EAAEC,iBAAyC,KAAK;IAClF,MAAM;MAAEC;IAAW,CAAC,GAAGD,iBAAiB;IACxC,MAAM;MAAEE,cAAc;MAAEC,eAAe;MAAEC;IAAS,CAAC,GAAGL,iBAAiB;IACvE,MAAM;MAAEM,KAAK,EAAEC;IAAe,CAAC,GAAGJ,cAAc;IAChD,MAAM;MAAEK,SAAS,EAAEC,mBAAmB;MAAEH,KAAK,EAAEI;IAAgB,CAAC,GAAGd,UAAU,CAACe,KAAK;IAEnF,MAAMH,SAAS,GAAGrB,UAAU,CAACsB,mBAAmB,EAAE;MAC9C,aAAa,EAAEP;IACnB,CAAC,CAAC;;IAEF;IACA,MAAMU,WAAW,gBAAG1B,KAAK,CAAC2B,YAAY,CAACjB,UAAU,EAAAkB,aAAA,CAAAA,aAAA,CAAAA,aAAA,KAC1CX,cAAc,GACdC,eAAe;MAClBW,GAAG,EAAEV,QAAQ;MACbG,SAAS;MACT;MACA;MACAF,KAAK,EAAAQ,aAAA,CAAAA,aAAA,KACEJ,eAAe,GACfH,cAAc;IACpB,EACJ,CAAC;;IAEF;IACA;IACA;IACA,IAAIL,UAAU,EAAE;MACZ,oBACIhB,KAAA,CAAAa,aAAA,CAACT,MAAM;QAACkB,SAAS,EAAC;MAAoD,GAAEI,WAAoB,CAAC;IAErG;IACA,OAAOA,WAAW;EACtB,CACO,CAAC;AAEpB,CAAC;AAED,eAAerB,oBAAoB","ignoreList":[]}