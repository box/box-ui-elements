{"version":3,"file":"filePathCellRenderer.js","names":["React","classNames","TYPE_FOLDER","DEFAULT_ROOT","messages","Breadcrumb","FolderIcon","FileIcon","getSize","getFileExtension","baseCellRenderer","getName","name","type","isExternal","id","intl","formatMessage","allFiles","message","externalFolder","externalFile","fileNameCellRenderer","cellRendererParams","cellValue","size","itemPath","itemType","extension","icon","createElement","path","map","pathInfo","displaySize","contentName","displayName","fullPath","filePathCellClass","className","title","join","label","itemPathName","key"],"sources":["../../../src/features/virtualized-table-renderers/filePathCellRenderer.js"],"sourcesContent":["// @flow\nimport * as React from 'react';\nimport classNames from 'classnames';\n\nimport { TYPE_FOLDER, DEFAULT_ROOT } from '../../constants';\nimport messages from './messages';\nimport Breadcrumb from '../../components/breadcrumb';\nimport FolderIcon from '../../icons/folder-icon';\nimport FileIcon from '../../icons/file-icon';\nimport getSize from '../../utils/size';\nimport { getFileExtension } from '../../utils/file';\nimport baseCellRenderer from './baseCellRenderer';\nimport type { FilePathCellRendererCellData, FilePathCellRendererParams, FileItemPath } from './flowTypes';\nimport './FilePathCell.scss';\n\nconst getName = ({ name, type, isExternal, id }: FileItemPath = {}, intl: any): string => {\n    if (id === DEFAULT_ROOT) {\n        return intl.formatMessage(messages.allFiles);\n    }\n\n    if (isExternal) {\n        const message = type === TYPE_FOLDER ? messages.externalFolder : messages.externalFile;\n        return intl.formatMessage(message);\n    }\n\n    return name || id;\n};\n\nconst fileNameCellRenderer = (intl: any) => (cellRendererParams: FilePathCellRendererParams) =>\n    baseCellRenderer(cellRendererParams, (cellValue: FilePathCellRendererCellData) => {\n        const { id, name = '', size, itemPath = [], itemType, isExternal } = cellValue;\n        const extension = getFileExtension(name);\n        const icon = itemType === TYPE_FOLDER ? <FolderIcon /> : <FileIcon extension={extension} />;\n        const path = itemPath.map(pathInfo => getName(pathInfo, intl));\n        const displaySize = size ? ` (${getSize(size)})` : '';\n        const contentName = getName({ id, isExternal, type: itemType, name }, intl);\n        const displayName = `${contentName}${displaySize}`;\n        const fullPath = [...path, displayName];\n        const filePathCellClass = classNames('bdl-FilePathCell', { 'bdl-is-external': isExternal });\n\n        return (\n            <span className={filePathCellClass} title={fullPath.join(' > ')}>\n                {icon}\n                <Breadcrumb label=\"contentPath\">\n                    {fullPath.map(itemPathName => (\n                        <span key={itemPathName} className=\"bdl-FilePathCell-breadcrumbName\">\n                            {itemPathName}\n                        </span>\n                    ))}\n                </Breadcrumb>\n            </span>\n        );\n    });\n\nexport default fileNameCellRenderer;\n"],"mappings":"AACA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,UAAU,MAAM,YAAY;AAEnC,SAASC,WAAW,EAAEC,YAAY,QAAQ,iBAAiB;AAC3D,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,UAAU,MAAM,6BAA6B;AACpD,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,OAAO,MAAM,kBAAkB;AACtC,SAASC,gBAAgB,QAAQ,kBAAkB;AACnD,OAAOC,gBAAgB,MAAM,oBAAoB;AAEjD,OAAO,qBAAqB;AAE5B,MAAMC,OAAO,GAAGA,CAAC;EAAEC,IAAI;EAAEC,IAAI;EAAEC,UAAU;EAAEC;AAAiB,CAAC,GAAG,CAAC,CAAC,EAAEC,IAAS,KAAa;EACtF,IAAID,EAAE,KAAKZ,YAAY,EAAE;IACrB,OAAOa,IAAI,CAACC,aAAa,CAACb,QAAQ,CAACc,QAAQ,CAAC;EAChD;EAEA,IAAIJ,UAAU,EAAE;IACZ,MAAMK,OAAO,GAAGN,IAAI,KAAKX,WAAW,GAAGE,QAAQ,CAACgB,cAAc,GAAGhB,QAAQ,CAACiB,YAAY;IACtF,OAAOL,IAAI,CAACC,aAAa,CAACE,OAAO,CAAC;EACtC;EAEA,OAAOP,IAAI,IAAIG,EAAE;AACrB,CAAC;AAED,MAAMO,oBAAoB,GAAIN,IAAS,IAAMO,kBAA8C,IACvFb,gBAAgB,CAACa,kBAAkB,EAAGC,SAAuC,IAAK;EAC9E,MAAM;IAAET,EAAE;IAAEH,IAAI,GAAG,EAAE;IAAEa,IAAI;IAAEC,QAAQ,GAAG,EAAE;IAAEC,QAAQ;IAAEb;EAAW,CAAC,GAAGU,SAAS;EAC9E,MAAMI,SAAS,GAAGnB,gBAAgB,CAACG,IAAI,CAAC;EACxC,MAAMiB,IAAI,GAAGF,QAAQ,KAAKzB,WAAW,gBAAGF,KAAA,CAAA8B,aAAA,CAACxB,UAAU,MAAE,CAAC,gBAAGN,KAAA,CAAA8B,aAAA,CAACvB,QAAQ;IAACqB,SAAS,EAAEA;EAAU,CAAE,CAAC;EAC3F,MAAMG,IAAI,GAAGL,QAAQ,CAACM,GAAG,CAACC,QAAQ,IAAItB,OAAO,CAACsB,QAAQ,EAAEjB,IAAI,CAAC,CAAC;EAC9D,MAAMkB,WAAW,GAAGT,IAAI,GAAG,KAAKjB,OAAO,CAACiB,IAAI,CAAC,GAAG,GAAG,EAAE;EACrD,MAAMU,WAAW,GAAGxB,OAAO,CAAC;IAAEI,EAAE;IAAED,UAAU;IAAED,IAAI,EAAEc,QAAQ;IAAEf;EAAK,CAAC,EAAEI,IAAI,CAAC;EAC3E,MAAMoB,WAAW,GAAG,GAAGD,WAAW,GAAGD,WAAW,EAAE;EAClD,MAAMG,QAAQ,GAAG,CAAC,GAAGN,IAAI,EAAEK,WAAW,CAAC;EACvC,MAAME,iBAAiB,GAAGrC,UAAU,CAAC,kBAAkB,EAAE;IAAE,iBAAiB,EAAEa;EAAW,CAAC,CAAC;EAE3F,oBACId,KAAA,CAAA8B,aAAA;IAAMS,SAAS,EAAED,iBAAkB;IAACE,KAAK,EAAEH,QAAQ,CAACI,IAAI,CAAC,KAAK;EAAE,GAC3DZ,IAAI,eACL7B,KAAA,CAAA8B,aAAA,CAACzB,UAAU;IAACqC,KAAK,EAAC;EAAa,GAC1BL,QAAQ,CAACL,GAAG,CAACW,YAAY,iBACtB3C,KAAA,CAAA8B,aAAA;IAAMc,GAAG,EAAED,YAAa;IAACJ,SAAS,EAAC;EAAiC,GAC/DI,YACC,CACT,CACO,CACV,CAAC;AAEf,CAAC,CAAC;AAEN,eAAerB,oBAAoB","ignoreList":[]}