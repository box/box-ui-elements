{"version":3,"file":"FormattedUser.js","names":["React","FormattedMessage","messages","ANONYMOUS_USER_ID","formatUser","email","id","name","intl","isComponent","anonymousUser","unknownUser","targetUser","createElement","formatMessage","targetUserInfo","formattedUser","Fragment","String","trim","FormattedUser","props","undefined"],"sources":["../../../src/features/virtualized-table-renderers/FormattedUser.js"],"sourcesContent":["// @flow\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport messages from './messages';\nimport { ANONYMOUS_USER_ID } from './constants';\n\ntype Props = {\n    email?: string,\n    id: string,\n    name?: string,\n};\n\nconst formatUser = ({ email, id, name }: Props, intl?: any, isComponent: boolean = false) => {\n    const { anonymousUser, unknownUser } = messages;\n\n    let targetUser = isComponent || !intl ? <FormattedMessage {...unknownUser} /> : intl.formatMessage(unknownUser);\n    let targetUserInfo = `(${email || id})`;\n\n    if (id === ANONYMOUS_USER_ID) {\n        targetUser = isComponent || !intl ? <FormattedMessage {...anonymousUser} /> : intl.formatMessage(anonymousUser);\n        targetUserInfo = '';\n    } else if (name) {\n        targetUser = name;\n        targetUserInfo = `(${email || id})`;\n    } else if (email) {\n        targetUser = id;\n        targetUserInfo = `(${email || id})`;\n    }\n\n    const formattedUser = isComponent ? (\n        <>\n            {targetUser}\n            {targetUserInfo ? ` ${targetUserInfo}` : ''}\n        </>\n    ) : (\n        `${String(targetUser)} ${targetUserInfo}`.trim()\n    );\n    return formattedUser;\n};\n\nconst FormattedUser = (props: Props) => formatUser(props, undefined, true);\n\nexport { formatUser };\nexport default FormattedUser;\n"],"mappings":"AACA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,gBAAgB,QAAQ,YAAY;AAC7C,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,iBAAiB,QAAQ,aAAa;AAQ/C,MAAMC,UAAU,GAAGA,CAAC;EAAEC,KAAK;EAAEC,EAAE;EAAEC;AAAY,CAAC,EAAEC,IAAU,EAAEC,WAAoB,GAAG,KAAK,KAAK;EACzF,MAAM;IAAEC,aAAa;IAAEC;EAAY,CAAC,GAAGT,QAAQ;EAE/C,IAAIU,UAAU,GAAGH,WAAW,IAAI,CAACD,IAAI,gBAAGR,KAAA,CAAAa,aAAA,CAACZ,gBAAgB,EAAKU,WAAc,CAAC,GAAGH,IAAI,CAACM,aAAa,CAACH,WAAW,CAAC;EAC/G,IAAII,cAAc,GAAG,IAAIV,KAAK,IAAIC,EAAE,GAAG;EAEvC,IAAIA,EAAE,KAAKH,iBAAiB,EAAE;IAC1BS,UAAU,GAAGH,WAAW,IAAI,CAACD,IAAI,gBAAGR,KAAA,CAAAa,aAAA,CAACZ,gBAAgB,EAAKS,aAAgB,CAAC,GAAGF,IAAI,CAACM,aAAa,CAACJ,aAAa,CAAC;IAC/GK,cAAc,GAAG,EAAE;EACvB,CAAC,MAAM,IAAIR,IAAI,EAAE;IACbK,UAAU,GAAGL,IAAI;IACjBQ,cAAc,GAAG,IAAIV,KAAK,IAAIC,EAAE,GAAG;EACvC,CAAC,MAAM,IAAID,KAAK,EAAE;IACdO,UAAU,GAAGN,EAAE;IACfS,cAAc,GAAG,IAAIV,KAAK,IAAIC,EAAE,GAAG;EACvC;EAEA,MAAMU,aAAa,GAAGP,WAAW,gBAC7BT,KAAA,CAAAa,aAAA,CAAAb,KAAA,CAAAiB,QAAA,QACKL,UAAU,EACVG,cAAc,GAAG,IAAIA,cAAc,EAAE,GAAG,EAC3C,CAAC,GAEH,GAAGG,MAAM,CAACN,UAAU,CAAC,IAAIG,cAAc,EAAE,CAACI,IAAI,CAAC,CAClD;EACD,OAAOH,aAAa;AACxB,CAAC;AAED,MAAMI,aAAa,GAAIC,KAAY,IAAKjB,UAAU,CAACiB,KAAK,EAAEC,SAAS,EAAE,IAAI,CAAC;AAE1E,SAASlB,UAAU;AACnB,eAAegB,aAAa","ignoreList":[]}