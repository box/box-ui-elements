{"version":3,"file":"LeftSidebarLink.js","names":["React","classNames","LinkBase","Tooltip","LeftSidebarLinkCallout","RemoveButton","LeftSidebarLink","Component","constructor","props","state","isTextOverflowed","componentDidMount","leftSidebarLinkText","offsetWidth","scrollWidth","setState","render","callout","className","customTheme","htmlAttributes","icon","isScrolling","message","newItemBadge","onClickRemove","removeButtonHtmlAttributes","routerLink","RouterLink","routerProps","selected","showTooltip","secondaryColor","LinkComponent","routerLinkProps","linkComponent","createElement","_extends","style","boxShadow","undefined","ref","component","isTabbable","position","text"],"sources":["../../../src/features/left-sidebar/LeftSidebarLink.js"],"sourcesContent":["/* @flow */\nimport * as React from 'react';\nimport classNames from 'classnames';\n\nimport LinkBase from '../../components/link/LinkBase';\nimport Tooltip from '../../components/tooltip';\nimport LeftSidebarLinkCallout from './LeftSidebarLinkCallout';\nimport RemoveButton from './RemoveButton';\n\nimport type { Callout } from './Callout';\n\nimport './styles/LeftSidebarLink.scss';\n\nexport type Props = {\n    callout?: Callout,\n    className?: string,\n    customTheme?: Object,\n    htmlAttributes?: Object,\n    icon?: ?React.Element<any>,\n    isScrolling?: boolean,\n    message: string,\n    newItemBadge?: React.Element<any> | null,\n    onClickRemove?: Function,\n    removeButtonHtmlAttributes?: Object,\n    routerLink?: React.ComponentType<any>,\n    routerProps?: Object,\n    selected?: boolean,\n    showTooltip?: boolean,\n};\n\ntype State = {\n    isTextOverflowed: boolean,\n};\n\nclass LeftSidebarLink extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n\n        this.state = {\n            isTextOverflowed: false,\n        };\n    }\n\n    componentDidMount() {\n        if (!this.leftSidebarLinkText) {\n            return;\n        }\n\n        const { offsetWidth, scrollWidth } = this.leftSidebarLinkText;\n\n        if (offsetWidth < scrollWidth) {\n            // eslint-disable-next-line react/no-did-mount-set-state\n            this.setState({\n                isTextOverflowed: true,\n            });\n        }\n    }\n\n    leftSidebarLinkText: ?HTMLElement;\n\n    render() {\n        const {\n            callout,\n            className = '',\n            customTheme = {},\n            htmlAttributes = {},\n            icon,\n            isScrolling = false,\n            message,\n            newItemBadge,\n            onClickRemove,\n            removeButtonHtmlAttributes = {},\n            routerLink: RouterLink,\n            routerProps = {},\n            selected = false,\n            showTooltip = true,\n        } = this.props;\n\n        const { secondaryColor } = customTheme;\n        const LinkComponent = RouterLink || LinkBase;\n        const routerLinkProps = RouterLink ? routerProps : {};\n\n        const linkComponent = (\n            <LinkComponent\n                className={className}\n                {...htmlAttributes}\n                {...routerLinkProps}\n                style={\n                    selected && customTheme\n                        ? {\n                              boxShadow: secondaryColor ? `inset 2px 0 0 ${secondaryColor}` : undefined,\n                          }\n                        : {}\n                }\n            >\n                {icon}\n                <span\n                    ref={leftSidebarLinkText => {\n                        this.leftSidebarLinkText = leftSidebarLinkText;\n                    }}\n                    className=\"left-sidebar-link-text\"\n                >\n                    {message}\n                </span>\n                {newItemBadge}\n            </LinkComponent>\n        );\n\n        let component = linkComponent;\n\n        if (callout) {\n            component = <LeftSidebarLinkCallout callout={callout}>{linkComponent}</LeftSidebarLinkCallout>;\n        } else if (showTooltip) {\n            component = (\n                <Tooltip\n                    className={classNames('nav-link-tooltip', {\n                        'is-visible': this.state.isTextOverflowed && !isScrolling,\n                    })}\n                    isTabbable={false}\n                    position=\"middle-right\"\n                    text={message}\n                >\n                    {linkComponent}\n                </Tooltip>\n            );\n        }\n\n        return onClickRemove ? (\n            <div className=\"left-sidebar-removeable-link-container\">\n                {component}\n                <RemoveButton onClickRemove={onClickRemove} removeButtonHtmlAttributes={removeButtonHtmlAttributes} />\n            </div>\n        ) : (\n            component\n        );\n    }\n}\n\nexport default LeftSidebarLink;\n"],"mappings":"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","ignoreList":[]}