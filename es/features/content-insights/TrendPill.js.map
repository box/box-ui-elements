{"version":3,"file":"TrendPill.js","names":["React","classNames","FormattedMessage","injectIntl","LabelPill","messages","getTrendStatus","trend","getTrendByPeriod","period","trendMonth","trendThreeMonths","trendYear","trendWeek","TrendPill","intl","getTrendLabel","value","formatMessage","trendUp","trendDown","trendStatus","trendLabel","createElement","Pill","className","Fragment","role","Text","formatNumber","style"],"sources":["../../../src/features/content-insights/TrendPill.tsx"],"sourcesContent":["import * as React from 'react';\nimport classNames from 'classnames';\nimport { FormattedMessage, injectIntl, IntlShape } from 'react-intl';\n\nimport LabelPill from '../../components/label-pill';\nimport messages from './messages';\n\nimport { Period } from './types';\n\nimport './TrendPill.scss';\n\ninterface Props {\n    intl: IntlShape;\n    period: Period;\n    trend: number;\n}\n\ntype Trend = 'up' | 'down' | 'neutral';\n\nconst getTrendStatus = (trend: number): Trend => {\n    if (trend === 0) {\n        return 'neutral';\n    }\n\n    return trend > 0 ? 'up' : 'down';\n};\n\nconst getTrendByPeriod = (period: Period) => {\n    switch (period) {\n        case 'month':\n            return messages.trendMonth;\n        case 'threemonths':\n            return messages.trendThreeMonths;\n        case 'year':\n            return messages.trendYear;\n        case 'week':\n        default:\n            return messages.trendWeek;\n    }\n};\n\nfunction TrendPill({ intl, period, trend }: Props) {\n    const getTrendLabel = (value: number): string => {\n        return intl.formatMessage(value > 0 ? messages.trendUp : messages.trendDown);\n    };\n\n    const trendStatus = getTrendStatus(trend);\n    const trendLabel = getTrendLabel(trend);\n\n    return (\n        <LabelPill.Pill\n            className={classNames('TrendPill', {\n                'TrendPill--up': trendStatus === 'up',\n                'TrendPill--down': trendStatus === 'down',\n            })}\n        >\n            <>\n                {trendStatus !== 'neutral' && <span aria-label={trendLabel} className=\"TrendPill-trend\" role=\"img\" />}\n                <LabelPill.Text>\n                    <>\n                        <span className=\"TrendPill-percentage\">{intl.formatNumber(trend, { style: 'percent' })}</span>\n                        <FormattedMessage {...getTrendByPeriod(period)} />\n                    </>\n                </LabelPill.Text>\n            </>\n        </LabelPill.Pill>\n    );\n}\n\nexport default injectIntl(TrendPill);\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,UAAU,MAAM,YAAY;AACnC,SAASC,gBAAgB,EAAEC,UAAU,QAAmB,YAAY;AAEpE,OAAOC,SAAS,MAAM,6BAA6B;AACnD,OAAOC,QAAQ,MAAM,YAAY;AAIjC,OAAO,kBAAkB;AAUzB,MAAMC,cAAc,GAAIC,KAAa,IAAY;EAC7C,IAAIA,KAAK,KAAK,CAAC,EAAE;IACb,OAAO,SAAS;EACpB;EAEA,OAAOA,KAAK,GAAG,CAAC,GAAG,IAAI,GAAG,MAAM;AACpC,CAAC;AAED,MAAMC,gBAAgB,GAAIC,MAAc,IAAK;EACzC,QAAQA,MAAM;IACV,KAAK,OAAO;MACR,OAAOJ,QAAQ,CAACK,UAAU;IAC9B,KAAK,aAAa;MACd,OAAOL,QAAQ,CAACM,gBAAgB;IACpC,KAAK,MAAM;MACP,OAAON,QAAQ,CAACO,SAAS;IAC7B,KAAK,MAAM;IACX;MACI,OAAOP,QAAQ,CAACQ,SAAS;EACjC;AACJ,CAAC;AAED,SAASC,SAASA,CAAC;EAAEC,IAAI;EAAEN,MAAM;EAAEF;AAAa,CAAC,EAAE;EAC/C,MAAMS,aAAa,GAAIC,KAAa,IAAa;IAC7C,OAAOF,IAAI,CAACG,aAAa,CAACD,KAAK,GAAG,CAAC,GAAGZ,QAAQ,CAACc,OAAO,GAAGd,QAAQ,CAACe,SAAS,CAAC;EAChF,CAAC;EAED,MAAMC,WAAW,GAAGf,cAAc,CAACC,KAAK,CAAC;EACzC,MAAMe,UAAU,GAAGN,aAAa,CAACT,KAAK,CAAC;EAEvC,oBACIP,KAAA,CAAAuB,aAAA,CAACnB,SAAS,CAACoB,IAAI;IACXC,SAAS,EAAExB,UAAU,CAAC,WAAW,EAAE;MAC/B,eAAe,EAAEoB,WAAW,KAAK,IAAI;MACrC,iBAAiB,EAAEA,WAAW,KAAK;IACvC,CAAC;EAAE,gBAEHrB,KAAA,CAAAuB,aAAA,CAAAvB,KAAA,CAAA0B,QAAA,QACKL,WAAW,KAAK,SAAS,iBAAIrB,KAAA,CAAAuB,aAAA;IAAM,cAAYD,UAAW;IAACG,SAAS,EAAC,iBAAiB;IAACE,IAAI,EAAC;EAAK,CAAE,CAAC,eACrG3B,KAAA,CAAAuB,aAAA,CAACnB,SAAS,CAACwB,IAAI,qBACX5B,KAAA,CAAAuB,aAAA,CAAAvB,KAAA,CAAA0B,QAAA,qBACI1B,KAAA,CAAAuB,aAAA;IAAME,SAAS,EAAC;EAAsB,GAAEV,IAAI,CAACc,YAAY,CAACtB,KAAK,EAAE;IAAEuB,KAAK,EAAE;EAAU,CAAC,CAAQ,CAAC,eAC9F9B,KAAA,CAAAuB,aAAA,CAACrB,gBAAgB,EAAKM,gBAAgB,CAACC,MAAM,CAAI,CACnD,CACU,CAClB,CACU,CAAC;AAEzB;AAEA,eAAeN,UAAU,CAACW,SAAS,CAAC","ignoreList":[]}