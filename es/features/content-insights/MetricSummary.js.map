{"version":3,"file":"MetricSummary.js","names":["React","isFinite","isNaN","injectIntl","HeaderWithCount","messages","TrendPill","formatCount","METRIC","METRIC_MAP","PREVIEWS","headerMessage","previewGraphType","getPeriodCount","data","reduce","count","previewsCount","DOWNLOADS","downloadsCount","downloadGraphType","USERS","periodUsers","totalUsers","users","Set","Array","from","size","peopleTitle","formatTrend","calculatedTrend","MetricSummary","intl","metric","period","previousPeriodCount","totalCount","periodCount","trend","createElement","className","title","formatMessage"],"sources":["../../../src/features/content-insights/MetricSummary.tsx"],"sourcesContent":["import * as React from 'react';\nimport isFinite from 'lodash/isFinite';\nimport isNaN from 'lodash/isNaN';\nimport { injectIntl, IntlShape } from 'react-intl';\n\nimport HeaderWithCount from './HeaderWithCount';\nimport messages from './messages';\nimport TrendPill from './TrendPill';\nimport { formatCount } from './numberUtils';\nimport { METRIC } from './constants';\nimport { GraphData, Metric, Period } from './types';\n\nimport './MetricSummary.scss';\n\ninterface Props {\n    data: GraphData;\n    intl: IntlShape;\n    metric: Metric;\n    period: Period;\n    previousPeriodCount: number;\n    totalCount?: number;\n}\n\nconst METRIC_MAP = {\n    [METRIC.PREVIEWS]: {\n        headerMessage: messages.previewGraphType,\n        getPeriodCount: (data: GraphData) => data.reduce((count, { previewsCount }) => count + previewsCount, 0),\n    },\n    [METRIC.DOWNLOADS]: {\n        getPeriodCount: (data: GraphData) => data.reduce((count, { downloadsCount }) => count + downloadsCount, 0),\n        headerMessage: messages.downloadGraphType,\n    },\n    [METRIC.USERS]: {\n        getPeriodCount: (data: GraphData) => {\n            const periodUsers = data.reduce(\n                (totalUsers, { users }) => new Set([...Array.from(totalUsers), ...Array.from(users)]),\n                new Set(),\n            );\n            return periodUsers.size;\n        },\n        headerMessage: messages.peopleTitle,\n    },\n} as const;\n\n// Limit the trend to a finite number (in case the previous period count was 0 and the calculated trend is Infinity)\nconst formatTrend = (calculatedTrend: number) => (!isFinite(calculatedTrend) ? 1 : calculatedTrend);\n\nfunction MetricSummary({ data = [], intl, metric, period, previousPeriodCount = 0, totalCount }: Props) {\n    const { getPeriodCount, headerMessage } = METRIC_MAP[metric];\n    const periodCount = getPeriodCount(data);\n    const calculatedTrend = (periodCount - previousPeriodCount) / previousPeriodCount;\n    const trend = isNaN(calculatedTrend) ? 0 : formatTrend(calculatedTrend);\n\n    return (\n        <div className=\"MetricSummary\">\n            <HeaderWithCount title={intl.formatMessage(headerMessage)} totalCount={totalCount} />\n            <div className=\"MetricSummary-period\">\n                <span className=\"MetricSummary-periodCount\">{formatCount(periodCount, intl)}</span>\n                <TrendPill period={period} trend={trend} />\n            </div>\n        </div>\n    );\n}\n\nexport default injectIntl(MetricSummary);\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,QAAQ,MAAM,iBAAiB;AACtC,OAAOC,KAAK,MAAM,cAAc;AAChC,SAASC,UAAU,QAAmB,YAAY;AAElD,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,SAAS,MAAM,aAAa;AACnC,SAASC,WAAW,QAAQ,eAAe;AAC3C,SAASC,MAAM,QAAQ,aAAa;AAGpC,OAAO,sBAAsB;AAW7B,MAAMC,UAAU,GAAG;EACf,CAACD,MAAM,CAACE,QAAQ,GAAG;IACfC,aAAa,EAAEN,QAAQ,CAACO,gBAAgB;IACxCC,cAAc,EAAGC,IAAe,IAAKA,IAAI,CAACC,MAAM,CAAC,CAACC,KAAK,EAAE;MAAEC;IAAc,CAAC,KAAKD,KAAK,GAAGC,aAAa,EAAE,CAAC;EAC3G,CAAC;EACD,CAACT,MAAM,CAACU,SAAS,GAAG;IAChBL,cAAc,EAAGC,IAAe,IAAKA,IAAI,CAACC,MAAM,CAAC,CAACC,KAAK,EAAE;MAAEG;IAAe,CAAC,KAAKH,KAAK,GAAGG,cAAc,EAAE,CAAC,CAAC;IAC1GR,aAAa,EAAEN,QAAQ,CAACe;EAC5B,CAAC;EACD,CAACZ,MAAM,CAACa,KAAK,GAAG;IACZR,cAAc,EAAGC,IAAe,IAAK;MACjC,MAAMQ,WAAW,GAAGR,IAAI,CAACC,MAAM,CAC3B,CAACQ,UAAU,EAAE;QAAEC;MAAM,CAAC,KAAK,IAAIC,GAAG,CAAC,CAAC,GAAGC,KAAK,CAACC,IAAI,CAACJ,UAAU,CAAC,EAAE,GAAGG,KAAK,CAACC,IAAI,CAACH,KAAK,CAAC,CAAC,CAAC,EACrF,IAAIC,GAAG,CAAC,CACZ,CAAC;MACD,OAAOH,WAAW,CAACM,IAAI;IAC3B,CAAC;IACDjB,aAAa,EAAEN,QAAQ,CAACwB;EAC5B;AACJ,CAAU;;AAEV;AACA,MAAMC,WAAW,GAAIC,eAAuB,IAAM,CAAC9B,QAAQ,CAAC8B,eAAe,CAAC,GAAG,CAAC,GAAGA,eAAgB;AAEnG,SAASC,aAAaA,CAAC;EAAElB,IAAI,GAAG,EAAE;EAAEmB,IAAI;EAAEC,MAAM;EAAEC,MAAM;EAAEC,mBAAmB,GAAG,CAAC;EAAEC;AAAkB,CAAC,EAAE;EACpG,MAAM;IAAExB,cAAc;IAAEF;EAAc,CAAC,GAAGF,UAAU,CAACyB,MAAM,CAAC;EAC5D,MAAMI,WAAW,GAAGzB,cAAc,CAACC,IAAI,CAAC;EACxC,MAAMiB,eAAe,GAAG,CAACO,WAAW,GAAGF,mBAAmB,IAAIA,mBAAmB;EACjF,MAAMG,KAAK,GAAGrC,KAAK,CAAC6B,eAAe,CAAC,GAAG,CAAC,GAAGD,WAAW,CAACC,eAAe,CAAC;EAEvE,oBACI/B,KAAA,CAAAwC,aAAA;IAAKC,SAAS,EAAC;EAAe,gBAC1BzC,KAAA,CAAAwC,aAAA,CAACpC,eAAe;IAACsC,KAAK,EAAET,IAAI,CAACU,aAAa,CAAChC,aAAa,CAAE;IAAC0B,UAAU,EAAEA;EAAW,CAAE,CAAC,eACrFrC,KAAA,CAAAwC,aAAA;IAAKC,SAAS,EAAC;EAAsB,gBACjCzC,KAAA,CAAAwC,aAAA;IAAMC,SAAS,EAAC;EAA2B,GAAElC,WAAW,CAAC+B,WAAW,EAAEL,IAAI,CAAQ,CAAC,eACnFjC,KAAA,CAAAwC,aAAA,CAAClC,SAAS;IAAC6B,MAAM,EAAEA,MAAO;IAACI,KAAK,EAAEA;EAAM,CAAE,CACzC,CACJ,CAAC;AAEd;AAEA,eAAepC,UAAU,CAAC6B,aAAa,CAAC","ignoreList":[]}