{"version":3,"file":"EditableDescription.js","names":["React","injectIntl","TextareaAutosize","messages","EditableDescription","PureComponent","constructor","props","_defineProperty","value","state","onDescriptionChange","event","currentTarget","setState","componentDidUpdate","prevValue","render","intl","textAreaProps","createElement","_extends","className","maxLength","maxRows","onBlur","handleBlur","onChange","handleChange","placeholder","formatMessage","descriptionPlaceholder","EditableDescriptionBase"],"sources":["../../../src/features/item-details/EditableDescription.js"],"sourcesContent":["// @flow\nimport * as React from 'react';\nimport { injectIntl } from 'react-intl';\nimport TextareaAutosize from 'react-textarea-autosize';\n\nimport messages from './messages';\n\ntype Props = {\n    intl: Object,\n    onDescriptionChange: Function,\n    textAreaProps?: Object,\n    value?: string,\n};\n\ntype State = {\n    value: string,\n};\n\nclass EditableDescription extends React.PureComponent<Props, State> {\n    static defaultProps = {\n        textAreaProps: {},\n        value: '',\n    };\n\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            value: props.value || '',\n        };\n    }\n\n    componentDidUpdate({ value: prevValue }: Props): void {\n        const { value } = this.props;\n        if (prevValue !== value) {\n            this.setState({ value });\n        }\n    }\n\n    handleBlur = (): void => {\n        const { value } = this.state;\n        this.props.onDescriptionChange(value);\n    };\n\n    handleChange = (event: SyntheticEvent<HTMLTextAreaElement>): void => {\n        const { value } = event.currentTarget;\n        this.setState({ value });\n    };\n\n    render() {\n        const { intl, textAreaProps } = this.props;\n        const { value } = this.state;\n\n        return (\n            <TextareaAutosize\n                {...textAreaProps}\n                className=\"description-textarea\"\n                maxLength=\"255\"\n                maxRows={6}\n                onBlur={this.handleBlur}\n                onChange={this.handleChange}\n                placeholder={intl.formatMessage(messages.descriptionPlaceholder)}\n                value={value}\n            />\n        );\n    }\n}\n\nexport { EditableDescription as EditableDescriptionBase };\nexport default injectIntl(EditableDescription);\n"],"mappings":";;;;AACA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,UAAU,QAAQ,YAAY;AACvC,OAAOC,gBAAgB,MAAM,yBAAyB;AAEtD,OAAOC,QAAQ,MAAM,YAAY;AAajC,MAAMC,mBAAmB,SAASJ,KAAK,CAACK,aAAa,CAAe;EAMhEC,WAAWA,CAACC,KAAY,EAAE;IACtB,KAAK,CAACA,KAAK,CAAC;IAACC,eAAA,qBAaJ,MAAY;MACrB,MAAM;QAAEC;MAAM,CAAC,GAAG,IAAI,CAACC,KAAK;MAC5B,IAAI,CAACH,KAAK,CAACI,mBAAmB,CAACF,KAAK,CAAC;IACzC,CAAC;IAAAD,eAAA,uBAEeI,KAA0C,IAAW;MACjE,MAAM;QAAEH;MAAM,CAAC,GAAGG,KAAK,CAACC,aAAa;MACrC,IAAI,CAACC,QAAQ,CAAC;QAAEL;MAAM,CAAC,CAAC;IAC5B,CAAC;IApBG,IAAI,CAACC,KAAK,GAAG;MACTD,KAAK,EAAEF,KAAK,CAACE,KAAK,IAAI;IAC1B,CAAC;EACL;EAEAM,kBAAkBA,CAAC;IAAEN,KAAK,EAAEO;EAAiB,CAAC,EAAQ;IAClD,MAAM;MAAEP;IAAM,CAAC,GAAG,IAAI,CAACF,KAAK;IAC5B,IAAIS,SAAS,KAAKP,KAAK,EAAE;MACrB,IAAI,CAACK,QAAQ,CAAC;QAAEL;MAAM,CAAC,CAAC;IAC5B;EACJ;EAYAQ,MAAMA,CAAA,EAAG;IACL,MAAM;MAAEC,IAAI;MAAEC;IAAc,CAAC,GAAG,IAAI,CAACZ,KAAK;IAC1C,MAAM;MAAEE;IAAM,CAAC,GAAG,IAAI,CAACC,KAAK;IAE5B,oBACIV,KAAA,CAAAoB,aAAA,CAAClB,gBAAgB,EAAAmB,QAAA,KACTF,aAAa;MACjBG,SAAS,EAAC,sBAAsB;MAChCC,SAAS,EAAC,KAAK;MACfC,OAAO,EAAE,CAAE;MACXC,MAAM,EAAE,IAAI,CAACC,UAAW;MACxBC,QAAQ,EAAE,IAAI,CAACC,YAAa;MAC5BC,WAAW,EAAEX,IAAI,CAACY,aAAa,CAAC3B,QAAQ,CAAC4B,sBAAsB,CAAE;MACjEtB,KAAK,EAAEA;IAAM,EAChB,CAAC;EAEV;AACJ;AAACD,eAAA,CA/CKJ,mBAAmB,kBACC;EAClBe,aAAa,EAAE,CAAC,CAAC;EACjBV,KAAK,EAAE;AACX,CAAC;AA6CL,SAASL,mBAAmB,IAAI4B,uBAAuB;AACvD,eAAe/B,UAAU,CAACG,mBAAmB,CAAC","ignoreList":[]}