{"version":3,"file":"CollapsibleSidebarMenuItem.js","names":["React","classNames","styled","Tooltip","useIsContentOverflowed","CollapsibleSidebarContext","StyledMenuItem","div","withConfig","displayName","componentId","theme","primary","backgroundHover","backgroundActive","background","StyledIconWrapper","span","foreground","StyledMenuItemLabel","StyledLink","a","base","gridUnitPx","CollapsibleSidebarMenuItem","props","className","content","icon","linkClassName","overflowAction","showOverflowAction","text","shouldHideTooltip","rest","_objectWithoutProperties","_excluded","textRef","useRef","isTextOverflowed","isScrolling","useContext","isShowOverflowActionOnHover","menuItemClassName","menuItemLinkClassName","menuItemLabelClassName","renderMenuItem","createElement","_extends","ref","targetWrapperClassName","isDisabled","isShown","undefined","isTabbable","position"],"sources":["../../../src/features/collapsible-sidebar/CollapsibleSidebarMenuItem.js"],"sourcesContent":["// @flow strict\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport styled from 'styled-components';\nimport Tooltip from '../../components/tooltip';\nimport { useIsContentOverflowed } from '../../utils/dom';\nimport CollapsibleSidebarContext from './CollapsibleSidebarContext';\n\nconst StyledMenuItem = styled.div`\n    position: relative;\n\n    /* hover styles for link so that hovering both action icon and link\n    will have hover effect over whole container */\n    &:hover a {\n        background-color: ${({ theme }) => theme.primary.backgroundHover};\n    }\n\n    &:hover a.is-currentPage {\n        background-color: ${({ theme }) => theme.primary.backgroundActive};\n    }\n\n    body.is-move-dragging & a:hover {\n        /* if an item is being dragged to left nav, keep menu item defaults (don't highlight) */\n        background-color: ${({ theme }) => theme.primary.background};\n\n        .bdl-CollapsibleSidebar-menuItemIcon {\n            opacity: 0.7;\n        }\n    }\n\n    .bdl-CollapsibleSidebar-menuItemActionContainer {\n        position: absolute;\n        top: 12px;\n        right: 8px;\n        padding: 0;\n        opacity: 0;\n\n        &:hover,\n        &:focus-within {\n            opacity: 1;\n        }\n    }\n`;\n\nconst StyledIconWrapper = styled.span`\n    line-height: 0; /* let inner svg set the height */\n    opacity: 0.7;\n\n    & path,\n    & .fill-color {\n        fill: ${({ theme }) => theme.primary.foreground};\n    }\n\n    a:active &,\n    a:hover &,\n    a:focus &,\n    a.is-currentPage & {\n        opacity: 1;\n    }\n`;\n\nconst StyledMenuItemLabel = styled.span`\n    flex-grow: 1;\n    overflow: hidden;\n    color: ${({ theme }) => theme.primary.foreground};\n    text-overflow: ellipsis;\n    opacity: 0.85;\n\n    &.overflow-action {\n        margin-right: 12px;\n    }\n\n    a:active &,\n    a:hover &,\n    a:focus &,\n    a.is-currentPage & {\n        opacity: 1;\n    }\n`;\n\n// {...rest} props will go here, such as `as` prop to adjust the component name.\n// In most cases the consumer will want the tag to use a `Link` instead of `a`.\nconst StyledLink = styled.a`\n    display: flex;\n    align-items: center;\n    height: ${({ theme }) => theme.base.gridUnitPx * 10}px;\n    padding: 0 ${({ theme }) => theme.base.gridUnitPx * 3}px;\n    overflow-x: hidden;\n    color: ${({ theme }) => theme.primary.foreground};\n    font-weight: bold;\n    white-space: nowrap;\n    border: 1px solid transparent;\n    border-radius: ${({ theme }) => theme.base.gridUnitPx * 2}px;\n    transition: background-color 0.15s cubic-bezier(0.215, 0.61, 0.355, 1);\n\n    &:hover,\n    &:active,\n    &:focus,\n    &.is-currentPage {\n        .bdl-CollapsibleSidebar-menuItemIcon,\n        .bdl-CollapsibleSidebar-menuItemLabel {\n            opacity: 1;\n        }\n    }\n\n    &:focus {\n        border-color: ${({ theme }) => theme.primary.foreground};\n        outline: none;\n    }\n\n    &:focus:active {\n        border-color: transparent;\n    }\n\n    &.is-currentPage {\n        background-color: ${({ theme }) => theme.primary.backgroundActive};\n    }\n\n    &.is-currentPage:active {\n        border-color: ${({ theme }) => theme.primary.foreground};\n    }\n\n    .bdl-CollapsibleSidebar-menuItemIcon + .bdl-CollapsibleSidebar-menuItemLabel {\n        margin-left: 16px;\n    }\n\n    &.show-overflowAction + .bdl-CollapsibleSidebar-menuItemActionContainer,\n    &:focus + .bdl-CollapsibleSidebar-menuItemActionContainer,\n    &:hover + .bdl-CollapsibleSidebar-menuItemActionContainer {\n        opacity: 1;\n    }\n`;\n\ntype Props = {\n    /** Additional classes */\n    className?: string,\n    /** Content to be  displayed next to item label. */\n    content?: React.Node,\n    icon?: React.Node,\n    linkClassName?: string,\n    overflowAction?: React.Node,\n    shouldHideTooltip?: boolean,\n    /** Default is to always show */\n    showOverflowAction?: 'hover' | 'always',\n    text?: string,\n};\n\nfunction CollapsibleSidebarMenuItem(props: Props) {\n    const {\n        className,\n        content,\n        icon,\n        linkClassName,\n        overflowAction,\n        showOverflowAction,\n        text,\n        shouldHideTooltip = false,\n        ...rest\n    } = props;\n    const textRef: { current: null | HTMLElement } = React.useRef(null);\n    const isTextOverflowed = useIsContentOverflowed(textRef);\n    const { isScrolling } = React.useContext(CollapsibleSidebarContext);\n    const isShowOverflowActionOnHover = showOverflowAction === 'hover';\n    const menuItemClassName = classNames('bdl-CollapsibleSidebar-menuItem', className);\n    const menuItemLinkClassName = classNames('bdl-CollapsibleSidebar-menuItemLink', linkClassName, {\n        'show-overflowAction': !isShowOverflowActionOnHover,\n    });\n    const menuItemLabelClassName = classNames('bdl-CollapsibleSidebar-menuItemLabel', {\n        'overflow-action': overflowAction,\n    });\n\n    const renderMenuItem = () => {\n        return (\n            <StyledMenuItem className={menuItemClassName}>\n                <StyledLink className={menuItemLinkClassName} {...rest}>\n                    {icon && (\n                        <StyledIconWrapper className=\"bdl-CollapsibleSidebar-menuItemIcon\">{icon}</StyledIconWrapper>\n                    )}\n                    {text && (\n                        <StyledMenuItemLabel ref={textRef} className={menuItemLabelClassName}>\n                            {text}\n                        </StyledMenuItemLabel>\n                    )}\n                    {content}\n                </StyledLink>\n                {overflowAction && (\n                    <span className=\"bdl-CollapsibleSidebar-menuItemActionContainer\">{overflowAction}</span>\n                )}\n            </StyledMenuItem>\n        );\n    };\n\n    if (isScrolling) {\n        return renderMenuItem();\n    }\n\n    return (\n        <Tooltip\n            className={classNames('bdl-CollapsibleSidebar-menuItemToolTip')}\n            targetWrapperClassName=\"bdl-CollapsibleSidebar-menuItemToolTipTarget\"\n            isDisabled={!isTextOverflowed}\n            isShown={isScrolling || shouldHideTooltip ? false : undefined}\n            isTabbable={false}\n            position=\"middle-right\"\n            text={text}\n        >\n            {renderMenuItem()}\n        </Tooltip>\n    );\n}\n\nexport default CollapsibleSidebarMenuItem;\n"],"mappings":"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","ignoreList":[]}