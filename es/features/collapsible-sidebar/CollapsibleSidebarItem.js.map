{"version":3,"file":"CollapsibleSidebarItem.js","names":["React","Tooltip","LeftSidebarLinkCallout","CollapsibleSidebarItem","props","callout","collapsedElement","expanded","expandedElement","shouldHideTooltip","tooltipMessage","calloutChildren","createElement","attachmentPosition","targetAttachmentPosition","wrappedCollapsedElement","isTabbable","position","text","isDisabled","isShown","undefined"],"sources":["../../../src/features/collapsible-sidebar/CollapsibleSidebarItem.js"],"sourcesContent":["/**\n * @flow\n * @file CollapsibleSidebar item component that will render stylized collapsedElement or expanded depending on the expanded prop.\n * @author Box\n *\n * CollapsibleSidebar item component that will render stylized collapsedElement or expanded depending on the expanded prop.\n */\nimport * as React from 'react';\n\nimport Tooltip from '../../components/tooltip';\n\nimport LeftSidebarLinkCallout from '../left-sidebar/LeftSidebarLinkCallout';\nimport type { Callout } from '../left-sidebar/Callout';\n\ntype Props = {\n    /** Callout element used in the menu. */\n    callout?: Callout,\n\n    /** Element to be shown when component is collapsed */\n    collapsedElement: React.Node,\n\n    /** Controls whether or not the sidebar is expanded on the page */\n    expanded: boolean,\n\n    /** Element to be shown when component is expanded */\n    expandedElement: React.Node,\n\n    /** Tooltip should no be shown is true (usually when another tooltip is showing) */\n    shouldHideTooltip?: boolean,\n\n    /** Tooltip message to show for collapsed item */\n    tooltipMessage?: string,\n};\n\nfunction CollapsibleSidebarItem(props: Props) {\n    const { callout, collapsedElement, expanded, expandedElement, shouldHideTooltip = false, tooltipMessage } = props;\n\n    if (callout) {\n        const calloutChildren = expanded ? expandedElement : collapsedElement;\n        return (\n            <LeftSidebarLinkCallout\n                attachmentPosition=\"bottom left\"\n                callout={callout}\n                targetAttachmentPosition=\"bottom right\"\n            >\n                {calloutChildren}\n            </LeftSidebarLinkCallout>\n        );\n    }\n\n    const wrappedCollapsedElement = (\n        <Tooltip\n            isTabbable={false}\n            position=\"middle-right\"\n            text={tooltipMessage}\n            isDisabled={!tooltipMessage}\n            isShown={shouldHideTooltip ? false : undefined}\n        >\n            {collapsedElement}\n        </Tooltip>\n    );\n\n    return expanded ? expandedElement : wrappedCollapsedElement;\n}\n\nexport default CollapsibleSidebarItem;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAE9B,OAAOC,OAAO,MAAM,0BAA0B;AAE9C,OAAOC,sBAAsB,MAAM,wCAAwC;AAuB3E,SAASC,sBAAsBA,CAACC,KAAY,EAAE;EAC1C,MAAM;IAAEC,OAAO;IAAEC,gBAAgB;IAAEC,QAAQ;IAAEC,eAAe;IAAEC,iBAAiB,GAAG,KAAK;IAAEC;EAAe,CAAC,GAAGN,KAAK;EAEjH,IAAIC,OAAO,EAAE;IACT,MAAMM,eAAe,GAAGJ,QAAQ,GAAGC,eAAe,GAAGF,gBAAgB;IACrE,oBACIN,KAAA,CAAAY,aAAA,CAACV,sBAAsB;MACnBW,kBAAkB,EAAC,aAAa;MAChCR,OAAO,EAAEA,OAAQ;MACjBS,wBAAwB,EAAC;IAAc,GAEtCH,eACmB,CAAC;EAEjC;EAEA,MAAMI,uBAAuB,gBACzBf,KAAA,CAAAY,aAAA,CAACX,OAAO;IACJe,UAAU,EAAE,KAAM;IAClBC,QAAQ,EAAC,cAAc;IACvBC,IAAI,EAAER,cAAe;IACrBS,UAAU,EAAE,CAACT,cAAe;IAC5BU,OAAO,EAAEX,iBAAiB,GAAG,KAAK,GAAGY;EAAU,GAE9Cf,gBACI,CACZ;EAED,OAAOC,QAAQ,GAAGC,eAAe,GAAGO,uBAAuB;AAC/D;AAEA,eAAeZ,sBAAsB","ignoreList":[]}