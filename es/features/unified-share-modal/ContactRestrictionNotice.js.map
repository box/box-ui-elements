{"version":3,"file":"ContactRestrictionNotice.js","names":["React","noop","getProp","FormattedMessage","injectIntl","Tooltip","PlainButton","InlineNotice","LoadingIndicator","SingleSelectField","isRestrictedContact","COLLAB_RESTRICTION_TYPE_ACCESS_POLICY","COLLAB_RESTRICTION_TYPE_INFORMATION_BARRIER","messages","SINGLE_CONTACT","MULTIPLE_CONTACTS","EMAIL_CONTACT","GROUP_CONTACT","RESTRICTION_JUSTIFICATION_ENABLED","RESTRICTION_JUSTIFICATION_DISABLED","restrictionNoticeMessageMap","justifiableContactRestrictionNoticeSingular","justifiableContactRestrictionNotice","contactRestrictionNoticeSingular","contactRestrictionNotice","contactRestrictionNoticeInformationBarrierSingular","contactRestrictionNoticeInformationBarrierSingularGroup","contactRestrictionNoticeInformationBarrier","ContactRestrictionNotice","collabRestrictionType","error","intl","isFetchingJustificationReasons","isRestrictionJustificationEnabled","justificationReasons","onRemoveRestrictedContacts","onSelectJustificationReason","restrictedEmails","restrictedGroups","selectedContacts","selectedJustificationReason","restrictedContacts","filter","contact","restrictedContactCount","length","firstContact","isFirstContactAGroup","type","firstContactEmail","undefined","value","firstContactGroupName","text","selectedValue","isErrorTooltipShown","justificationStatus","restrictedContactCountType","removeButtonLabelMessage","justifiableContactRestrictionRemoveButtonLabel","contactRestrictionRemoveButtonLabel","restrictionNoticeMessage","contactType","justificationSelectSection","createElement","className","options","onChange","placeholder","formatMessage","justificationSelectPlaceholder","isShown","position","theme","_extends","values","count","email","groupName","onClick","displayName","defaultProps","ContactRestrictionNoticeComponent"],"sources":["../../../src/features/unified-share-modal/ContactRestrictionNotice.js"],"sourcesContent":["// @flow\n\nimport * as React from 'react';\nimport noop from 'lodash/noop';\nimport getProp from 'lodash/get';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport type { IntlShape } from 'react-intl';\n\nimport Tooltip from '../../components/tooltip';\nimport PlainButton from '../../components/plain-button';\nimport InlineNotice from '../../components/inline-notice';\nimport LoadingIndicator from '../../components/loading-indicator/LoadingIndicator';\nimport SingleSelectField from '../../components/select-field/SingleSelectField';\nimport isRestrictedContact from './utils/isRestrictedContact';\nimport { COLLAB_RESTRICTION_TYPE_ACCESS_POLICY, COLLAB_RESTRICTION_TYPE_INFORMATION_BARRIER } from './constants';\n\nimport messages from './messages';\n\nimport type { SelectOptionProp } from '../../components/select-field/props';\nimport type { CollabRestrictionType, contactType as Contact } from './flowTypes';\n\nimport './ContactRestrictionNotice.scss';\n\nconst SINGLE_CONTACT = 'singleContact';\nconst MULTIPLE_CONTACTS = 'multipleContacts';\nconst EMAIL_CONTACT = 'email';\nconst GROUP_CONTACT = 'group';\nconst RESTRICTION_JUSTIFICATION_ENABLED = 'restrictionJustificationEnabled';\nconst RESTRICTION_JUSTIFICATION_DISABLED = 'restrictionJustificationDisabled';\n\nconst restrictionNoticeMessageMap = {\n    [COLLAB_RESTRICTION_TYPE_ACCESS_POLICY]: {\n        [RESTRICTION_JUSTIFICATION_ENABLED]: {\n            [SINGLE_CONTACT]: messages.justifiableContactRestrictionNoticeSingular,\n            [MULTIPLE_CONTACTS]: messages.justifiableContactRestrictionNotice,\n        },\n        [RESTRICTION_JUSTIFICATION_DISABLED]: {\n            [SINGLE_CONTACT]: messages.contactRestrictionNoticeSingular,\n            [MULTIPLE_CONTACTS]: messages.contactRestrictionNotice,\n        },\n    },\n    [COLLAB_RESTRICTION_TYPE_INFORMATION_BARRIER]: {\n        [SINGLE_CONTACT]: {\n            [EMAIL_CONTACT]: messages.contactRestrictionNoticeInformationBarrierSingular,\n            [GROUP_CONTACT]: messages.contactRestrictionNoticeInformationBarrierSingularGroup,\n        },\n        [MULTIPLE_CONTACTS]: messages.contactRestrictionNoticeInformationBarrier,\n    },\n};\n\ntype Props = {\n    collabRestrictionType?: CollabRestrictionType,\n    error?: React.Node,\n    intl: IntlShape,\n    isFetchingJustificationReasons?: boolean,\n    isRestrictionJustificationEnabled?: boolean,\n    justificationReasons: Array<SelectOptionProp>,\n    onRemoveRestrictedContacts: () => void,\n    onSelectJustificationReason: (justificationReasonOption: SelectOptionProp) => void,\n    restrictedEmails: Array<string>,\n    restrictedGroups: Array<number>,\n    selectedContacts: Array<Contact>,\n    selectedJustificationReason: ?SelectOptionProp,\n};\n\nconst ContactRestrictionNotice = ({\n    collabRestrictionType = COLLAB_RESTRICTION_TYPE_ACCESS_POLICY,\n    error,\n    intl,\n    isFetchingJustificationReasons,\n    isRestrictionJustificationEnabled,\n    justificationReasons,\n    onRemoveRestrictedContacts,\n    onSelectJustificationReason,\n    restrictedEmails,\n    restrictedGroups,\n    selectedContacts,\n    selectedJustificationReason,\n}: Props) => {\n    const restrictedContacts = selectedContacts.filter(contact =>\n        isRestrictedContact(contact, restrictedEmails, restrictedGroups),\n    );\n    const restrictedContactCount = restrictedContacts.length;\n\n    if (!restrictedContactCount) {\n        return null;\n    }\n\n    const [firstContact] = restrictedContacts;\n    const isFirstContactAGroup = firstContact.type === 'group';\n    const firstContactEmail = isFirstContactAGroup ? undefined : firstContact.value;\n    const firstContactGroupName = isFirstContactAGroup ? firstContact.text : undefined;\n\n    const selectedValue = getProp(selectedJustificationReason, 'value', null);\n    const isErrorTooltipShown = !!error;\n\n    const justificationStatus = isRestrictionJustificationEnabled\n        ? RESTRICTION_JUSTIFICATION_ENABLED\n        : RESTRICTION_JUSTIFICATION_DISABLED;\n    const restrictedContactCountType = restrictedContactCount === 1 ? SINGLE_CONTACT : MULTIPLE_CONTACTS;\n\n    const removeButtonLabelMessage = isRestrictionJustificationEnabled\n        ? messages.justifiableContactRestrictionRemoveButtonLabel\n        : messages.contactRestrictionRemoveButtonLabel;\n\n    let restrictionNoticeMessage;\n    // Information Barrier restrictions do not allow justifications\n    if (collabRestrictionType === COLLAB_RESTRICTION_TYPE_INFORMATION_BARRIER) {\n        if (restrictedContactCountType === SINGLE_CONTACT) {\n            const contactType = isFirstContactAGroup ? GROUP_CONTACT : EMAIL_CONTACT;\n\n            // Group names are displayed in quotes, which need to be localized, hence why\n            // we need to use different messages for groups and emails\n            restrictionNoticeMessage =\n                restrictionNoticeMessageMap[COLLAB_RESTRICTION_TYPE_INFORMATION_BARRIER][SINGLE_CONTACT][contactType];\n        } else {\n            restrictionNoticeMessage =\n                restrictionNoticeMessageMap[COLLAB_RESTRICTION_TYPE_INFORMATION_BARRIER][MULTIPLE_CONTACTS];\n        }\n    } else {\n        restrictionNoticeMessage =\n            restrictionNoticeMessageMap[collabRestrictionType][justificationStatus][restrictedContactCountType];\n    }\n\n    const justificationSelectSection = isFetchingJustificationReasons ? (\n        <LoadingIndicator className=\"bdl-ContactRestrictionNotice-loadingIndicator\" />\n    ) : (\n        <SingleSelectField\n            data-resin-target=\"justificationReasonsSelect\"\n            options={justificationReasons}\n            onChange={onSelectJustificationReason}\n            placeholder={intl.formatMessage(messages.justificationSelectPlaceholder)}\n            selectedValue={selectedValue}\n        />\n    );\n\n    return (\n        <Tooltip text={error} isShown={isErrorTooltipShown} position=\"middle-right\" theme=\"error\">\n            <InlineNotice\n                className=\"bdl-ContactRestrictionNotice\"\n                data-resin-component=\"contactRestrictionNotice\"\n                type=\"error\"\n            >\n                <FormattedMessage\n                    {...restrictionNoticeMessage}\n                    values={{\n                        count: restrictedContactCount,\n                        // We use the first contact because email address and\n                        // group name are only displayed for single contact messages\n                        email: firstContactEmail,\n                        groupName: firstContactGroupName,\n                    }}\n                />\n                &nbsp;\n                {isRestrictionJustificationEnabled && justificationSelectSection}\n                <PlainButton\n                    className=\"bdl-ContactRestrictionNotice-removeBtn\"\n                    data-resin-target=\"removeBtn\"\n                    onClick={onRemoveRestrictedContacts}\n                >\n                    {/* TODO: count was removed but need to keep it while translations are updated otherwise non-English messages will break */}\n                    <FormattedMessage {...removeButtonLabelMessage} values={{ count: restrictedContactCount }} />\n                </PlainButton>\n            </InlineNotice>\n        </Tooltip>\n    );\n};\n\nContactRestrictionNotice.displayName = 'ContactRestrictionNotice';\n\nContactRestrictionNotice.defaultProps = {\n    justificationReasons: [],\n    onRemoveRestrictedContacts: noop,\n    onSelectJustificationReason: noop,\n};\n\nexport { ContactRestrictionNotice as ContactRestrictionNoticeComponent };\nexport default injectIntl(ContactRestrictionNotice);\n"],"mappings":"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","ignoreList":[]}