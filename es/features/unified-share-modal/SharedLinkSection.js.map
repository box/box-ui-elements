{"version":3,"file":"SharedLinkSection.js","names":["React","noop","FormattedMessage","injectIntl","PlainButton","Button","GuideTooltip","TextInputWithCopyButton","Toggle","Tooltip","convertToMs","IconMail","IconClock","IconGlobe","bdlWatermelonRed","isBoxNote","Browser","convertToBoxItem","SharedLinkAccessMenu","SharedLinkPermissionMenu","messages","ANYONE_IN_COMPANY","ANYONE_WITH_LINK","CAN_EDIT","CAN_VIEW_DOWNLOAD","CAN_VIEW_ONLY","PEOPLE_IN_ITEM","SharedLinkSection","Component","constructor","props","_defineProperty","isSharedLinkEnabled","canAddLink","canRemoveLink","isAllowEditSharedLinkForFileEnabled","sharedLink","canChangeAccessLevel","isEditSettingAvailable","isDownloadSettingAvailable","permissionLevel","allowedPermissionLevels","filter","level","state","isAutoCreatingSharedLink","isCopySuccessful","isSharedLinkEditTooltipShown","componentDidMount","autoCreateSharedLink","addSharedLink","submitting","url","isNewSharedLink","setState","componentDidUpdate","prevProps","sharedLinkEditTooltipTargetingApi","triggerCopyOnLoad","onCopyError","onCopySuccess","onCopyInit","toggleRef","focus","canWriteToClipboard","navigator","clipboard","writeText","then","catch","getAllowedPermissionLevels","includes","canShow","onShow","renderSharedLink","autofocusSharedLink","changeSharedLinkAccessLevel","changeSharedLinkPermissionLevel","config","item","itemType","intl","onDismissTooltip","onEmailSharedLinkClick","sharedLinkEditTagTargetingApi","trackingProps","tooltips","accessLevel","accessLevelsDisabledReason","allowedAccessLevels","enterpriseName","isEditAllowed","copyButtonProps","copyButtonTrackingProps","onChangeSharedLinkAccessLevel","onChangeSharedLinkPermissionLevel","onSharedLinkAccessMenuOpen","onSharedLinkCopy","sendSharedLinkButtonProps","sharedLinkAccessMenuButtonProps","sharedLinkAccessMenuButtonTrackingProps","sharedLinkPermissionsMenuButtonProps","sharedLinkPermissionsMenuButtonTrackingProps","shouldTriggerCopyOnLoad","hideEmailButton","showEmailSharedLinkForm","isEditableBoxNote","_objectSpread","createElement","Fragment","className","isShown","onDismiss","position","showCloseButton","text","theme","formatMessage","sharedLinkURLLabel","autofocus","buttonProps","disabled","label","type","value","sendSharedLink","_extends","isDisabled","onClick","changeAccessLevel","tooltipContent","title","ftuxEditPermissionTooltipTitle","body","ftuxEditPermissionTooltipBody","onClose","canChangePermissionLevel","changePermissionLevel","sharedLinkPermissionsEditTooltip","sharedLinkPermissionsEdit","height","width","sharedLinkEditablePubliclyAvailable","sharedLinkPubliclyAvailable","sharedLinkElevatedEditableCompanyAvailable","renderSharedLinkSettingsLink","onSettingsClick","showSharedLinkSettingsCallout","sharedLinkSettingsButtonProps","sharedLinkSettingsCalloutText","sharedLinkSettings","renderToggle","onToggleSharedLink","expirationTimestamp","canAddSharedLink","grantedPermissions","itemShare","canRemoveSharedLink","isToggleEnabled","linkText","linkShareOn","sharedLinkExpirationTooltip","expiration","expiresMessage","role","color","linkShareOff","toggleComponent","isOn","name","onChange","ref","sharedLinkToggleTooltip","targetWrapperClassName","sharedLinkDisabledTooltipCopy","tooltipDisabledMessage","removeLinkTooltip","disabledCreateLinkTooltip","render","sharedLinkSectionLabel","SharedLinkSectionBase"],"sources":["../../../src/features/unified-share-modal/SharedLinkSection.js"],"sourcesContent":["// @flow\n\nimport * as React from 'react';\nimport noop from 'lodash/noop';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport type { IntlShape } from 'react-intl';\n\nimport PlainButton from '../../components/plain-button';\nimport Button from '../../components/button';\nimport GuideTooltip from '../../components/guide-tooltip';\nimport TextInputWithCopyButton from '../../components/text-input-with-copy-button';\nimport Toggle from '../../components/toggle/Toggle';\nimport Tooltip from '../../components/tooltip';\nimport { convertToMs } from '../../utils/datetime';\nimport IconMail from '../../icons/general/IconMail';\nimport IconClock from '../../icons/general/IconClock';\nimport IconGlobe from '../../icons/general/IconGlobe';\nimport { bdlWatermelonRed } from '../../styles/variables';\nimport type { ItemType } from '../../common/types/core';\nimport type { TargetingApi } from '../targeting/types';\nimport { isBoxNote } from '../../utils/file';\nimport Browser from '../../utils/Browser';\n\nimport convertToBoxItem from './utils/item';\nimport SharedLinkAccessMenu from './SharedLinkAccessMenu';\nimport SharedLinkPermissionMenu from './SharedLinkPermissionMenu';\nimport messages from './messages';\nimport type {\n    accessLevelType,\n    item as itemtype,\n    permissionLevelType,\n    sharedLinkType,\n    sharedLinkTrackingType,\n    tooltipComponentIdentifierType,\n    USMConfig,\n} from './flowTypes';\nimport {\n    ANYONE_IN_COMPANY,\n    ANYONE_WITH_LINK,\n    CAN_EDIT,\n    CAN_VIEW_DOWNLOAD,\n    CAN_VIEW_ONLY,\n    PEOPLE_IN_ITEM,\n} from './constants';\n\ntype Props = {\n    addSharedLink: () => void,\n    autoCreateSharedLink?: boolean,\n    autofocusSharedLink?: boolean,\n    changeSharedLinkAccessLevel: (newAccessLevel: accessLevelType) => Promise<{ accessLevel: accessLevelType }>,\n    changeSharedLinkPermissionLevel: (\n        newPermissionLevel: permissionLevelType,\n    ) => Promise<{ permissionLevel: permissionLevelType }>,\n    config?: USMConfig,\n    intl: IntlShape,\n    isAllowEditSharedLinkForFileEnabled: boolean,\n    item: itemtype,\n    itemType: ItemType,\n    onCopyError?: () => void,\n    onCopyInit?: () => void,\n    onCopySuccess?: () => void,\n    onDismissTooltip: (componentIdentifier: tooltipComponentIdentifierType) => void,\n    onEmailSharedLinkClick: Function,\n    onSettingsClick?: Function,\n    onToggleSharedLink: Function,\n    sharedLink: sharedLinkType,\n    sharedLinkEditTagTargetingApi?: TargetingApi,\n    sharedLinkEditTooltipTargetingApi?: TargetingApi,\n    showSharedLinkSettingsCallout: boolean,\n    submitting: boolean,\n    tooltips: { [componentIdentifier: tooltipComponentIdentifierType]: React.Node },\n    trackingProps: sharedLinkTrackingType,\n    triggerCopyOnLoad?: boolean,\n};\n\ntype State = {\n    isAutoCreatingSharedLink: boolean,\n    isCopySuccessful: ?boolean,\n    isSharedLinkEditTooltipShown: boolean,\n};\n\nclass SharedLinkSection extends React.Component<Props, State> {\n    static defaultProps = {\n        trackingProps: {},\n        autoCreateSharedLink: false,\n    };\n\n    toggleRef: HTMLInputElement | null;\n\n    constructor(props: Props) {\n        super(props);\n\n        this.state = {\n            isAutoCreatingSharedLink: false,\n            isCopySuccessful: null,\n            isSharedLinkEditTooltipShown: false,\n        };\n    }\n\n    componentDidMount() {\n        const { sharedLink, autoCreateSharedLink, addSharedLink, submitting } = this.props;\n\n        if (\n            autoCreateSharedLink &&\n            !this.state.isAutoCreatingSharedLink &&\n            sharedLink &&\n            !sharedLink.url &&\n            !submitting &&\n            !sharedLink.isNewSharedLink\n        ) {\n            this.setState({ isAutoCreatingSharedLink: true });\n            addSharedLink();\n        }\n    }\n\n    // We handle didUpdate but not didMount because\n    // the component initially renders with empty data\n    // in order to start showing UI components.\n    // When getInitialData completes in the parent we\n    // rerender with correct sharedLink data and can\n    // check whether to auto create a new one.\n    // Note: we are assuming the 2nd render is safe\n    // to start doing this check.\n    componentDidUpdate(prevProps: Props) {\n        const {\n            sharedLink,\n            autoCreateSharedLink,\n            addSharedLink,\n            sharedLinkEditTooltipTargetingApi,\n            submitting,\n            triggerCopyOnLoad,\n            onCopyError = () => {},\n            onCopySuccess = () => {},\n            onCopyInit = () => {},\n        } = this.props;\n\n        const { isAutoCreatingSharedLink, isCopySuccessful, isSharedLinkEditTooltipShown } = this.state;\n\n        if (\n            autoCreateSharedLink &&\n            !isAutoCreatingSharedLink &&\n            !sharedLink.url &&\n            !submitting &&\n            !sharedLink.isNewSharedLink\n        ) {\n            this.setState({ isAutoCreatingSharedLink: true });\n            addSharedLink();\n        }\n\n        if (!prevProps.sharedLink.url && sharedLink.url) {\n            this.setState({ isAutoCreatingSharedLink: false });\n            if (this.toggleRef) {\n                this.toggleRef.focus();\n            }\n        }\n\n        if (\n            Browser.canWriteToClipboard() &&\n            triggerCopyOnLoad &&\n            !isAutoCreatingSharedLink &&\n            sharedLink.url &&\n            isCopySuccessful === null\n        ) {\n            onCopyInit();\n            navigator.clipboard\n                .writeText(sharedLink.url)\n                .then(() => {\n                    this.setState({ isCopySuccessful: true });\n                    onCopySuccess();\n                })\n                .catch(() => {\n                    this.setState({ isCopySuccessful: false });\n                    onCopyError();\n                });\n        }\n\n        // if ESL ftux tooltip is showing on initial mount, we call onShow\n        const allowedPermissionLevels = this.getAllowedPermissionLevels();\n\n        if (\n            allowedPermissionLevels.includes(CAN_EDIT) &&\n            sharedLinkEditTooltipTargetingApi &&\n            sharedLinkEditTooltipTargetingApi.canShow &&\n            !isSharedLinkEditTooltipShown\n        ) {\n            const { onShow } = sharedLinkEditTooltipTargetingApi;\n            onShow();\n            this.setState({ isSharedLinkEditTooltipShown: true });\n        }\n    }\n\n    canAddSharedLink = (isSharedLinkEnabled: boolean, canAddLink: boolean) => {\n        return !isSharedLinkEnabled && canAddLink;\n    };\n\n    canRemoveSharedLink = (isSharedLinkEnabled: boolean, canRemoveLink: boolean) => {\n        return isSharedLinkEnabled && canRemoveLink;\n    };\n\n    getAllowedPermissionLevels = (): Array<permissionLevelType> => {\n        const { isAllowEditSharedLinkForFileEnabled, sharedLink } = this.props;\n\n        const { canChangeAccessLevel, isEditSettingAvailable, isDownloadSettingAvailable, permissionLevel } =\n            sharedLink;\n\n        let allowedPermissionLevels = [CAN_EDIT, CAN_VIEW_DOWNLOAD, CAN_VIEW_ONLY];\n\n        if (!canChangeAccessLevel) {\n            // remove all but current level\n            allowedPermissionLevels = allowedPermissionLevels.filter(level => level === permissionLevel);\n        }\n\n        // if we cannot set the download value, we remove this option from the dropdown\n        if (!isDownloadSettingAvailable) {\n            allowedPermissionLevels = allowedPermissionLevels.filter(level => level !== CAN_VIEW_DOWNLOAD);\n        }\n\n        // if the user cannot edit, we remove this option from the dropdown\n        if (!isEditSettingAvailable || !isAllowEditSharedLinkForFileEnabled) {\n            allowedPermissionLevels = allowedPermissionLevels.filter(level => level !== CAN_EDIT);\n        }\n\n        return allowedPermissionLevels;\n    };\n\n    renderSharedLink() {\n        const {\n            autofocusSharedLink,\n            changeSharedLinkAccessLevel,\n            changeSharedLinkPermissionLevel,\n            config,\n            item,\n            itemType,\n            intl,\n            onDismissTooltip,\n            onEmailSharedLinkClick,\n            sharedLink,\n            sharedLinkEditTagTargetingApi,\n            sharedLinkEditTooltipTargetingApi,\n            submitting,\n            trackingProps,\n            triggerCopyOnLoad,\n            tooltips,\n        } = this.props;\n\n        const { isCopySuccessful, isSharedLinkEditTooltipShown } = this.state;\n\n        const {\n            accessLevel,\n            accessLevelsDisabledReason,\n            allowedAccessLevels,\n            canChangeAccessLevel,\n            enterpriseName,\n            isEditAllowed,\n            permissionLevel,\n            url,\n        } = sharedLink;\n\n        const {\n            copyButtonProps: copyButtonTrackingProps,\n            onChangeSharedLinkAccessLevel,\n            onChangeSharedLinkPermissionLevel,\n            onSharedLinkAccessMenuOpen,\n            onSharedLinkCopy = noop,\n            sendSharedLinkButtonProps,\n            sharedLinkAccessMenuButtonProps: sharedLinkAccessMenuButtonTrackingProps,\n            sharedLinkPermissionsMenuButtonProps: sharedLinkPermissionsMenuButtonTrackingProps,\n        } = trackingProps;\n\n        const shouldTriggerCopyOnLoad = !!triggerCopyOnLoad && !!isCopySuccessful;\n\n        /**\n         * The email button should be rendered by default.\n         * Only hide the button if there is a config prop that declares showEmailSharedLinkForm to be false.\n         */\n        const hideEmailButton = config && config.showEmailSharedLinkForm === false;\n\n        const isEditableBoxNote = isBoxNote(convertToBoxItem(item)) && isEditAllowed;\n        const allowedPermissionLevels = this.getAllowedPermissionLevels();\n\n        const copyButtonProps = {\n            ...copyButtonTrackingProps,\n            'data-target-id': 'Button-CopySharedLink',\n        };\n\n        const sharedLinkAccessMenuButtonProps = {\n            ...sharedLinkAccessMenuButtonTrackingProps,\n            'data-target-id': 'Button-SharedLinkAccessMenuLabel',\n        };\n\n        const sharedLinkPermissionsMenuButtonProps = {\n            ...sharedLinkPermissionsMenuButtonTrackingProps,\n            'data-target-id': 'Button-SharedLinkPermissionsMenuLabel',\n        };\n\n        return (\n            <>\n                <div className=\"shared-link-field-row\">\n                    <Tooltip\n                        className=\"usm-ftux-tooltip\"\n                        isShown={!!tooltips['shared-link-copy-button']}\n                        onDismiss={() => onDismissTooltip('shared-link-copy-button')}\n                        position=\"middle-right\"\n                        showCloseButton\n                        text={tooltips['shared-link-copy-button']}\n                        theme=\"callout\"\n                    >\n                        <TextInputWithCopyButton\n                            aria-label={intl.formatMessage(messages.sharedLinkURLLabel)}\n                            autofocus={autofocusSharedLink}\n                            buttonProps={copyButtonProps}\n                            className=\"shared-link-field-container\"\n                            disabled={submitting}\n                            label=\"\"\n                            onCopySuccess={() => onSharedLinkCopy(permissionLevel)}\n                            triggerCopyOnLoad={shouldTriggerCopyOnLoad}\n                            type=\"url\"\n                            value={url}\n                        />\n                    </Tooltip>\n                    {!hideEmailButton && (\n                        <Tooltip position=\"top-left\" text={intl.formatMessage(messages.sendSharedLink)}>\n                            <Button\n                                aria-label={intl.formatMessage(messages.sendSharedLink)}\n                                className=\"email-shared-link-btn\"\n                                data-target-id=\"Button-SendSharedLink\"\n                                isDisabled={submitting}\n                                onClick={onEmailSharedLinkClick}\n                                type=\"button\"\n                                {...sendSharedLinkButtonProps}\n                            >\n                                <IconMail />\n                            </Button>\n                        </Tooltip>\n                    )}\n                </div>\n\n                <div className=\"shared-link-access-row\">\n                    <SharedLinkAccessMenu\n                        accessLevel={accessLevel}\n                        accessLevelsDisabledReason={accessLevelsDisabledReason}\n                        allowedAccessLevels={allowedAccessLevels}\n                        changeAccessLevel={changeSharedLinkAccessLevel}\n                        enterpriseName={enterpriseName}\n                        itemType={itemType}\n                        onDismissTooltip={() => onDismissTooltip('shared-link-access-menu')}\n                        tooltipContent={tooltips['shared-link-access-menu'] || null}\n                        submitting={submitting}\n                        trackingProps={{\n                            onChangeSharedLinkAccessLevel,\n                            onSharedLinkAccessMenuOpen,\n                            sharedLinkAccessMenuButtonProps,\n                        }}\n                    />\n                    {!isEditableBoxNote && accessLevel !== PEOPLE_IN_ITEM && (\n                        <GuideTooltip\n                            isShown={\n                                allowedPermissionLevels.includes(CAN_EDIT) && sharedLinkEditTooltipTargetingApi?.canShow\n                            }\n                            title={intl.formatMessage(messages.ftuxEditPermissionTooltipTitle)}\n                            body={intl.formatMessage(messages.ftuxEditPermissionTooltipBody)}\n                            onDismiss={() => {\n                                if (sharedLinkEditTooltipTargetingApi) {\n                                    const { onClose } = sharedLinkEditTooltipTargetingApi;\n                                    onClose();\n                                }\n                            }}\n                            position=\"bottom-center\"\n                        >\n                            <SharedLinkPermissionMenu\n                                allowedPermissionLevels={allowedPermissionLevels}\n                                canChangePermissionLevel={canChangeAccessLevel}\n                                changePermissionLevel={changeSharedLinkPermissionLevel}\n                                isSharedLinkEditTooltipShown={isSharedLinkEditTooltipShown}\n                                permissionLevel={permissionLevel}\n                                sharedLinkEditTagTargetingApi={sharedLinkEditTagTargetingApi}\n                                sharedLinkEditTooltipTargetingApi={sharedLinkEditTooltipTargetingApi}\n                                submitting={submitting}\n                                trackingProps={{\n                                    onChangeSharedLinkPermissionLevel,\n                                    sharedLinkPermissionsMenuButtonProps,\n                                }}\n                            />\n                        </GuideTooltip>\n                    )}\n                    {isEditableBoxNote && (\n                        <Tooltip text={intl.formatMessage(messages.sharedLinkPermissionsEditTooltip)}>\n                            <PlainButton isDisabled className=\"can-edit-btn\">\n                                <FormattedMessage {...messages.sharedLinkPermissionsEdit} />\n                            </PlainButton>\n                        </Tooltip>\n                    )}\n                </div>\n                {accessLevel === ANYONE_WITH_LINK && (\n                    <div className=\"security-indicator-note\">\n                        <span className=\"security-indicator-icon-globe\">\n                            <IconGlobe height={12} width={12} />\n                        </span>\n                        {permissionLevel === CAN_EDIT && (\n                            <FormattedMessage\n                                data-testid=\"shared-link-editable-publicly-available-message\"\n                                {...messages.sharedLinkEditablePubliclyAvailable}\n                            />\n                        )}\n                        {permissionLevel !== CAN_EDIT && (\n                            <FormattedMessage\n                                data-testid=\"shared-link-publicly-available-message\"\n                                {...messages.sharedLinkPubliclyAvailable}\n                            />\n                        )}\n                    </div>\n                )}\n                {accessLevel === ANYONE_IN_COMPANY && permissionLevel === CAN_EDIT && (\n                    <div className=\"security-indicator-note\">\n                        <span className=\"security-indicator-icon-globe\">\n                            <IconGlobe height={12} width={12} />\n                        </span>\n                        <FormattedMessage\n                            data-testid=\"shared-link-elevated-editable-company-available-message\"\n                            {...messages.sharedLinkElevatedEditableCompanyAvailable}\n                        />\n                    </div>\n                )}\n            </>\n        );\n    }\n\n    renderSharedLinkSettingsLink() {\n        const { intl, onDismissTooltip, onSettingsClick, showSharedLinkSettingsCallout, trackingProps, tooltips } =\n            this.props;\n        const { sharedLinkSettingsButtonProps } = trackingProps;\n\n        return (\n            <div className=\"shared-link-settings-btn-container\">\n                <Tooltip\n                    className=\"usm-ftux-tooltip\"\n                    isShown={!!tooltips['shared-link-settings'] || showSharedLinkSettingsCallout}\n                    onDismiss={() => onDismissTooltip('shared-link-settings')}\n                    position=\"middle-right\"\n                    showCloseButton\n                    text={\n                        tooltips['shared-link-settings'] || intl.formatMessage(messages.sharedLinkSettingsCalloutText)\n                    }\n                    theme=\"callout\"\n                >\n                    <PlainButton\n                        {...sharedLinkSettingsButtonProps}\n                        aria-haspopup=\"dialog\"\n                        className=\"shared-link-settings-btn\"\n                        data-target-id=\"PlainButton-SharedLinkSettings\"\n                        onClick={onSettingsClick}\n                        type=\"button\"\n                    >\n                        <FormattedMessage {...messages.sharedLinkSettings} />\n                    </PlainButton>\n                </Tooltip>\n            </div>\n        );\n    }\n\n    renderToggle() {\n        const { intl, item, onDismissTooltip, onToggleSharedLink, sharedLink, submitting, tooltips } = this.props;\n        const { canChangeAccessLevel, expirationTimestamp, url } = sharedLink;\n        const isSharedLinkEnabled = !!url;\n        const canAddSharedLink = this.canAddSharedLink(isSharedLinkEnabled, item.grantedPermissions.itemShare);\n        const canRemoveSharedLink = this.canRemoveSharedLink(isSharedLinkEnabled, canChangeAccessLevel);\n        const isToggleEnabled = (canAddSharedLink || canRemoveSharedLink) && !submitting;\n\n        let linkText;\n        if (isSharedLinkEnabled) {\n            linkText = <FormattedMessage {...messages.linkShareOn} />;\n            if (expirationTimestamp && expirationTimestamp !== 0) {\n                linkText = (\n                    <span>\n                        <FormattedMessage {...messages.linkShareOn} />\n                        <Tooltip\n                            position=\"top-center\"\n                            text={intl.formatMessage(messages.sharedLinkExpirationTooltip, {\n                                expiration: convertToMs(expirationTimestamp),\n                            })}\n                        >\n                            <span\n                                aria-label={intl.formatMessage(messages.expiresMessage)}\n                                className=\"shared-link-expiration-badge\"\n                                role=\"img\"\n                            >\n                                <IconClock color={bdlWatermelonRed} />\n                            </span>\n                        </Tooltip>\n                    </span>\n                );\n            }\n        } else {\n            linkText = <FormattedMessage {...messages.linkShareOff} />;\n        }\n\n        const toggleComponent = (\n            <Toggle\n                data-target-id=\"Toggle-CreateSharedLink\"\n                isDisabled={!isToggleEnabled}\n                isOn={isSharedLinkEnabled}\n                label={linkText}\n                name=\"toggle\"\n                onChange={onToggleSharedLink}\n                ref={ref => {\n                    this.toggleRef = ref;\n                }}\n            />\n        );\n\n        if (!submitting) {\n            if (canAddSharedLink) {\n                const sharedLinkToggleTooltip = tooltips['shared-link-toggle'];\n                if (sharedLinkToggleTooltip) {\n                    return (\n                        <Tooltip\n                            className=\"usm-ftux-tooltip\"\n                            isShown\n                            onDismiss={() => onDismissTooltip('shared-link-toggle')}\n                            position=\"middle-left\"\n                            showCloseButton\n                            text={sharedLinkToggleTooltip}\n                            theme=\"callout\"\n                        >\n                            {toggleComponent}\n                        </Tooltip>\n                    );\n                }\n                return (\n                    <Tooltip\n                        targetWrapperClassName=\"usm-ftux-toggle-tooltip-target\"\n                        position=\"top-right\"\n                        text={intl.formatMessage(messages.sharedLinkDisabledTooltipCopy)}\n                    >\n                        {toggleComponent}\n                    </Tooltip>\n                );\n            }\n\n            if (!isToggleEnabled) {\n                const tooltipDisabledMessage = isSharedLinkEnabled\n                    ? messages.removeLinkTooltip\n                    : messages.disabledCreateLinkTooltip;\n\n                return (\n                    <Tooltip\n                        className=\"usm-disabled-message-tooltip\"\n                        position=\"top-right\"\n                        text={intl.formatMessage(tooltipDisabledMessage)}\n                    >\n                        {toggleComponent}\n                    </Tooltip>\n                );\n            }\n        }\n\n        return toggleComponent;\n    }\n\n    render() {\n        const { sharedLink, onSettingsClick } = this.props;\n        const isSharedLinkEnabled = !!sharedLink.url;\n\n        return (\n            <div className=\"be\">\n                <hr className=\"bdl-SharedLinkSection-separator\" />\n                {/* eslint-disable-next-line jsx-a11y/label-has-for */}\n                <label>\n                    <span className=\"label bdl-Label\">\n                        <FormattedMessage {...messages.sharedLinkSectionLabel} />\n                    </span>\n                </label>\n                <div className=\"shared-link-toggle-row\">\n                    {this.renderToggle()}\n                    {isSharedLinkEnabled && onSettingsClick && this.renderSharedLinkSettingsLink()}\n                </div>\n                {isSharedLinkEnabled && this.renderSharedLink()}\n            </div>\n        );\n    }\n}\nexport { SharedLinkSection as SharedLinkSectionBase };\nexport default injectIntl(SharedLinkSection);\n"],"mappings":"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","ignoreList":[]}