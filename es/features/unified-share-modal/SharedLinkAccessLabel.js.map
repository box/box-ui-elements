{"version":3,"file":"SharedLinkAccessLabel.js","names":["React","FormattedMessage","ANYONE_WITH_LINK","ANYONE_IN_COMPANY","PEOPLE_IN_ITEM","SharedLinkAccessDescription","messages","SharedLinkAccessLabel","accessLevel","enterpriseName","hasDescription","itemType","messageKeyMap","messageName","createElement","_extends","values"],"sources":["../../../src/features/unified-share-modal/SharedLinkAccessLabel.js"],"sourcesContent":["// @flow\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport type { ItemType } from '../../common/types/core';\n\nimport { ANYONE_WITH_LINK, ANYONE_IN_COMPANY, PEOPLE_IN_ITEM } from './constants';\n\nimport type { accessLevelType } from './flowTypes';\n\nimport SharedLinkAccessDescription from './SharedLinkAccessDescription';\nimport messages from './messages';\n\ntype Props = {\n    accessLevel?: accessLevelType,\n    enterpriseName?: string,\n    hasDescription?: boolean,\n    itemType: ItemType,\n};\n\nconst SharedLinkAccessLabel = ({ accessLevel, enterpriseName, hasDescription, itemType }: Props) => {\n    const messageKeyMap = {\n        [ANYONE_WITH_LINK]: 'peopleWithTheLinkText',\n        [ANYONE_IN_COMPANY]: enterpriseName === '' ? 'peopleInYourCompany' : 'peopleInEnterpriseName',\n        [PEOPLE_IN_ITEM]: itemType === 'folder' ? 'peopleInThisFolder' : 'peopleInThisFile',\n    };\n\n    let messageName;\n    if (accessLevel) {\n        messageName = messageKeyMap[accessLevel];\n    } else {\n        return null;\n    }\n\n    return hasDescription ? (\n        <span>\n            <strong>\n                <FormattedMessage {...messages[messageName]} values={{ enterpriseName }} />\n            </strong>\n            <SharedLinkAccessDescription\n                accessLevel={accessLevel}\n                enterpriseName={enterpriseName}\n                itemType={itemType}\n            />\n        </span>\n    ) : (\n        <FormattedMessage {...messages[messageName]} values={{ enterpriseName }} />\n    );\n};\n\nexport default SharedLinkAccessLabel;\n"],"mappings":";AACA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,gBAAgB,QAAQ,YAAY;AAI7C,SAASC,gBAAgB,EAAEC,iBAAiB,EAAEC,cAAc,QAAQ,aAAa;AAIjF,OAAOC,2BAA2B,MAAM,+BAA+B;AACvE,OAAOC,QAAQ,MAAM,YAAY;AASjC,MAAMC,qBAAqB,GAAGA,CAAC;EAAEC,WAAW;EAAEC,cAAc;EAAEC,cAAc;EAAEC;AAAgB,CAAC,KAAK;EAChG,MAAMC,aAAa,GAAG;IAClB,CAACV,gBAAgB,GAAG,uBAAuB;IAC3C,CAACC,iBAAiB,GAAGM,cAAc,KAAK,EAAE,GAAG,qBAAqB,GAAG,wBAAwB;IAC7F,CAACL,cAAc,GAAGO,QAAQ,KAAK,QAAQ,GAAG,oBAAoB,GAAG;EACrE,CAAC;EAED,IAAIE,WAAW;EACf,IAAIL,WAAW,EAAE;IACbK,WAAW,GAAGD,aAAa,CAACJ,WAAW,CAAC;EAC5C,CAAC,MAAM;IACH,OAAO,IAAI;EACf;EAEA,OAAOE,cAAc,gBACjBV,KAAA,CAAAc,aAAA,4BACId,KAAA,CAAAc,aAAA,8BACId,KAAA,CAAAc,aAAA,CAACb,gBAAgB,EAAAc,QAAA,KAAKT,QAAQ,CAACO,WAAW,CAAC;IAAEG,MAAM,EAAE;MAAEP;IAAe;EAAE,EAAE,CACtE,CAAC,eACTT,KAAA,CAAAc,aAAA,CAACT,2BAA2B;IACxBG,WAAW,EAAEA,WAAY;IACzBC,cAAc,EAAEA,cAAe;IAC/BE,QAAQ,EAAEA;EAAS,CACtB,CACC,CAAC,gBAEPX,KAAA,CAAAc,aAAA,CAACb,gBAAgB,EAAAc,QAAA,KAAKT,QAAQ,CAACO,WAAW,CAAC;IAAEG,MAAM,EAAE;MAAEP;IAAe;EAAE,EAAE,CAC7E;AACL,CAAC;AAED,eAAeF,qBAAqB","ignoreList":[]}