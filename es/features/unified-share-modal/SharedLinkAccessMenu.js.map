{"version":3,"file":"SharedLinkAccessMenu.js","names":["React","classNames","FormattedMessage","DropdownMenu","MenuToggle","Menu","SelectMenuItem","PlainButton","Tooltip","SharedLinkAccessLabel","ANYONE_WITH_LINK","ANYONE_IN_COMPANY","DISABLED_REASON_ACCESS_POLICY","DISABLED_REASON_MALICIOUS_CONTENT","PEOPLE_IN_ITEM","messages","accessLevels","SharedLinkAccessMenu","Component","constructor","args","_defineProperty","newAccessLevel","accessLevel","changeAccessLevel","trackingProps","props","onChangeSharedLinkAccessLevel","renderMenu","accessLevelsDisabledReason","allowedAccessLevels","enterpriseName","itemType","createElement","className","map","level","isDisabled","isDisabledByAccessPolicy","isDisabledByMaliciousContent","isDisabledByPolicy","tooltipMessage","disabledMaliciousContentShareLinkPermission","disabledShareLinkPermission","key","position","text","isSelected","onClick","onChangeAccessLevel","hasDescription","render","onDismissTooltip","submitting","tooltipContent","onSharedLinkAccessMenuOpen","sharedLinkAccessMenuButtonProps","isShown","onDismiss","showCloseButton","theme","onMenuOpen","constrainToWindow","_extends","disabled","type"],"sources":["../../../src/features/unified-share-modal/SharedLinkAccessMenu.js"],"sourcesContent":["// @flow\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { FormattedMessage } from 'react-intl';\n\nimport DropdownMenu, { MenuToggle } from '../../components/dropdown-menu';\nimport { Menu, SelectMenuItem } from '../../components/menu';\nimport PlainButton from '../../components/plain-button';\nimport Tooltip from '../../components/tooltip';\nimport type { ItemType } from '../../common/types/core';\n\nimport SharedLinkAccessLabel from './SharedLinkAccessLabel';\nimport {\n    ANYONE_WITH_LINK,\n    ANYONE_IN_COMPANY,\n    DISABLED_REASON_ACCESS_POLICY,\n    DISABLED_REASON_MALICIOUS_CONTENT,\n    PEOPLE_IN_ITEM,\n} from './constants';\nimport messages from './messages';\nimport type { accessLevelType, accessLevelsDisabledReasonType, allowedAccessLevelsType } from './flowTypes';\n\nconst accessLevels = [ANYONE_WITH_LINK, ANYONE_IN_COMPANY, PEOPLE_IN_ITEM];\n\ntype Props = {\n    accessLevel?: accessLevelType,\n    accessLevelsDisabledReason: accessLevelsDisabledReasonType,\n    allowedAccessLevels: allowedAccessLevelsType,\n    changeAccessLevel: (newAccessLevel: accessLevelType) => Promise<{ accessLevel: accessLevelType }>,\n    enterpriseName?: string,\n    itemType: ItemType,\n    onDismissTooltip: () => void,\n    submitting: boolean,\n    tooltipContent: React.Node,\n    trackingProps: {\n        onChangeSharedLinkAccessLevel?: Function,\n        onSharedLinkAccessMenuOpen?: Function,\n        sharedLinkAccessMenuButtonProps?: Object,\n    },\n};\n\nclass SharedLinkAccessMenu extends React.Component<Props> {\n    static defaultProps = {\n        accessLevelsDisabledReason: {},\n        allowedAccessLevels: {},\n        trackingProps: {},\n    };\n\n    onChangeAccessLevel = (newAccessLevel: accessLevelType) => {\n        const { accessLevel, changeAccessLevel, trackingProps } = this.props;\n        const { onChangeSharedLinkAccessLevel } = trackingProps;\n\n        if (accessLevel !== newAccessLevel) {\n            changeAccessLevel(newAccessLevel);\n\n            if (onChangeSharedLinkAccessLevel) {\n                onChangeSharedLinkAccessLevel(newAccessLevel);\n            }\n        }\n    };\n\n    renderMenu() {\n        const { accessLevel, accessLevelsDisabledReason, allowedAccessLevels, enterpriseName, itemType } = this.props;\n        return (\n            <Menu className=\"usm-share-access-menu\" data-testid=\"usm-share-access-menu\">\n                {accessLevels.map(level => {\n                    const isDisabled = !allowedAccessLevels[level];\n                    const isDisabledByAccessPolicy =\n                        accessLevelsDisabledReason[level] === DISABLED_REASON_ACCESS_POLICY;\n                    const isDisabledByMaliciousContent =\n                        accessLevelsDisabledReason[level] === DISABLED_REASON_MALICIOUS_CONTENT;\n                    const isDisabledByPolicy = isDisabledByAccessPolicy || isDisabledByMaliciousContent;\n                    const tooltipMessage = isDisabledByMaliciousContent\n                        ? messages.disabledMaliciousContentShareLinkPermission\n                        : messages.disabledShareLinkPermission;\n\n                    // If an access level is disabled for reasons other than access policy enforcement\n                    // then we just don't show that menu item. If it is disabled because of an access policy\n                    // instead, then we show the menu item in a disabled state and with a tooltip.\n                    if (isDisabled && !isDisabledByPolicy) {\n                        return null;\n                    }\n\n                    return (\n                        <Tooltip\n                            isDisabled={!isDisabledByPolicy}\n                            key={`tooltip-${level}`}\n                            position=\"top-center\"\n                            text={<FormattedMessage {...tooltipMessage} />}\n                        >\n                            <SelectMenuItem\n                                key={level}\n                                isDisabled={isDisabled}\n                                isSelected={level === accessLevel}\n                                onClick={() => this.onChangeAccessLevel(level)}\n                            >\n                                <SharedLinkAccessLabel\n                                    accessLevel={level}\n                                    enterpriseName={enterpriseName}\n                                    hasDescription\n                                    itemType={itemType}\n                                />\n                            </SelectMenuItem>\n                        </Tooltip>\n                    );\n                })}\n            </Menu>\n        );\n    }\n\n    render() {\n        const {\n            accessLevel,\n            enterpriseName,\n            itemType,\n            onDismissTooltip,\n            submitting,\n            tooltipContent,\n            trackingProps,\n        } = this.props;\n        const { onSharedLinkAccessMenuOpen, sharedLinkAccessMenuButtonProps } = trackingProps;\n\n        return (\n            <Tooltip\n                className=\"usm-ftux-tooltip\"\n                isShown={!!tooltipContent}\n                onDismiss={onDismissTooltip}\n                position=\"middle-left\"\n                showCloseButton\n                text={tooltipContent}\n                theme=\"callout\"\n            >\n                <DropdownMenu onMenuOpen={onSharedLinkAccessMenuOpen} constrainToWindow>\n                    <PlainButton\n                        className={classNames('lnk', {\n                            'is-disabled': submitting,\n                            'bdl-is-disabled': submitting,\n                        })}\n                        data-testid=\"usm-share-access-toggle\"\n                        disabled={submitting}\n                        type=\"button\"\n                        {...sharedLinkAccessMenuButtonProps}\n                    >\n                        <MenuToggle>\n                            <SharedLinkAccessLabel\n                                accessLevel={accessLevel}\n                                enterpriseName={enterpriseName}\n                                hasDescription={false}\n                                itemType={itemType}\n                            />\n                        </MenuToggle>\n                    </PlainButton>\n                    {this.renderMenu()}\n                </DropdownMenu>\n            </Tooltip>\n        );\n    }\n}\n\nexport default SharedLinkAccessMenu;\n"],"mappings":"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","ignoreList":[]}