{"version":3,"file":"PresenceAvatarTooltipContent.js","names":["React","FormattedMessage","injectIntl","messages","determineInteractionMessage","timeFromNow","PresenceAvatarTooltipContent","name","interactedAt","interactionType","intl","isActive","lastActionMessage","value","unit","timeAgo","formatRelativeTime","createElement","className","activeNowText","_extends","values","PresenceAvatarTooltipContentComponent"],"sources":["../../../src/features/presence/PresenceAvatarTooltipContent.tsx"],"sourcesContent":["import * as React from 'react';\nimport { FormattedMessage, injectIntl, WrappedComponentProps } from 'react-intl';\n// @ts-ignore flow import\nimport messages from './messages';\n// @ts-ignore flow import\nimport { determineInteractionMessage } from './utils/presenceUtils';\nimport './PresenceAvatarTooltipContent.scss';\n// @ts-ignore flow import\nimport timeFromNow from '../../utils/relativeTime';\n\nexport type Props = {\n    name: string;\n    interactedAt: number;\n    interactionType: string;\n    isActive?: boolean;\n} & WrappedComponentProps;\n\nfunction PresenceAvatarTooltipContent({ name, interactedAt, interactionType, intl, isActive }: Props): JSX.Element {\n    const lastActionMessage = determineInteractionMessage(interactionType);\n    const { value, unit } = timeFromNow(interactedAt);\n    const timeAgo = intl.formatRelativeTime(value, unit as Intl.RelativeTimeFormatUnit);\n\n    return (\n        <div className=\"bdl-PresenceAvatarTooltipContent\">\n            <span className=\"bdl-PresenceAvatarTooltipContent-name\">{name}</span>\n            {lastActionMessage && (\n                <span className=\"bdl-PresenceAvatarTooltipContent-event\">\n                    {isActive ? (\n                        <FormattedMessage {...messages.activeNowText} />\n                    ) : (\n                        <FormattedMessage\n                            {...lastActionMessage}\n                            values={{\n                                timeAgo,\n                            }}\n                        />\n                    )}\n                </span>\n            )}\n        </div>\n    );\n}\n\nexport { PresenceAvatarTooltipContent as PresenceAvatarTooltipContentComponent };\n\nexport default injectIntl(PresenceAvatarTooltipContent);\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,gBAAgB,EAAEC,UAAU,QAA+B,YAAY;AAChF;AACA,OAAOC,QAAQ,MAAM,YAAY;AACjC;AACA,SAASC,2BAA2B,QAAQ,uBAAuB;AACnE,OAAO,qCAAqC;AAC5C;AACA,OAAOC,WAAW,MAAM,0BAA0B;AASlD,SAASC,4BAA4BA,CAAC;EAAEC,IAAI;EAAEC,YAAY;EAAEC,eAAe;EAAEC,IAAI;EAAEC;AAAgB,CAAC,EAAe;EAC/G,MAAMC,iBAAiB,GAAGR,2BAA2B,CAACK,eAAe,CAAC;EACtE,MAAM;IAAEI,KAAK;IAAEC;EAAK,CAAC,GAAGT,WAAW,CAACG,YAAY,CAAC;EACjD,MAAMO,OAAO,GAAGL,IAAI,CAACM,kBAAkB,CAACH,KAAK,EAAEC,IAAmC,CAAC;EAEnF,oBACId,KAAA,CAAAiB,aAAA;IAAKC,SAAS,EAAC;EAAkC,gBAC7ClB,KAAA,CAAAiB,aAAA;IAAMC,SAAS,EAAC;EAAuC,GAAEX,IAAW,CAAC,EACpEK,iBAAiB,iBACdZ,KAAA,CAAAiB,aAAA;IAAMC,SAAS,EAAC;EAAwC,GACnDP,QAAQ,gBACLX,KAAA,CAAAiB,aAAA,CAAChB,gBAAgB,EAAKE,QAAQ,CAACgB,aAAgB,CAAC,gBAEhDnB,KAAA,CAAAiB,aAAA,CAAChB,gBAAgB,EAAAmB,QAAA,KACTR,iBAAiB;IACrBS,MAAM,EAAE;MACJN;IACJ;EAAE,EACL,CAEH,CAET,CAAC;AAEd;AAEA,SAAST,4BAA4B,IAAIgB,qCAAqC;AAE9E,eAAepB,UAAU,CAACI,4BAA4B,CAAC","ignoreList":[]}