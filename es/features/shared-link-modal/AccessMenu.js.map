{"version":3,"file":"AccessMenu.js","names":["React","Component","classNames","FormattedMessage","PlainButton","DropdownMenu","MenuToggle","Menu","MenuSeparator","MenuSectionHeader","SelectMenuItem","messages","PEOPLE_WITH_LINK","PEOPLE_IN_COMPANY","PEOPLE_IN_ITEM","accessLevelPropType","allowedAccessLevelsPropType","AccessLabel","RemoveLinkConfirmModal","accessLevels","AccessMenu","constructor","args","_defineProperty","isConfirmModalOpen","setState","renderMenu","accessLevel","allowedAccessLevels","canRemoveLink","changeAccessLevel","enterpriseName","itemType","removeLinkButtonProps","props","createElement","className","accessTypeTitle","map","level","key","isSelected","onClick","_extends","openConfirmModal","removeLink","render","accessDropdownMenuProps","accessMenuButtonProps","submitting","state","disabled","isOpen","onRequestClose","closeConfirmModal"],"sources":["../../../src/features/shared-link-modal/AccessMenu.js"],"sourcesContent":["/* @flow */\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { FormattedMessage } from 'react-intl';\n\nimport PlainButton from '../../components/plain-button';\nimport DropdownMenu, { MenuToggle } from '../../components/dropdown-menu';\nimport { Menu, MenuSeparator, MenuSectionHeader, SelectMenuItem } from '../../components/menu';\n\nimport messages from './messages';\nimport { PEOPLE_WITH_LINK, PEOPLE_IN_COMPANY, PEOPLE_IN_ITEM } from './constants';\nimport { accessLevelPropType, allowedAccessLevelsPropType } from './propTypes';\nimport AccessLabel from './AccessLabel';\nimport RemoveLinkConfirmModal from './RemoveLinkConfirmModal';\n\nconst accessLevels = [PEOPLE_WITH_LINK, PEOPLE_IN_COMPANY, PEOPLE_IN_ITEM];\n\ntype Props = {\n    accessDropdownMenuProps?: Object,\n    accessLevel: accessLevelPropType,\n    accessMenuButtonProps?: Object,\n    allowedAccessLevels: allowedAccessLevelsPropType,\n    canRemoveLink?: boolean,\n    changeAccessLevel: Function,\n    enterpriseName?: string,\n    itemType: string,\n    removeLink: Function,\n    removeLinkButtonProps?: Object,\n    submitting?: boolean,\n};\n\ntype State = {\n    isConfirmModalOpen: boolean,\n};\n\nclass AccessMenu extends Component<Props, State> {\n    static defaultProps = {\n        accessDropdownMenuProps: {},\n        accessMenuButtonProps: {},\n        removeLinkButtonProps: {},\n    };\n\n    state = {\n        isConfirmModalOpen: false,\n    };\n\n    openConfirmModal = () => {\n        this.setState({ isConfirmModalOpen: true });\n    };\n\n    closeConfirmModal = () => {\n        this.setState({ isConfirmModalOpen: false });\n    };\n\n    renderMenu() {\n        const {\n            accessLevel,\n            allowedAccessLevels,\n            canRemoveLink,\n            changeAccessLevel,\n            enterpriseName,\n            itemType,\n            removeLinkButtonProps,\n        } = this.props;\n\n        return (\n            <Menu className=\"share-access-menu\">\n                <MenuSectionHeader>\n                    <FormattedMessage {...messages.accessTypeTitle} />\n                </MenuSectionHeader>\n                {accessLevels.map(level =>\n                    allowedAccessLevels[level] ? (\n                        <SelectMenuItem\n                            key={level}\n                            isSelected={level === accessLevel}\n                            onClick={() => changeAccessLevel(level)}\n                        >\n                            <AccessLabel accessLevel={level} enterpriseName={enterpriseName} itemType={itemType} />\n                        </SelectMenuItem>\n                    ) : null,\n                )}\n                {canRemoveLink && <MenuSeparator />}\n                {canRemoveLink && (\n                    <SelectMenuItem onClick={this.openConfirmModal} {...removeLinkButtonProps}>\n                        <FormattedMessage {...messages.removeLink} />\n                    </SelectMenuItem>\n                )}\n            </Menu>\n        );\n    }\n\n    render() {\n        const {\n            accessDropdownMenuProps,\n            accessLevel,\n            accessMenuButtonProps,\n            enterpriseName,\n            itemType,\n            removeLink,\n            submitting,\n        } = this.props;\n        const { isConfirmModalOpen } = this.state;\n\n        return (\n            <span>\n                <DropdownMenu {...accessDropdownMenuProps}>\n                    <PlainButton\n                        className={classNames('lnk', {\n                            'is-disabled bdl-is-disabled': submitting,\n                        })}\n                        disabled={submitting}\n                        {...accessMenuButtonProps}\n                    >\n                        <MenuToggle>\n                            <AccessLabel\n                                accessLevel={accessLevel}\n                                enterpriseName={enterpriseName}\n                                itemType={itemType}\n                            />\n                        </MenuToggle>\n                    </PlainButton>\n                    {this.renderMenu()}\n                </DropdownMenu>\n                <RemoveLinkConfirmModal\n                    isOpen={isConfirmModalOpen}\n                    onRequestClose={this.closeConfirmModal}\n                    removeLink={removeLink}\n                    submitting={submitting}\n                />\n            </span>\n        );\n    }\n}\n\nexport default AccessMenu;\n"],"mappings":"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","ignoreList":[]}