{"version":3,"file":"SharedLink.js","names":["React","FormattedMessage","injectIntl","TextInputWithCopyButton","Tooltip","PlainButton","convertToMs","IconExpirationInverted","IconSettingInverted","SharedLinkAccess","messages","accessLevelPropType","allowedAccessLevelsPropType","permissionLevelPropType","SharedLink","props","accessDropdownMenuProps","accessLevel","accessMenuButtonProps","allowedAccessLevels","canRemoveLink","changeAccessLevel","changePermissionLevel","copyButtonProps","enterpriseName","expiration","intl","isDownloadAllowed","isEditAllowed","isPreviewAllowed","itemType","onCopySuccess","onSettingsClick","permissionLevel","removeLink","removeLinkButtonProps","settingsButtonProps","sharedLink","submitting","createElement","className","position","text","_extends","sharedLinkExpirationTooltip","values","height","width","formatMessage","settingsButtonLabel","onClick","type","buttonProps","disabled","label","sharedLinkLabel","value","SharedLinkBase"],"sources":["../../../src/features/shared-link-modal/SharedLink.js"],"sourcesContent":["/* @flow */\nimport * as React from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport type { IntlShape } from 'react-intl';\n\nimport TextInputWithCopyButton from '../../components/text-input-with-copy-button';\nimport Tooltip from '../../components/tooltip';\nimport PlainButton from '../../components/plain-button';\nimport { convertToMs } from '../../utils/datetime';\nimport IconExpirationInverted from '../../icons/general/IconExpirationInverted';\nimport IconSettingInverted from '../../icons/general/IconSettingInverted';\n\nimport SharedLinkAccess from './SharedLinkAccess';\nimport messages from './messages';\nimport { accessLevelPropType, allowedAccessLevelsPropType, permissionLevelPropType } from './propTypes';\n\nimport './SharedLink.scss';\n\ntype Props = {\n    accessDropdownMenuProps?: Object,\n    accessLevel?: accessLevelPropType,\n    accessMenuButtonProps?: Object,\n    allowedAccessLevels?: allowedAccessLevelsPropType,\n    canRemoveLink?: boolean,\n    changeAccessLevel: Function,\n    changePermissionLevel?: Function,\n    copyButtonProps?: Object,\n    enterpriseName?: string,\n    expiration?: number,\n    intl: IntlShape,\n    isDownloadAllowed?: boolean,\n    isEditAllowed?: boolean,\n    isPreviewAllowed?: boolean,\n    itemType: string,\n    onCopySuccess?: Function,\n    onSettingsClick?: Function,\n    permissionLevel?: permissionLevelPropType,\n    removeLink: Function,\n    removeLinkButtonProps?: Object,\n    settingsButtonProps?: Object,\n    sharedLink: string,\n    submitting?: boolean,\n};\n\nconst SharedLink = (props: Props) => {\n    const {\n        accessDropdownMenuProps,\n        accessLevel,\n        accessMenuButtonProps,\n        allowedAccessLevels,\n        canRemoveLink,\n        changeAccessLevel,\n        changePermissionLevel,\n        copyButtonProps,\n        enterpriseName,\n        expiration,\n        intl,\n        isDownloadAllowed,\n        isEditAllowed,\n        isPreviewAllowed,\n        itemType,\n        onCopySuccess,\n        onSettingsClick,\n        permissionLevel,\n        removeLink,\n        removeLinkButtonProps,\n        settingsButtonProps = {},\n        sharedLink,\n        submitting,\n    } = props;\n\n    return (\n        <div className=\"shared-link\">\n            <div className=\"shared-link-icons\">\n                {expiration ? (\n                    <Tooltip\n                        position=\"middle-left\"\n                        text={\n                            <FormattedMessage\n                                {...messages.sharedLinkExpirationTooltip}\n                                values={{\n                                    expiration: convertToMs(expiration),\n                                }}\n                            />\n                        }\n                    >\n                        <span className=\"shared-link-expiration\">\n                            <IconExpirationInverted height={16} width={16} />\n                        </span>\n                    </Tooltip>\n                ) : null}\n                {onSettingsClick && (\n                    <PlainButton\n                        {...settingsButtonProps}\n                        aria-label={intl.formatMessage(messages.settingsButtonLabel)}\n                        className=\"shared-link-settings-btn\"\n                        onClick={onSettingsClick}\n                        type=\"button\"\n                    >\n                        <IconSettingInverted />\n                    </PlainButton>\n                )}\n            </div>\n            <TextInputWithCopyButton\n                buttonProps={copyButtonProps}\n                className=\"shared-link-container\"\n                disabled={submitting}\n                label={<FormattedMessage {...messages.sharedLinkLabel} />}\n                onCopySuccess={onCopySuccess}\n                type=\"url\"\n                value={sharedLink}\n            />\n            <SharedLinkAccess\n                accessDropdownMenuProps={accessDropdownMenuProps}\n                accessLevel={accessLevel}\n                accessMenuButtonProps={accessMenuButtonProps}\n                allowedAccessLevels={allowedAccessLevels}\n                canRemoveLink={canRemoveLink}\n                changeAccessLevel={changeAccessLevel}\n                changePermissionLevel={changePermissionLevel}\n                enterpriseName={enterpriseName}\n                isDownloadAllowed={isDownloadAllowed}\n                isEditAllowed={isEditAllowed}\n                isPreviewAllowed={isPreviewAllowed}\n                itemType={itemType}\n                permissionLevel={permissionLevel}\n                removeLink={removeLink}\n                removeLinkButtonProps={removeLinkButtonProps}\n                submitting={submitting}\n            />\n        </div>\n    );\n};\n\nexport { SharedLink as SharedLinkBase };\nexport default injectIntl(SharedLink);\n"],"mappings":"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","ignoreList":[]}