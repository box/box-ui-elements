{"version":3,"file":"PermissionMenu.js","names":["React","classNames","FormattedMessage","DropdownMenu","MenuToggle","PlainButton","Menu","SelectMenuItem","permissionLevelPropType","CAN_VIEW","CAN_EDIT","messages","permissionLevels","PermissionMenu","props","changePermissionLevel","permissionLevel","submitting","permissionLabels","createElement","canView","canEdit","className","disabled","map","level","key","isSelected","onClick","displayName"],"sources":["../../../src/features/shared-link-modal/PermissionMenu.js"],"sourcesContent":["/* @flow */\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { FormattedMessage } from 'react-intl';\n\nimport DropdownMenu, { MenuToggle } from '../../components/dropdown-menu';\nimport PlainButton from '../../components/plain-button';\nimport { Menu, SelectMenuItem } from '../../components/menu';\n\nimport { permissionLevelPropType } from './propTypes';\nimport { CAN_VIEW, CAN_EDIT } from './constants';\nimport messages from './messages';\n\nconst permissionLevels = [CAN_VIEW, CAN_EDIT];\n\ntype Props = {\n    changePermissionLevel?: Function,\n    permissionLevel?: permissionLevelPropType,\n    submitting?: boolean,\n};\n\nconst PermissionMenu = (props: Props) => {\n    const { changePermissionLevel, permissionLevel, submitting } = props;\n\n    if (!changePermissionLevel || !permissionLevel) {\n        return null;\n    }\n\n    const permissionLabels = {\n        [CAN_VIEW]: <FormattedMessage {...messages.canView} />,\n        [CAN_EDIT]: <FormattedMessage {...messages.canEdit} />,\n    };\n\n    return (\n        <DropdownMenu>\n            <PlainButton\n                className={classNames('lnk', {\n                    'is-disabled bdl-is-disabled': submitting,\n                })}\n                disabled={submitting}\n            >\n                <MenuToggle>{permissionLabels[permissionLevel]}</MenuToggle>\n            </PlainButton>\n            <Menu>\n                {permissionLevels.map(level => (\n                    <SelectMenuItem\n                        key={level}\n                        isSelected={level === permissionLevel}\n                        onClick={() => changePermissionLevel(level)}\n                    >\n                        {permissionLabels[level]}\n                    </SelectMenuItem>\n                ))}\n            </Menu>\n        </DropdownMenu>\n    );\n};\n\nPermissionMenu.displayName = 'PermissionMenu';\n\nexport default PermissionMenu;\n"],"mappings":"AACA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,UAAU,MAAM,YAAY;AACnC,SAASC,gBAAgB,QAAQ,YAAY;AAE7C,OAAOC,YAAY,IAAIC,UAAU,QAAQ,gCAAgC;AACzE,OAAOC,WAAW,MAAM,+BAA+B;AACvD,SAASC,IAAI,EAAEC,cAAc,QAAQ,uBAAuB;AAE5D,SAASC,uBAAuB,QAAQ,aAAa;AACrD,SAASC,QAAQ,EAAEC,QAAQ,QAAQ,aAAa;AAChD,OAAOC,QAAQ,MAAM,YAAY;AAEjC,MAAMC,gBAAgB,GAAG,CAACH,QAAQ,EAAEC,QAAQ,CAAC;AAQ7C,MAAMG,cAAc,GAAIC,KAAY,IAAK;EACrC,MAAM;IAAEC,qBAAqB;IAAEC,eAAe;IAAEC;EAAW,CAAC,GAAGH,KAAK;EAEpE,IAAI,CAACC,qBAAqB,IAAI,CAACC,eAAe,EAAE;IAC5C,OAAO,IAAI;EACf;EAEA,MAAME,gBAAgB,GAAG;IACrB,CAACT,QAAQ,gBAAGT,KAAA,CAAAmB,aAAA,CAACjB,gBAAgB,EAAKS,QAAQ,CAACS,OAAU,CAAC;IACtD,CAACV,QAAQ,gBAAGV,KAAA,CAAAmB,aAAA,CAACjB,gBAAgB,EAAKS,QAAQ,CAACU,OAAU;EACzD,CAAC;EAED,oBACIrB,KAAA,CAAAmB,aAAA,CAAChB,YAAY,qBACTH,KAAA,CAAAmB,aAAA,CAACd,WAAW;IACRiB,SAAS,EAAErB,UAAU,CAAC,KAAK,EAAE;MACzB,6BAA6B,EAAEgB;IACnC,CAAC,CAAE;IACHM,QAAQ,EAAEN;EAAW,gBAErBjB,KAAA,CAAAmB,aAAA,CAACf,UAAU,QAAEc,gBAAgB,CAACF,eAAe,CAAc,CAClD,CAAC,eACdhB,KAAA,CAAAmB,aAAA,CAACb,IAAI,QACAM,gBAAgB,CAACY,GAAG,CAACC,KAAK,iBACvBzB,KAAA,CAAAmB,aAAA,CAACZ,cAAc;IACXmB,GAAG,EAAED,KAAM;IACXE,UAAU,EAAEF,KAAK,KAAKT,eAAgB;IACtCY,OAAO,EAAEA,CAAA,KAAMb,qBAAqB,CAACU,KAAK;EAAE,GAE3CP,gBAAgB,CAACO,KAAK,CACX,CACnB,CACC,CACI,CAAC;AAEvB,CAAC;AAEDZ,cAAc,CAACgB,WAAW,GAAG,gBAAgB;AAE7C,eAAehB,cAAc","ignoreList":[]}