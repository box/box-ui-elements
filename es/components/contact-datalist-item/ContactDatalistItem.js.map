{"version":3,"file":"ContactDatalistItem.js","names":["React","Avatar","DatalistItem","ContactDatalistItem","PureComponent","constructor","props","_defineProperty","avatarUrl","isMounted","setState","state","undefined","getAvatarUrl","getContactAvatarUrl","id","type","Promise","resolve","then","getAvatarUrlHandler","catch","componentDidMount","componentWillUnmount","render","_this$props","isExternal","name","showAvatar","subtitle","rest","_objectWithoutProperties","_excluded","createElement","_extends","className","shouldShowExternal"],"sources":["../../../src/components/contact-datalist-item/ContactDatalistItem.tsx"],"sourcesContent":["import * as React from 'react';\nimport Avatar from '../avatar';\nimport DatalistItem from '../datalist-item';\n\nimport { ContactType } from '../../features/unified-share-modal/types';\nimport { SuggestedPillType } from '../pill-selector-dropdown/types';\n\nimport './ContactDatalistItem.scss';\n\nexport interface ContactDatalistItemProps {\n    getContactAvatarUrl?: (contact: ContactType) => string | Promise<string | null | undefined>;\n    getPillImageUrl?: (data: SuggestedPillType) => string | Promise<string>;\n    id?: string;\n    isExternal?: boolean;\n    name: string | null | undefined;\n    showAvatar?: boolean;\n    subtitle?: React.ReactNode;\n    type?: string | null | undefined;\n}\n\ninterface ContactDatalistItemState {\n    avatarUrl: string | null | undefined;\n}\n\nclass ContactDatalistItem extends React.PureComponent<ContactDatalistItemProps, ContactDatalistItemState> {\n    constructor(props: ContactDatalistItemProps) {\n        super(props);\n        this.state = { avatarUrl: undefined };\n    }\n\n    isMounted = false;\n\n    /**\n     * Success handler for getting avatar url\n     *\n     * @param {string} [avatarUrl] the user avatar url\n     */\n    getAvatarUrlHandler = (avatarUrl: string | null | undefined) => {\n        if (this.isMounted) {\n            this.setState({\n                avatarUrl,\n            });\n        }\n    };\n\n    /**\n     * Gets the avatar URL for the user from the getContactAvatarUrl prop\n     *\n     * @return {void}\n     */\n    getAvatarUrl() {\n        const { getContactAvatarUrl, id, type } = this.props;\n        Promise.resolve(\n            getContactAvatarUrl && id\n                ? getContactAvatarUrl({\n                      id,\n                      type,\n                  })\n                : undefined,\n        )\n            .then(this.getAvatarUrlHandler)\n            .catch(() => {\n                // noop\n            });\n    }\n\n    componentDidMount() {\n        this.isMounted = true;\n        this.getAvatarUrl();\n    }\n\n    componentWillUnmount() {\n        this.isMounted = false;\n    }\n\n    render() {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { getContactAvatarUrl, id, isExternal, name, showAvatar, subtitle, ...rest } = this.props;\n        const { avatarUrl } = this.state;\n        return (\n            <DatalistItem className=\"contact-data-list-item\" {...rest}>\n                {showAvatar && (\n                    <Avatar\n                        className=\"contact-avatar\"\n                        id={id}\n                        name={name}\n                        isExternal={isExternal}\n                        shouldShowExternal\n                        avatarUrl={avatarUrl}\n                    />\n                )}\n                <div className=\"contact-name-container\">\n                    <div className=\"contact-text contact-name\">{name}</div>\n                    {subtitle && <div className=\"contact-text contact-sub-name\">{subtitle}</div>}\n                </div>\n            </DatalistItem>\n        );\n    }\n}\n\nexport default ContactDatalistItem;\n"],"mappings":";;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,MAAM,MAAM,WAAW;AAC9B,OAAOC,YAAY,MAAM,kBAAkB;AAK3C,OAAO,4BAA4B;AAiBnC,MAAMC,mBAAmB,SAASH,KAAK,CAACI,aAAa,CAAqD;EACtGC,WAAWA,CAACC,KAA+B,EAAE;IACzC,KAAK,CAACA,KAAK,CAAC;IAACC,eAAA,oBAIL,KAAK;IAEjB;AACJ;AACA;AACA;AACA;IAJIA,eAAA,8BAKuBC,SAAoC,IAAK;MAC5D,IAAI,IAAI,CAACC,SAAS,EAAE;QAChB,IAAI,CAACC,QAAQ,CAAC;UACVF;QACJ,CAAC,CAAC;MACN;IACJ,CAAC;IAhBG,IAAI,CAACG,KAAK,GAAG;MAAEH,SAAS,EAAEI;IAAU,CAAC;EACzC;EAiBA;AACJ;AACA;AACA;AACA;EACIC,YAAYA,CAAA,EAAG;IACX,MAAM;MAAEC,mBAAmB;MAAEC,EAAE;MAAEC;IAAK,CAAC,GAAG,IAAI,CAACV,KAAK;IACpDW,OAAO,CAACC,OAAO,CACXJ,mBAAmB,IAAIC,EAAE,GACnBD,mBAAmB,CAAC;MAChBC,EAAE;MACFC;IACJ,CAAC,CAAC,GACFJ,SACV,CAAC,CACIO,IAAI,CAAC,IAAI,CAACC,mBAAmB,CAAC,CAC9BC,KAAK,CAAC,MAAM;MACT;IAAA,CACH,CAAC;EACV;EAEAC,iBAAiBA,CAAA,EAAG;IAChB,IAAI,CAACb,SAAS,GAAG,IAAI;IACrB,IAAI,CAACI,YAAY,CAAC,CAAC;EACvB;EAEAU,oBAAoBA,CAAA,EAAG;IACnB,IAAI,CAACd,SAAS,GAAG,KAAK;EAC1B;EAEAe,MAAMA,CAAA,EAAG;IACL;IACA,MAAAC,WAAA,GAAqF,IAAI,CAACnB,KAAK;MAAzF;QAAEQ,mBAAmB;QAAEC,EAAE;QAAEW,UAAU;QAAEC,IAAI;QAAEC,UAAU;QAAEC;MAAkB,CAAC,GAAAJ,WAAA;MAANK,IAAI,GAAAC,wBAAA,CAAAN,WAAA,EAAAO,SAAA;IAChF,MAAM;MAAExB;IAAU,CAAC,GAAG,IAAI,CAACG,KAAK;IAChC,oBACIX,KAAA,CAAAiC,aAAA,CAAC/B,YAAY,EAAAgC,QAAA;MAACC,SAAS,EAAC;IAAwB,GAAKL,IAAI,GACpDF,UAAU,iBACP5B,KAAA,CAAAiC,aAAA,CAAChC,MAAM;MACHkC,SAAS,EAAC,gBAAgB;MAC1BpB,EAAE,EAAEA,EAAG;MACPY,IAAI,EAAEA,IAAK;MACXD,UAAU,EAAEA,UAAW;MACvBU,kBAAkB;MAClB5B,SAAS,EAAEA;IAAU,CACxB,CACJ,eACDR,KAAA,CAAAiC,aAAA;MAAKE,SAAS,EAAC;IAAwB,gBACnCnC,KAAA,CAAAiC,aAAA;MAAKE,SAAS,EAAC;IAA2B,GAAER,IAAU,CAAC,EACtDE,QAAQ,iBAAI7B,KAAA,CAAAiC,aAAA;MAAKE,SAAS,EAAC;IAA+B,GAAEN,QAAc,CAC1E,CACK,CAAC;EAEvB;AACJ;AAEA,eAAe1B,mBAAmB","ignoreList":[]}