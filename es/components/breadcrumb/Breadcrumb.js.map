{"version":3,"file":"Breadcrumb.js","names":["React","injectIntl","classNames","MenuLinkItem","EllipsisCrumb","Crumb","messages","Breadcrumb","children","className","hasReverseOverflowOrder","intl","numItemsBeforeOverflow","overflowMenuButton","threshold","breadcrumbs","Children","toArray","constructChildren","overflowItems","slice","length","dotDotDotItems","reverse","menuCrumbsItems","createElement","menuButton","map","crumb","index","key","renderBreadcrumbs","newChildren","hasEllipsis","item","i","isLastCrumb","formatMessage","breadcrumbLabel","BreadcrumbBase"],"sources":["../../../src/components/breadcrumb/Breadcrumb.js"],"sourcesContent":["// @flow\nimport * as React from 'react';\nimport { injectIntl } from 'react-intl';\nimport type { IntlShape } from 'react-intl';\nimport classNames from 'classnames';\n\nimport { MenuLinkItem } from '../menu';\nimport EllipsisCrumb from './EllipsisCrumb';\nimport Crumb from './Crumb';\nimport messages from './messages';\n\nimport './Breadcrumb.scss';\n\nexport type BreadcrumbProps = {\n    /** Breadcrumb contents */\n    children: React.Node,\n    /** Class name for Breadcrumb */\n    className?: string,\n    /** Reverse default overflow breadcrumb ordering to highest to lowest depth */\n    hasReverseOverflowOrder?: boolean,\n    intl: IntlShape,\n    /** Show number of breadcrumb items before overflow. Default is 1 */\n    numItemsBeforeOverflow?: number,\n    /** Element to override default overflow menu button */\n    overflowMenuButton?: React.Node,\n    /** Number of crumbs to show before they collapse into an ellipsis */\n    threshold?: number,\n};\n\ntype Props = BreadcrumbProps;\n\nconst Breadcrumb = ({\n    children,\n    className = '',\n    hasReverseOverflowOrder = false,\n    intl,\n    numItemsBeforeOverflow = 1,\n    overflowMenuButton,\n    threshold = 4,\n}: Props) => {\n    const breadcrumbs = React.Children.toArray(children);\n\n    const constructChildren = () => {\n        const overflowItems = breadcrumbs.slice(numItemsBeforeOverflow, breadcrumbs.length + 1 - threshold);\n        const dotDotDotItems = hasReverseOverflowOrder ? overflowItems : overflowItems.reverse();\n\n        const menuCrumbsItems = (\n            <EllipsisCrumb menuButton={overflowMenuButton}>\n                {dotDotDotItems.map((crumb, index) => (\n                    <MenuLinkItem key={index}>{crumb}</MenuLinkItem>\n                ))}\n            </EllipsisCrumb>\n        );\n        return [...breadcrumbs.slice(0, numItemsBeforeOverflow), menuCrumbsItems, ...breadcrumbs.slice(1 - threshold)];\n    };\n\n    const renderBreadcrumbs = () => {\n        let newChildren = breadcrumbs;\n        let { length } = breadcrumbs;\n        let hasEllipsis = false;\n\n        if (length > threshold) {\n            newChildren = constructChildren();\n            length = newChildren.length;\n            hasEllipsis = true;\n        }\n\n        return React.Children.map(newChildren, (item, i) => {\n            const isLastCrumb = length === 0 || i === length - 1;\n            return (\n                <Crumb\n                    className={classNames({ 'no-shrink': hasEllipsis && i === numItemsBeforeOverflow })}\n                    isLastCrumb={isLastCrumb}\n                    key={`breadcrumb-${i}`}\n                >\n                    {item}\n                </Crumb>\n            );\n        });\n    };\n\n    return (\n        <nav aria-label={intl.formatMessage(messages.breadcrumbLabel)} className={classNames('breadcrumbs', className)}>\n            <ol>{renderBreadcrumbs()}</ol>\n        </nav>\n    );\n};\n\nexport { Breadcrumb as BreadcrumbBase };\nexport default injectIntl(Breadcrumb);\n"],"mappings":"AACA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,UAAU,QAAQ,YAAY;AAEvC,OAAOC,UAAU,MAAM,YAAY;AAEnC,SAASC,YAAY,QAAQ,SAAS;AACtC,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,QAAQ,MAAM,YAAY;AAEjC,OAAO,mBAAmB;AAoB1B,MAAMC,UAAU,GAAGA,CAAC;EAChBC,QAAQ;EACRC,SAAS,GAAG,EAAE;EACdC,uBAAuB,GAAG,KAAK;EAC/BC,IAAI;EACJC,sBAAsB,GAAG,CAAC;EAC1BC,kBAAkB;EAClBC,SAAS,GAAG;AACT,CAAC,KAAK;EACT,MAAMC,WAAW,GAAGf,KAAK,CAACgB,QAAQ,CAACC,OAAO,CAACT,QAAQ,CAAC;EAEpD,MAAMU,iBAAiB,GAAGA,CAAA,KAAM;IAC5B,MAAMC,aAAa,GAAGJ,WAAW,CAACK,KAAK,CAACR,sBAAsB,EAAEG,WAAW,CAACM,MAAM,GAAG,CAAC,GAAGP,SAAS,CAAC;IACnG,MAAMQ,cAAc,GAAGZ,uBAAuB,GAAGS,aAAa,GAAGA,aAAa,CAACI,OAAO,CAAC,CAAC;IAExF,MAAMC,eAAe,gBACjBxB,KAAA,CAAAyB,aAAA,CAACrB,aAAa;MAACsB,UAAU,EAAEb;IAAmB,GACzCS,cAAc,CAACK,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBAC7B7B,KAAA,CAAAyB,aAAA,CAACtB,YAAY;MAAC2B,GAAG,EAAED;IAAM,GAAED,KAAoB,CAClD,CACU,CAClB;IACD,OAAO,CAAC,GAAGb,WAAW,CAACK,KAAK,CAAC,CAAC,EAAER,sBAAsB,CAAC,EAAEY,eAAe,EAAE,GAAGT,WAAW,CAACK,KAAK,CAAC,CAAC,GAAGN,SAAS,CAAC,CAAC;EAClH,CAAC;EAED,MAAMiB,iBAAiB,GAAGA,CAAA,KAAM;IAC5B,IAAIC,WAAW,GAAGjB,WAAW;IAC7B,IAAI;MAAEM;IAAO,CAAC,GAAGN,WAAW;IAC5B,IAAIkB,WAAW,GAAG,KAAK;IAEvB,IAAIZ,MAAM,GAAGP,SAAS,EAAE;MACpBkB,WAAW,GAAGd,iBAAiB,CAAC,CAAC;MACjCG,MAAM,GAAGW,WAAW,CAACX,MAAM;MAC3BY,WAAW,GAAG,IAAI;IACtB;IAEA,OAAOjC,KAAK,CAACgB,QAAQ,CAACW,GAAG,CAACK,WAAW,EAAE,CAACE,IAAI,EAAEC,CAAC,KAAK;MAChD,MAAMC,WAAW,GAAGf,MAAM,KAAK,CAAC,IAAIc,CAAC,KAAKd,MAAM,GAAG,CAAC;MACpD,oBACIrB,KAAA,CAAAyB,aAAA,CAACpB,KAAK;QACFI,SAAS,EAAEP,UAAU,CAAC;UAAE,WAAW,EAAE+B,WAAW,IAAIE,CAAC,KAAKvB;QAAuB,CAAC,CAAE;QACpFwB,WAAW,EAAEA,WAAY;QACzBN,GAAG,EAAE,cAAcK,CAAC;MAAG,GAEtBD,IACE,CAAC;IAEhB,CAAC,CAAC;EACN,CAAC;EAED,oBACIlC,KAAA,CAAAyB,aAAA;IAAK,cAAYd,IAAI,CAAC0B,aAAa,CAAC/B,QAAQ,CAACgC,eAAe,CAAE;IAAC7B,SAAS,EAAEP,UAAU,CAAC,aAAa,EAAEO,SAAS;EAAE,gBAC3GT,KAAA,CAAAyB,aAAA,aAAKM,iBAAiB,CAAC,CAAM,CAC5B,CAAC;AAEd,CAAC;AAED,SAASxB,UAAU,IAAIgC,cAAc;AACrC,eAAetC,UAAU,CAACM,UAAU,CAAC","ignoreList":[]}