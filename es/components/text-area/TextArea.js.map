{"version":3,"file":"TextArea.js","names":["React","classNames","uniqueId","Label","Tooltip","TextArea","_ref","className","description","error","errorTooltipPosition","hideLabel","hideOptionalLabel","isRequired","isResizable","label","textareaRef","tooltipTetherClassName","rest","_objectWithoutProperties","_excluded","hasError","classes","errorMessageID","useRef","current","descriptionID","ariaAttrs","undefined","createElement","showOptionalText","text","id","isShown","position","tetherElementClassName","theme","_extends","ref","required","style","resize","role","displayName"],"sources":["../../../src/components/text-area/TextArea.js"],"sourcesContent":["// @flow\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport uniqueId from 'lodash/uniqueId';\n\nimport Label from '../label';\nimport Tooltip from '../tooltip';\nimport type { Position } from '../tooltip';\n\nimport './TextArea.scss';\n\ntype Props = {\n    className?: string,\n    description?: React.Node,\n    error?: React.Node,\n    /** Renders error tooltip at the specified position (positions are those from Tooltip) */\n    errorTooltipPosition?: Position,\n    /** Hides the label */\n    hideLabel?: boolean,\n    /** Hides (optional) text from the label */\n    hideOptionalLabel?: boolean,\n    /** Makes the text area value required */\n    isRequired?: boolean,\n    /** Is text area resizable */\n    isResizable?: boolean,\n    /** Label displayed for the text area */\n    label: React.Node,\n    textareaRef?: Function, // @TODO: eventually rename to innerRef for consistancy across all form elements\n    /** A CSS class for the tooltip's tether element component */\n    tooltipTetherClassName?: string,\n};\n\nconst TextArea = ({\n    className = '',\n    description,\n    error,\n    errorTooltipPosition,\n    hideLabel,\n    hideOptionalLabel,\n    isRequired,\n    isResizable,\n    label,\n    textareaRef,\n    tooltipTetherClassName,\n    ...rest\n}: Props) => {\n    const hasError = !!error;\n    const classes = classNames(className, 'text-area-container', {\n        'show-error': hasError,\n    });\n\n    const errorMessageID = React.useRef(uniqueId('errorMessage')).current;\n    const descriptionID = React.useRef(uniqueId('description')).current;\n\n    const ariaAttrs = {\n        'aria-invalid': hasError,\n        'aria-required': isRequired,\n        'aria-errormessage': errorMessageID,\n        'aria-describedby': description ? descriptionID : undefined,\n    };\n\n    return (\n        <div className={classes}>\n            <Label hideLabel={hideLabel} showOptionalText={!hideOptionalLabel && !isRequired} text={label}>\n                {!!description && (\n                    <div id={descriptionID} className=\"text-area-description\">\n                        {description}\n                    </div>\n                )}\n                <Tooltip\n                    isShown={hasError}\n                    position={errorTooltipPosition || 'bottom-left'}\n                    tetherElementClassName={tooltipTetherClassName}\n                    text={error || ''}\n                    theme=\"error\"\n                >\n                    <textarea\n                        ref={textareaRef}\n                        required={isRequired}\n                        style={{ resize: isResizable ? '' : 'none' }}\n                        {...ariaAttrs}\n                        {...rest}\n                    />\n                </Tooltip>\n                <span id={errorMessageID} className=\"accessibility-hidden\" role=\"alert\">\n                    {error}\n                </span>\n            </Label>\n        </div>\n    );\n};\n\nTextArea.displayName = 'TextArea';\n\nexport type TextAreaProps = Props;\nexport default TextArea;\n"],"mappings":";;;;AACA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,UAAU,MAAM,YAAY;AACnC,OAAOC,QAAQ,MAAM,iBAAiB;AAEtC,OAAOC,KAAK,MAAM,UAAU;AAC5B,OAAOC,OAAO,MAAM,YAAY;AAGhC,OAAO,iBAAiB;AAuBxB,MAAMC,QAAQ,GAAGC,IAAA,IAaJ;EAAA,IAbK;MACdC,SAAS,GAAG,EAAE;MACdC,WAAW;MACXC,KAAK;MACLC,oBAAoB;MACpBC,SAAS;MACTC,iBAAiB;MACjBC,UAAU;MACVC,WAAW;MACXC,KAAK;MACLC,WAAW;MACXC;IAEG,CAAC,GAAAX,IAAA;IADDY,IAAI,GAAAC,wBAAA,CAAAb,IAAA,EAAAc,SAAA;EAEP,MAAMC,QAAQ,GAAG,CAAC,CAACZ,KAAK;EACxB,MAAMa,OAAO,GAAGrB,UAAU,CAACM,SAAS,EAAE,qBAAqB,EAAE;IACzD,YAAY,EAAEc;EAClB,CAAC,CAAC;EAEF,MAAME,cAAc,GAAGvB,KAAK,CAACwB,MAAM,CAACtB,QAAQ,CAAC,cAAc,CAAC,CAAC,CAACuB,OAAO;EACrE,MAAMC,aAAa,GAAG1B,KAAK,CAACwB,MAAM,CAACtB,QAAQ,CAAC,aAAa,CAAC,CAAC,CAACuB,OAAO;EAEnE,MAAME,SAAS,GAAG;IACd,cAAc,EAAEN,QAAQ;IACxB,eAAe,EAAER,UAAU;IAC3B,mBAAmB,EAAEU,cAAc;IACnC,kBAAkB,EAAEf,WAAW,GAAGkB,aAAa,GAAGE;EACtD,CAAC;EAED,oBACI5B,KAAA,CAAA6B,aAAA;IAAKtB,SAAS,EAAEe;EAAQ,gBACpBtB,KAAA,CAAA6B,aAAA,CAAC1B,KAAK;IAACQ,SAAS,EAAEA,SAAU;IAACmB,gBAAgB,EAAE,CAAClB,iBAAiB,IAAI,CAACC,UAAW;IAACkB,IAAI,EAAEhB;EAAM,GACzF,CAAC,CAACP,WAAW,iBACVR,KAAA,CAAA6B,aAAA;IAAKG,EAAE,EAAEN,aAAc;IAACnB,SAAS,EAAC;EAAuB,GACpDC,WACA,CACR,eACDR,KAAA,CAAA6B,aAAA,CAACzB,OAAO;IACJ6B,OAAO,EAAEZ,QAAS;IAClBa,QAAQ,EAAExB,oBAAoB,IAAI,aAAc;IAChDyB,sBAAsB,EAAElB,sBAAuB;IAC/Cc,IAAI,EAAEtB,KAAK,IAAI,EAAG;IAClB2B,KAAK,EAAC;EAAO,gBAEbpC,KAAA,CAAA6B,aAAA,aAAAQ,QAAA;IACIC,GAAG,EAAEtB,WAAY;IACjBuB,QAAQ,EAAE1B,UAAW;IACrB2B,KAAK,EAAE;MAAEC,MAAM,EAAE3B,WAAW,GAAG,EAAE,GAAG;IAAO;EAAE,GACzCa,SAAS,EACTT,IAAI,CACX,CACI,CAAC,eACVlB,KAAA,CAAA6B,aAAA;IAAMG,EAAE,EAAET,cAAe;IAAChB,SAAS,EAAC,sBAAsB;IAACmC,IAAI,EAAC;EAAO,GAClEjC,KACC,CACH,CACN,CAAC;AAEd,CAAC;AAEDJ,QAAQ,CAACsC,WAAW,GAAG,UAAU;AAGjC,eAAetC,QAAQ","ignoreList":[]}