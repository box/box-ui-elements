{"version":3,"file":"HotkeyService.js","names":["OrderedMap","OrderedSet","Mousetrap","uniqueId","HotkeyManager","HotkeyService","constructor","mousetrap","addEventListener","type","callback","mousetrapEventHandler","event","getActiveLayerID","layerID","stopPropagation","reset","setActiveLayer","window","destroyLayer","removeLayer","removeEventListener","hotkeys","getActiveHotkeys","toOrderedSet","reduce","hotkey","push","getActiveTypes","types","add","toJS","registerHotkey","hotkeyConfig","key","handler","keys","Array","isArray","badKeys","filter","candidate","has","existingConfig","get","length","Error","bind","forEach","keyBinding","set","deregisterHotkey","delete","unbind"],"sources":["../../../src/components/hotkeys/HotkeyService.js"],"sourcesContent":["import { OrderedMap, OrderedSet } from 'immutable';\nimport Mousetrap from 'mousetrap';\nimport uniqueId from 'lodash/uniqueId';\n\nimport HotkeyManager from './HotkeyManager';\n\n// An instance of this class represents one hotkey \"layer\"\nclass HotkeyService {\n    constructor() {\n        // create a fake HTML element to grab the event listener from mousetrap.\n        // hacky, but mousetrap unfortunately doesn't expose this handler :(\n        this.mousetrap = new Mousetrap({\n            addEventListener: (type, callback) => {\n                this.mousetrapEventHandler = event => {\n                    if (HotkeyManager.getActiveLayerID() !== this.layerID) {\n                        return;\n                    }\n                    // event should not propagate past this layer, no matter what\n                    event.stopPropagation();\n                    callback(event);\n                };\n            },\n        });\n        this.reset();\n\n        this.layerID = uniqueId('hotkey-layer');\n        HotkeyManager.setActiveLayer(this.layerID);\n\n        window.addEventListener('keypress', this.mousetrapEventHandler);\n        window.addEventListener('keydown', this.mousetrapEventHandler);\n        window.addEventListener('keyup', this.mousetrapEventHandler);\n    }\n\n    destroyLayer() {\n        HotkeyManager.removeLayer(this.layerID);\n        window.removeEventListener('keypress', this.mousetrapEventHandler);\n        window.removeEventListener('keydown', this.mousetrapEventHandler);\n        window.removeEventListener('keyup', this.mousetrapEventHandler);\n    }\n\n    reset() {\n        // Use an ordered collection since we ultimately display keys in the order they were added\n        this.hotkeys = new OrderedMap();\n        this.mousetrap.reset();\n    }\n\n    getActiveHotkeys() {\n        // Sort hotkeys into buckets by \"type\"\n        return this.hotkeys.toOrderedSet().reduce((hotkeys, hotkey) => {\n            const { type } = hotkey;\n            if (!type) {\n                return hotkeys;\n            }\n            if (!(type in hotkeys)) {\n                hotkeys[type] = [];\n            }\n            hotkeys[type].push(hotkey);\n            return hotkeys;\n        }, {});\n    }\n\n    getActiveTypes() {\n        // Get \"types\" of hotkeys in sorted order, by first hotkey\n        // e.g. if the current layer has:\n        // [\n        //     { key: 'shift+a', type: 'File Selection' },\n        //     { key: 'shift+g+a', type: 'Navigation' },\n        //     { key: 'shift+x', type: 'File Selection' },\n        // ]\n        // then this function would output [ 'File Selection', 'Navigation' ].\n        // Used to help generate the hotkey help modal menu options.\n        return this.hotkeys.reduce((types, { type }) => (type ? types.add(type) : types), new OrderedSet()).toJS();\n    }\n\n    registerHotkey(hotkeyConfig) {\n        const { key, handler } = hotkeyConfig;\n        const keys = Array.isArray(key) ? key : [key];\n        const badKeys = keys.filter(candidate => this.hotkeys.has(candidate));\n        const existingConfig = this.hotkeys.get(keys[0]);\n\n        // Ignore the whole config if it has already been registered\n        if (existingConfig === hotkeyConfig) {\n            return;\n        }\n\n        // If any of the keys are being used by another config, abort rudely.\n        if (badKeys.length !== 0) {\n            throw new Error(`This app is trying to bind multiple actions to the hot keys: ${badKeys}.`);\n        }\n\n        this.mousetrap.bind(keys, handler);\n        keys.forEach(keyBinding => {\n            this.hotkeys = this.hotkeys.set(keyBinding, hotkeyConfig);\n        });\n    }\n\n    deregisterHotkey(hotkeyConfig) {\n        const { key } = hotkeyConfig;\n        const keys = Array.isArray(key) ? key : [key];\n\n        keys.forEach(keyBinding => {\n            this.hotkeys = this.hotkeys.delete(keyBinding);\n        });\n        this.mousetrap.unbind(keys);\n    }\n}\n\nexport default HotkeyService;\n"],"mappings":"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","ignoreList":[]}