{"version":3,"file":"RadioGroup.js","names":["React","RadioGroup","Component","constructor","props","_defineProperty","event","target","onChange","HTMLInputElement","setState","value","state","render","children","className","name","stateValue","createElement","onChangeHandler","Children","map","radio","cloneElement","isSelected"],"sources":["../../../src/components/radio/RadioGroup.tsx"],"sourcesContent":["import * as React from 'react';\n\nexport interface RadioGroupProps {\n    children: Array<React.ReactElement> | React.ReactElement;\n    className: string;\n    name?: string;\n    onChange?: Function;\n    value?: string;\n}\n\nexport interface RadioGroupState {\n    value?: string;\n}\n\nclass RadioGroup extends React.Component<RadioGroupProps, RadioGroupState> {\n    static defaultProps = {\n        className: '',\n    };\n\n    constructor(props: RadioGroupProps) {\n        super(props);\n        this.state = {\n            value: props.value,\n        };\n    }\n\n    // @TODO: think about adding componentDidUpdate or gDSFP\n    // to update the internal state value based on new props value\n    onChangeHandler = (event: React.SyntheticEvent<HTMLElement>) => {\n        const { target } = event;\n        const { onChange } = this.props;\n\n        if (target instanceof HTMLInputElement) {\n            this.setState({\n                value: target.value,\n            });\n        }\n\n        if (onChange) {\n            onChange(event);\n        }\n    };\n\n    render() {\n        const { children, className, name } = this.props;\n        const { value: stateValue } = this.state;\n\n        return (\n            <div className={`radio-group ${className}`} onChange={this.onChangeHandler}>\n                {React.Children.map(children, (radio: React.ReactElement) => {\n                    const { value } = radio.props;\n\n                    return React.cloneElement(radio, {\n                        name,\n                        isSelected: value === stateValue,\n                    });\n                })}\n            </div>\n        );\n    }\n}\n\nexport default RadioGroup;\n"],"mappings":";;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAc9B,MAAMC,UAAU,SAASD,KAAK,CAACE,SAAS,CAAmC;EAKvEC,WAAWA,CAACC,KAAsB,EAAE;IAChC,KAAK,CAACA,KAAK,CAAC;IAMhB;IACA;IAAAC,eAAA,0BACmBC,KAAwC,IAAK;MAC5D,MAAM;QAAEC;MAAO,CAAC,GAAGD,KAAK;MACxB,MAAM;QAAEE;MAAS,CAAC,GAAG,IAAI,CAACJ,KAAK;MAE/B,IAAIG,MAAM,YAAYE,gBAAgB,EAAE;QACpC,IAAI,CAACC,QAAQ,CAAC;UACVC,KAAK,EAAEJ,MAAM,CAACI;QAClB,CAAC,CAAC;MACN;MAEA,IAAIH,QAAQ,EAAE;QACVA,QAAQ,CAACF,KAAK,CAAC;MACnB;IACJ,CAAC;IApBG,IAAI,CAACM,KAAK,GAAG;MACTD,KAAK,EAAEP,KAAK,CAACO;IACjB,CAAC;EACL;EAmBAE,MAAMA,CAAA,EAAG;IACL,MAAM;MAAEC,QAAQ;MAAEC,SAAS;MAAEC;IAAK,CAAC,GAAG,IAAI,CAACZ,KAAK;IAChD,MAAM;MAAEO,KAAK,EAAEM;IAAW,CAAC,GAAG,IAAI,CAACL,KAAK;IAExC,oBACIZ,KAAA,CAAAkB,aAAA;MAAKH,SAAS,EAAE,eAAeA,SAAS,EAAG;MAACP,QAAQ,EAAE,IAAI,CAACW;IAAgB,GACtEnB,KAAK,CAACoB,QAAQ,CAACC,GAAG,CAACP,QAAQ,EAAGQ,KAAyB,IAAK;MACzD,MAAM;QAAEX;MAAM,CAAC,GAAGW,KAAK,CAAClB,KAAK;MAE7B,oBAAOJ,KAAK,CAACuB,YAAY,CAACD,KAAK,EAAE;QAC7BN,IAAI;QACJQ,UAAU,EAAEb,KAAK,KAAKM;MAC1B,CAAC,CAAC;IACN,CAAC,CACA,CAAC;EAEd;AACJ;AAACZ,eAAA,CA9CKJ,UAAU,kBACU;EAClBc,SAAS,EAAE;AACf,CAAC;AA6CL,eAAed,UAAU","ignoreList":[]}