{"version":3,"file":"SlideCarousel.js","names":["React","uniqueId","SlideCarouselPrimitive","SlideCarousel","Component","constructor","props","_defineProperty","index","setState","selectedIndex","id","state","initialIndex","getBoundedSelectedIndex","children","lastChildIndex","Math","max","Children","count","boundedSelectedIndex","floor","render","className","contentHeight","title","createElement","idPrefix","onSelection","setSelectedIndex"],"sources":["../../../src/components/slide-carousel/SlideCarousel.js"],"sourcesContent":["// @flow\nimport * as React from 'react';\nimport uniqueId from 'lodash/uniqueId';\n\nimport SlideCarouselPrimitive from './SlideCarouselPrimitive';\n\nimport './SlideCarousel.scss';\n\ntype Props = {\n    children?: React.Node,\n    className?: string,\n    /** Used as the value for the content area's style height property */\n    contentHeight?: string,\n    initialIndex: number,\n    title?: string,\n};\n\ntype State = {\n    selectedIndex: number,\n};\n\nclass SlideCarousel extends React.Component<Props, State> {\n    static defaultProps = {\n        className: '',\n        initialIndex: 0,\n    };\n\n    constructor(props: Props) {\n        super(props);\n\n        this.id = uniqueId('slidecarousel');\n\n        this.state = {\n            selectedIndex: props.initialIndex || 0,\n        };\n    }\n\n    /*\n     * If the selected index in the state has somehow gotten set to an\n     * out of bounds value (either because we were passed a bad value,\n     * or the number of children has reduced), compute a new selected\n     * index which is a floored value between 0 <= index < num children\n     */\n    getBoundedSelectedIndex() {\n        const { children } = this.props;\n        const { selectedIndex } = this.state;\n\n        const lastChildIndex = Math.max(React.Children.count(children) - 1, 0);\n        const boundedSelectedIndex = Math.max(selectedIndex || 0, 0);\n\n        return boundedSelectedIndex > lastChildIndex ? lastChildIndex : Math.floor(boundedSelectedIndex);\n    }\n\n    setSelectedIndex = (index: number) => {\n        this.setState({ selectedIndex: index });\n    };\n\n    id: string;\n\n    render() {\n        const { children, className, contentHeight, title } = this.props;\n        const selectedIndex = this.getBoundedSelectedIndex();\n\n        return (\n            <SlideCarouselPrimitive\n                className={className}\n                contentHeight={contentHeight}\n                idPrefix={this.id}\n                onSelection={this.setSelectedIndex}\n                selectedIndex={selectedIndex}\n                title={title}\n            >\n                {children}\n            </SlideCarouselPrimitive>\n        );\n    }\n}\n\nexport default SlideCarousel;\n"],"mappings":";;;AACA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,QAAQ,MAAM,iBAAiB;AAEtC,OAAOC,sBAAsB,MAAM,0BAA0B;AAE7D,OAAO,sBAAsB;AAe7B,MAAMC,aAAa,SAASH,KAAK,CAACI,SAAS,CAAe;EAMtDC,WAAWA,CAACC,KAAY,EAAE;IACtB,KAAK,CAACA,KAAK,CAAC;IAACC,eAAA,2BAyBGC,KAAa,IAAK;MAClC,IAAI,CAACC,QAAQ,CAAC;QAAEC,aAAa,EAAEF;MAAM,CAAC,CAAC;IAC3C,CAAC;IAzBG,IAAI,CAACG,EAAE,GAAGV,QAAQ,CAAC,eAAe,CAAC;IAEnC,IAAI,CAACW,KAAK,GAAG;MACTF,aAAa,EAAEJ,KAAK,CAACO,YAAY,IAAI;IACzC,CAAC;EACL;;EAEA;AACJ;AACA;AACA;AACA;AACA;EACIC,uBAAuBA,CAAA,EAAG;IACtB,MAAM;MAAEC;IAAS,CAAC,GAAG,IAAI,CAACT,KAAK;IAC/B,MAAM;MAAEI;IAAc,CAAC,GAAG,IAAI,CAACE,KAAK;IAEpC,MAAMI,cAAc,GAAGC,IAAI,CAACC,GAAG,CAAClB,KAAK,CAACmB,QAAQ,CAACC,KAAK,CAACL,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;IACtE,MAAMM,oBAAoB,GAAGJ,IAAI,CAACC,GAAG,CAACR,aAAa,IAAI,CAAC,EAAE,CAAC,CAAC;IAE5D,OAAOW,oBAAoB,GAAGL,cAAc,GAAGA,cAAc,GAAGC,IAAI,CAACK,KAAK,CAACD,oBAAoB,CAAC;EACpG;EAQAE,MAAMA,CAAA,EAAG;IACL,MAAM;MAAER,QAAQ;MAAES,SAAS;MAAEC,aAAa;MAAEC;IAAM,CAAC,GAAG,IAAI,CAACpB,KAAK;IAChE,MAAMI,aAAa,GAAG,IAAI,CAACI,uBAAuB,CAAC,CAAC;IAEpD,oBACId,KAAA,CAAA2B,aAAA,CAACzB,sBAAsB;MACnBsB,SAAS,EAAEA,SAAU;MACrBC,aAAa,EAAEA,aAAc;MAC7BG,QAAQ,EAAE,IAAI,CAACjB,EAAG;MAClBkB,WAAW,EAAE,IAAI,CAACC,gBAAiB;MACnCpB,aAAa,EAAEA,aAAc;MAC7BgB,KAAK,EAAEA;IAAM,GAEZX,QACmB,CAAC;EAEjC;AACJ;AAACR,eAAA,CAvDKJ,aAAa,kBACO;EAClBqB,SAAS,EAAE,EAAE;EACbX,YAAY,EAAE;AAClB,CAAC;AAqDL,eAAeV,aAAa","ignoreList":[]}