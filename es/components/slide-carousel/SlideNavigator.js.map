{"version":3,"file":"SlideNavigator.js","names":["range","React","SlideButton","SlideNavigator","Component","constructor","args","_defineProperty","index","buttonElements","length","focus","event","numOptions","selectedIndex","props","nextIndex","key","handleSelection","preventDefault","stopPropagation","focusOnButtonElement","onSelection","render","getButtonIdFromValue","getPanelIdFromValue","createElement","className","onKeyDown","handleKeyDown","role","map","child","i","buttonRef","buttonEl","id","isSelected","onClick","tabIndex"],"sources":["../../../src/components/slide-carousel/SlideNavigator.js"],"sourcesContent":["// @flow\nimport range from 'lodash/range';\nimport * as React from 'react';\n\nimport SlideButton from './SlideButton';\n\ntype Props = {\n    /** Pure function that returns a button id unique to the given value  */\n    getButtonIdFromValue: Function,\n    /** Pure function that returns a panel id unique to the given value  */\n    getPanelIdFromValue: Function,\n    /** Gets called when a slide is selected. Called with the appropriate slide index  */\n    numOptions: number,\n    /** The number of slides. Each is associated to an index, starting from 0 */\n    onSelection: Function,\n    selectedIndex: number,\n};\n\nclass SlideNavigator extends React.Component<Props> {\n    buttonElements = [];\n\n    focusOnButtonElement = (index: number) => {\n        if (index + 1 > this.buttonElements.length || index < 0) {\n            return;\n        }\n\n        this.buttonElements[index].focus();\n    };\n\n    handleKeyDown = (event: SyntheticKeyboardEvent<HTMLElement>) => {\n        const { numOptions, selectedIndex } = this.props;\n\n        let nextIndex = null;\n        switch (event.key) {\n            case 'ArrowRight':\n                nextIndex = (selectedIndex + 1) % numOptions;\n                break;\n\n            case 'ArrowLeft':\n                nextIndex = (selectedIndex - 1 + numOptions) % numOptions;\n                break;\n\n            default:\n                return;\n        }\n\n        this.handleSelection(nextIndex);\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleSelection = (index: number) => {\n        this.focusOnButtonElement(index);\n        this.props.onSelection(index);\n    };\n\n    render() {\n        const { getButtonIdFromValue, getPanelIdFromValue, numOptions, onSelection, selectedIndex } = this.props;\n\n        return (\n            <nav\n                className=\"slide-navigator\"\n                /* eslint-disable jsx-a11y/no-noninteractive-element-to-interactive-role */\n                onKeyDown={this.handleKeyDown}\n                role=\"tablist\"\n            >\n                {range(numOptions).map((child, i) => (\n                    <SlideButton\n                        key={i}\n                        aria-controls={getPanelIdFromValue(i)}\n                        aria-label={`slide${i}`}\n                        buttonRef={buttonEl => {\n                            this.buttonElements[i] = buttonEl;\n                        }}\n                        id={getButtonIdFromValue(i)}\n                        isSelected={i === selectedIndex}\n                        onClick={() => onSelection(i)}\n                        tabIndex={i === selectedIndex ? '0' : '-1'}\n                    />\n                ))}\n            </nav>\n        );\n    }\n}\n\nexport default SlideNavigator;\n"],"mappings":";;;AACA,OAAOA,KAAK,MAAM,cAAc;AAChC,OAAO,KAAKC,KAAK,MAAM,OAAO;AAE9B,OAAOC,WAAW,MAAM,eAAe;AAcvC,MAAMC,cAAc,SAASF,KAAK,CAACG,SAAS,CAAQ;EAAAC,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAAC,eAAA,yBAC/B,EAAE;IAAAA,eAAA,+BAEKC,KAAa,IAAK;MACtC,IAAIA,KAAK,GAAG,CAAC,GAAG,IAAI,CAACC,cAAc,CAACC,MAAM,IAAIF,KAAK,GAAG,CAAC,EAAE;QACrD;MACJ;MAEA,IAAI,CAACC,cAAc,CAACD,KAAK,CAAC,CAACG,KAAK,CAAC,CAAC;IACtC,CAAC;IAAAJ,eAAA,wBAEgBK,KAA0C,IAAK;MAC5D,MAAM;QAAEC,UAAU;QAAEC;MAAc,CAAC,GAAG,IAAI,CAACC,KAAK;MAEhD,IAAIC,SAAS,GAAG,IAAI;MACpB,QAAQJ,KAAK,CAACK,GAAG;QACb,KAAK,YAAY;UACbD,SAAS,GAAG,CAACF,aAAa,GAAG,CAAC,IAAID,UAAU;UAC5C;QAEJ,KAAK,WAAW;UACZG,SAAS,GAAG,CAACF,aAAa,GAAG,CAAC,GAAGD,UAAU,IAAIA,UAAU;UACzD;QAEJ;UACI;MACR;MAEA,IAAI,CAACK,eAAe,CAACF,SAAS,CAAC;MAC/BJ,KAAK,CAACO,cAAc,CAAC,CAAC;MACtBP,KAAK,CAACQ,eAAe,CAAC,CAAC;IAC3B,CAAC;IAAAb,eAAA,0BAEkBC,KAAa,IAAK;MACjC,IAAI,CAACa,oBAAoB,CAACb,KAAK,CAAC;MAChC,IAAI,CAACO,KAAK,CAACO,WAAW,CAACd,KAAK,CAAC;IACjC,CAAC;EAAA;EAEDe,MAAMA,CAAA,EAAG;IACL,MAAM;MAAEC,oBAAoB;MAAEC,mBAAmB;MAAEZ,UAAU;MAAES,WAAW;MAAER;IAAc,CAAC,GAAG,IAAI,CAACC,KAAK;IAExG,oBACId,KAAA,CAAAyB,aAAA;MACIC,SAAS,EAAC;MACV;MACAC,SAAS,EAAE,IAAI,CAACC,aAAc;MAC9BC,IAAI,EAAC;IAAS,GAEb9B,KAAK,CAACa,UAAU,CAAC,CAACkB,GAAG,CAAC,CAACC,KAAK,EAAEC,CAAC,kBAC5BhC,KAAA,CAAAyB,aAAA,CAACxB,WAAW;MACRe,GAAG,EAAEgB,CAAE;MACP,iBAAeR,mBAAmB,CAACQ,CAAC,CAAE;MACtC,cAAY,QAAQA,CAAC,EAAG;MACxBC,SAAS,EAAEC,QAAQ,IAAI;QACnB,IAAI,CAAC1B,cAAc,CAACwB,CAAC,CAAC,GAAGE,QAAQ;MACrC,CAAE;MACFC,EAAE,EAAEZ,oBAAoB,CAACS,CAAC,CAAE;MAC5BI,UAAU,EAAEJ,CAAC,KAAKnB,aAAc;MAChCwB,OAAO,EAAEA,CAAA,KAAMhB,WAAW,CAACW,CAAC,CAAE;MAC9BM,QAAQ,EAAEN,CAAC,KAAKnB,aAAa,GAAG,GAAG,GAAG;IAAK,CAC9C,CACJ,CACA,CAAC;EAEd;AACJ;AAEA,eAAeX,cAAc","ignoreList":[]}