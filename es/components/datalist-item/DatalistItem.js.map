{"version":3,"file":"DatalistItem.js","names":["React","classNames","omit","uniqueId","DatalistItem","Component","constructor","props","_defineProperty","setActiveItemID","id","componentDidMount","isActive","componentDidUpdate","prevProps","render","_this$props","children","className","isSelected","rest","_objectWithoutProperties","_excluded","classes","itemProps","createElement","_extends","role"],"sources":["../../../src/components/datalist-item/DatalistItem.tsx"],"sourcesContent":["import * as React from 'react';\nimport classNames from 'classnames';\nimport omit from 'lodash/omit';\nimport uniqueId from 'lodash/uniqueId';\n\nimport './DatalistItem.scss';\n\nexport interface DatalistItemProps {\n    /** Content to render in the list item */\n    children: React.ReactNode;\n\n    /** CSS class for the list item */\n    className?: string;\n\n    /** Set by a parent datalist component to indicate when the item is highlighted (but not necessarily selected) */\n    isActive?: boolean;\n\n    /** Set by a parent datalist component to indicate when the item is selected */\n    isSelected?: boolean;\n\n    /** Set by a parent datalist component to receive the updated active item ID */\n    setActiveItemID?: (id: string) => void;\n}\n\nclass DatalistItem extends React.Component<DatalistItemProps> {\n    constructor(props: DatalistItemProps) {\n        super(props);\n        this.id = uniqueId('datalistitem');\n    }\n\n    componentDidMount() {\n        if (this.props.isActive) {\n            this.setActiveItemID();\n        }\n    }\n\n    componentDidUpdate(prevProps: DatalistItemProps) {\n        if (this.props.isActive && !prevProps.isActive) {\n            this.setActiveItemID();\n        }\n    }\n\n    setActiveItemID = () => {\n        const { setActiveItemID } = this.props;\n\n        if (setActiveItemID) {\n            setActiveItemID(this.id);\n        }\n    };\n\n    id: string;\n\n    render() {\n        const { children, className, isActive, isSelected, ...rest } = this.props;\n        const classes = classNames(\n            'datalist-item',\n            {\n                'is-active': isActive,\n            },\n            className,\n        );\n        const itemProps = omit(rest, ['closeDropdown', 'setActiveItemID']);\n\n        /* eslint-disable jsx-a11y/role-has-required-aria-props */\n        // required aria props are added dynamically\n        return (\n            <li {...itemProps} className={classes} id={this.id} role=\"option\" aria-selected={isSelected}>\n                {children}\n            </li>\n        );\n        /* eslint-enable jsx-a11y/role-has-required-aria-props */\n    }\n}\n\nexport default DatalistItem;\n"],"mappings":";;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,UAAU,MAAM,YAAY;AACnC,OAAOC,IAAI,MAAM,aAAa;AAC9B,OAAOC,QAAQ,MAAM,iBAAiB;AAEtC,OAAO,qBAAqB;AAmB5B,MAAMC,YAAY,SAASJ,KAAK,CAACK,SAAS,CAAoB;EAC1DC,WAAWA,CAACC,KAAwB,EAAE;IAClC,KAAK,CAACA,KAAK,CAAC;IAACC,eAAA,0BAgBC,MAAM;MACpB,MAAM;QAAEC;MAAgB,CAAC,GAAG,IAAI,CAACF,KAAK;MAEtC,IAAIE,eAAe,EAAE;QACjBA,eAAe,CAAC,IAAI,CAACC,EAAE,CAAC;MAC5B;IACJ,CAAC;IArBG,IAAI,CAACA,EAAE,GAAGP,QAAQ,CAAC,cAAc,CAAC;EACtC;EAEAQ,iBAAiBA,CAAA,EAAG;IAChB,IAAI,IAAI,CAACJ,KAAK,CAACK,QAAQ,EAAE;MACrB,IAAI,CAACH,eAAe,CAAC,CAAC;IAC1B;EACJ;EAEAI,kBAAkBA,CAACC,SAA4B,EAAE;IAC7C,IAAI,IAAI,CAACP,KAAK,CAACK,QAAQ,IAAI,CAACE,SAAS,CAACF,QAAQ,EAAE;MAC5C,IAAI,CAACH,eAAe,CAAC,CAAC;IAC1B;EACJ;EAYAM,MAAMA,CAAA,EAAG;IACL,MAAAC,WAAA,GAA+D,IAAI,CAACT,KAAK;MAAnE;QAAEU,QAAQ;QAAEC,SAAS;QAAEN,QAAQ;QAAEO;MAAoB,CAAC,GAAAH,WAAA;MAANI,IAAI,GAAAC,wBAAA,CAAAL,WAAA,EAAAM,SAAA;IAC1D,MAAMC,OAAO,GAAGtB,UAAU,CACtB,eAAe,EACf;MACI,WAAW,EAAEW;IACjB,CAAC,EACDM,SACJ,CAAC;IACD,MAAMM,SAAS,GAAGtB,IAAI,CAACkB,IAAI,EAAE,CAAC,eAAe,EAAE,iBAAiB,CAAC,CAAC;;IAElE;IACA;IACA,oBACIpB,KAAA,CAAAyB,aAAA,OAAAC,QAAA,KAAQF,SAAS;MAAEN,SAAS,EAAEK,OAAQ;MAACb,EAAE,EAAE,IAAI,CAACA,EAAG;MAACiB,IAAI,EAAC,QAAQ;MAAC,iBAAeR;IAAW,IACvFF,QACD,CAAC;IAET;EACJ;AACJ;AAEA,eAAeb,YAAY","ignoreList":[]}