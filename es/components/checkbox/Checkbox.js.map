{"version":3,"file":"Checkbox.js","names":["React","uniqueId","classNames","CheckboxTooltip","Checkbox","_ref","className","description","fieldLabel","hideLabel","id","inputClassName","isChecked","isDisabled","label","name","onFocus","onChange","subsection","tooltip","rest","_objectWithoutProperties","_excluded","generatedID","useRef","current","inputID","checkboxAndLabel","createElement","_extends","checked","disabled","type","htmlFor"],"sources":["../../../src/components/checkbox/Checkbox.tsx"],"sourcesContent":["import * as React from 'react';\nimport uniqueId from 'lodash/uniqueId';\nimport classNames from 'classnames';\n\nimport CheckboxTooltip from './CheckboxTooltip';\n\nimport './Checkbox.scss';\n\nexport interface CheckboxProps {\n    /** Class name for the checkbox */\n    className?: string;\n    /** Description for the checkbox */\n    description?: React.ReactNode;\n    /** fieldLabel - label for the field shown on top of the checkbox */\n    fieldLabel?: React.ReactNode;\n    /** hideLabel - whether the checkbox label is hidden or not */\n    hideLabel?: boolean;\n    /** id - Unique `id` for the input */\n    id?: string;\n    inputClassName?: string;\n    /** isChecked - whether the checkbox is checked or not */\n    isChecked?: boolean; // @TODO: eventually call this `checked`\n    /** isDisabled - whether the checkbox is disabled or not */\n    isDisabled?: boolean; // @TODO: eventually call this `disabled`\n    /** Label displayed for the input */\n    label: React.ReactNode;\n    /** Name of the input */\n    name: string;\n    /** onBlur - blur callback function that takes the event as the argument */\n    onBlur?:\n        | ((e: React.SyntheticEvent<HTMLInputElement, Event>) => React.ReactText)\n        | {\n              (e: React.FocusEvent<HTMLInputElement>): void;\n          };\n    /** onFocus - focus callback function that takes the event as the argument  */\n    onFocus?: (e: React.FocusEvent<HTMLInputElement>) => void;\n    /** onChange - change callback function that takes the event as the argument */\n    onChange?: (e: React.SyntheticEvent<HTMLInputElement, Event>) => string | number | boolean | void;\n    /** Subsection below the checkbox */\n    subsection?: React.ReactNode;\n    /** Tooltip text next to the checkbox label */\n    tooltip?: string;\n    /** Value for the checkbox */\n    value?: string | number | string[];\n}\n\nconst Checkbox = ({\n    className = '',\n    description,\n    fieldLabel,\n    hideLabel,\n    id,\n    inputClassName,\n    isChecked,\n    isDisabled,\n    label,\n    name,\n    onFocus,\n    onChange,\n    subsection,\n    tooltip,\n    ...rest // @TODO: eventually remove `rest` in favor of explicit props\n}: CheckboxProps) => {\n    const generatedID = React.useRef(uniqueId('checkbox')).current;\n    // use passed-in ID from props; otherwise generate one\n    const inputID = id || generatedID;\n\n    const checkboxAndLabel = (\n        <span className=\"checkbox-label\">\n            <input\n                aria-describedby={description ? `description_${inputID}` : ''}\n                checked={isChecked}\n                className={inputClassName}\n                disabled={isDisabled}\n                id={inputID}\n                name={name}\n                onFocus={onFocus}\n                onChange={onChange}\n                type=\"checkbox\"\n                {...rest}\n            />\n            {/* This span is used for the before/after custom checkbox styles, but mouse clicks will pass through this element\n                    to the underlying <input> */}\n            <span className=\"checkbox-pointer-target\" />\n            <span className={classNames('bdl-Checkbox-labelTooltipWrapper', { 'accessibility-hidden': hideLabel })}>\n                {label && <label htmlFor={inputID}>{label}</label>}\n                {tooltip && <CheckboxTooltip tooltip={tooltip} />}\n            </span>\n        </span>\n    );\n\n    return (\n        <div className={classNames('checkbox-container', className, { 'is-disabled bdl-is-disabled': isDisabled })}>\n            {fieldLabel && <div className=\"label\">{fieldLabel}</div>}\n            {checkboxAndLabel}\n            {description ? (\n                <div id={`description_${inputID}`} className=\"checkbox-description\">\n                    {description}\n                </div>\n            ) : null}\n            {subsection ? <div className=\"checkbox-subsection\">{subsection}</div> : null}\n        </div>\n    );\n};\n\nexport default Checkbox;\n"],"mappings":";;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,QAAQ,MAAM,iBAAiB;AACtC,OAAOC,UAAU,MAAM,YAAY;AAEnC,OAAOC,eAAe,MAAM,mBAAmB;AAE/C,OAAO,iBAAiB;AAwCxB,MAAMC,QAAQ,GAAGC,IAAA,IAgBI;EAAA,IAhBH;MACdC,SAAS,GAAG,EAAE;MACdC,WAAW;MACXC,UAAU;MACVC,SAAS;MACTC,EAAE;MACFC,cAAc;MACdC,SAAS;MACTC,UAAU;MACVC,KAAK;MACLC,IAAI;MACJC,OAAO;MACPC,QAAQ;MACRC,UAAU;MACVC;MACQ;IACG,CAAC,GAAAd,IAAA;IADTe,IAAI,GAAAC,wBAAA,CAAAhB,IAAA,EAAAiB,SAAA;EAEP,MAAMC,WAAW,GAAGvB,KAAK,CAACwB,MAAM,CAACvB,QAAQ,CAAC,UAAU,CAAC,CAAC,CAACwB,OAAO;EAC9D;EACA,MAAMC,OAAO,GAAGhB,EAAE,IAAIa,WAAW;EAEjC,MAAMI,gBAAgB,gBAClB3B,KAAA,CAAA4B,aAAA;IAAMtB,SAAS,EAAC;EAAgB,gBAC5BN,KAAA,CAAA4B,aAAA,UAAAC,QAAA;IACI,oBAAkBtB,WAAW,GAAG,eAAemB,OAAO,EAAE,GAAG,EAAG;IAC9DI,OAAO,EAAElB,SAAU;IACnBN,SAAS,EAAEK,cAAe;IAC1BoB,QAAQ,EAAElB,UAAW;IACrBH,EAAE,EAAEgB,OAAQ;IACZX,IAAI,EAAEA,IAAK;IACXC,OAAO,EAAEA,OAAQ;IACjBC,QAAQ,EAAEA,QAAS;IACnBe,IAAI,EAAC;EAAU,GACXZ,IAAI,CACX,CAAC,eAGFpB,KAAA,CAAA4B,aAAA;IAAMtB,SAAS,EAAC;EAAyB,CAAE,CAAC,eAC5CN,KAAA,CAAA4B,aAAA;IAAMtB,SAAS,EAAEJ,UAAU,CAAC,kCAAkC,EAAE;MAAE,sBAAsB,EAAEO;IAAU,CAAC;EAAE,GAClGK,KAAK,iBAAId,KAAA,CAAA4B,aAAA;IAAOK,OAAO,EAAEP;EAAQ,GAAEZ,KAAa,CAAC,EACjDK,OAAO,iBAAInB,KAAA,CAAA4B,aAAA,CAACzB,eAAe;IAACgB,OAAO,EAAEA;EAAQ,CAAE,CAC9C,CACJ,CACT;EAED,oBACInB,KAAA,CAAA4B,aAAA;IAAKtB,SAAS,EAAEJ,UAAU,CAAC,oBAAoB,EAAEI,SAAS,EAAE;MAAE,6BAA6B,EAAEO;IAAW,CAAC;EAAE,GACtGL,UAAU,iBAAIR,KAAA,CAAA4B,aAAA;IAAKtB,SAAS,EAAC;EAAO,GAAEE,UAAgB,CAAC,EACvDmB,gBAAgB,EAChBpB,WAAW,gBACRP,KAAA,CAAA4B,aAAA;IAAKlB,EAAE,EAAE,eAAegB,OAAO,EAAG;IAACpB,SAAS,EAAC;EAAsB,GAC9DC,WACA,CAAC,GACN,IAAI,EACPW,UAAU,gBAAGlB,KAAA,CAAA4B,aAAA;IAAKtB,SAAS,EAAC;EAAqB,GAAEY,UAAgB,CAAC,GAAG,IACvE,CAAC;AAEd,CAAC;AAED,eAAed,QAAQ","ignoreList":[]}