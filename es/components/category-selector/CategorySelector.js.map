{"version":3,"file":"CategorySelector.js","names":["React","Measure","forEach","CategorySelectorComponent","CategorySelector","categories","categoryProps","className","currentCategory","onSelect","linksRef","useRef","moreRef","maxLinks","setMaxLinks","useState","length","defaultLinkWidths","linkWidths","setLinkWidths","moreWidth","setMoreWidth","outerWidth","element","style","getComputedStyle","offsetWidth","parseFloat","marginLeft","marginRight","checkLinks","useCallback","contentRect","width","client","current","containerWidth","elements","querySelectorAll","linksWidth","linksToRemove","counter","elementWidth","category","dataset","max","Object","keys","_objectSpread","linksToAdd","value","targetWidth","useLayoutEffect","useEffect","clientWidth","createElement","innerRef","onResize","measureRef"],"sources":["../../../src/components/category-selector/CategorySelector.tsx"],"sourcesContent":["import * as React from 'react';\nimport Measure from 'react-measure';\nimport forEach from 'lodash/forEach';\n\nimport CategorySelectorComponent from './CategorySelectorComponent';\n\nimport './CategorySelector.scss';\n\nexport interface Category {\n    displayText: string;\n    value: string;\n}\n\nexport interface CategorySelectorProps {\n    /** Array of categories that will display in the selector, each category is an object with a string value and a string displayText */\n    categories: Category[];\n    /** Optional props that can be passed to each category in category selector component */\n    categoryProps?: Record<string, unknown>;\n    /** Optional className that can be passed to category selector component */\n    className?: string;\n    /** Optional value of initial selected category */\n    currentCategory?: string;\n    /** Parent component can use this on select handler to update state for selected category */\n    onSelect: (value: string) => void;\n}\n\nconst CategorySelector = ({\n    categories,\n    categoryProps = {},\n    className = '',\n    currentCategory = '',\n    onSelect,\n}: CategorySelectorProps) => {\n    const linksRef = React.useRef<HTMLDivElement>(null);\n    const moreRef = React.useRef<HTMLDivElement>(null);\n\n    const [maxLinks, setMaxLinks] = React.useState(categories.length);\n    const defaultLinkWidths: { [index: string]: number } = {};\n    const [linkWidths, setLinkWidths] = React.useState(defaultLinkWidths);\n    const [moreWidth, setMoreWidth] = React.useState(0);\n\n    const outerWidth = (element: HTMLElement) => {\n        const style = getComputedStyle(element);\n        return element.offsetWidth + parseFloat(style.marginLeft) + parseFloat(style.marginRight) + 1;\n    };\n\n    const checkLinks = React.useCallback(\n        contentRect => {\n            const { width } = contentRect.client;\n\n            if (!linksRef.current) return;\n\n            // Pull in some common widths we'll need\n            const containerWidth = width - moreWidth;\n\n            // Get all the links\n            const elements = linksRef.current.querySelectorAll<HTMLSpanElement>('[data-category]');\n\n            // First, calculate the total width of all links in the main section\n            let linksWidth = 0;\n            forEach(elements, (element: HTMLSpanElement) => {\n                linksWidth += outerWidth(element);\n            });\n\n            if (linksWidth > containerWidth) {\n                // The links exceed the container's width. Figure out how many need to be removed\n                const linksToRemove: { [index: string]: number } = {};\n                let counter = 1;\n\n                while (linksWidth > containerWidth && counter < elements.length) {\n                    const element: HTMLSpanElement = elements[elements.length - counter];\n\n                    const elementWidth = outerWidth(element);\n                    linksWidth -= elementWidth;\n                    const category: string = element.dataset.category ?? '';\n                    // Save the width of the link being removed for use later\n                    linksToRemove[category] = elementWidth;\n                    counter += 1;\n                }\n\n                // Ensure the maxLinks does not become negative\n                const max =\n                    maxLinks - Object.keys(linksToRemove).length < 0 ? 0 : maxLinks - Object.keys(linksToRemove).length;\n\n                // Update the state\n                setMaxLinks(max);\n                setLinkWidths({\n                    ...linkWidths,\n                    ...linksToRemove,\n                });\n            } else {\n                // There is more room, see if any links can be brought back in\n                let linksToAdd = 0;\n\n                while (maxLinks + linksToAdd < categories.length && linksWidth < containerWidth) {\n                    const category: string = categories[maxLinks + linksToAdd].value;\n                    const elementWidth = linkWidths[category];\n\n                    // If there is only one link in the More menu, calculate against the total container width,\n                    // otherwise calculate against the container less the width of the more button\n                    const targetWidth = maxLinks + linksToAdd + 1 >= categories.length ? width : containerWidth;\n\n                    // If the addition of a link is too large, stop checking\n                    if (linksWidth + elementWidth >= targetWidth) {\n                        break;\n                    }\n                    linksToAdd += 1;\n                    linksWidth += elementWidth; // always add\n                }\n\n                if (linksToAdd > 0) {\n                    // Update the state\n                    setMaxLinks(maxLinks + linksToAdd);\n                }\n            }\n        },\n        [categories, linkWidths, linksRef, maxLinks, moreWidth],\n    );\n\n    React.useLayoutEffect(() => {\n        if (!moreRef.current) return;\n\n        setMoreWidth(outerWidth(moreRef.current));\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [moreRef.current, currentCategory]);\n\n    // This effect must be defined after the checkLinks function\n    // If the currently selected category changes or the more link width changes, be sure to check for any links to hide or show\n    React.useEffect(() => {\n        if (!linksRef.current) return;\n\n        const { clientWidth } = linksRef.current;\n\n        checkLinks({ client: { width: clientWidth } });\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [moreRef.current, moreWidth, currentCategory]);\n\n    return (\n        <Measure client innerRef={linksRef} onResize={checkLinks}>\n            {({ measureRef }) => (\n                <CategorySelectorComponent\n                    measureRef={measureRef}\n                    moreRef={moreRef}\n                    className={className}\n                    categories={categories}\n                    maxLinks={maxLinks}\n                    currentCategory={currentCategory}\n                    onSelect={onSelect}\n                    categoryProps={categoryProps}\n                />\n            )}\n        </Measure>\n    );\n};\n\nexport default CategorySelector;\n"],"mappings":"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","ignoreList":[]}