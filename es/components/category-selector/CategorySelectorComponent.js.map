{"version":3,"file":"CategorySelectorComponent.js","names":["React","FormattedMessage","classnames","PlainButton","DropdownMenu","MenuToggle","Menu","SelectMenuItem","messages","CategorySelectorComponent","measureRef","moreRef","className","categories","maxLinks","currentCategory","categoryProps","onSelect","linkCategories","slice","overflowCategories","selectedOverflow","find","value","renderCategory","displayText","createElement","_extends","key","onClick","onKeyPress","event","role","tabIndex","ref","map","hide","length","isRightAligned","more","isSelected"],"sources":["../../../src/components/category-selector/CategorySelectorComponent.tsx"],"sourcesContent":["import * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport classnames from 'classnames';\nimport PlainButton from '../plain-button/PlainButton';\n// @ts-ignore flow import\nimport DropdownMenu, { MenuToggle } from '../dropdown-menu';\nimport { Menu, SelectMenuItem } from '../menu';\nimport messages from './messages';\n\nimport './CategorySelector.scss';\n\nimport { Category } from './CategorySelector';\n\ninterface CategorySelectorComponentProps {\n    categories: Category[];\n    categoryProps: Record<string, unknown>;\n    className: string;\n    currentCategory: string;\n    maxLinks: number;\n    measureRef: (ref: Element | null) => void;\n    moreRef: React.RefObject<HTMLDivElement>;\n    onSelect: (value: string) => void;\n}\n\nconst CategorySelectorComponent = ({\n    measureRef,\n    moreRef,\n    className,\n    categories,\n    maxLinks,\n    currentCategory,\n    categoryProps,\n    onSelect,\n}: CategorySelectorComponentProps) => {\n    const linkCategories = categories.slice(0, maxLinks);\n    const overflowCategories = categories.slice(maxLinks);\n\n    const selectedOverflow = overflowCategories.find(({ value }) => currentCategory === value);\n\n    const renderCategory = ({ value, displayText }: Category) => (\n        <span\n            key={value}\n            className={classnames('bdl-CategorySelector-pill', {\n                'is-selected': value === currentCategory,\n            })}\n            data-category={value}\n            data-resin-target=\"selectcategory\"\n            data-resin-template_category={displayText}\n            data-testid={`template-category-${value}`}\n            onClick={() => onSelect(value)}\n            onKeyPress={(event: React.KeyboardEvent<HTMLSpanElement>) => {\n                if (event.key === 'Enter' || event.key === ' ') onSelect(value);\n            }}\n            role=\"button\"\n            tabIndex={0}\n            {...categoryProps}\n        >\n            {displayText}\n        </span>\n    );\n\n    return (\n        <div ref={measureRef} className={classnames(className, 'bdl-CategorySelector')}>\n            <div className=\"bdl-CategorySelector-links\">{linkCategories.map(renderCategory)}</div>\n            <div\n                ref={moreRef}\n                className={classnames('bdl-CategorySelector-more', {\n                    hide: maxLinks >= categories.length,\n                })}\n            >\n                <DropdownMenu className=\"dropdownWrapper\" isRightAligned>\n                    <PlainButton\n                        className={classnames('bdl-CategorySelector-more-label', {\n                            'is-selected': selectedOverflow,\n                        })}\n                    >\n                        <MenuToggle>\n                            {selectedOverflow ? selectedOverflow.displayText : <FormattedMessage {...messages.more} />}\n                        </MenuToggle>\n                    </PlainButton>\n                    <Menu>\n                        {overflowCategories.map(({ value, displayText }: Category) => (\n                            <SelectMenuItem\n                                key={value}\n                                data-testid={`template-category-more-${value}`}\n                                isSelected={value === currentCategory}\n                                onClick={() => onSelect(value)}\n                            >\n                                {displayText}\n                            </SelectMenuItem>\n                        ))}\n                    </Menu>\n                </DropdownMenu>\n            </div>\n        </div>\n    );\n};\n\nexport default CategorySelectorComponent;\n"],"mappings":"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","ignoreList":[]}