{"version":3,"file":"PillSelectorDropdown.stories.js","names":["React","ContactDatalistItem","PillSelectorDropdown","notes","users","id","name","isExternalUser","generateProps","setError","selectedOptions","setSelectedOptions","selectorOptions","setSelectorOptions","handleInput","value","newSelectorOptions","forEach","user","toLowerCase","indexOf","push","displayText","handleSelect","pills","handleRemove","option","index","newSelectedOptions","splice","validator","text","pattern","test","validateForError","count","length","error","empty","useState","createElement","allowCustomPills","placeholder","onInput","onRemove","onSelect","map","key","withPills","showRoundedPills","showAvatars","customPillStyles","getPillClassName","title","component","parameters"],"sources":["../../../src/components/pill-selector-dropdown/PillSelectorDropdown.stories.js"],"sourcesContent":["// @flow\n/* eslint-disable react-hooks/rules-of-hooks */\nimport * as React from 'react';\nimport type { Option } from 'components/pill-selector-dropdown/flowTypes';\n\nimport ContactDatalistItem from '../contact-datalist-item';\nimport PillSelectorDropdown from './PillSelectorDropdown';\nimport notes from './PillSelectorDropdown.notes.md';\n\nimport './PillSelectorDropdown.stories.scss';\n\nconst users = [\n    { id: 0, name: 'bob@foo.bar' },\n    { id: 1, name: 'sally@foo.bar', isExternalUser: true },\n    { id: 2, name: 'jean@foo.bar' },\n    { id: 3, name: 'longlonglonglonglonglonglonglonglonglonglonglongemail@foo.bar' },\n    { id: 4, name: 'anotherlonglonglonglonglonglonglonglonglonglonglonglongemail@foo.bar' },\n    { id: 5, name: 'aaa@foo.bar' },\n    { id: 6, name: 'bbb@foo.bar' },\n    { id: 7, name: 'ccc@foo.bar' },\n];\n\nfunction generateProps({ setError, selectedOptions, setSelectedOptions, selectorOptions, setSelectorOptions }) {\n    const handleInput = value => {\n        const newSelectorOptions = [];\n        if (value !== '') {\n            users.forEach(user => {\n                if (user.name.toLowerCase().indexOf(value.toLowerCase()) !== -1) {\n                    selectorOptions.push({\n                        displayText: user.name,\n                        value: user.id,\n                    });\n                }\n            });\n        }\n        // As user is typing, reset error and update selectorOptions\n        setSelectorOptions(newSelectorOptions);\n        setError('');\n    };\n\n    const handleSelect = pills => {\n        setSelectedOptions([...selectedOptions, ...pills]);\n    };\n\n    const handleRemove = (option, index) => {\n        const newSelectedOptions = [...selectedOptions];\n        newSelectedOptions.splice(index, 1);\n        setSelectedOptions(newSelectedOptions);\n    };\n\n    const validator = text => {\n        // email input validation\n        const pattern = /^[^\\s<>@,]+@[^\\s<>@,/\\\\]+\\.[^\\s<>@,]+$/i;\n        return pattern.test(((text: any): string));\n    };\n\n    const validateForError = text => {\n        const count = selectedOptions.length;\n        let error = '';\n\n        if (!text && count === 0) {\n            error = 'Field Required';\n        } else if (text && !validator(text)) {\n            error = 'Invalid Email Address';\n        }\n        setError(error);\n    };\n\n    return {\n        handleInput,\n        handleRemove,\n        handleSelect,\n        validator,\n        validateForError,\n    };\n}\n\nexport const empty = () => {\n    const [error, setError] = React.useState('');\n    const [selectedOptions, setSelectedOptions] = React.useState<SelectedOptions>([]);\n    const [selectorOptions, setSelectorOptions] = React.useState<Array<Object>>([]);\n    const { handleInput, handleRemove, handleSelect, validator, validateForError } = generateProps({\n        setError,\n        selectedOptions,\n        setSelectedOptions,\n        selectorOptions,\n        setSelectorOptions,\n    });\n\n    return (\n        <PillSelectorDropdown\n            allowCustomPills\n            error={error}\n            placeholder=\"Names or email addresses\"\n            onInput={handleInput}\n            onRemove={handleRemove}\n            onSelect={handleSelect}\n            selectedOptions={selectedOptions}\n            selectorOptions={selectorOptions}\n            validateForError={validateForError}\n            validator={validator}\n        >\n            {selectorOptions.map(option => (\n                <ContactDatalistItem key={option.value} name={option.displayText}>\n                    {option.displayText}\n                </ContactDatalistItem>\n            ))}\n        </PillSelectorDropdown>\n    );\n};\n\nexport const withPills = () => {\n    const [error, setError] = React.useState('');\n    const [selectedOptions, setSelectedOptions] = React.useState<SelectedOptions>([\n        {\n            displayText: users[2].name,\n            value: users[2].name,\n        },\n        {\n            displayText: users[1].name,\n            value: users[1].name,\n        },\n        {\n            displayText: users[4].name,\n            value: users[4].name,\n        },\n    ]);\n\n    const [selectorOptions, setSelectorOptions] = React.useState<Array<Object>>([]);\n\n    const { handleInput, handleRemove, handleSelect, validator, validateForError } = generateProps({\n        setError,\n        selectedOptions,\n        setSelectedOptions,\n        selectorOptions,\n        setSelectorOptions,\n    });\n\n    return (\n        <PillSelectorDropdown\n            allowCustomPills\n            error={error}\n            placeholder=\"Names or email addresses\"\n            onInput={handleInput}\n            onRemove={handleRemove}\n            onSelect={handleSelect}\n            selectedOptions={selectedOptions}\n            selectorOptions={selectorOptions}\n            validateForError={validateForError}\n            validator={validator}\n        >\n            {selectorOptions.map(option => (\n                <ContactDatalistItem key={option.value} name={option.value}>\n                    {option.displayText}\n                </ContactDatalistItem>\n            ))}\n        </PillSelectorDropdown>\n    );\n};\n\nexport const showRoundedPills = () => {\n    const [error, setError] = React.useState('');\n    const [selectedOptions, setSelectedOptions] = React.useState([\n        {\n            displayText: users[2].name,\n            value: users[2].name,\n        },\n        {\n            displayText: users[1].name,\n            value: users[1].name,\n        },\n        {\n            displayText: users[4].name,\n            value: users[4].name,\n        },\n    ]);\n    const [selectorOptions, setSelectorOptions] = React.useState([]);\n    const { handleInput, handleRemove, handleSelect, validator, validateForError } = generateProps({\n        setError,\n        selectedOptions,\n        setSelectedOptions,\n        selectorOptions,\n        setSelectorOptions,\n    });\n\n    return (\n        <PillSelectorDropdown\n            allowCustomPills\n            error={error}\n            placeholder=\"Names or email addresses\"\n            onInput={handleInput}\n            onRemove={handleRemove}\n            onSelect={handleSelect}\n            selectedOptions={selectedOptions}\n            selectorOptions={selectorOptions}\n            showRoundedPills\n            validateForError={validateForError}\n            validator={validator}\n        >\n            {selectorOptions.map(option => (\n                <ContactDatalistItem key={option.value} name={option.value}>\n                    {option.displayText}\n                </ContactDatalistItem>\n            ))}\n        </PillSelectorDropdown>\n    );\n};\n\nexport const showAvatars = () => {\n    const [error, setError] = React.useState('');\n    const [selectedOptions, setSelectedOptions] = React.useState([\n        {\n            text: users[2].name,\n            value: users[2].name,\n            id: users[2].id,\n        },\n        {\n            text: users[1].name,\n            value: users[1].name,\n            id: users[1].id,\n            isExternalUser: users[1].isExternalUser,\n        },\n        {\n            text: users[3].name,\n            value: users[3].name,\n            id: users[3].id,\n        },\n    ]);\n    const [selectorOptions, setSelectorOptions] = React.useState([]);\n    const { handleInput, handleRemove, handleSelect, validator, validateForError } = generateProps({\n        setError,\n        selectedOptions,\n        setSelectedOptions,\n        selectorOptions,\n        setSelectorOptions,\n    });\n\n    return (\n        <PillSelectorDropdown\n            allowCustomPills\n            error={error}\n            placeholder=\"Names or email addresses\"\n            onInput={handleInput}\n            onRemove={handleRemove}\n            onSelect={handleSelect}\n            selectedOptions={selectedOptions}\n            selectorOptions={selectorOptions}\n            showAvatars\n            showRoundedPills\n            validateForError={validateForError}\n            validator={validator}\n        >\n            {selectorOptions.map(option => (\n                <ContactDatalistItem key={option.value} name={option.value}>\n                    {option.displayText}\n                </ContactDatalistItem>\n            ))}\n        </PillSelectorDropdown>\n    );\n};\n\nexport const customPillStyles = () => {\n    /**\n     * NOTE: For consistent styling, use bdl-RoundPill mixin when creating custom pill classes.\n     *\n     * Example:\n     *\n     *    .bdl-RoundPill {\n     *       &.is-custom {\n     *         @include bdl-RoundPill($border-color: $bdl-watermelon-red-50, $selected-border-color: $bdl-watermelon-red-50);\n     *       }\n     *     }\n     *\n     *\n     */\n    const getPillClassName = ({ value }) => {\n        switch (value) {\n            case '2':\n                return 'is-custom';\n            default:\n                return '';\n        }\n    };\n\n    const [error, setError] = React.useState('');\n    const [selectedOptions, setSelectedOptions] = React.useState<Option[]>([\n        {\n            displayText: 'default@example.com',\n            value: '1',\n        },\n        {\n            displayText: 'custom@example.com',\n            value: '2',\n        },\n    ]);\n    const [selectorOptions, setSelectorOptions] = React.useState<Option[]>([]);\n    const { handleInput, handleRemove, handleSelect, validator, validateForError } = generateProps({\n        setError,\n        selectedOptions,\n        setSelectedOptions,\n        selectorOptions,\n        setSelectorOptions,\n    });\n\n    return (\n        <PillSelectorDropdown\n            allowCustomPills\n            error={error}\n            getPillClassName={getPillClassName}\n            placeholder=\"Names or email addresses\"\n            onInput={handleInput}\n            onRemove={handleRemove}\n            onSelect={handleSelect}\n            selectedOptions={selectedOptions}\n            selectorOptions={selectorOptions}\n            showRoundedPills\n            validateForError={validateForError}\n            validator={validator}\n        >\n            {selectorOptions.map(option => (\n                <ContactDatalistItem key={option.value} name={option.displayText}>\n                    {option.displayText}\n                </ContactDatalistItem>\n            ))}\n        </PillSelectorDropdown>\n    );\n};\n\nexport default {\n    title: 'Components/PillSelectorDropdown',\n    component: PillSelectorDropdown,\n    parameters: {\n        notes,\n    },\n};\n"],"mappings":"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","ignoreList":[]}