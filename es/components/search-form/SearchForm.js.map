{"version":3,"file":"SearchForm.js","names":["React","injectIntl","classNames","omit","SearchActions","messages","SearchFormBase","Component","constructor","args","_defineProperty","isEmpty","event","onChange","shouldPreventClearEventPropagation","props","stopPropagation","searchInput","value","setState","target","trim","length","elements","onSubmit","element","getSearchInput","getDerivedStateFromProps","render","_this$props","action","className","innerRef","intl","isLoading","method","name","queryParams","useClearButton","rest","_objectWithoutProperties","_excluded","state","inputProps","formatMessage","classes","formClassNames","hiddenInputs","Object","keys","map","param","index","createElement","key","type","onChangeStub","ref","onChangeHandler","onSubmitHandler","role","_extends","setInputRef","searchLabel","autoComplete","hasSubmitAction","loadingIndicatorProps","onClear","onClearHandler","SearchFormBaseIntl","SearchForm","forwardRef","displayName"],"sources":["../../../src/components/search-form/SearchForm.js"],"sourcesContent":["// @flow\nimport * as React from 'react';\nimport { injectIntl } from 'react-intl';\nimport classNames from 'classnames';\nimport omit from 'lodash/omit';\n\n// $FlowFixMe\nimport SearchActions from './SearchActions';\n\n// $FlowFixMe\nimport messages from './messages';\n\nimport './SearchForm.scss';\n\ntype Props = {\n    /** Form submit action */\n    action?: string,\n    className?: string,\n    getSearchInput?: Function,\n    innerRef?: React.Ref<any>,\n    intl: Object,\n    isLoading?: boolean,\n    /** The way to send the form data, get or post */\n    method?: 'get' | 'post',\n    /** Name of the text input */\n    name?: string,\n    /** On change handler for the search input */\n    onChange?: Function,\n    /** On submit handler for the search input */\n    onSubmit?: Function,\n    /** Extra query parameters in addition to the form data */\n    queryParams: { [arg: string]: string },\n    /** Whether to prevent propagation of search clear action */\n    shouldPreventClearEventPropagation?: boolean,\n    /** If the clear button is shown when input field is not empty */\n    useClearButton?: boolean,\n    /** The value of the input if controlled */\n    value?: string,\n};\n\ntype DefaultProps = {\n    action: string,\n    method: 'get' | 'post',\n    name: string,\n    queryParams: { [arg: string]: string },\n    useClearButton: boolean,\n};\n\ntype IntlProps = {\n    intl: Object,\n};\n\ntype State = {\n    isEmpty: boolean,\n};\n\ntype Config = React.Config<Props, DefaultProps & IntlProps>;\n\nclass SearchFormBase extends React.Component<Props, State> {\n    static defaultProps: DefaultProps = {\n        action: '',\n        method: 'get',\n        name: 'search',\n        queryParams: {},\n        useClearButton: false,\n    };\n\n    state = {\n        isEmpty: true,\n    };\n\n    static getDerivedStateFromProps(props: Props): any {\n        const { value } = props;\n\n        if (value && !!value.trim()) {\n            return {\n                isEmpty: true,\n            };\n        }\n\n        return null;\n    }\n\n    onClearHandler = (event: SyntheticEvent<>) => {\n        const { onChange, shouldPreventClearEventPropagation } = this.props;\n        if (shouldPreventClearEventPropagation) {\n            event.stopPropagation();\n        }\n\n        if (this.searchInput) {\n            this.searchInput.value = '';\n        }\n        this.setState({ isEmpty: true });\n\n        if (onChange) {\n            onChange('');\n        }\n    };\n\n    onChangeHandler = ({ target }) => {\n        const { value } = target;\n        const { onChange } = this.props;\n        this.setState({ isEmpty: !value || !value.trim().length });\n\n        if (onChange) {\n            onChange(value);\n        }\n    };\n\n    onSubmitHandler = event => {\n        const { value } = event.target.elements[0];\n        const { onSubmit } = this.props;\n\n        if (onSubmit) {\n            onSubmit(value, event);\n        }\n    };\n\n    setInputRef = element => {\n        this.searchInput = element;\n\n        if (this.props.getSearchInput) {\n            this.props.getSearchInput(this.searchInput);\n        }\n    };\n\n    searchInput: ?HTMLInputElement;\n\n    render() {\n        const {\n            action,\n            className,\n            innerRef,\n            intl,\n            isLoading,\n            method,\n            name,\n            queryParams,\n            onSubmit,\n            useClearButton,\n            ...rest\n        } = this.props;\n        const { isEmpty } = this.state;\n\n        const inputProps = omit(rest, [\n            'getSearchInput',\n            'onChange',\n            'onSubmit',\n            'required',\n            'shouldPreventClearEventPropagation',\n        ]);\n\n        const { formatMessage } = intl;\n        const classes = classNames(className, 'search-input-container');\n        const formClassNames = classNames('search-form', {\n            'is-empty': isEmpty,\n            'use-clear-button': useClearButton,\n        });\n        const hiddenInputs = Object.keys(queryParams).map((param, index) => (\n            <input key={index} name={param} type=\"hidden\" value={queryParams[param]} />\n        ));\n\n        // @NOTE Prevent errors from React about controlled inputs\n        const onChangeStub = () => {};\n\n        return (\n            <div ref={innerRef} className={classes}>\n                <form\n                    action={action}\n                    className={formClassNames}\n                    method={method}\n                    onChange={this.onChangeHandler}\n                    onSubmit={this.onSubmitHandler}\n                    role=\"search\"\n                >\n                    <input\n                        ref={this.setInputRef}\n                        aria-label={formatMessage(messages.searchLabel)}\n                        autoComplete=\"off\"\n                        className=\"search-input\"\n                        name={name}\n                        onChange={onChangeStub}\n                        type=\"search\"\n                        {...inputProps}\n                    />\n                    <SearchActions\n                        hasSubmitAction={!!onSubmit}\n                        isLoading={isLoading}\n                        loadingIndicatorProps={{\n                            className: 'search-form-loading-indicator',\n                        }}\n                        onClear={this.onClearHandler}\n                    />\n                    {hiddenInputs}\n                </form>\n            </div>\n        );\n    }\n}\n\nconst SearchFormBaseIntl = injectIntl(SearchFormBase);\nexport { SearchFormBaseIntl };\n\nconst SearchForm = React.forwardRef<Config, HTMLDivElement>((props: Config, ref: React.Ref<any>) => (\n    <SearchFormBaseIntl {...props} innerRef={ref} />\n));\nSearchForm.displayName = 'SearchForm';\n\nexport default SearchForm;\n"],"mappings":"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","ignoreList":[]}