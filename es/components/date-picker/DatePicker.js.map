{"version":3,"file":"DatePicker.js","names":["React","defineMessages","injectIntl","FormattedMessage","classNames","noop","range","uniqueId","RESIN_TAG_TARGET","AlertBadge16","Calendar16","ClearBadge16","AccessiblePikaday","ButtonType","Label","PlainButton","Tooltip","TooltipPosition","TooltipTheme","convertDateToUnixMidnightTime","messages","previousMonth","nextMonth","iconAlertText","dateClearButton","chooseDate","dateInputRangeError","dateInputMaxError","dateInputMinError","TOGGLE_DELAY_MS","ENTER_KEY","ESCAPE_KEY","TAB_KEY","ISO_DATE_FORMAT_PATTERN","DateFormat","convertUTCToLocal","date","dateString","toUTCString","dateStringWithoutTimeZone","slice","Date","getFormattedDate","format","utcDate","ISO_STRING_DATE_FORMAT","toISOString","LOCALE_DATE_STRING_DATE_FORMAT","toLocaleDateString","UTC_TIME_DATE_FORMAT","UTC_ISO_STRING_DATE_FORMAT","getTime","localesWhereWeekStartsOnSunday","DatePicker","Component","constructor","args","_defineProperty","isDateInputInvalid","showDateInputError","onChange","isAccessible","props","state","formattedDate","formatValue","dateInputEl","datePicker","value","toString","isVisible","hide","focusDatePicker","setState","focus","intl","maxDate","minDate","formatMessage","dateInputError","maxLocaleDate","minLocaleDate","event","isKeyboardInputAllowed","isTextInputAllowed","stopPropagation","key","preventDefault","canUseDateInputType","target","parsedDate","parseDisplayDateType","setDate","onBlur","nextActiveElement","relatedTarget","document","activeElement","datePickerButtonEl","shouldStayClosed","setTimeout","inputDate","dateInputElVal","getDate","onSelectHandler","isDisabled","show","displayFormat","formatDate","test","dateFormat","createElement","type","e","isAlwaysVisible","accessibleAttrs","tabIndex","_extends","className","getDOMRef","ref","onClick","handleButtonClick","BUTTON","componentDidMount","customInput","yearRange","defaultValue","shouldUseAccessibleFallback","year","getFullYear","timeZone","i18n","months","map","month","weekdays","weekday","weekdaysShort","datePickerConfig","bound","blurFieldOnSelect","setDefaultDate","defaultDate","undefined","field","firstDay","includes","locale","position","showDaysInNextAndPreviousMonths","onSelect","formatDisplay","trigger","accessibleFieldEl","parse","formatDisplayDateType","keyboardInput","updateDateInputValue","UNSAFE_componentWillReceiveProps","nextProps","nextValue","nextMinDate","nextMaxDate","selectedDate","setMinDate","gotoDate","setMaxDate","componentWillUnmount","destroy","render","description","error","errorTooltipPosition","hideLabel","hideOptionalLabel","inputProps","isClearable","isRequired","label","name","onFocus","placeholder","resinTarget","errorMessage","getDateInputError","hasError","hasValue","classes","ariaAttrs","errorMessageID","descriptionID","resinTargetAttr","valueAttr","onChangeAttr","handleOnChange","additionalAttrs","max","min","pattern","source","title","showOptionalText","text","Fragment","id","isShown","theme","ERROR","cloneElement","_objectSpread","disabled","required","handleInputBlur","handleOnClick","onKeyDown","handleInputKeyDown","role","clearDate","renderCalendarButton","readOnly","UNIX_TIME_DATE_FORMAT","BOTTOM_LEFT","DatePickerBase"],"sources":["../../../src/components/date-picker/DatePicker.tsx"],"sourcesContent":["import * as React from 'react';\nimport { defineMessages, injectIntl, FormattedMessage, WrappedComponentProps } from 'react-intl';\n\nimport classNames from 'classnames';\nimport noop from 'lodash/noop';\nimport range from 'lodash/range';\nimport uniqueId from 'lodash/uniqueId';\n\n// @ts-ignore flow import\nimport { RESIN_TAG_TARGET } from '../../common/variables';\nimport AlertBadge16 from '../../icon/fill/AlertBadge16';\nimport Calendar16 from '../../icon/fill/Calendar16';\nimport ClearBadge16 from '../../icon/fill/ClearBadge16';\n\nimport AccessiblePikaday, { AccessiblePikadayOptions } from './AccessiblePikaday';\nimport { ButtonType } from '../button';\nimport Label from '../label';\nimport PlainButton from '../plain-button';\nimport Tooltip, { TooltipPosition, TooltipTheme } from '../tooltip';\n\n// @ts-ignore flow import\nimport { convertDateToUnixMidnightTime } from '../../utils/datetime';\n\nimport './DatePicker.scss';\n\nconst messages = defineMessages({\n    previousMonth: {\n        defaultMessage: 'Previous Month',\n        description: 'Previous month button for a date picker calendar',\n        id: 'boxui.base.previousMonth',\n    },\n    nextMonth: {\n        defaultMessage: 'Next Month',\n        description: 'Next month button for a date picker calendar',\n        id: 'boxui.base.nextMonth',\n    },\n    iconAlertText: {\n        defaultMessage: 'Invalid Date',\n        description: 'Date entered is invalid',\n        id: 'boxui.datePicker.iconAlertText',\n    },\n    dateClearButton: {\n        defaultMessage: 'Clear Date',\n        description: 'Button for clearing date picker',\n        id: 'boxui.datePicker.dateClearButton',\n    },\n    chooseDate: {\n        defaultMessage: 'Choose Date',\n        description: 'Button for opening date picker',\n        id: 'boxui.datePicker.chooseDate',\n    },\n    dateInputRangeError: {\n        defaultMessage: 'Please enter a date between {minLocaleDate} and {maxLocaleDate}',\n        description: 'Error message when date is out of the minimum and maximum range',\n        id: 'boxui.datePicker.dateInputRangeError',\n    },\n    dateInputMaxError: {\n        defaultMessage: 'Please enter a date before {maxLocaleDate}',\n        description: 'Error message when date is later than the maximum date',\n        id: 'boxui.datePicker.dateInputMaxError',\n    },\n    dateInputMinError: {\n        defaultMessage: 'Please enter a date after {minLocaleDate}',\n        description: 'Error message when date is earlier than the minimum date',\n        id: 'boxui.datePicker.dateInputMinError',\n    },\n});\n\nconst TOGGLE_DELAY_MS = 300;\nconst ENTER_KEY = 'Enter';\nconst ESCAPE_KEY = 'Escape';\nconst TAB_KEY = 'Tab';\n\nconst ISO_DATE_FORMAT_PATTERN = /^\\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])$/;\n\nexport enum DateFormat {\n    ISO_STRING_DATE_FORMAT = 'isoString',\n    LOCALE_DATE_STRING_DATE_FORMAT = 'localeDateString',\n    UTC_TIME_DATE_FORMAT = 'utcTime',\n    UNIX_TIME_DATE_FORMAT = 'unixTime',\n    UTC_ISO_STRING_DATE_FORMAT = 'utcISOString',\n}\n\n/**\n * Converts date from being relative to GMT, to being relative to browser\n * timezone. E.g., Thu Jun 29 2017 00:00:00 GMT =>\n * Thu Jun 29 2017 00:00:00 GMT-0700 (PDT)\n * @param {Date} date UTC date\n * @returns {Date} date Local date\n */\nfunction convertUTCToLocal(date: Date) {\n    const dateString = date.toUTCString();\n    // Remove ` GMT` from the timestamp string\n    const dateStringWithoutTimeZone = dateString.slice(0, -4);\n    return new Date(dateStringWithoutTimeZone);\n}\n\nfunction getFormattedDate(date: Date | null, format: DateFormat) {\n    if (!date) {\n        return '';\n    }\n\n    let utcDate;\n\n    switch (format) {\n        case DateFormat.ISO_STRING_DATE_FORMAT:\n            return date.toISOString();\n        case DateFormat.LOCALE_DATE_STRING_DATE_FORMAT:\n            return date.toLocaleDateString();\n        case DateFormat.UTC_TIME_DATE_FORMAT:\n            return convertDateToUnixMidnightTime(date);\n        case DateFormat.UTC_ISO_STRING_DATE_FORMAT:\n            utcDate = new Date(convertDateToUnixMidnightTime(date));\n            return utcDate.toISOString();\n        default:\n            return date.getTime();\n    }\n}\n\nconst localesWhereWeekStartsOnSunday = ['en-US', 'en-CA', 'jp-JP'];\n\nexport interface DatePickerProps extends WrappedComponentProps {\n    /** Add a css class to the component */\n    className?: string;\n    /** Custom input field */\n    customInput?: React.ReactElement;\n    /** The format of the date value for form submit */\n    dateFormat?: DateFormat;\n    /** Some optional description */\n    description?: React.ReactNode;\n    /**\n     * The format of the date displayed in the input field\n     * @deprecated, will no longer be supported with accessible mode enabled (isAccessible = true)\n     */\n    displayFormat?: {\n        [key: string]: string;\n    };\n    /** Error message */\n    error?: React.ReactNode;\n    /** Position of error message tooltip */\n    errorTooltipPosition?: TooltipPosition;\n    /** Whether to show or hide the field's label */\n    hideLabel?: boolean;\n    /** Whether show or hide the 'Optional' label */\n    hideOptionalLabel?: boolean;\n    /** Props that will be applied on the input element */\n    inputProps?: Object;\n    /** Does the date input meet accessibility standards */\n    isAccessible?: boolean;\n    /** Is the calendar always visible */\n    isAlwaysVisible?: boolean;\n    /** Is input clearable */\n    isClearable?: boolean;\n    /** Is input disabled */\n    isDisabled?: boolean;\n    /** Is input required */\n    isRequired?: boolean;\n    /** Enables pikaday's default keyboard input support */\n    isKeyboardInputAllowed?: boolean;\n    /** Is user allowed to manually input a value (WARNING: this doesn't work with internationalization) */\n    isTextInputAllowed?: boolean;\n    /** Label displayed for the text input */\n    label: React.ReactNode;\n    /** The maximum date allowed to be selected */\n    maxDate?: Date;\n    /** The minimum date allowed to be selected */\n    minDate?: Date;\n    /** Name of the text input */\n    name?: string;\n    /** Called when input loses focus */\n    onBlur?: ((event: React.FocusEvent<HTMLInputElement>) => void) | undefined;\n    /** Called when input is changed, passed the selected Date */\n    onChange?: Function;\n    /** Called when input receives focus */\n    onFocus?: ((event: React.FocusEvent<HTMLInputElement>) => void) | undefined;\n    /** Placeholder for the text input */\n    placeholder?: string;\n    /** Resin tag */\n    resinTarget?: string;\n    /** Date to set the input */\n    value?: Date | null;\n    /** Number of years, or an array containing an upper and lower range */\n    yearRange?: number | Array<number>;\n}\n\ninterface DatePickerState {\n    /** Is the date input invalid */\n    isDateInputInvalid: boolean;\n    /** Shows error message tooltip for invalid date input */\n    showDateInputError: boolean;\n}\n\nclass DatePicker extends React.Component<DatePickerProps, DatePickerState> {\n    static defaultProps = {\n        className: '',\n        dateFormat: DateFormat.UNIX_TIME_DATE_FORMAT,\n        displayFormat: {},\n        error: '',\n        errorTooltipPosition: TooltipPosition.BOTTOM_LEFT,\n        inputProps: {},\n        isClearable: true,\n        isKeyboardInputAllowed: false,\n        isTextInputAllowed: false,\n        yearRange: 10,\n    };\n\n    state = {\n        isDateInputInvalid: false,\n        showDateInputError: false,\n    };\n\n    errorMessageID = uniqueId('errorMessage');\n\n    descriptionID = uniqueId('description');\n\n    componentDidMount() {\n        const {\n            customInput,\n            dateFormat,\n            displayFormat,\n            intl,\n            isAccessible,\n            isAlwaysVisible,\n            isTextInputAllowed,\n            maxDate,\n            minDate,\n            onChange,\n            value,\n            yearRange,\n        } = this.props;\n        const { formatDate, formatMessage } = intl;\n        const { nextMonth, previousMonth } = messages;\n        let defaultValue = value;\n\n        if (isAccessible && this.shouldUseAccessibleFallback()) {\n            this.canUseDateInputType = false;\n        }\n\n        // When date format is utcTime, initial date needs to be converted from being relative to GMT to being\n        // relative to browser timezone\n        if (dateFormat === DateFormat.UTC_TIME_DATE_FORMAT && value) {\n            defaultValue = convertUTCToLocal(value);\n\n            if (onChange) {\n                const formattedDate = this.formatValue(defaultValue);\n                onChange(defaultValue, formattedDate);\n            }\n        }\n        // Make sure the DST detection algorithm in browsers is up-to-date\n        const year = new Date().getFullYear();\n        const { timeZone } = displayFormat || {};\n        const i18n = {\n            previousMonth: formatMessage(previousMonth),\n            nextMonth: formatMessage(nextMonth),\n            months: range(12).map(month =>\n                formatDate(new Date(year, month, 15), {\n                    month: 'long',\n                    timeZone,\n                }),\n            ),\n            // weekdays must start with Sunday, so array of dates below is May 1st-8th, 2016\n            weekdays: range(1, 8).map(date =>\n                formatDate(new Date(2016, 4, date), {\n                    weekday: 'long',\n                    timeZone,\n                }),\n            ),\n            weekdaysShort: range(1, 8).map(date =>\n                formatDate(new Date(2016, 4, date), {\n                    weekday: 'narrow',\n                    timeZone,\n                }),\n            ),\n        };\n\n        // If \"bound\" is true (default), the DatePicker will be appended at the end of the document, with absolute positioning\n        // If \"bound\" is false, the DatePicker will be appended to the DOM right after the input, with relative positioning\n        const datePickerConfig: AccessiblePikadayOptions = {\n            bound: !customInput,\n            blurFieldOnSelect: false, // Available in pikaday > 1.5.1\n            setDefaultDate: true,\n            defaultDate: defaultValue === null ? undefined : defaultValue,\n            field: this.dateInputEl,\n            firstDay: localesWhereWeekStartsOnSunday.includes(intl.locale) ? 0 : 1,\n            maxDate,\n            minDate,\n            position: 'bottom left',\n            i18n,\n            showDaysInNextAndPreviousMonths: true,\n            onSelect: this.onSelectHandler,\n            yearRange,\n            toString: this.formatDisplay,\n        };\n\n        if (isAccessible) {\n            if (this.canUseDateInputType) {\n                delete datePickerConfig.field;\n                datePickerConfig.trigger = this.dateInputEl;\n                datePickerConfig.accessibleFieldEl = this.dateInputEl;\n                datePickerConfig.datePickerButtonEl = this.datePickerButtonEl;\n            }\n\n            datePickerConfig.parse = this.parseDisplayDateType;\n            datePickerConfig.toString = this.formatDisplayDateType;\n            datePickerConfig.keyboardInput = false;\n        }\n\n        this.datePicker = new AccessiblePikaday(datePickerConfig);\n\n        if (isTextInputAllowed) {\n            this.updateDateInputValue(this.formatDisplay(defaultValue));\n        }\n\n        if (isAlwaysVisible) {\n            this.datePicker.show();\n            this.datePicker.hide = noop;\n        }\n    }\n\n    // eslint-disable-next-line camelcase\n    UNSAFE_componentWillReceiveProps(nextProps: DatePickerProps) {\n        if (!this.datePicker) return;\n\n        const { value: nextValue = null, minDate: nextMinDate = null, maxDate: nextMaxDate = null } = nextProps;\n        const { value, minDate, maxDate, isTextInputAllowed } = this.props;\n        const selectedDate = this.datePicker && this.datePicker.getDate();\n\n        // only set date when props change\n        if (\n            (nextValue && !value) ||\n            (!nextValue && value) ||\n            (nextValue && value && nextValue.getTime() !== value.getTime())\n        ) {\n            this.datePicker.setDate(nextValue);\n        }\n        // If text input is allowed the dateInputEl will act as an uncontrolled input and\n        // we need to set formatted value manually.\n        if (isTextInputAllowed) {\n            this.updateDateInputValue(this.formatDisplay(nextValue));\n        }\n        if (\n            (nextMinDate && !minDate) ||\n            (nextMinDate && minDate) ||\n            (nextMinDate && minDate && nextMinDate.getTime() !== minDate.getTime())\n        ) {\n            this.datePicker.setMinDate(nextMinDate);\n\n            if (selectedDate && selectedDate < nextMinDate) {\n                this.datePicker.gotoDate(nextMinDate);\n            }\n        }\n        if (\n            (nextMaxDate && !maxDate) ||\n            (!nextMaxDate && maxDate) ||\n            (nextMaxDate && maxDate && nextMaxDate.getTime() !== maxDate.getTime())\n        ) {\n            this.datePicker.setMaxDate(nextMaxDate);\n\n            if (selectedDate && nextMaxDate && selectedDate > nextMaxDate) {\n                this.datePicker.gotoDate(nextMaxDate);\n            }\n        }\n    }\n\n    componentWillUnmount() {\n        if (this.datePicker) {\n            this.datePicker.destroy();\n        }\n    }\n\n    onSelectHandler = (date: Date | null = null) => {\n        const { onChange, isAccessible } = this.props;\n        const { isDateInputInvalid } = this.state;\n\n        if (onChange) {\n            const formattedDate = this.formatValue(date);\n            onChange(date, formattedDate);\n        }\n\n        if (isAccessible) {\n            if (this.dateInputEl && this.datePicker) {\n                // Required because Pikaday instance is unbound\n                // See https://github.com/Pikaday/Pikaday#usage\n                this.dateInputEl.value = this.datePicker.toString();\n            }\n            if (this.datePicker && this.datePicker.isVisible()) {\n                this.datePicker.hide();\n                this.focusDatePicker();\n            }\n        }\n\n        if (isDateInputInvalid) {\n            this.setState({ isDateInputInvalid: false, showDateInputError: false });\n        }\n    };\n\n    updateDateInputValue(value: string) {\n        if (this.dateInputEl) {\n            this.dateInputEl.value = value;\n        }\n    }\n\n    dateInputEl: HTMLInputElement | null | undefined;\n\n    datePicker: Pikaday | null = null;\n\n    datePickerButtonEl: HTMLButtonElement | HTMLDivElement | null | undefined;\n\n    // Used to detect when a fallback is necessary when isAccessible is enabled\n    canUseDateInputType = true;\n\n    // Used to prevent bad sequences of hide/show when toggling the datepicker button\n    shouldStayClosed = false;\n\n    focusDatePicker = () => {\n        // This also opens the date picker when isAccessible is disabled\n        if (this.dateInputEl) {\n            this.dateInputEl.focus();\n        }\n    };\n\n    getDateInputError = () => {\n        const { intl, maxDate = null, minDate = null } = this.props;\n        const { showDateInputError } = this.state;\n        const { formatMessage } = intl;\n\n        if (!showDateInputError) return '';\n\n        let dateInputError = '';\n        const maxLocaleDate = getFormattedDate(maxDate, DateFormat.LOCALE_DATE_STRING_DATE_FORMAT);\n        const minLocaleDate = getFormattedDate(minDate, DateFormat.LOCALE_DATE_STRING_DATE_FORMAT);\n\n        if (maxLocaleDate && minLocaleDate) {\n            dateInputError = formatMessage(messages.dateInputRangeError, { maxLocaleDate, minLocaleDate });\n        } else if (maxLocaleDate) {\n            dateInputError = formatMessage(messages.dateInputMaxError, { maxLocaleDate });\n        } else if (minLocaleDate) {\n            dateInputError = formatMessage(messages.dateInputMinError, { minLocaleDate });\n        }\n\n        return dateInputError;\n    };\n\n    handleInputKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n        const { isKeyboardInputAllowed, isTextInputAllowed, isAccessible } = this.props;\n\n        if (!isKeyboardInputAllowed && this.datePicker && this.datePicker.isVisible()) {\n            event.stopPropagation();\n        }\n\n        // Stops up/down arrow & spacebar from moving page scroll position since pikaday does not preventDefault correctly\n        if (!(isTextInputAllowed || isAccessible) && event.key !== TAB_KEY) {\n            event.preventDefault();\n        }\n\n        if ((isTextInputAllowed || (isAccessible && !this.canUseDateInputType)) && event.key === ENTER_KEY) {\n            event.preventDefault();\n        }\n\n        // Stops enter & spacebar from opening up the browser's default date picker\n        if (isAccessible && (event.key === ENTER_KEY || event.key === ' ')) {\n            event.preventDefault();\n        }\n\n        if (event.key === ENTER_KEY || event.key === ESCAPE_KEY || event.key === ' ') {\n            // Since pikaday auto-selects when you move the select box, enter/space don't do anything but close the date picker\n            if (this.datePicker && this.datePicker.isVisible()) {\n                this.datePicker.hide();\n            }\n        }\n    };\n\n    handleOnChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { isAccessible, maxDate, minDate, onChange } = this.props;\n        const { isDateInputInvalid } = this.state;\n\n        if (!isAccessible || !this.canUseDateInputType) {\n            return;\n        }\n\n        if (this.datePicker && this.datePicker.isVisible()) {\n            event.stopPropagation();\n        }\n\n        const { value } = event.target;\n        if (this.datePicker && value) {\n            const parsedDate = this.parseDisplayDateType(value);\n\n            if (parsedDate) {\n                if ((minDate && parsedDate < minDate) || (maxDate && parsedDate > maxDate)) {\n                    this.datePicker.setDate(null);\n                    this.setState({ isDateInputInvalid: true });\n                    return;\n                }\n                // Reset the error styling on valid date input\n                if (isDateInputInvalid) {\n                    this.setState({ isDateInputInvalid: false, showDateInputError: false });\n                }\n            } else {\n                this.setState({ isDateInputInvalid: true });\n            }\n\n            // Set date so Pikaday date picker value stays in sync with input\n            this.datePicker.setDate(parsedDate, true);\n\n            if (onChange) {\n                const formattedDate = this.formatValue(parsedDate);\n                onChange(parsedDate, formattedDate);\n            }\n        } else if (isDateInputInvalid) {\n            this.setState({ isDateInputInvalid: false, showDateInputError: false });\n        }\n    };\n\n    handleInputBlur = (event: React.FocusEvent<HTMLInputElement>) => {\n        const { isAccessible, isTextInputAllowed, onBlur } = this.props;\n        const { isDateInputInvalid } = this.state;\n        const nextActiveElement = event.relatedTarget || document.activeElement;\n\n        // This is mostly here to cancel out the pikaday hide() on blur\n        if (\n            this.datePicker &&\n            this.datePicker.isVisible() &&\n            nextActiveElement &&\n            nextActiveElement === this.datePickerButtonEl\n        ) {\n            this.shouldStayClosed = true;\n            setTimeout(() => {\n                this.shouldStayClosed = false;\n            }, TOGGLE_DELAY_MS);\n        }\n\n        if (onBlur) {\n            onBlur(event);\n        }\n\n        // Since we fire parent onChange event if isTextInputAllowed,\n        // fire it on blur if the user typed a correct date format\n        let inputDate: Date | null | undefined = null;\n\n        if (this.dateInputEl) {\n            let dateInputElVal = null;\n            if (isAccessible && !this.canUseDateInputType) {\n                dateInputElVal = this.parseDisplayDateType(this.dateInputEl.value);\n            }\n            inputDate = new Date(dateInputElVal || this.dateInputEl.value);\n        }\n\n        if ((isTextInputAllowed || (isAccessible && !this.canUseDateInputType)) && inputDate && inputDate.getDate()) {\n            this.onSelectHandler(inputDate);\n        }\n\n        if (isAccessible && isDateInputInvalid) this.setState({ showDateInputError: true });\n    };\n\n    handleButtonClick = (event: React.SyntheticEvent<HTMLButtonElement>) => {\n        event.preventDefault();\n        event.stopPropagation();\n        const { isAccessible, isDisabled } = this.props;\n\n        if (isAccessible) {\n            if (isDisabled || !this.datePicker) {\n                return;\n            }\n\n            if (this.datePicker.isVisible()) {\n                this.datePicker.hide();\n                this.focusDatePicker();\n            } else {\n                this.datePicker.show();\n            }\n            return;\n        }\n\n        if (!this.shouldStayClosed) {\n            this.focusDatePicker();\n        }\n    };\n\n    handleOnClick = (event: React.SyntheticEvent<HTMLInputElement>) => {\n        const { isAccessible } = this.props;\n\n        if (isAccessible) {\n            // Suppress Firefox default behavior: clicking on input type \"date\"\n            // opens the browser date picker.\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    formatDisplay = (date?: Date | null): string => {\n        const { displayFormat, intl } = this.props;\n        return date ? intl.formatDate(date, displayFormat) : '';\n    };\n\n    formatDisplayDateType = (date?: Date | null): string => {\n        // Input type \"date\" only accepts the format YYYY-MM-DD\n        return date ? getFormattedDate(date, DateFormat.UTC_ISO_STRING_DATE_FORMAT).slice(0, 10) : '';\n    };\n\n    parseDisplayDateType = (dateString?: string | null): Date | null => {\n        if (dateString && ISO_DATE_FORMAT_PATTERN.test(dateString)) {\n            // Calling new Date('YYYY-MM-DD') without 'T00:00:00' yields undesired results:\n            // E.g. new Date('2017-06-01') => May 31 2017\n            // E.g. new Date('2017-06-01T00:00:00') => June 01 2017\n            // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/Date#parameters\n            return new Date(`${dateString}T00:00:00`);\n        }\n        return null;\n    };\n\n    formatValue = (date: Date | null): string | number => {\n        const { dateFormat } = this.props;\n        return dateFormat ? getFormattedDate(date, dateFormat) : '';\n    };\n\n    clearDate = (event: React.SyntheticEvent<HTMLButtonElement>) => {\n        // Prevents the date picker from opening after clearing\n        event.preventDefault();\n        const { isAccessible } = this.props;\n\n        if (this.datePicker) {\n            this.datePicker.setDate(null);\n        }\n        this.onSelectHandler(null);\n\n        if (isAccessible) {\n            this.focusDatePicker();\n        }\n    };\n\n    /** Determines whether a new date input falls back to a text input or not */\n    shouldUseAccessibleFallback = (): boolean => {\n        const test = document.createElement('input');\n\n        try {\n            test.type = 'date';\n        } catch (e) {\n            // no-op\n        }\n\n        // If date input falls back to text input, show the fallback\n        return test.type === 'text';\n    };\n\n    renderCalendarButton = () => {\n        const { intl, isAccessible, isAlwaysVisible, isDisabled } = this.props;\n        const { formatMessage } = intl;\n\n        if (isAlwaysVisible) {\n            return null;\n        }\n\n        // De-emphasizing the Pikaday date picker because it does not meet accessibility standards\n        // Screenreaders & navigating via keyboard will no longer pick up on this element\n        const accessibleAttrs = isAccessible ? { 'aria-hidden': true, tabIndex: -1 } : {};\n\n        return (\n            <PlainButton\n                aria-label={formatMessage(messages.chooseDate)}\n                className=\"date-picker-open-btn\"\n                getDOMRef={ref => {\n                    this.datePickerButtonEl = ref;\n                }}\n                isDisabled={isDisabled}\n                onClick={this.handleButtonClick}\n                type={ButtonType.BUTTON}\n                {...accessibleAttrs}\n            >\n                <Calendar16 />\n            </PlainButton>\n        );\n    };\n\n    render() {\n        const {\n            className,\n            customInput,\n            description,\n            error,\n            errorTooltipPosition,\n            hideLabel,\n            hideOptionalLabel,\n            inputProps,\n            intl,\n            isAccessible,\n            isClearable,\n            isDisabled,\n            isRequired,\n            isTextInputAllowed,\n            label,\n            maxDate,\n            minDate,\n            name,\n            onFocus,\n            placeholder,\n            resinTarget,\n            value,\n        } = this.props;\n        const { isDateInputInvalid } = this.state;\n        const { formatMessage } = intl;\n\n        const errorMessage = error || this.getDateInputError();\n        const hasError = !!errorMessage || isDateInputInvalid;\n        const hasValue = !!value || isDateInputInvalid;\n\n        const classes = classNames(className, 'date-picker-wrapper', {\n            'show-clear-btn': isClearable && hasValue && !isDisabled,\n            'show-error': hasError,\n        });\n\n        const ariaAttrs = {\n            'aria-invalid': hasError,\n            'aria-required': isRequired,\n            'aria-errormessage': this.errorMessageID,\n            'aria-describedby': description ? this.descriptionID : undefined,\n        };\n\n        const resinTargetAttr = resinTarget ? { [RESIN_TAG_TARGET]: resinTarget } : {};\n\n        let valueAttr;\n        if (isAccessible) {\n            valueAttr = { defaultValue: this.formatDisplayDateType(value) };\n        } else if (isTextInputAllowed) {\n            valueAttr = { defaultValue: this.formatDisplay(value) };\n        } else {\n            valueAttr = { value: this.formatDisplay(value) };\n        }\n\n        let onChangeAttr;\n        if (isAccessible && this.canUseDateInputType) {\n            onChangeAttr = { onChange: this.handleOnChange };\n        } else if (isTextInputAllowed || (isAccessible && !this.canUseDateInputType)) {\n            onChangeAttr = {};\n        } else {\n            // Fixes prop type error about read-only field\n            // Not adding readOnly so constraint validation works\n            onChangeAttr = { onChange: noop };\n        }\n\n        let additionalAttrs;\n        if (isAccessible && this.canUseDateInputType) {\n            additionalAttrs = {\n                max: this.formatDisplayDateType(maxDate) || '9999-12-31',\n                min: this.formatDisplayDateType(minDate) || '0001-01-01',\n            };\n        } else if (isAccessible && !this.canUseDateInputType) {\n            // \"name\" prop is required for pattern validation to be surfaced on form submit. See components/form-elements/form/Form.js\n            // \"title\" prop is shown during constraint validation as a description of the pattern\n            // See https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/pattern#usability\n            additionalAttrs = { name, pattern: ISO_DATE_FORMAT_PATTERN.source, title: 'YYYY-MM-DD' };\n        } else {\n            additionalAttrs = {};\n        }\n\n        return (\n            <div className={classes}>\n                <span className=\"date-picker-icon-holder\">\n                    <Label hideLabel={hideLabel} showOptionalText={!hideOptionalLabel && !isRequired} text={label}>\n                        <>\n                            {!!description && (\n                                <div id={this.descriptionID} className=\"date-picker-description\">\n                                    {description}\n                                </div>\n                            )}\n                            <Tooltip\n                                className=\"date-picker-error-tooltip\"\n                                isShown={!!errorMessage}\n                                position={errorTooltipPosition}\n                                text={errorMessage || ''}\n                                theme={TooltipTheme.ERROR}\n                            >\n                                {customInput ? (\n                                    React.cloneElement(customInput, {\n                                        disabled: isDisabled,\n                                        ref: (ref: HTMLInputElement) => {\n                                            this.dateInputEl = ref;\n                                        },\n                                        required: isRequired,\n                                        ...resinTargetAttr,\n                                        ...ariaAttrs,\n                                    })\n                                ) : (\n                                    <input\n                                        ref={ref => {\n                                            this.dateInputEl = ref;\n                                        }}\n                                        className=\"date-picker-input\"\n                                        disabled={isDisabled}\n                                        onBlur={this.handleInputBlur}\n                                        onClick={this.handleOnClick}\n                                        placeholder={placeholder || formatMessage(messages.chooseDate)}\n                                        required={isRequired}\n                                        type={isAccessible && this.canUseDateInputType ? 'date' : 'text'}\n                                        {...onChangeAttr}\n                                        onFocus={onFocus}\n                                        onKeyDown={this.handleInputKeyDown}\n                                        {...resinTargetAttr}\n                                        {...ariaAttrs}\n                                        {...inputProps}\n                                        {...valueAttr}\n                                        {...additionalAttrs}\n                                    />\n                                )}\n                            </Tooltip>\n                            <span id={this.errorMessageID} className=\"accessibility-hidden\" role=\"alert\">\n                                {errorMessage}\n                            </span>\n                        </>\n                    </Label>\n                    {isClearable && hasValue && !isDisabled ? (\n                        <PlainButton\n                            aria-label={formatMessage(messages.dateClearButton)}\n                            className=\"date-picker-clear-btn\"\n                            onClick={this.clearDate}\n                            type={ButtonType.BUTTON}\n                        >\n                            <ClearBadge16 />\n                        </PlainButton>\n                    ) : null}\n                    {hasError ? (\n                        <AlertBadge16\n                            className=\"date-picker-icon-alert\"\n                            title={<FormattedMessage {...messages.iconAlertText} />}\n                        />\n                    ) : null}\n                    {this.renderCalendarButton()}\n                    <input\n                        className=\"date-picker-unix-time-input\"\n                        name={name}\n                        readOnly\n                        type=\"hidden\"\n                        value={value ? this.formatValue(value) : ''}\n                    />\n                </span>\n            </div>\n        );\n    }\n}\n\nexport { DatePicker as DatePickerBase };\nexport default injectIntl(DatePicker);\n"],"mappings":"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","ignoreList":[]}