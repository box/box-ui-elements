{"version":3,"file":"LoadingIndicatorWrapper.js","names":["React","classnames","LoadingIndicator","LoadingIndicatorSize","LoadingIndicatorWrapperPosition","LoadingIndicatorWrapper","_ref","children","className","crawlerPosition","CENTER","crawlerSize","DEFAULT","isLoading","hideContent","rest","_objectWithoutProperties","_excluded","crawlerPositionClassName","TOP","createElement","_extends","size"],"sources":["../../../src/components/loading-indicator/LoadingIndicatorWrapper.tsx"],"sourcesContent":["import * as React from 'react';\nimport classnames from 'classnames';\nimport LoadingIndicator, { LoadingIndicatorSize } from './LoadingIndicator';\nimport './LoadingIndicatorWrapper.scss';\n\nexport enum LoadingIndicatorWrapperPosition {\n    CENTER = 'center',\n    TOP = 'top',\n}\nexport interface LoadingIndicatorWrapperProps {\n    /** The content to wrap */\n    children: React.ReactChild;\n    /** Custom class for the loading indicator wrapper */\n    className?: string;\n    /** Location of the loading indicator - top, center */\n    crawlerPosition?: LoadingIndicatorWrapperPosition;\n    /** Size of the loading indicator - small, medium, large, default */\n    crawlerSize?: LoadingIndicatorSize;\n    /** Makes the background white hiding the content */\n    hideContent?: boolean;\n    /** Indicates whether loading indicator should show */\n    isLoading?: boolean;\n}\n\nconst LoadingIndicatorWrapper = ({\n    children,\n    className = '',\n    crawlerPosition = LoadingIndicatorWrapperPosition.CENTER,\n    crawlerSize = LoadingIndicatorSize.DEFAULT,\n    isLoading = false,\n    hideContent = false,\n    ...rest\n}: LoadingIndicatorWrapperProps) => {\n    const crawlerPositionClassName = classnames(\n        'loading-indicator-veil',\n        {\n            'is-with-top-crawler': crawlerPosition === LoadingIndicatorWrapperPosition.TOP,\n            'is-with-center-crawler': crawlerPosition === LoadingIndicatorWrapperPosition.CENTER,\n        },\n        hideContent ? 'hide-content' : 'blur-content',\n    );\n    return (\n        <div className={`loading-indicator-wrapper ${className}`} {...rest}>\n            {children}\n            {isLoading && (\n                <div className={crawlerPositionClassName}>\n                    <LoadingIndicator size={crawlerSize} />\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default LoadingIndicatorWrapper;\n"],"mappings":";;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,UAAU,MAAM,YAAY;AACnC,OAAOC,gBAAgB,IAAIC,oBAAoB,QAAQ,oBAAoB;AAC3E,OAAO,gCAAgC;AAEvC,WAAYC,+BAA+B,0BAA/BA,+BAA+B;EAA/BA,+BAA+B;EAA/BA,+BAA+B;EAAA,OAA/BA,+BAA+B;AAAA;AAmB3C,MAAMC,uBAAuB,GAAGC,IAAA,IAQI;EAAA,IARH;MAC7BC,QAAQ;MACRC,SAAS,GAAG,EAAE;MACdC,eAAe,GAAGL,+BAA+B,CAACM,MAAM;MACxDC,WAAW,GAAGR,oBAAoB,CAACS,OAAO;MAC1CC,SAAS,GAAG,KAAK;MACjBC,WAAW,GAAG;IAEY,CAAC,GAAAR,IAAA;IADxBS,IAAI,GAAAC,wBAAA,CAAAV,IAAA,EAAAW,SAAA;EAEP,MAAMC,wBAAwB,GAAGjB,UAAU,CACvC,wBAAwB,EACxB;IACI,qBAAqB,EAAEQ,eAAe,KAAKL,+BAA+B,CAACe,GAAG;IAC9E,wBAAwB,EAAEV,eAAe,KAAKL,+BAA+B,CAACM;EAClF,CAAC,EACDI,WAAW,GAAG,cAAc,GAAG,cACnC,CAAC;EACD,oBACId,KAAA,CAAAoB,aAAA,QAAAC,QAAA;IAAKb,SAAS,EAAE,6BAA6BA,SAAS;EAAG,GAAKO,IAAI,GAC7DR,QAAQ,EACRM,SAAS,iBACNb,KAAA,CAAAoB,aAAA;IAAKZ,SAAS,EAAEU;EAAyB,gBACrClB,KAAA,CAAAoB,aAAA,CAAClB,gBAAgB;IAACoB,IAAI,EAAEX;EAAY,CAAE,CACrC,CAER,CAAC;AAEd,CAAC;AAED,eAAeN,uBAAuB","ignoreList":[]}