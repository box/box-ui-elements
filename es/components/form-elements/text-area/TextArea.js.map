{"version":3,"file":"TextArea.js","names":["React","TextAreaCore","messages","FormInput","TextArea","Component","constructor","props","_defineProperty","currentTarget","value","state","error","setState","checkValidity","valid","undefined","setErrorFromValidityState","isRequired","validation","textarea","trim","length","setCustomValidity","code","validity","componentDidUpdate","prevValue","validityState","badInput","customError","tooLong","valueMissing","maxLength","render","autoFocus","className","isDisabled","isReadOnly","isResizable","label","name","placeholder","createElement","onValidityStateUpdate","onValidityStateUpdateHandler","disabled","message","onBlur","onChange","readOnly","textareaRef"],"sources":["../../../../src/components/form-elements/text-area/TextArea.js"],"sourcesContent":["// @flow\nimport * as React from 'react';\n\nimport TextAreaCore from '../../text-area';\n\nimport * as messages from '../input-messages';\nimport FormInput from '../form/FormInput';\n\ntype Props = {\n    autoFocus?: boolean,\n    /** Add a class to the component */\n    className?: string,\n    isDisabled?: boolean,\n    isReadOnly?: boolean,\n    isRequired?: boolean,\n    /** Is text area resizable */\n    isResizable?: boolean,\n    /** Label displayed for the text area */\n    label: React.Node,\n    maxLength?: number,\n    /** Name of the text area */\n    name: string,\n    /** Placeholder for the text area */\n    placeholder?: string,\n    /** Validation function that returns an error string or a promise that resolves to an error string */\n    validation?: Function,\n    /** Default value of the text area */\n    value: string,\n};\n\ntype State = {\n    error: Object | null,\n    value: string,\n};\n\nclass TextArea extends React.Component<Props, State> {\n    static defaultProps = {\n        autoFocus: false,\n        value: '',\n        isReadOnly: false,\n    };\n\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            error: null,\n            value: props.value,\n        };\n    }\n\n    componentDidUpdate({ value: prevValue }: Props) {\n        // If a new value is passed by prop, set it\n        if (prevValue !== this.props.value) {\n            this.setState({\n                value: this.props.value,\n            });\n        }\n    }\n\n    onChange = ({ currentTarget }: SyntheticEvent<HTMLTextAreaElement>) => {\n        const { value } = currentTarget;\n        if (this.state.error) {\n            this.setState(\n                {\n                    value,\n                },\n                this.checkValidity,\n            );\n        } else {\n            this.setState({\n                value,\n            });\n        }\n    };\n\n    onValidityStateUpdateHandler = (error: Object) => {\n        if (error.valid !== undefined) {\n            this.setErrorFromValidityState(error);\n        } else {\n            this.setState({\n                error,\n            });\n        }\n    };\n\n    setErrorFromValidityState(validityState: ValidityState) {\n        const { badInput, customError, tooLong, valid, valueMissing } = validityState;\n\n        const { isRequired, maxLength, validation } = this.props;\n\n        const { value } = this.state;\n\n        let error;\n\n        if (valid) {\n            error = null;\n        } else if (badInput) {\n            error = messages.badInput();\n        } else if (tooLong && typeof maxLength !== 'undefined') {\n            error = messages.tooLong(maxLength);\n        } else if (valueMissing) {\n            error = messages.valueMissing();\n        } else if (customError && (isRequired || value.trim().length) && validation) {\n            error = validation(value);\n        }\n\n        this.setState({\n            error,\n        });\n    }\n\n    textarea: ?HTMLTextAreaElement;\n\n    // Updates component value and validity state\n    checkValidity = () => {\n        const { isRequired, validation } = this.props;\n        const { textarea } = this;\n\n        if (!textarea) {\n            return;\n        }\n\n        if (validation && (isRequired || textarea.value.trim().length)) {\n            const error = validation(textarea.value);\n            this.setState({\n                error,\n                value: textarea.value,\n            });\n\n            if (error) {\n                textarea.setCustomValidity(error.code);\n            } else {\n                textarea.setCustomValidity('');\n            }\n        } else {\n            this.setErrorFromValidityState(textarea.validity);\n        }\n    };\n\n    render() {\n        const {\n            autoFocus,\n            className = '',\n            isDisabled,\n            isReadOnly,\n            isRequired,\n            isResizable,\n            label,\n            name,\n            placeholder,\n        } = this.props;\n\n        const { error, value } = this.state;\n\n        return (\n            <div className={className}>\n                <FormInput name={name} onValidityStateUpdate={this.onValidityStateUpdateHandler}>\n                    <TextAreaCore\n                        autoFocus={autoFocus}\n                        disabled={isDisabled}\n                        error={error ? error.message : null}\n                        label={label}\n                        isRequired={isRequired}\n                        isResizable={isResizable}\n                        name={name}\n                        onBlur={this.checkValidity}\n                        onChange={this.onChange}\n                        placeholder={placeholder}\n                        readOnly={isReadOnly}\n                        textareaRef={textarea => {\n                            this.textarea = textarea;\n                        }}\n                        value={value}\n                    />\n                </FormInput>\n            </div>\n        );\n    }\n}\n\nexport default TextArea;\n"],"mappings":";;;AACA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAE9B,OAAOC,YAAY,MAAM,iBAAiB;AAE1C,OAAO,KAAKC,QAAQ,MAAM,mBAAmB;AAC7C,OAAOC,SAAS,MAAM,mBAAmB;AA6BzC,MAAMC,QAAQ,SAASJ,KAAK,CAACK,SAAS,CAAe;EAOjDC,WAAWA,CAACC,KAAY,EAAE;IACtB,KAAK,CAACA,KAAK,CAAC;IAACC,eAAA,mBAgBN,CAAC;MAAEC;IAAmD,CAAC,KAAK;MACnE,MAAM;QAAEC;MAAM,CAAC,GAAGD,aAAa;MAC/B,IAAI,IAAI,CAACE,KAAK,CAACC,KAAK,EAAE;QAClB,IAAI,CAACC,QAAQ,CACT;UACIH;QACJ,CAAC,EACD,IAAI,CAACI,aACT,CAAC;MACL,CAAC,MAAM;QACH,IAAI,CAACD,QAAQ,CAAC;UACVH;QACJ,CAAC,CAAC;MACN;IACJ,CAAC;IAAAF,eAAA,uCAE+BI,KAAa,IAAK;MAC9C,IAAIA,KAAK,CAACG,KAAK,KAAKC,SAAS,EAAE;QAC3B,IAAI,CAACC,yBAAyB,CAACL,KAAK,CAAC;MACzC,CAAC,MAAM;QACH,IAAI,CAACC,QAAQ,CAAC;UACVD;QACJ,CAAC,CAAC;MACN;IACJ,CAAC;IA8BD;IAAAJ,eAAA,wBACgB,MAAM;MAClB,MAAM;QAAEU,UAAU;QAAEC;MAAW,CAAC,GAAG,IAAI,CAACZ,KAAK;MAC7C,MAAM;QAAEa;MAAS,CAAC,GAAG,IAAI;MAEzB,IAAI,CAACA,QAAQ,EAAE;QACX;MACJ;MAEA,IAAID,UAAU,KAAKD,UAAU,IAAIE,QAAQ,CAACV,KAAK,CAACW,IAAI,CAAC,CAAC,CAACC,MAAM,CAAC,EAAE;QAC5D,MAAMV,KAAK,GAAGO,UAAU,CAACC,QAAQ,CAACV,KAAK,CAAC;QACxC,IAAI,CAACG,QAAQ,CAAC;UACVD,KAAK;UACLF,KAAK,EAAEU,QAAQ,CAACV;QACpB,CAAC,CAAC;QAEF,IAAIE,KAAK,EAAE;UACPQ,QAAQ,CAACG,iBAAiB,CAACX,KAAK,CAACY,IAAI,CAAC;QAC1C,CAAC,MAAM;UACHJ,QAAQ,CAACG,iBAAiB,CAAC,EAAE,CAAC;QAClC;MACJ,CAAC,MAAM;QACH,IAAI,CAACN,yBAAyB,CAACG,QAAQ,CAACK,QAAQ,CAAC;MACrD;IACJ,CAAC;IA7FG,IAAI,CAACd,KAAK,GAAG;MACTC,KAAK,EAAE,IAAI;MACXF,KAAK,EAAEH,KAAK,CAACG;IACjB,CAAC;EACL;EAEAgB,kBAAkBA,CAAC;IAAEhB,KAAK,EAAEiB;EAAiB,CAAC,EAAE;IAC5C;IACA,IAAIA,SAAS,KAAK,IAAI,CAACpB,KAAK,CAACG,KAAK,EAAE;MAChC,IAAI,CAACG,QAAQ,CAAC;QACVH,KAAK,EAAE,IAAI,CAACH,KAAK,CAACG;MACtB,CAAC,CAAC;IACN;EACJ;EA4BAO,yBAAyBA,CAACW,aAA4B,EAAE;IACpD,MAAM;MAAEC,QAAQ;MAAEC,WAAW;MAAEC,OAAO;MAAEhB,KAAK;MAAEiB;IAAa,CAAC,GAAGJ,aAAa;IAE7E,MAAM;MAAEV,UAAU;MAAEe,SAAS;MAAEd;IAAW,CAAC,GAAG,IAAI,CAACZ,KAAK;IAExD,MAAM;MAAEG;IAAM,CAAC,GAAG,IAAI,CAACC,KAAK;IAE5B,IAAIC,KAAK;IAET,IAAIG,KAAK,EAAE;MACPH,KAAK,GAAG,IAAI;IAChB,CAAC,MAAM,IAAIiB,QAAQ,EAAE;MACjBjB,KAAK,GAAGV,QAAQ,CAAC2B,QAAQ,CAAC,CAAC;IAC/B,CAAC,MAAM,IAAIE,OAAO,IAAI,OAAOE,SAAS,KAAK,WAAW,EAAE;MACpDrB,KAAK,GAAGV,QAAQ,CAAC6B,OAAO,CAACE,SAAS,CAAC;IACvC,CAAC,MAAM,IAAID,YAAY,EAAE;MACrBpB,KAAK,GAAGV,QAAQ,CAAC8B,YAAY,CAAC,CAAC;IACnC,CAAC,MAAM,IAAIF,WAAW,KAAKZ,UAAU,IAAIR,KAAK,CAACW,IAAI,CAAC,CAAC,CAACC,MAAM,CAAC,IAAIH,UAAU,EAAE;MACzEP,KAAK,GAAGO,UAAU,CAACT,KAAK,CAAC;IAC7B;IAEA,IAAI,CAACG,QAAQ,CAAC;MACVD;IACJ,CAAC,CAAC;EACN;EA8BAsB,MAAMA,CAAA,EAAG;IACL,MAAM;MACFC,SAAS;MACTC,SAAS,GAAG,EAAE;MACdC,UAAU;MACVC,UAAU;MACVpB,UAAU;MACVqB,WAAW;MACXC,KAAK;MACLC,IAAI;MACJC;IACJ,CAAC,GAAG,IAAI,CAACnC,KAAK;IAEd,MAAM;MAAEK,KAAK;MAAEF;IAAM,CAAC,GAAG,IAAI,CAACC,KAAK;IAEnC,oBACIX,KAAA,CAAA2C,aAAA;MAAKP,SAAS,EAAEA;IAAU,gBACtBpC,KAAA,CAAA2C,aAAA,CAACxC,SAAS;MAACsC,IAAI,EAAEA,IAAK;MAACG,qBAAqB,EAAE,IAAI,CAACC;IAA6B,gBAC5E7C,KAAA,CAAA2C,aAAA,CAAC1C,YAAY;MACTkC,SAAS,EAAEA,SAAU;MACrBW,QAAQ,EAAET,UAAW;MACrBzB,KAAK,EAAEA,KAAK,GAAGA,KAAK,CAACmC,OAAO,GAAG,IAAK;MACpCP,KAAK,EAAEA,KAAM;MACbtB,UAAU,EAAEA,UAAW;MACvBqB,WAAW,EAAEA,WAAY;MACzBE,IAAI,EAAEA,IAAK;MACXO,MAAM,EAAE,IAAI,CAAClC,aAAc;MAC3BmC,QAAQ,EAAE,IAAI,CAACA,QAAS;MACxBP,WAAW,EAAEA,WAAY;MACzBQ,QAAQ,EAAEZ,UAAW;MACrBa,WAAW,EAAE/B,QAAQ,IAAI;QACrB,IAAI,CAACA,QAAQ,GAAGA,QAAQ;MAC5B,CAAE;MACFV,KAAK,EAAEA;IAAM,CAChB,CACM,CACV,CAAC;EAEd;AACJ;AAACF,eAAA,CA/IKJ,QAAQ,kBACY;EAClB+B,SAAS,EAAE,KAAK;EAChBzB,KAAK,EAAE,EAAE;EACT4B,UAAU,EAAE;AAChB,CAAC;AA4IL,eAAelC,QAAQ","ignoreList":[]}