{"version":3,"file":"Form.js","names":["PropTypes","React","Component","serialize","getFormValidityState","form","slice","call","elements","reduce","validityObj","inputEl","name","validity","valid","validityState","customError","customErrorCode","validationMessage","Form","constructor","props","_defineProperty","currentTarget","onChange","formData","hash","empty","event","target","preventDefault","isValid","checkValidity","onInvalidSubmit","onValidSubmit","registeredInputs","state","formValidityState","Object","keys","forEach","key","setValidityStateHandler","Error","nextState","setState","getChildContext","registerInput","bind","unregisterInput","componentDidUpdate","prevFormValidityState","render","children","createElement","noValidate","onSubmit","node","func","isRequired","object","shape"],"sources":["../../../../src/components/form-elements/form/Form.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport serialize from 'form-serialize';\n\nfunction getFormValidityState(form) {\n    // Turn the form.elements HTMLCollection into Array before reducing\n    return [].slice.call(form.elements).reduce((validityObj, inputEl) => {\n        // Only serialize inputs that have a name defined\n        if (inputEl.name && !inputEl.validity.valid) {\n            const validityState = inputEl.validity;\n\n            if (inputEl.validity.customError) {\n                // If the input is displaying a custom error,\n                // we expose the errorCode stored in the validationMessage\n                validityState.customErrorCode = inputEl.validationMessage;\n            }\n\n            validityObj[inputEl.name] = {\n                validityState,\n            };\n            return validityObj;\n        }\n        return validityObj;\n    }, {});\n}\n\nclass Form extends Component {\n    static propTypes = {\n        children: PropTypes.node,\n        /** Called when an input in the form changes */\n        onChange: PropTypes.func,\n        /** Called when a valid submit is made */\n        onValidSubmit: PropTypes.func.isRequired,\n        /** Called when an invalid submit is made */\n        onInvalidSubmit: PropTypes.func,\n        /** An object mapping input names to error messages */\n        formValidityState: PropTypes.object, // eslint-disable-line react/no-unused-prop-types\n    };\n\n    static childContextTypes = {\n        form: PropTypes.shape({\n            registerInput: PropTypes.func.isRequired,\n            unregisterInput: PropTypes.func.isRequired,\n        }).isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            registeredInputs: {},\n        };\n    }\n\n    getChildContext() {\n        return {\n            form: {\n                registerInput: this.registerInput.bind(this),\n                unregisterInput: this.unregisterInput.bind(this),\n            },\n        };\n    }\n\n    componentDidUpdate({ formValidityState: prevFormValidityState }) {\n        const { formValidityState } = this.props;\n        const { registeredInputs } = this.state;\n\n        if (formValidityState !== prevFormValidityState) {\n            Object.keys(formValidityState).forEach(key => {\n                if (registeredInputs[key]) {\n                    registeredInputs[key](formValidityState[key]);\n                }\n            });\n        }\n    }\n\n    onChange = ({ currentTarget }) => {\n        if (this.props.onChange) {\n            const formData = serialize(currentTarget, {\n                hash: true,\n                empty: true,\n            });\n            this.props.onChange(formData);\n        }\n    };\n\n    onSubmit = event => {\n        const form = event.target;\n        event.preventDefault();\n        const isValid = form.checkValidity();\n        const { onInvalidSubmit, onValidSubmit } = this.props;\n        const { registeredInputs } = this.state;\n\n        if (isValid) {\n            const formData = serialize(form, { hash: true, empty: true });\n            onValidSubmit(formData);\n        } else {\n            const formValidityState = getFormValidityState(form);\n\n            // Push form validity state to inputs so errors are shown on submit\n            Object.keys(formValidityState).forEach(\n                key => registeredInputs[key] && registeredInputs[key](formValidityState[key].validityState),\n            );\n\n            if (onInvalidSubmit) {\n                onInvalidSubmit(formValidityState);\n            }\n        }\n    };\n\n    registerInput = (name, setValidityStateHandler) => {\n        const { registeredInputs } = this.state;\n\n        if (registeredInputs[name]) {\n            throw new Error(`Input '${name}' is already registered.`);\n        }\n\n        const nextState = this.state;\n        nextState.registeredInputs[name] = setValidityStateHandler;\n        this.setState(nextState);\n    };\n\n    unregisterInput = name => {\n        const nextState = this.state;\n        delete nextState.registeredInputs[name];\n        this.setState(nextState);\n    };\n\n    render() {\n        const { children } = this.props;\n        return (\n            <form noValidate onChange={this.onChange} onSubmit={this.onSubmit}>\n                {children}\n            </form>\n        );\n    }\n}\n\nexport default Form;\n"],"mappings":"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","ignoreList":[]}