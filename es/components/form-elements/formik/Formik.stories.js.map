{"version":3,"file":"Formik.stories.js","names":["React","Field","Form","Formik","TextInput","TextArea","Toggle","Checkbox","SelectField","PillSelectorDropdownField","DatalistItem","RadioButton","RadioButtonField","RadioGroup","notes","basic","pillSelectorValidator","option","value","includes","createElement","initialValues","checkbox","pillselector","radiogroup","textarea","textinput","toggle","onSubmit","validate","values","errors","Array","isArray","every","pill","props","Fragment","style","display","name","label","component","isRequired","type","placeholder","isSelected","options","displayText","multiple","description","validator","dropdownRenderer","map","key","color","background","fontSize","padding","float","JSON","stringify","title","parameters"],"sources":["../../../../src/components/form-elements/formik/Formik.stories.js"],"sourcesContent":["// @flow\nimport * as React from 'react';\nimport { Field, Form, Formik } from 'formik';\n\nimport TextInput from '../../text-input/TextInput';\nimport TextArea from '../../text-area/TextAreaField';\nimport Toggle from '../../toggle/ToggleField';\nimport Checkbox from '../../checkbox/CheckboxField';\nimport SelectField from '../../select-field/SelectField';\nimport PillSelectorDropdownField from '../../pill-selector-dropdown/PillSelectorDropdownField';\nimport DatalistItem from '../../datalist-item/DatalistItem';\n\nimport { RadioButton, RadioButtonField, RadioGroup } from '../../radio';\n\nimport notes from './Formik.stories.md';\n\nexport const basic = () => {\n    const pillSelectorValidator = option => {\n        const value = typeof option === 'string' ? option : option.value;\n        return ['red', 'green', 'blue', 'yellow', 'white', 'black'].includes(value);\n    };\n\n    return (\n        <Formik\n            initialValues={{\n                checkbox: true,\n                pillselector: [],\n                radiogroup: 'red',\n                textarea: 'textarea',\n                textinput: 'textinput',\n                toggle: true,\n            }}\n            onSubmit={() => null}\n            validate={values => {\n                const errors = {};\n                const { textinput, textarea, pillselector } = values;\n\n                if (!textinput) {\n                    errors.textinput = 'Required';\n                }\n\n                if (!textarea) {\n                    errors.textarea = 'Required';\n                }\n\n                if (Array.isArray(pillselector) && !pillselector.every(pill => pillSelectorValidator(pill))) {\n                    errors.pillselector = 'Bad colors';\n                }\n\n                return errors;\n            }}\n        >\n            {props => (\n                <>\n                    <Form\n                        style={{\n                            display: 'inline-block',\n                        }}\n                    >\n                        <Field name=\"checkbox\" label=\"Checkbox Field\" component={Checkbox} />\n                        <Field name=\"toggle\" label=\"Toggle Field\" component={Toggle} />\n                        <Field\n                            isRequired\n                            label=\"Text Input Field\"\n                            name=\"textinput\"\n                            type=\"text\"\n                            placeholder=\"Text Input Field\"\n                            component={TextInput}\n                        />\n                        <Field\n                            isRequired\n                            label=\"Text Area Field\"\n                            name=\"textarea\"\n                            placeholder=\"Text Area Field\"\n                            component={TextArea}\n                        />\n                        <b>Non-RadioGroup RadioButtons sharing the same name</b>\n                        <br />\n                        <br />\n                        <Field\n                            isSelected={false}\n                            label=\"Radio Button Field 1\"\n                            name=\"radiobutton\"\n                            component={RadioButtonField}\n                            value=\"radio1\"\n                        />\n                        <Field\n                            isSelected={false}\n                            label=\"Radio Button Field 2\"\n                            name=\"radiobutton\"\n                            component={RadioButtonField}\n                            value=\"radio2\"\n                        />\n                        <br />\n                        <Field\n                            label=\"Single Select Field\"\n                            name=\"singleselect\"\n                            placeholder=\"Single Select Field\"\n                            options={[\n                                { displayText: 'Red', value: 'red' },\n                                { displayText: 'Green', value: 'green' },\n                                { displayText: 'Blue', value: 'blue' },\n                            ]}\n                            component={SelectField}\n                        />\n                        <br />\n                        <br />\n                        <Field\n                            label=\"Multi Select Field\"\n                            name=\"multiselect\"\n                            placeholder=\"Multi Select Field\"\n                            multiple\n                            options={[\n                                { displayText: 'Red', value: 'red' },\n                                { displayText: 'Green', value: 'green' },\n                                { displayText: 'Blue', value: 'blue' },\n                            ]}\n                            component={SelectField}\n                        />\n                        <br />\n                        <br />\n                        <b>RadioGroup-ed RadioButtons</b>\n                        <br />\n                        <br />\n                        <Field name=\"radiogroup\" component={RadioGroup}>\n                            <RadioButton label=\"Red\" value=\"red\" description=\"Red color\" />\n                            <RadioButton label=\"Blue\" value=\"blue\" description=\"Blue color\" />\n                        </Field>\n                        <br />\n                        <br />\n                        <Field\n                            label=\"Pill Selector Field\"\n                            name=\"pillselector\"\n                            placeholder=\"Colors\"\n                            component={PillSelectorDropdownField}\n                            validator={pillSelectorValidator}\n                        />\n                        <br />\n                        <br />\n                        <Field\n                            label=\"Pill Selector Field With Dropdown\"\n                            name=\"pillselectordropdown\"\n                            placeholder=\"Colors\"\n                            options={[\n                                { displayText: 'Red', value: 'red' },\n                                { displayText: 'Green', value: 'green' },\n                                { displayText: 'Blue', value: 'blue' },\n                            ]}\n                            component={PillSelectorDropdownField}\n                            validator={pillSelectorValidator}\n                            dropdownRenderer={options =>\n                                options.map(option => (\n                                    <DatalistItem key={option.value} style={{ color: option.value }}>\n                                        {option.displayText}\n                                    </DatalistItem>\n                                ))\n                            }\n                        />\n                    </Form>\n                    <pre\n                        style={{\n                            color: '#fff',\n                            background: '#0061D5',\n                            fontSize: '14px',\n                            padding: '.5rem',\n                            float: 'right',\n                            display: 'inline-block',\n                        }}\n                    >\n                        <strong>Formik State</strong> = {JSON.stringify(props, null, 2)}\n                    </pre>\n                </>\n            )}\n        </Formik>\n    );\n};\n\nexport default {\n    title: 'Components/Formik Elements',\n    parameters: {\n        notes,\n    },\n};\n"],"mappings":"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","ignoreList":[]}