{"version":3,"file":"Menu.js","names":["React","omit","classNames","MenuContext","MENU_ITEM_SELECTOR","TOP_LEVEL_MENU_ITEM_SELECTOR","SUBMENU_ITEM_SELECTOR","stopPropagationAndPreventDefault","event","stopPropagation","preventDefault","Menu","Component","constructor","props","_defineProperty","initialFocusIndex","isHidden","undefined","setTimeout","setFocus","menuEl","focus","isSubmenu","menuItemSelector","selector","menuItemEls","slice","call","querySelectorAll","target","menuItemEl","menuIndex","i","length","contains","index","numMenuItems","focusIndex","isKeyboardEvent","onClose","Node","getMenuItemElFromEventTarget","fireOnCloseHandler","key","keyboardPressed","focusFirstItem","focusNextItem","focusPreviousItem","focusLastItem","HTMLElement","click","componentDidMount","setMenuItemEls","setInitialFocusIndex","componentDidUpdate","prevIsHidden","children","prevChildren","Children","toArray","focusedMenuItemEl","isFocusedElementMissing","isFocusIndexOutOfBounds","render","_this$props","className","setRef","shouldOutlineFocus","rest","_objectWithoutProperties","_excluded","menuProps","ref","role","tabIndex","onClick","handleClick","onKeyDown","handleKeyDown","createElement","Provider","value","closeMenu"],"sources":["../../../src/components/menu/Menu.tsx"],"sourcesContent":["import * as React from 'react';\nimport omit from 'lodash/omit';\nimport classNames from 'classnames';\n\nimport MenuContext from './MenuContext';\n\nimport './Menu.scss';\n\n/**\n * The selectors are used to identify the menu item that is selected. We need to eventually\n * rewrite this logic as there seem to be strong coupling between the selector and MenuItem\n * that we want to decouple. The span is here to allow Menu to recognize MenuItem even if it is\n * wrapped by a span coming from a tooltip.\n */\nconst MENU_ITEM_SELECTOR = '.menu-item:not([aria-disabled])';\nconst TOP_LEVEL_MENU_ITEM_SELECTOR = `ul:not(.submenu) > ${MENU_ITEM_SELECTOR}, ul:not(.submenu) > li > ${MENU_ITEM_SELECTOR}, ul:not(.submenu) > span > ${MENU_ITEM_SELECTOR}`;\nconst SUBMENU_ITEM_SELECTOR = `ul.submenu > ${MENU_ITEM_SELECTOR}, ul.submenu > li > ${MENU_ITEM_SELECTOR}, ul.submenu > span > ${MENU_ITEM_SELECTOR}`;\n\nfunction stopPropagationAndPreventDefault(event: React.KeyboardEvent<HTMLElement>) {\n    event.stopPropagation();\n    event.preventDefault();\n}\n\ninterface MenuProps {\n    /** children - menu items */\n    children: Array<React.ReactNode> | Array<React.ReactChild> | React.ReactChild;\n    /** className - CSS class name for the menu */\n    className: string;\n    /** initialFocusIndex - focuses a specific menu item index when menu is mounted */\n    initialFocusIndex?: number;\n    /** isHidden - whether the menuâ€™s content is hidden */\n    isHidden?: boolean;\n    /** isSubmenu - whether this is a submenu of another menu */\n    isSubmenu?: boolean;\n    /** menuItemSelector - overrides the default menu selector */\n    menuItemSelector?: string;\n    /** onClick - function called when the menu is clicked */\n    onClick?: (event: React.MouseEvent<HTMLUListElement, MouseEvent>) => void;\n    /** onClick - function called when the menu is closed */\n    onClose?: (\n        isKeyboardEvent?: boolean,\n        event?: React.MouseEvent<HTMLUListElement, MouseEvent> | React.KeyboardEvent<HTMLElement>,\n    ) => void;\n    /** onClick - function called when a key is pressed within the menu */\n    onKeyDown?: (event: React.KeyboardEvent<HTMLUListElement>) => void;\n    /** ref - reference to the menu element in the DOM */\n    ref?: string | ((instance: HTMLUListElement | null) => void) | React.RefObject<HTMLUListElement> | null | undefined;\n    /** role - ARIA role for the menu */\n    role?: string;\n    /** setRef - will fire this callback when menu should \"close' */\n    setRef?: Function;\n    /** shouldOutlineFocus - whether the focused menu item should have an outline */\n    shouldOutlineFocus?: boolean;\n    /** tabIndex - indicator of whether the menu is focusable */\n    tabIndex?: number;\n}\n\nclass Menu extends React.Component<MenuProps> {\n    static defaultProps = {\n        className: '',\n        isSubmenu: false,\n        isHidden: false,\n    };\n\n    constructor(props: MenuProps) {\n        super(props);\n\n        this.focusIndex = 0;\n        this.menuEl = null;\n        this.menuItemEls = [];\n    }\n\n    componentDidMount() {\n        this.setMenuItemEls();\n        this.setInitialFocusIndex();\n    }\n\n    componentDidUpdate({ isHidden: prevIsHidden, children: prevChildren }: MenuProps) {\n        const { children, isHidden, isSubmenu } = this.props;\n\n        if (isSubmenu && prevIsHidden && !isHidden) {\n            // If updating submenu, use the current props instead of previous props.\n            this.setMenuItemEls();\n            this.setInitialFocusIndex(this.props);\n        }\n\n        // update focus index and menu item elements when the number of children changes\n        if (React.Children.toArray(prevChildren).length !== React.Children.toArray(children).length) {\n            const focusedMenuItemEl = this.menuItemEls[this.focusIndex];\n            this.setMenuItemEls();\n            const { menuIndex } = this.getMenuItemElFromEventTarget(focusedMenuItemEl);\n\n            const isFocusedElementMissing = menuIndex === -1;\n            const isFocusIndexOutOfBounds = this.focusIndex >= this.menuItemEls.length;\n\n            this.setFocus(isFocusedElementMissing && !isFocusIndexOutOfBounds ? this.focusIndex : menuIndex);\n        }\n    }\n\n    setInitialFocusIndex = (props: MenuProps = this.props) => {\n        const { initialFocusIndex, isHidden } = props;\n\n        if (isHidden || initialFocusIndex === undefined) {\n            return;\n        }\n\n        // If an initialFocusIndex was specified, attempt to use it to focus\n        if (typeof initialFocusIndex === 'number') {\n            // We do this after a timeout so that the menu is properly mounted before we attempt to focus it\n            setTimeout(() => {\n                this.setFocus(initialFocusIndex);\n            }, 0);\n        } else if (initialFocusIndex === null) {\n            // If no initial focus index is set, focus on the menu itself so that keyboard shortcut still works after a mouse click.\n            setTimeout(() => {\n                if (this.menuEl) {\n                    this.menuEl.focus();\n                }\n            }, 0);\n        }\n    };\n\n    setMenuItemEls = () => {\n        const { isSubmenu, menuItemSelector } = this.props;\n\n        const selector = menuItemSelector || (isSubmenu ? SUBMENU_ITEM_SELECTOR : TOP_LEVEL_MENU_ITEM_SELECTOR);\n        // Keep track of all the valid menu items that were rendered (querySelector since we don't want to pass ref functions to every single child)\n        this.menuItemEls = this.menuEl ? [].slice.call(this.menuEl.querySelectorAll(selector)) : [];\n    };\n\n    getMenuItemElFromEventTarget = (\n        target: Node,\n    ): {\n        menuItemEl?: HTMLElement | null;\n        menuIndex: number;\n    } => {\n        let menuItemEl = null;\n        let menuIndex = -1;\n\n        for (let i = 0; i < this.menuItemEls.length; i += 1) {\n            if (this.menuItemEls[i].contains(target)) {\n                menuItemEl = this.menuItemEls[i];\n                menuIndex = i;\n                break;\n            }\n        }\n        return { menuItemEl, menuIndex };\n    };\n\n    setFocus = (index: number) => {\n        if (!this.menuItemEls.length) {\n            return;\n        }\n\n        const numMenuItems = this.menuItemEls.length;\n\n        if (index >= numMenuItems) {\n            this.focusIndex = 0;\n        } else if (index < 0) {\n            this.focusIndex = numMenuItems - 1;\n        } else {\n            this.focusIndex = index;\n        }\n\n        this.menuItemEls[this.focusIndex].focus();\n    };\n\n    focusIndex: number;\n\n    keyboardPressed: boolean | null | undefined;\n\n    menuEl: HTMLUListElement | null | undefined;\n\n    menuItemEls: Array<HTMLElement>;\n\n    focusFirstItem = () => {\n        this.setFocus(0);\n    };\n\n    focusLastItem = () => {\n        this.setFocus(-1);\n    };\n\n    focusNextItem = () => {\n        this.setFocus(this.focusIndex + 1);\n    };\n\n    focusPreviousItem = () => {\n        this.setFocus(this.focusIndex - 1);\n    };\n\n    fireOnCloseHandler = (\n        isKeyboardEvent?: boolean,\n        event?: React.MouseEvent<HTMLUListElement, MouseEvent> | React.KeyboardEvent<HTMLElement>,\n    ) => {\n        const { onClose } = this.props;\n\n        if (onClose) {\n            // We need to pass the event type so we know which item to focus.\n            onClose(isKeyboardEvent, event);\n        }\n    };\n\n    handleClick = (event: React.MouseEvent<HTMLUListElement, MouseEvent>) => {\n        const { menuItemEl }: { menuItemEl?: HTMLElement | null } =\n            event.target instanceof Node ? this.getMenuItemElFromEventTarget(event.target) : {};\n\n        if (!menuItemEl) {\n            return;\n        }\n        this.fireOnCloseHandler(false, event);\n    };\n\n    handleKeyDown = (event: React.KeyboardEvent<HTMLElement>) => {\n        const { isSubmenu, initialFocusIndex } = this.props;\n\n        switch (event.key) {\n            case 'ArrowDown':\n                stopPropagationAndPreventDefault(event); // If it's first keyboard event, focus on first item.\n\n                if (initialFocusIndex === null && !this.keyboardPressed) {\n                    this.focusFirstItem();\n                } else {\n                    this.focusNextItem();\n                }\n\n                break;\n\n            case 'ArrowUp':\n                stopPropagationAndPreventDefault(event);\n                this.focusPreviousItem();\n                break;\n\n            case 'ArrowLeft':\n                // Close submenu when arrow-left is clicked\n                if (!isSubmenu) {\n                    return;\n                }\n\n                stopPropagationAndPreventDefault(event);\n                this.fireOnCloseHandler(true, event);\n                break;\n\n            case 'Home':\n            case 'PageUp':\n                stopPropagationAndPreventDefault(event);\n                this.focusFirstItem();\n                break;\n\n            case 'End':\n            case 'PageDown':\n                stopPropagationAndPreventDefault(event);\n                this.focusLastItem();\n                break;\n\n            case 'Escape':\n                stopPropagationAndPreventDefault(event);\n                this.fireOnCloseHandler(true, event);\n                break;\n\n            case 'Tab':\n                // DO NOT PREVENT DEFAULT OR STOP PROPAGATION - This should move focus natively\n                this.fireOnCloseHandler(true, event);\n                break;\n\n            case ' ':\n            case 'Enter':\n                stopPropagationAndPreventDefault(event);\n\n                if (event.target instanceof HTMLElement) {\n                    event.target.click();\n                }\n\n                break;\n\n            default:\n                break;\n        }\n\n        this.keyboardPressed = true;\n    };\n\n    render() {\n        const { children, className, isHidden, setRef, shouldOutlineFocus, ...rest } = this.props;\n\n        const menuProps = omit(rest, ['onClose', 'initialFocusIndex', 'isSubmenu', 'menuItemSelector']) as MenuProps;\n        menuProps.className = classNames('aria-menu', className, {\n            'is-hidden': isHidden,\n            'should-outline-focus': shouldOutlineFocus,\n        });\n        menuProps.ref = (ref: HTMLUListElement | null) => {\n            this.menuEl = ref;\n            if (setRef) {\n                setRef(ref);\n            }\n        };\n        if (menuProps.role === undefined) {\n            menuProps.role = 'menu';\n        }\n        menuProps.tabIndex = -1;\n        menuProps.onClick = this.handleClick;\n        menuProps.onKeyDown = this.handleKeyDown;\n\n        return (\n            <ul {...menuProps}>\n                <MenuContext.Provider value={{ closeMenu: this.fireOnCloseHandler }}>{children}</MenuContext.Provider>\n            </ul>\n        );\n    }\n}\n\nexport default Menu;\n"],"mappings":"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","ignoreList":[]}